83,,,Authors,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Affiliations,Authors with affiliations,Abstract,Author Keywords,Index Keywords,Molecular Sequence Numbers,Chemicals/CAS,Tradenames,Manufacturers,Funding Details,References,Correspondence Address,Editors,Sponsors,Publisher,Conference name,Conference date,Conference location,Conference code,ISSN,ISBN,CODEN,PubMed ID,Language of Original Document,Abbreviated Source Title,Document Type,Source,EID,,
TRUE,v,v,"Yang, S., Manzer, A., Tzerpos, V.",Measuring the quality of design pattern detection results,2015,"2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering, SANER 2015 - Proceedings",,,7081815,53,62,,,10.1109/SANER.2015.7081815,http://www.scopus.com/inward/record.url?eid=2-s2.0-84928674354&partnerID=40&md5=5ee6b5065631d0dec95b66d3020181a9,"York University, Toronto, ON, Canada","Yang, S., York University, Toronto, ON, Canada; Manzer, A., York University, Toronto, ON, Canada; Tzerpos, V., York University, Toronto, ON, Canada","Detecting design patterns in large software systems is a common reverse engineering task that can help the comprehension process of the system's design. While several design pattern detection tools presented in the literature are capable of detecting design patterns automatically, evaluating these detection results is usually done in a manual and subjective fashion. Differences in design pattern definitions, as well as pattern instance counting and presenting, exacerbate the difficulty of evaluating design pattern detection results. In this paper, we present a novel approach to evaluating and comparing design pattern detection results. Our approach, called MoRe, introduces a novel way to present design pattern instances in a uniform fashion. Based on this characterization of design pattern instances, we propose four measures for design pattern detection evaluation that convey a concise assessment of the quality of the results produced by a given detection method. We have implemented these measures, and present case studies that showcase their usefulness. © 2015 IEEE.",,Quality control; Reverse engineering; Case-studies; Comprehension process; Design pattern detections; Design Patterns; Detection methods; Large software systems; Quality of design; Design,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Using Metrics to Identify Design Patterns in Object-Oriented Software (1998) METRICS '98: Proceedings of the 5th International Symposium on Software Metrics, pp. 23-34. , Washington, DC, USA: IEEE Computer Society; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting Design Patterns (2004) WCRE '04: Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181. , Washington, DC, USA: IEEE Computer Society; Witten, I.H., Frank, E., Mining, D., Practical Machine Learning Tools and Techniques with Java Implementations (1999) Morgan Kaufmann (San Francisco, Calif.); Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design Pattern Discovery Using Matrix (2007) ECBS '07: Proceedings of the 14th Annual, pp. 371-380. , IEEE International Conference and Workshops on the Engineering of Computer-Based Systems Washington, DC, USA: IEEE Computer Society; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng, 32 (11), pp. 896-909; Balanyi, Z., Ferenc, R., Mining design patterns from c++ source code (2003) ICSM '03: Proceedings of the International Conference on Software Maintenance, pp. 305-314. , Washington, DC, USA: IEEE Computer Society; Ferenc, R., Beszédes Á., Tarkiainen, M., Gyimóthy, T., Columbusreverse Engineering Tool and Schema for C++ (2002) Proceedings of International Conference on Software Maintenance IEEE, pp. 172-181; Ferenc, R., Beszédes Á., Data Exchange with the Columbus Schema for C++ (2002) Proceedings of Sixth European Conference on Software Maintenance and Reengineering. IEEE Computer Society, pp. 59-66; Dong, J., Sun, Y., Zhao, Y., Design Pattern Detection by Template Matching (2008) Proceedings of the 2008 ACM Symposium on Applied Computing ACM, pp. 765-769; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Krämer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering IEEE Computer Society, pp. 208-215; Keller, R., Schauer, R., Robitaille, S., Pagé, P., Pattern-Based Reverse-Engineering of Design Components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , IEEE Computer Society Press; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE '06: Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134. , Washington, DC, USA: IEEE Computer Society; Vokác, M., An Efficient Tool for Recovering Design Patterns from C++ Code (2006) Journal of Object Technology, 5 (1), pp. 139-157; Dabain, H., A Graphical Notation for Design Pattern Detection, , Master's thesis, York University, 2011, available online at http: //www. cse.yorku.ca/-bil/DabainThesis.pdf; Stelting, S., Maassen, O., (2001) Applied Java Patterns, , Prentice Hall Professional Technical Reference; Smith, J.M., Stotts, D., Elemental design patterns: A formal semantics for composition of oo software architecture (2002) SEW '02: Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop (SEW-27'02), pp. 183-190. , Washington, DC, USA: IEEE Computer Society; Smith, J.M., Stotts, D., Spqr: Flexible automated design pattern extraction from source code (2003) Automated Software Engineering, International Conference on, 0, pp. 215-224; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE '02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA: ACM; Kaczor, O., Gueheneuc, Y.-G., Hamel, S., Efficient Identification of Design Patterns with Bit-vector Algorithm (2006) CSMR '06: Proceedings of the Conference on Software Maintenance and Reengineering, pp. 175-184. , Washington, DC, USA: IEEE Computer Society; Yann-Gäel, G., Narendra, J., Using Explanations for Design Patterns Identification (2001) 1st IJCAI Workshop on Modeling and Solving Problems with Constraints. AAAI, pp. 57-64; Czibula, I.G., Serban, G., Hierarchical Clustering Based Design Patterns Identification (2008) International Journal of Computers, Communications and Control, 3, pp. 248-252; Bayley, I., Zhu, H., Formal specification of the variants and behavioural features of design patterns (2010) Journal of Systems and Software, 83 (2), pp. 209-221; Birkner, M., Object-Oriented Design Pattern Detection Using Static and Dynamic Analysis in Java Software (2007) Master's Thesis, University of Applied Sciences Bonn-Rhein-Sieg; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension, pp. 94-103; Gueheneuc, Y.-G., Antoniol, G., DeMIMA: A Multilayered Approach for Design Pattern Identification (2008) IEEE Transactions on Software Engineering, 34, pp. 667-684; Fulop, L.J., Gyovai, T., Ferenc, R., Evaluating C++ Design Pattern Miner Tools (2006) SCAM '06: Proceedings of the Sixth IEEE International Workshop on Source Code Analysis and Manipulation, pp. 127-138. , Washington, DC, USA: IEEE Computer Society; Pettersson, N., Löwe, W., Nivre, J., Evaluation of Accuracy in Design Pattern Occurrence Detection IEEE Transactions on Software Engineering, 36 (4), pp. 575-590. , July 2010; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a Benchmark for Evaluating Design Pattern Miner Tools (2008) CSMR '08: Proceedings of the 2008 12th European Conference on Software Maintenance and Reengineering, pp. 143-152. , Washington, DC, USA: IEEE Computer Society; Yang, S., A Model for the Evaluation of Design Pattern Detection Results, , Master's thesis, York University, 2012, available online at http: //www.cse.yorku.ca/-bil/YangThesis.pdf","Yang, S.; York UniversityCanada",,Departement de Genie Informatique et Genie Logiciel (GIGL) of Polytechnique Montreal;et al.;Google Montreal;SAP Montreal Labs;The IEEE Computer Society;The Reengineering Forum (REF),Institute of Electrical and Electronics Engineers Inc.,"22nd IEEE International Conference on Software Analysis, Evolution, and Reengineering, SANER 2015",2 March 2015 through 6 March 2015,,111861,,9781479984695,,,English,"IEEE Int. Conf. Softw. Anal., Evol., Reengineering, SANER - Proc.",Conference Paper,Scopus,2-s2.0-84928674354,,
TRUE,v,v,"Yu, D., Zhang, Y., Chen, Z.",A comprehensive approach to the recovery of design pattern instances based on sub-patterns and method signatures,2015,Journal of Systems and Software,103,,,1,16,,,10.1016/j.jss.2015.01.019,http://www.scopus.com/inward/record.url?eid=2-s2.0-84924901877&partnerID=40&md5=ba7951c960a5b3c34042b3264478ac36,"School of Computer, Hangzhou Dianzi University, Hangzhou, China","Yu, D., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Zhang, Y., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Chen, Z., School of Computer, Hangzhou Dianzi University, Hangzhou, China","Design patterns are formalized best practices that address concerns related to high-level structures for applications being developed. The efficient recovery of design pattern instances significantly facilitates program comprehension and software reengineering. However, the recovery of design pattern instances is not a straightforward task. In this paper, we present a novel comprehensive approach to the recovery of instances of 23 GoF design patterns from source codes. The key point of the approach lies in that we consider different design pattern instances consist of some commonly recurring sub-patterns that are easier to be detected. In addition, we focus not only on the class relationship, but also on the characteristics of underlying method signatures in classes. We first transform the source codes and predefined GoF patterns into graphs, with the classes as nodes and the relationships as edges. We then identify the instances of sub-patterns that would be the possible constituents of pattern instances by means of subgraph discovery. The sub-pattern instances are further merged by the joint classes to see if the collective matches one of the predefined patterns. Finally, we compare the behavioral characteristics of method invocation with the predefined method signature templates of GoF patterns to obtain the final pattern instances directly. Compared with existing approaches, we integrate and improve some of the previous ideas and put forward a comprehensive and elaborative approach also based on our own ideas. We detect sub-patterns via graph isomorphism based on prime number composition and the joint classes to reduce the search space. Meanwhile, we employ the method signatures to investigate the behavioral features to avoid choosing the test cases with full code coverage. The results of the extensive experiments on recovering pattern instances from nine open source software systems demonstrate that our approach obtains the balanced high precision and recall. © 2015 Elsevier Inc. All rights reserved.",Design pattern recovery; Design patterns; Graph mining; Method signature; Sub-patterns,Codes (symbols); Computer software; Open source software; Open systems; Recovery; Reengineering; Software engineering; Design pattern recovery; Design Patterns; Graph mining; Method signature; Sub-patterns; Design,,,,,,"Alexander, B., Günter, K., DPJF - Design pattern detection with high accuracy (2012) European Conference on Software Maintenance and Reengineering, pp. 245-254; Alnusair, A., Zhao, T., Yan, G., Rule-based detection of design patterns in program code (2014) Int. J. Softw. Tools Technol. Trans., 16 (3), pp. 315-334; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: A mapping study (2013) J. Syst. Softw., 86 (7), pp. 1945-1964; Ampatzoglou, A., Michou, O., Stamelos, I., Building and mining a repository of design pattern instances: Practical and research benefits (2013) Entertainment Comput., 4, pp. 131-142; Bouassida, N., Ben-Abdallah, H., A new approach for pattern problem detection (2010) Advanced Information Systems Engineering, CAiSE 2010, Lecture Notes in Computer Science, 6051, pp. 150-164. , Pernici, B. Springer Berlin, Heidelberg; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) J. Syst. Softw., 82 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., An Eclipse plug-in for the detection of design pattern instances through static and dynamic analysis (2010) IEEE International Conference on Software Maintenance, pp. 1-6. , ICSM; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2011) European Conference on Software Maintenance and Reengineering, pp. 176-185. , CSMR; Dong, J., Zhao, Y., Classification of design pattern traits (2007) Proceedings of Nineteenth International Conference on Software Engineering and Knowledge (SEKE), pp. 473-476. , Boston, USA; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) Int. J. Software Eng. Knowl. Eng., 19, pp. 823-855; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Trans. Syst. Man Cybern. Part A: Syst. Humans, 39 (6), pp. 1271-1282; Elaasar, M., Briand, L.C., Labiche, Y., VPML: An approach to detect design patterns of MOF-based modeling languages (2013) Softw. Syst. Model., pp. 1-30; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) 21st IEEE International Conference on Software Maintenance, pp. 295-304; Fontana, F.A., Maggioni, S., Raibulet, C., Design patterns: A survey on their micro-structures (2011) J. Softw. Maint. Evol., 33 (8), pp. 1-25; Fontana, F.A., Maggioni, S., Raibulet, C., Understanding the relevance of micro-structures for design patterns detection (2011) J. Syst. Softw., 84, pp. 2334-2347; Fontana, F.A., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Inf. Sci., 181 (7), pp. 1306-1324; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gil, J., Maman, I., Micro patterns in Java code (2005) Proceedings of the 20th Conference on Object-Oriented Programming Systems Languages and Applications, pp. 97-116. , ACM New York, NY; Guéhenéuc, Y.G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Eng., 34 (5), pp. 667-684; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) Proceedings of the 11th International Workshop on Program Comprehension (IWPC 2003), pp. 94-103; Heuzeroth, D., Mandel, S., Lowe, W., Generating design pattern detectors from pattern specifications (2003) 18th IEEE International Conference on Automated Software Engineering, pp. 245-248; Kaczor, O., Guéhéneuc, Y., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) 10th European Conference on Software Maintenance and Reengineering, pp. 175-184; Khatoon, S., Li, G., Ashfaq, R.M., A framework for automatically mining source code (2011) J. Softw. Eng., 5 (2), pp. 64-77; (2009) A Design Pattern Detection Catalog, , http://essere.disco.unimib.it/reverse/marple, MARPLE Group; Maurice, L., Vassilios, T., Fine-grained design pattern detection (2012) 36th Annual IEEE International Computer Software and Applications Conference, COMPSAC, pp. 267-272; Niere, J., Schafer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) 24th International Conference on Software Engineering, pp. 338-348; Pande, A., Gupta, M., Tripathi, A.K., A new approach for detecting design patterns by graph decomposition and graph isomorphism (2010) Commun. Comput. Inf. Sci., 95, pp. 108-119; Pettersson, N., Lowe, W., Nivre, J., Evaluation of accuracy in design pattern occurrence detection (2010) IEEE Trans. Softw. Eng., 36 (4), pp. 575-590; Posnett, D., Bird, C., Devanbu, P.T., THEX: Mining meta-patterns from Java (2010) 7th IEEE Working Conference on Mining Software Repositories, pp. 122-125; Qiu, M., Jiang, Q., Detecting design pattern using subgraph discovery (2010) Lect. Notes Comput. Sci., 5990, pp. 350-359; Rasool, G., Mäder, P., Flexible design pattern detection based on feature types (2011) 26th IEEE/ACM International Conference on Automated Software Engineering, ASE 2011, pp. 243-252; Rasool, G., Philippow, I., Mäder, P., Design pattern recovery based on annotations (2010) Adv. Eng. Software, 41, pp. 519-526; Romano, S., Scanniello, G., Risi, M., Gravino, C., Clustering and lexical information support for the recovery of design pattern in source code (2011) 27th IEEE International Conference on Software Maintenance (ICSM), pp. 500-503; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) 21st IEEE International Conference on Automated Software Engineering, pp. 245-248; Smith, J.M., (2002) An Elemental Design Pattern Catalog, , University of North Carolina Chapel Hill, NC; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng., 32 (11), pp. 896-909; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2011) Proceedings of the ICSE Workshop on Dynamic Analysis, pp. 29-32; Yu, D., Liu, Z., Ge, J., Mining Instances of structural design patterns from class diagrams based on sub-patterns (2013) 13th International Conference on Software Reuse, ICSR, Lecture Notes in Computer Science, 7925, pp. 255-266. , Springer Berlin; Yu, D., Zhang, Y., Ge, J., Wu, W., From sub-patterns to patterns: An approach to the detection of structural design pattern instances by subgraph mining and merging (2013) 37th Annual IEEE International Computer Software and Applications Conference, pp. 579-588. , COMPSAC","Yu, D.; School of Computer, Hangzhou Dianzi UniversityChina",,,Elsevier Inc.,,,,,1641212,,JSSOD,,English,J Syst Software,Conference Paper,Scopus,2-s2.0-84924901877,,
TRUE,v,v,"Yu, D., Zhang, Y., Chen, Z.",A comprehensive approach to the recovery of design pattern instances based on sub-patterns and method signatures,2015,Journal of Systems and Software,103,C,,1,16,,,10.1016/jjss.2015.01.019,http://www.scopus.com/inward/record.url?eid=2-s2.0-84928045020&partnerID=40&md5=2a1dda4fc3dbc3637252fe5dab0de42a,"School of Computer, Hangzhou Dianzi University, Hangzhou, China","Yu, D., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Zhang, Y., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Chen, Z., School of Computer, Hangzhou Dianzi University, Hangzhou, China","Design patterns are formalized best practices that address concerns related to high-level structures for applications being developed. The efficient recovery of design pattern instances significantly facilitates program comprehension and software reengineering. However, the recovery of design pattern instances is not a straightforward task. In this paper, we present a novel comprehensive approach to the recovery of instances of 23 GoF design patterns from source codes. The key point of the approach lies in that we consider different design pattern instances consist of some commonly recurring sub-patterns that are easier to be detected. In addition, we focus not only on the class relationship, but also on the characteristics of underlying method signatures in classes. We first transform the source codes and predefined GoF patterns into graphs, with the classes as nodes and the relationships as edges. We then identify the instances of sub-patterns that would be the possible constituents of pattern instances by means of subgraph discovery. The sub-pattern instances are further merged by the joint classes to see if the collective matches one of the predefined patterns. Finally, we compare the behavioral characteristics of method invocation with the predefined method signature templates of GoF patterns to obtain the final pattern instances directly. Compared with existing approaches, we integrate and improve some of the previous ideas and put forward a comprehensive and elaborative approach also based on our own ideas. We detect sub-patterns via graph isomorphism based on prime number composition and the joint classes to reduce the search space. Meanwhile, we employ the method signatures to investigate the behavioral features to avoid choosing the test cases with full code coverage. The results of the extensive experiments on recovering pattern instances from nine open source software systems demonstrate that our approach obtains the balanced high precision and recall. © 2015 Elsevier Inc. All rights reserved.",Design pattern recovery; Design patterns; Graph mining; Method signature; Sub-patterns,Codes (symbols); Computer software; Open source software; Open systems; Recovery; Reengineering; Software engineering; Design pattern recovery; Design Patterns; Graph mining; Method signature; Sub-patterns; Design,,,,,"61100043, NSFC, National Natural Science Foundation of China","Alexander, B., Günter, K., DPJF - Design pattern detection with high accuracy (2012) European Conference on Software Maintenance and Reengineering, pp. 245-254; Alnusair, A., Zhao, T., Yan, G., Rule-based detection of design patterns in program code (2014) Int. J. Softw. Tools Technol. Trans, 16 (3), pp. 315-334; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: A mapping study (2013) J. Syst. Softw, 86 (7), pp. 1945-1964; Ampatzoglou, A., Michou, O., Stamelos, I., Building and mining a repository of design pattern instances: Practical and research benefits (2013) Entertainment Comput, 4, pp. 131-142; Bouassida, N., Ben-Abdallah, H., A new approach for pattern problem detection (2010) Advanced Information Systems Engineering, CAiSE 2010, Lecture Notes in Computer Science, 6051, pp. 150-164. , Pernici, B. (Ed.), Springer, Berlin, Heidelberg; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) J. Syst. Softw, 82 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., An Eclipse plug-in for the detection of design pattern instances through static and dynamic analysis (2010) IEEE International Conference on Software Maintenance, pp. 1-6. , ICSM; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2011) European Conference on Software Maintenance and Reengineering, pp. 176-185. , CSMR; Dong, J., Zhao, Y., Classification of design pattern traits (2007) Proceedings of Nineteenth International Conference on Software Engineering and Knowledge (SEKE), pp. 473-476. , Boston, USA; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) Int. J. Software Eng. Knowl. Eng, 19, pp. 823-855; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Trans. Syst. Man Cybern. Part A: Syst. Humans, 39 (6), pp. 1271-1282; Elaasar, M., Briand, L.C., Labiche, Y., VPML: An approach to detect design patterns of MOF-based modeling languages (2013) Softw. Syst. Model., pp. 1-30; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) 21st IEEE International Conference on Software Maintenance, pp. 295-304; Fontana, F.A., Maggioni, S., Raibulet, C., Design patterns: A survey on their microstructures (2011) J. Softw. Maint. Evol, 33 (8), pp. 1-25; Fontana, F.A., Maggioni, S., Raibulet, C., Understanding the relevance of microstructures for design patterns detection (2011) J. Syst. Softw, 84, pp. 2334-2347; Fontana, F.A., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Inf. Sci, 181 (7), pp. 1306-1324; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gil, J., Maman, I., Micro patterns in Java code (2005) Proceedings of the 20th Conference on Object-Oriented Programming Systems Languages and Applications, pp. 97-116. , ACM, New York, NY; Guéhenéuc, Y.G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Eng, 34 (5), pp. 667-684; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) Proceedings of the 11th International Workshop on Program Comprehension (IWPC) 2003, pp. 94-103; Heuzeroth, D., Mandel, S., Lowe, W., Generating design pattern detectors from pattern specifications (2003) 18th IEEE International Conference on Automated Software Engineering, pp. 245-248; Kaczor, O., Guéhéneuc, Y., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) 10th European Conference on Software Maintenance and Reengineering, pp. 175-184; Khatoon, S., Li, G., Ashfaq, R.M., A framework for automatically mining source code (2011) J. Softw. Eng, 5 (2), pp. 64-77; (2009) Adesign Pattern Detection Catalog, , http://essere.disco.unimib.it/reverse/marple; Maurice, L., Vassilios, T., Fine-grained design pattern detection. In: 36th Annual (2012) IEEE International Computer Software and Applications Conference, pp. 267-272. , COMPSAC; Niere, J., Schafer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) 24th International Conference on Software Engineering, pp. 338-348; Pande, A., Gupta, M., Tripathi, A.K., A new approach for detecting design patterns by graph decomposition and graph isomorphism (2010) Commun. Comput. Inf. Sci, 95, pp. 108-119; Pettersson, N., Lowe, W., Nivre, J., Evaluation of accuracy in design pattern occurrence detection (2010) IEEE Trans. Softw. Eng, 36 (4), pp. 575-590; Posnett, D., Bird, C., Devanbu, P.T., THEX: Mining meta-patterns from Java (2010) 7th IEEE Working Conference on Mining Software Repositories, pp. 122-125; Qiu, M., Jiang, Q., Detecting design pattern using subgraph discovery (2010) Lect. Notes Comput. Sci, 5990, pp. 350-359; Rasool, G., Mäder, P., Flexible design pattern detection based on feature types (2011) 26th IEEE/ ACM International Conference on Automated Software Engineering, pp. 243-252. , ASE 2011; Rasool, G., Philippow, I., Mäder, P., Design pattern recovery based on annotations (2010) Adv. Eng. Software, 41, pp. 519-526; Romano, S., Scanniello, G., Risi, M., Gravino, C., Clustering and lexical information support for the recovery ofdesign pattern in source code (2011) 27th IEEE International Conference on Software Maintenance (ICSM), pp. 500-503; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) 21st IEEE International Conference on Automated Software Engineering, pp. 245-248; Smith, J.M., (2002) An Elemental Design Pattern Catalog (Technical Report TR 02-040), , University of North Carolina Chapel Hill, NC; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng, 32 (11), pp. 896-909; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2011) Proceedings Ofthe ICSE Workshop on Dynamic Analysis, pp. 29-32; Yu, D., Liu, Z., Ge, J., Mining Instances of structural design patterns from class diagrams based on sub-patterns (2013) 13th International Conference on Software Reuse, ICSR, Lecture Notes in Computer Science, 7925, pp. 255-266. , Springer, Berlin; Yu, D., Zhang, Y., Ge, J., Wu, W., From sub-patterns to patterns: An approach to the detection of structural design pattern instances by subgraph mining and merging (2013) 37th Annual IEEE International Computer Software and Applications Conference, pp. 579-588. , COMPSAC","Yu, D.; School of Computer, Hangzhou Dianzi UniversityChina",,,Elsevier Inc.,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-84928045020,,
TRUE,4,4,"Scanniello, G., Gravino, C., Risi, M., Tortora, G., Dodero, G.",Documenting design-pattern instances: A family of experiments on source-code comprehensibility,2015,ACM Transactions on Software Engineering and Methodology,24,3,14,,,,,10.1145/2699696,http://www.scopus.com/inward/record.url?eid=2-s2.0-84930177029&partnerID=40&md5=ddd44ec0699e4e9cb7079622fa9a2433,"DiMIE, University of Basilicata, Viale Dell' Ateneo n. 10, Macchia Romana, Potenza, Italy; Department of Management and Information Technology, University of Salerno, Via Giovanni Paolo II, nr. 132, Fisciano (SA), Italy; Dipartimento di Matematica e Information, University of Salerno, Via Ponte Don Melillo, Fisciano (SA), Italy; Computer Science Department, Free University of Bozen-Bolzano, Dominikanerplatz 3-Piazza Domenicani, 3, Bozen-Bolzano, Italy","Scanniello, G., DiMIE, University of Basilicata, Viale Dell' Ateneo n. 10, Macchia Romana, Potenza, Italy; Gravino, C., Dipartimento di Matematica e Information, University of Salerno, Via Ponte Don Melillo, Fisciano (SA), Italy; Risi, M., Department of Management and Information Technology, University of Salerno, Via Giovanni Paolo II, nr. 132, Fisciano (SA), Italy; Tortora, G., Dipartimento di Matematica e Information, University of Salerno, Via Ponte Don Melillo, Fisciano (SA), Italy; Dodero, G., Computer Science Department, Free University of Bozen-Bolzano, Dominikanerplatz 3-Piazza Domenicani, 3, Bozen-Bolzano, Italy","Design patterns are recognized as a means to improve software maintenance by furnishing an explicit specification of class and object interactions and their underlying intent [Gamma et al. 1995]. Only a few empirical investigations have been conducted to assess whether the kind of documentation for design patterns implemented in source code affects its comprehensibility. To investigate this aspect, we conducted a family of four controlled experiments with 88 participants having different experience (i.e., professionals and Bachelor, Master, and PhD students). In each experiment, the participants were divided into three groups and asked to comprehend a nontrivial chunk of an open-source software system. Depending on the group, each participant was, or was not, provided with graphical or textual representations of the design patterns implemented within the source code. We graphically documented design-pattern instances with UML class diagrams. Textually documented instances are directly reported source code as comments. Our results indicate that documenting design-pattern instances yields an improvement in correctness of understanding source code for those participants with an adequate level of experience. © 2015 ACM.",Controlled experiment; Design patterns; Maintenance; Replications; Software models; Source-code comprehension,Codes (symbols); Computer programming languages; Computer software; Computer software maintenance; Design; Maintenance; Open systems; Software engineering; Controlled experiment; Design Patterns; Replications; Software model; Source code comprehensions; Open source software,,,,,,"Abrahao, S.M., Gravino, C., Pelozo, E.I., Scanniello, G., Tortora, G., Assessing effectiveness of sequence diagrams in the comprehension of functional requirements: Results from a family of five experiments (2013) IEEE Trans. Softw. Engin., 39, p. 3; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language - Towns, Buildings, Construction, , Oxford University Press; Aranda, J., Ernst, N., Horkoff, J., Easterbrook, S., A framework for empirical evaluation of model comprehensibility (2007) Proceedings of the International Workshop on Modeling in Software Engineering (MISE'07), pp. 7-13. , IEEE Computer Society; Arisholm, E., Briand, L.C., Hove, S.E., Labiche, Y., The impact of UML documentation on software maintenance: An experimental evaluation (2006) IEEE Trans. Softw. Engin., 32 (6), pp. 365-381; Arisholm, E., Gallis, H., Dyba, T., Sjøberg, D.I.K., Evaluating pair programming with respect to system complexity and programmer expertise (2007) IEEE Trans. Softw. Engin., 33 (2), pp. 65-86; Arisholm, E., Sjøberg, D.I.K., Evaluating the effect of a delegated versus centralized control style on the maintainability of object-oriented software (2004) IEEE Trans. Softw. Engin., 30 (8), pp. 521-534; Asuncion, H.U., Francois, F., Taylor, R.N., An end-to-end industrial software traceability tool (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC-FSE'07), pp. 115-124. , ACM Press, New York; Baker, R., Modern permutation test software (1995) Randomization Tests, pp. 391-402. , Marcel Dekker; Baldassarre, M.T., Carver, J., Dieste, O., Juristo, N., Replication types: Towards a shared taxonomy (2014) Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering (EASE'14), pp. 181-184. , ACM Press, New York; Basili, V., Shull, F., Lanubile, F., Building knowledge through families of experiments (1999) IEEE Trans. Softw. Engin., 25 (4), pp. 456-473; Basili, V.R., Green, S., Laitenberger, O., Lanubile, F., Shull, F., Sørumgard, L.S., Zelkowitz, M.V., The empirical investigation of perspective-based reading (1996) Empir. Softw. Engin., 1 (2), pp. 133-164; Basili, V.R., Rombach, H.D., The TAME project: Towards improvement-oriented software environments (1988) IEEE Trans. Softw. Engin., 14 (6), pp. 758-773; Bauer, M.I., Johnson-laird, P.N., How diagrams can improve reasoning (1993) Psychol. Sci., 4, pp. 372-378; Bennett, K.H., Rajlich, V.T., Software maintenance and evolution: A roadmap (2000) Proceedings of the Conference on the Future of Software Engineering (ICSE'00), pp. 73-87. , ACM Press, New York; Bergersen, G., Sjøberg, D.I.K., Dyba, T., Construction and validation of an instrument for measuring programming skill (2014) IEEE Trans. Softw. Engin., 40 (12), pp. 1163-1184; Bergersen, G.R., Hannay, J.E., Sjøberg, D.I.K., Dyba, T., Karahasanovic, A., Inferring skill from tests of programming performance: Combining time and quality (2011) Proceedings of the International Symposium on Empirical Software Engineering and Measurement (ESEM'11), pp. 305-314. , IEEE Computer Society; Bieman, J., Straw, G., Wang, H., Munger, P., Alexander, R., Design patterns and change proneness: An examination of five evolving systems (2003) Proceedings of the 9th International Software Metrics Symposium (METRIC'03), pp. 40-49. , IEEE Computer Society; Bruegge, B., Dutoit, A.H., (2003) Object-oriented Software Engineering: Using UML, Patterns and Java, , 2nd Ed. Prentice-Hall; Budgen, D., Burn, A.J., Brereton, O.P., Kitchenham, B.A., Pretorius, R., Empirical evidence about the UML: A systematic literature review (2011) Softw. Pract. Exper., 41 (4), pp. 363-392; Carver, J., Jaccheri, L., Morasca, S., Shull, F., Issues in using students in empirical studies in software engineering education (2003) Proceedings of the 9th International Symposium on Software Metrics (METRIC'03), pp. 239-250. , IEEE Computer Society; Ceccato, M., Di Penta, M., Falcarin, P., Ricca, F., Torchiano, M., Tonella, P., A family of experiments to assess the effectiveness and efficiency of source code obfuscation techniques (2014) Empir. Softw. Engin., 19 (4), pp. 1040-1074; Cepeda Porras, G., Gueheneuc, Y.-G., An empirical study on the efficiency of different design pattern representations in UML class diagrams (2010) Empir. Softw. Engin., 15 (5), pp. 493-522; Ciolkowski, M., Muthig, D., Rech, J., Using academic courses for empirical validation of software development processes (2004) Proceedings of the EUROMICRO Conference (EUROMICRO'04), pp. 354-361. , IEEE Computer Society; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , L. Erlbaum Associates; Colosimo, M., De Lucia, A., Scanniello, G., Tortora, G., Evaluating legacy system migration technologies through empirical studies (2009) Inf. Softw. Technol., 51 (2), pp. 433-447; Conover, W.J., (1998) Practical Nonparametric Statistics, , 3rd Ed. Wiley; Cronbach, L., Coefficient alpha and the internal structure of tests (1951) Psychometrika, 16 (3), pp. 297-334; Da Silva, F.Q.B., Suassuna, M., Franc, A.A.C.C., Grubb, A.M., Gouveia, T.B., Monteiro, C.V.F., Dos Santos, I.E., Replication of empirical studies in software engineering research: A systematic mapping study (2014) Empir. Softw. Engin., 19 (3), pp. 501-557; Di Penta, M., Cerulo, L., Gueheneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) Proceedings of the International Conference on Software Maintenance (ICSM'08), pp. 217-226. , IEEE Computer Society; Dyba, T., Kampenes, V.B., Sjøberg, D.I.K., A systematic review of statistical power in software engineering experiments (2006) Inf. Softw. Technol., 48 (8), pp. 745-755; Ellis, P., (2010) The Essential Guide to Effect Sizes: Statistical Power, Meta-analysis, and the Interpretation of Research Results, , Cambridge University Press; Erlikh, L., Leveraging legacy system dollars for e-business (2000) IT Profess., 2, pp. 17-23; Erra, U., Scanniello, G., Assessing communication media richness in requirements negotiation (2010) IET Softw., 4 (2), pp. 134-148; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Gomez, O.S., Juristo, N., Vegas, S., Replications types in experimental disciplines (2010) Proceedings of the International Symposium on Empirical Software Engineering and Measurement (ESEM'10), pp. 31-310. , ACM Press, New York; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Does the documentation of design pattern instances impact on source code comprehension? Results from two controlled experiments (2011) Proceedings of the Working Conference on Reverse Engineering (WCRE'11), pp. 67-76. , IEEE Computer Society; Gravino, C., Risi, M., Scanniello, G., Tortora, G., Do professional developers benefit from design pattern documentation? A replication in the context of source code comprehension (2012) Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems (MODELS'12), pp. 185-201. , Springer; Gueheneuc, Y.-G., P-mart: Pattern-like micro architecture repository (2007) Proceedings of the EuroPLoP Focus Group on Pattern Repositories (EuroPLoP'07); Gueheneuc, Y.-G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Engin., 34 (5), pp. 667-684; Hannay, J., Jørgensen, M., The role of deliberate artificial design elements in software engineering experiments (2008) IEEE Trans. Softw. Engin., 34 (2), pp. 242-259; Heer, J., Agrawala, M., Software design patterns for information visualization (2006) IEEE Trans. Visual. Comput. Graph., 12, pp. 853-860; Hochstein, L., Basili, V.R., Zelkowitz, M.V., Hollingsworth, J.K., Carver, J., Combining self-reported and automatic data to improve programming effort measurement (2005) ACM SIGSOFT Softw. Engin. Notes, 30 (5), pp. 356-365; Host, M., Regnell, B., Wohlin, C., Using students as subjects-A comparative study of students and professionals in lead-time impact assessment (2000) Empir. Softw. Engin., 5 (3), pp. 201-214; Huang, L., Holcombe, M., Empirical investigation towards the effectiveness of test first programming (2009) Inf. Softw. Technol., 51 (1), pp. 182-194; ISO, Information technology-Software product evaluation: Quality characteristics and guidelines for their use (1991) ISO, Geneva, , ISO/IEC IS 9126; Jeanmart, S., Gueheneuc, Y.-G., Sahraoui, H., Habra, N., Impact of the visitor pattern on program comprehension and maintenance (2009) Proceedings of the 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM'09), pp. 69-78. , IEEE Computer Society; Jedlitschka, A., Ciolkowski, M., Pfahl, D., Reporting experiments in software engineering (2008) Guide to Advanced Empirical Software Engineering, pp. 201-228. , F. Shull, J. Singer, and D. Sjoberg, Eds., Springer; Juristo, N., Moreno, A., (2001) Basics of Software Engineering Experimentation, , Kluwer Academic; Kampenes, V., Dyba, T., Hannay, J., Sjoberg, I., A systematic review of effect size in software engineering experiments (2007) Inf. Softw. Technol., 49 (11-12), pp. 1073-1086; Khomh, F., Gueheneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th European Conference on Software Engineering and Maintenance (CSMR'08), pp. 274-278; Kitchenham, B., The role of replications in empirical software engineering - A word of warning (2008) Empir. Softw. Engin., 13 (2), pp. 219-221; Kitchenham, B., Al-khilidar, H., Babar, M., Berry, M., Cox, K., Keung, J., Kurniawati, F., Zhu, L., Evaluating guidelines for reporting empirical software engineering studies (2008) Empir. Softw. Engin., 13, pp. 97-121; Kitchenham, B., Pfleeger, S., Pickard, L., Jones, P., Hoaglin, D., El Emam, K., Rosenberg, J., Preliminary guidelines for empirical research in software engineering (2002) IEEE Trans. Softw. Engin., 28 (8), pp. 721-734; Krein, J.L., Pratt, L.J., Swenson, A.B., Maclean, A.C., Knutson, C.D., Eggett, D.L., Design patterns in software maintenance: An experiment replication at Brigham Young University (2011) Proceedings of the 2nd International Workshop on Replication in Empirical Software Engineering Research (RESER'11), pp. 25-34; Lindvall, M., Rus, I., Shull, F., Zelkowitz, M.V., Donzelli, P., Memon, A.M., Basili, V.R., Pech, D., An evolutionary testbed for software technology evaluation (2005) Innovat. Syst. Softw. Engin., 1 (1), pp. 3-11; Lindvall, M., Sandahl, K., Practical implications of traceability (1996) Softw. Pract. Exper., 26 (10), pp. 1161-1180; Maxwell, K., (2002) Applied Statistics for Software Managers, , Software Quality Institute Series, Prentice Hall; Mayrhauser, A.V., Program comprehension during software maintenance and evolution (1995) IEEE Comput., 28, pp. 44-55; Mcdermid, J., (1991) Software Engineer's Reference Book, , Butterworth-Heinemann, Linacre House, Jordan Hill, Oxford, UK; Mendonc, A.M.G., Maldonado, J.C., Oliveira, M.C.F.D., Carver, J., Fabbri, S.C.P.F., Shull, F., Travassos, G.H., Basili, V.R., A framework for software engineering experimental replications (2008) Proceedings of the 13th International Conference on Engineering of Complex Computer Systems (ICECCS'08), pp. 203-212. , IEEE Computer Society; OMG, (2005) Unified Modeling Language (UML) Specification, Version 2.0, , http://www.omg.org/spec/UML/2.0, Tech. rep., Object Management Group; Oppenheim, A.N., (1992) Questionnaire Design, Interviewing and Attitude Measurement, , Pinter, London; Pfleeger, S., Atlee, J., (2006) Software Engineering - Theory and Practice, , 3rd Ed. Ellis Horwood; Pfleeger, S.L., Menezes, W., Marketing technology to software practitioners (2000) IEEE Softw., 17 (1), pp. 27-33; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Trans. Softw. Engin., 27 (12), pp. 1134-1144; Prechelt, L., Unger-lamprecht, B., Philippsen, M., Tichy, W., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Trans. Softw. Engin., 28 (6), pp. 595-606; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence Web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Trans. Softw. Engin., 36 (1), pp. 96-118; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., Assessing the effect of screen mockups on the comprehension of functional requirements (2014) ACM Trans. Softw. Engin. Methodol., 24 (1), pp. 11-138; Salton, G., Mcgill, M.J., (1983) Introduction to Modern Information Retrieval, , McGraw Hill, New York; Scaife, M., Rogers, Y., External cognition: How do graphical representations work? (1996) Int. J. Human-comput. Stud., 45 (2), pp. 185-213; Scanniello, G., Erra, U., Distributed modeling of use case diagrams with a method based on thinkpair-square: Results from two controlled experiments (2014) J. Vis. Lang. Comput., 25 (4), pp. 494-517; Scanniello, G., Gravino, C., Genero, M., Cruz-lemus, J.A., Tortora, G., On the impact of UML analysis models on source code comprehensibility and modifiability (2014) ACM Trans. Softw. Engin. Methodol., 23, p. 2; Scanniello, G., Gravino, C., Risi, M., Tortora, G., Dodero, G., (2014) Design Pattern Instances Comprehension, , http://www2.unibas.it/gscanniello/DP; Scanniello, G., Gravino, C., Tortora, G., An early investigation on the contribution of class and sequence diagrams in source code comprehension (2013) Proceedings of the 17th European Conference on Software Maintenance and Reengineering (CSMR'13), pp. 367-370. , IEEE Computer Society; Selfridge, P., Waters, R., Chikofsky, E., Challenges to the field of reverse engineering (1993) Proceedings of the Working Conference on Reverse Engineering (WCRE'93), pp. 144-150. , IEEE Computer Society; Shapiro, S., Wilk, M., An analysis of variance test for normality (1965) Biometrika, 52 (3-4), pp. 591-611; Shull, F., Carver, J.C., Vegas, S., Juzgado, N.J., The role of replications in empirical software engineering (2008) Empir. Softw. Engin., 13 (2), pp. 211-218; Shull, F., Mendoncca, M.G., Basili, V., Carver, J., Maldonado, J.C., Fabbri, S., Travassos, G.H., Ferreira, M.C., Knowledge-sharing issues in experimental software engineering (2004) Empir. Softw. Engin., 9 (1-2), pp. 111-137; Sillito, J., Murphy, G.C., De Volder, K., Asking and answering questions during a programming change task (2008) IEEE Trans. Softw. Engin., 34 (4), pp. 434-451; Sjøberg, D.I.K., Hannay, J.E., Hansen, O., Kampenes, V.B., Karahasanovic, A., Liborg, N., Rekdal, A.C., A survey of controlled experiments in software engineering (2005) IEEE Trans. Softw. Engin., 31 (9), pp. 733-753; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) Proceedings of the ACM/IEEE International Symposium on Empirical Software Engineering (ISESE'06), pp. 28-37. , ACM, New York; Verelst, J., The influence of the level of abstraction on the evolvability of conceptual models of information systems (2004) Proceedings of the International Symposium on Empirical Software Engineering (ISESE'04), pp. 17-26. , IEEE Computer Society; Vokac, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE Trans. Softw. Engin., 30 (12), pp. 904-917; Vokac, M., Tichy, W.F., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns-A replication in a real programming environment (2004) Empir. Softw. Engin., 9 (3), pp. 149-195; Wohlin, C., Runeson, P., Host, M., Ohlsson, M., Regnell, B., Wesslen, A., (2012) Experimentation in Software Engineering, , Springer; Zelkowitz, M.V., Shaw, A.C., Gannon, J.D., (1979) Principles of Software Engineering and Design, , Prentice-Hall","Scanniello, G.; DiMIE, University of Basilicata, Viale Dell' Ateneo n. 10, Italy",,,Association for Computing Machinery,,,,,1049331X,,ATSME,,English,ACM Trans. Software Eng. Methodol.,Article,Scopus,2-s2.0-84930177029,,
TRUE,v,v,"Bernardi, M.L., Cimitile, M., De Ruvo, G., Di Lucca, G.A., Santone, A.",Improving design patterns finder precision using a model checking approach,2015,CEUR Workshop Proceedings,1367,,,113,120,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84937412908&partnerID=40&md5=54c7a918bdb96e633a1f3b97565ee667,"Department of Engineering, University of Sannio, Benevento, Italy; Unitelma Sapienza University, Rome, Italy","Bernardi, M.L., Department of Engineering, University of Sannio, Benevento, Italy; Cimitile, M., Unitelma Sapienza University, Rome, Italy; De Ruvo, G., Department of Engineering, University of Sannio, Benevento, Italy; Di Lucca, G.A., Department of Engineering, University of Sannio, Benevento, Italy; Santone, A., Department of Engineering, University of Sannio, Benevento, Italy","In this paper we propose an approach exploiting the model checking technique to automatically refine the results produced by a De- sign Patterns mining tool called Design Pattern Finder (DPF) to improve the precision of its results by verifying the detected DPs automatically. To assess the feasibility of the proposed approach along with its effectiveness, we have applied it to an open source Object Oriented system with good results in improving the precision of the detected DPs.",Design patterns; Formal methods; Mining; Model checking; Models; Software engineering,Formal methods; Information systems; Mining; Models; Object oriented programming; Open source software; Open systems; Software engineering; Systems analysis; Systems engineering; Design Patterns; Improving designs; Model-checking techniques; Object-oriented system; Open sources; Sign patterns; Model checking,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Longman Publishing Co. Inc. Boston, MA, USA; Bergenti, F., Poggi, A., Improving uml designs using automatic design pattern detection (2000) SEKE 2000, pp. 336-343; Prechelt, L., Unger-Lamprecht, B., Tichy, M.P., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Trans. Softw. Eng, 28 (6), pp. 595-606; Rasool, G., Streitfdert, D., A survey on design pattern recovery techniques (2011) IJCSI International Journal of Computer Science Issues, 8 (2), pp. 251-260; Bernardi, M., Cimitile, M., Di Lucca, G., Design patterns detection using a DSL- driven graph matching approach (2014) Journal of Software: Evolution and Process, , Wiley Online Library; Gueheneuc, Y.G., P-mart: Pattern-like micro architecture repository (2007) Pro- Ceedings of the 1st EuroPLoP Focus Group on Pattern Repositories, , http://www.ptidej.net/tool/designpatterns/, Michael, Aliaksandr Birukou, and Paolo Giorgini; Comsats Institute of Information Technology, , http://research.ciitlahore.edu.pk/Groups/SERC/DesignPatterns.aspx; Taibi, T., Herranz-Nieva, A., Moreno-Navarro, J.J., Stepwise refinement validation of design patterns formalized in TLA+ using the TLC model checker (2009) Journal of Object Technology, 8 (2), pp. 137-161; Aranda, G., Moore, R., A formal model for verifying compound design patterns (2002) Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering, pp. 213-214. , SEKE '02, New York, NY, USA, ACM; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2010) CSMR, (2010), pp. 176-185; Bolognesi, T., Brinksma, E., Introduction to the iso specification language lotos (1987) Computer Networks, 14, pp. 25-59; Barbuti, R., De Francesco, N., Santone, A., Vaglini, G., Selective mu-calculus and formula-based equivalence of transition systems (1999) J. Comput. Syst. Sci, 59 (3), pp. 537-556; Stirling, C., An introduction to modal and temporal logics for ccs (1989) Concurrency: Theory, Language, and Architecture, pp. 2-20; Garavel, H., Lang, F., Mateescu, R., Serwe, W., CADP 2011: A toolbox for the construction and analysis of distributed processes (2013) STTT, 15 (2), pp. 89-107; De Ruvo, G., Santone, A., An eclipse-based editor to support lotos newcomers (2014) WETICE, , 2014 IEEE 23rd. (June)",,Grabis J.Sandkuhl K.,,CEUR-WS,"CAiSE 2015 Forum at the 27th International Conference on Advanced Information Systems Engineering, CAiSE 2015",8 June 2015 through 12 June 2015,,112513,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84937412908,,
TRUE,1,1,"Oh, Y., Lee, H.",Perceived emotional effects of digital pattern in façade design,2015,"CAADRIA 2015 - 20th International Conference on Computer-Aided Architectural Design Research in Asia: Emerging Experiences in the Past, Present and Future of Digital Architecture",,,,623,630,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84936102006&partnerID=40&md5=1e2ef0f3052c1bb3752371b71c642000,"Graduate School of Yonsei University, Seoul, South Korea; Yonsei University, Seoul, South Korea","Oh, Y., Graduate School of Yonsei University, Seoul, South Korea; Lee, H., Yonsei University, Seoul, South Korea","This study raises the question of what the emotional significance of the digital patterns has and attempts to provide an answer to such a question. The purpose of this study is to propose a direction to effectively support the façade designs of buildings by understanding the emotive design characteristics of the patterns. This study explains the design patterns on façade designs. There are five types of digital patterns which include applied patterns, perforated patterns, layered patterns, cast patterns, and tiled patterns. Among those patterns, perforated patterns are focused in further detail. This study deals with identifying emotional effects of perforated design patterns. The emotional word 'asymmetrical' and 'irregular' shows the high average of the emotional value. In the bipolar adjectives, the high emotional value is 'irregular-regular' and 'asymmetrical-symmetrical'. Therefore, the final design characteristics of the perforated patterns are 'regularity' and 'symmetry'. This means to be able to use the perforated patterns in order to be perceived a building façade design as the regular and symmetrical emotional effect. In this paper, it is worth analyzing design characteristics of a building façade by the support of the digital technologies and discussing the utilization of design characteristics derived. This study has contributed to the process and method of deriving the analysis results. © 2015 All rights reserved and published by The Association for Computer-Aided Architectural Design Research in Asia (CAADRIA), Hong Kong.",Digital pattern; Emotional effects; Façade design; Perforated pattern,Behavioral research; Computer architecture; Design; Design characteristics; Design Patterns; Digital patterns; Digital technologies; Emotional effects; Emotional words; Perforated pattern; Architectural design,,,,,"NRF-2010-0022347, NRF, National Research Foundation of Korea","Pell, B., (2010) The Articulate Surface, p. 21. , Birkhauser: GmbH, Basel, 23-27, 29, 40-45; Rodemann, P., (1999) Patterns in Interior Environments, p. 12. , John Wiley & Sons, INC. New York; (2006) The Function of Ornament: Actar, , Harvard University Graduate School of Design:, Barcelona; Picon, A., (2013) Ornament: The Politics of Architecture and Subjectivity, , John Wiley & Sons Ltd, Chicheser; Garcia, M., Patterns of architecture (2009) Architectural Design, pp. 8-9. , London; Hobbs, H., (2014) A Preference Study among Four Interior Architectural Geometries in a Semi-Immersive Virtual Environment, p. 114. , NewSchool of Architecture+Design 2013-2014 Master of architecture Thesis, San Diego; Hakoda, Y., Tsuzuki, T., Kawabata, H., Hagiwara, H., (2014) Cognitive Psychology, , Korea Brain-Based Education Research Center, Seoul; Park, J.M., (2012) A Study of Interior Design Application Elements According to the Sensibility Evaluation of Housing Interior Space, , Yonsei University Doctoral Thesis, Seoul; Kim, H.R., (2009) Expression Characteristics of Textile Surface Design Adapting Digital Architecture's Formal Tools, , Kyungbook National University Doctoral Thesis, Daegoo",,Schnabel M.A.Herr C.M.Kaijima S.Kim M.J.Holzer D.Ikeda Y.,,The Association for Computer-Aided Architectural Design Research in Asia (CAADRIA),"20th International Conference on Computer-Aided Architectural Design Research in Asia: Emerging Experiences in the Past, Present and Future of Digital Architecture, CAADRIA 2015",20 May 2015 through 23 May 2015,,112492,,9789881902665,,,English,"CAADRIA - Int. Conf. Comput.-Aided Archit. Des. Res. Asia: Emerg. Exp. Past, Present Future Digit. Archit.",Conference Paper,Scopus,2-s2.0-84936102006,,
FALSE,3,4,"Rodríguez, F.D., Acuña, S.T., Juristo, N.",Design and programming patterns for implementing usability functionalities in web applications,2015,Journal of Systems and Software,105,,,107,124,,,10.1016/j.jss.2015.04.023,http://www.scopus.com/inward/record.url?eid=2-s2.0-84929177383&partnerID=40&md5=98b4147b75202a6204861990c7b8c298,"Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Campus de Montegancedo s/n, Boadilla del Monte Madrid, Spain; Departamento de Ingeniería Informática, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, Madrid, Spain","Rodríguez, F.D., Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Campus de Montegancedo s/n, Boadilla del Monte Madrid, Spain; Acuña, S.T., Departamento de Ingeniería Informática, Universidad Autónoma de Madrid, Calle Francisco Tomás y Valiente 11, Madrid, Spain; Juristo, N., Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Campus de Montegancedo s/n, Boadilla del Monte Madrid, Spain","Usability is a software system quality attribute. There are usability issues that have an impact not only on the user interface but also on the core functionality of applications. In this paper, three web applications were developed to discover patterns for implementing two usability functionalities with an impact on core functionality: Abort Operation and Progress Feedback. We applied an inductive process in order to identify reusable elements to implement the selected functionalities. For communication purposes, these elements are specified as design and programming patterns (PHP, VB.NET and Java). Another two web applications were developed in order to evaluate the patterns. The evaluation explores several issues such as ease of pattern understanding and ease of pattern use, as well as the final result of the applications. We found that it is feasible to reuse the identified solutions specified as patterns. The results also show that usability functionalities have features, like the level of coupling with the application or the complexity of each component of the solution, that simplify or complicate their implementation. In this case, the Abort Operation functionality turned out to be more feasible to implement than the Progress Feedback functionality.",Design patterns; Programming patterns; Software engineering,Computer software reusability; Social networking (online); Software engineering; Usability engineering; User interfaces; Web Design; World Wide Web; Core functionality; Design Patterns; Inductive process; Programming patterns; Software systems; WEB application; Java programming language,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press New York; Alexander, C., Ishikawa, S., Silvernstein, M., (1997) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press New York; Alur, D., Crupi, J., Malks, D., (2003) Core J2EE Patterns, , Sun Microsystems Press Publisher San Antonio Road, Palo Alto, CA; Bass, L., John, B., Supporting usability through software architecture (2001) Computer, 34 (10), pp. 113-115; Bass, L., John, B., Linking usability to software architecture patterns through general scenarios (2003) J. Syst. Softw., 66 (3), pp. 187-197; Bass, L., John, B., Kates, J., Achieving usability through software architecture (2001) Technical Report CMU/SEI-2001-TR-005, , Software Engineering Institute, Carnegie Mellon University; Bass, L., John, B., Juristo, N., Sanchez-Segura, M.-I., Usability-supporting architectural patterns (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE'04), pp. 716-717. , IEEE Computer Society Washington, DC, USA; Biel, B., Seitz, S., Gruhn, V., Towards pattern-based generic interaction scenarios (2011) ScienceDirect, 5, pp. 771-775; Bosh, J., Juristo, N., Designing software architectures for usability (2003) Proceedings of the 25th International Conference on Software Engineering (ICSE'03), pp. 757-758. , IEEE Computer Society Portland, Oregon, USA; Brighton, (1999) The Brighton Usability Pattern Collection, , http://www.cmis.brighton.ac.uk/research/patterns/home.html, accessed June 2014; Bushmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley & Sons West Susses, England; Carvajal, L., Moreno, A.M., Sanchez-Segura, M.I., Seffah, A., Usability through software design (2013) IEEE Trans. Softw. Eng., 39 (11), pp. 1582-1596; Folmer, E., Gurp, J., Bosch, J., A framework for capturing the relationship between usability and software architecture (2003) Softw. Process: Improve. Pract., 1, pp. 67-87; Folmer, E., Welie, M., Bosh, J., Bridging patterns: An approach to bridge gaps between SE and HCI (2006) Inform. Softw. Technol., 48, pp. 69-89; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1997) Design Patterns: Elements of Reusable Object-Oriented Software, , 13th ed. Addison-Wesley, Reading Massachusetts; Goodliffe, P., (2006) Code Craft: The Practice of Writing Excellent Code, , No Starch Press San Francisco, CA; Infragistics, (2015) Quince: Interactive User Experience (UX) Design Patterns Library, , http://quince.infragistics.com, accessed February 2015; ISO, (2010) Ergonomics of Human-system Interaction. Part 210: Human-centred Design for Interactive Systems, ISO 9241-210; John, B., Bass, L., Golden, E., Stoll, P., A responsibility-based pattern language for usability-supporting architectural patterns (2009) Proceedings of the 1st ACM SIGCHI Symposium on Engineering Interactive Computing Systems (ICSE'04), pp. 3-12. , New York, USA; John, B., Bass, L., Sanchez-Segura, M.-I., Adams, R., Bringing usability concerns to the design of software architecture (2004) Engineering Human Computer Interaction and Interactive Systems, Lecture Notes in Computer Science, 3425, pp. 1-19. , Hamburg Germany; Juristo, N., Moreno, A.M., Sanchez-Segura, M.-I., Analysing the impact of usability on software design (2007) J. Syst. Softw., 80 (9), pp. 1506-1516; Juristo, N., Moreno, A.M., Sanchez-Segura, M.-I., Guidelines for eliciting usability functionalities software engineering (2007) IEEE Trans. Softw. Eng., 33 (11), pp. 744-758; Laakso, S., (2003) User Interface Design Patterns, , http://www.cs.helsinki.fi/u/salaakso/patterns, accessed June 2014; Mellarkod, V., Appan, R., Jones, D., Sherif, K., A multi-level analysis of factors affecting software developers' intention to reuse software assets: An empirical investigation (2007) Inform. Manage., 44, pp. 613-625; Panach, J.I., Juristo, N., Valverde, F., Pastor, O., A framework to identify primitives that represent usability within model-driven development methods (2014) Inform. Softw. Technol., 58, pp. 338-354; Pattern Factory Oy, (2014) Patternry, , http://patternry.com, accessed January 2014; Perzel, K., Kane, D., Usability patterns for applications on the world wide web (1999) Proceedings of the Pattern Languages of Programming Conference (PloP'99), pp. 1-17. , Monticello, Illinois, USA; Postmus, D., Meijler, T., Aligning the economic modeling of software reuse with reuse practices (2008) Inform. Softw. Technol., 50, pp. 753-762; Runeson, P., Höst, M., Guidelines for conducting and reporting case study research in software engineering (2009) J. Empir. Softw. Eng., 14 (2), pp. 131-164; STATUS Project, (2001) Software Architecture that Supports Usability, , http://www.grise.upm.es/rearviewmirror/projects/status/index.html, accessed June 2014; Szyperski, C., (2002) Component Software: Beyond Object-Oriented Programming, , 2nd ed. Addison-Wesley Boston, MA, USA; Tidwell, J., (2010) Designing Interfaces: Patterns for Effective Interaction Design, , 2nd ed. O'Reilly Media. Sebastopol CA, USA; Toxboe, A., (2015) User Interface Design Patterns Library, , http://ui-patterns.com/patterns, accessed February 2015; Van Duyne, D.K., Landay, J., Hong, J., (2006) The Design of Sites: Patterns for Creating Winning Web Sites, , 2nd ed. Prentice Hall Upper Saddle River, NJ, USA; W3C - World Wide Web Consortium, Web Design and Applications, , http://www.w3.org/standards/webdesign, accessed June 2014; Welie, M., Trætteberg, H., Interaction patterns in user interfaces (2000) Proceedings of Seventh Pattern Languages of Programs Conference (PLoP'00), pp. 1-26. , Monticello, Illinois, USA; Yahoo, (2013) Design Pattern Library, , https://developer.yahoo.com/ypatterns, accessed April 2014","Rodríguez, F.D.; Escuela Técnica Superior de Ingenieros Informáticos, Universidad Politécnica de Madrid, Campus de Montegancedo s/n, Spain",,,Elsevier Inc.,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-84929177383,,
FALSE,3,4,"Schuster, S., Schulze, S., Schaefer, I.",Structural feature interaction patterns - Case studies and guidelines,2014,ACM International Conference Proceeding Series,,,,,,,,10.1145/2556624.2556640,http://www.scopus.com/inward/record.url?eid=2-s2.0-84897658251&partnerID=40&md5=59c1aa0b1843e1b8588e4fd4c685d5ce,"Technische Universität Braunschweig, Germany","Schuster, S., Technische Universität Braunschweig, Germany; Schulze, S., Technische Universität Braunschweig, Germany; Schaefer, I., Technische Universität Braunschweig, Germany","Feature interactions have been an intensive field of research for more than a decade. Recently, it gained much attention in the context of software product lines (SPLs), a methodology that takes features explicitly into account to distinguish between similar yet different programs. In its very essence, feature interactions occur whenever the presence of two or more features leads to a considerable (and maybe unwanted) change of the behavior of the underlying program. Amongst others, feature interactions may occur on source code level, for example, in form of additional code that is needed due to interacting features. In this paper, we focus on such structural interactions. Particularly, we investigate structural feature interaction patterns, that is, patterns that are related to structural feature interactions, and vice versa. To this end, we propose an approach to detect design patterns in feature-oriented SPLs. We show that such design patterns exist on feature level and these patterns involve feature interactions. Based on our results, we reason about feature interactions in the presence of design patterns. Particularly, we show when feature interactions occur and that they are beneficial, for example, to achieve a higher degree of abstraction. Furthermore, we propose an initial guideline when certain design patterns are applicable. © 2014 ACM.",design pattern; feature interactions; feature-oriented programming,Design Patterns; Feature interactions; Feature level; Feature-oriented; Feature-oriented programming; Software product line (SPLs); Structural feature; Structural interactions; Computer applications; Computer programming,,,,,,"Apel, S., Beyer, D., Feature cohesion in software product lines: An exploratory study (2011) Proc. Int'l Conf. Software Engineering, pp. 421-430; Apel, S., Kästner, C., An Overview of Feature-Oriented Software Development (2009) J. Object Technology, 8 (5), pp. 49-84; Apel, S., Kästner, C., Lengauer, C., FeatureHouse: Language-Independent, Automated Software Composition (2009) Proc. Int'l Conf. Software Engineering, pp. 221-231. , IEEE; Apel, S., Kolesnikov, S., Liebig, J., Kästner, C., Kuhlemann, M., Leich, T., Access Control in Feature-Oriented Programming (2012) Sci. Comp. Prog., 77 (3), pp. 174-187; Apel, S., Kolesnikov, S., Siegmund, N., Kästner, C., Garvin, B., Exploring Feature Interactions in the Wild (2013) Proc. Int'l Workshop Feature-Oriented Software Development, , to appear; Apel, S., Rhein, A.V., Wendler, P., Größlinger, A., Beyer, D., Strategies for Product-Line Verification: Case Studies and Experiments (2013) Proc. Int'l Conf. Software Engineering, pp. 482-491. , IEEE; Apel, S., Von Rhein, A., Thüm, T., Kästner, C., Feature-interaction detection based on feature-based specifications (2013) Comp. Net., 57 (12), pp. 2399-2409; Batory, D., Sarvela, J., Rauschmayer, A., Scaling Step-Wise Refinement (2004) IEEE Trans. Soft. Eng., 30 (6), pp. 355-371; Calder, M., Kolberg, M., Magill, E.H., Reiff-Marganiec, S., Feature Interaction: A Critical Review and Considered Forecast (2003) Computer Networks, 41 (1), pp. 115-141; Czarnecki, K., Eisenecker, U.W., (2000) Generative Programming: Methods, Tools, and Applications, , ACM Press/Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) Proc. Int'l Workshop on Program Comprehension, pp. 94-103; Jayaraman, P., Whittle, J., Elkhodary, A.M., Gomaa, H., Model Composition in Product Lines and Feature Interaction Detection Using Critical Pair Analysis (2007) Proc. Int'l Conf. Model Driven Engineering Languages and Systems, pp. 151-165. , Springer; Kästner, C., Apel, S., Virtual Separation of Concerns - A Second Chance for Preprocessors (2009) J. Object Technology, 8 (6), pp. 59-78; Kästner, C., Apel, S., Kuhlemann, M., Granularity in Software Product Lines (2008) Proc. Int'l Conf. Software Engineering, pp. 311-320. , ACM; Kästner, C., Apel, S., Ostermann, K., The Road to Feature Modularity? (2011) Proc. Int'l Workshop Feature-Oriented Software Development, pp. 5:1-5:8. , ACM; Kästner, C., Apel, S., Ur Rahman, S.S., Rosenmüller, M., Batory, D., Saake, G., On the impact of the optional feature problem: Analysis and case studies (2009) Proc. Int'l Software Product Line Conference, pp. 181-190. , Pittsburgh, PA, USA, Carnegie Mellon University; Pohl, K., Böckle, G., Van Der Linden, F., (2005) Software Product Line Engineering: Foundations, Principles, and Techniques, , Springer; Prehofer, C., Feature-Oriented Programming: A Fresh Look at Objects (1997) Proc. Europ. Conf. Object-Oriented Programming, pp. 419-443. , Springer; Rasool, G., Streitferdt, D., A Survey on Design Pattern Recovery Techniques (2011) J. Comp. Sci., 8 (2); Rosenmüller, M., Siegmund, N., Apel, S., Saake, G., Code Generation to Support Static and Dynamic Composition of Software Product Lines (2008) Proc. Int'l Conf. Generative Programming and Component Engineering, pp. 3-12. , ACM; Schaefer, I., Bettini, L., Bono, V., Damiani, F., Tanzarella, N., Delta-Oriented Programming of Software Product Lines (2010) Proc. Int'l Software Product Line Conference, pp. 77-91. , Springer; Schuster, S., (2012) Design Patterns in Feature-Oriented Programming, , Bachelor's thesis, TU Braunschweig; Schuster, S., Schulze, S., Object-Oriented Design in Feature-riented Programming (2012) Proc. Int'l Workshop Feature-Oriented Software Development, pp. 25-28. , ACM; Smaragdakis, Y., Batory, D., Mixin Layers: An Object-Oriented Implementation Technique for Refinements and Collaboration-based Designs (2002) ACM Trans. Soft. Eng. And Method., 11, pp. 215-255; Thüm, T., Apel, S., Kästner, C., Kuhlemann, M., Schaefer, I., Saake, G., (2012) Analysis Strategies for Software Product Lines, , Technical Report FIN-004-2012, University of Magdeburg",Technische Universität BraunschweigGermany,,Universite Nice Sophia Antipolis;CNRS;I3S laboratory;GDR Genie de la Programmation et du Logiciel;IT University of Copenhagen;University of Duisburg-Essen,,"8th International Workshop on Variability Modelling of Software-Intensive Systems, VaMoS 2014",22 January 2014 through 24 January 2014,Nice,102953,,9781450325561,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84897658251,,
FALSE,3,v,"Alnusair, A., Zhao, T., Yan, G.",Rule-based detection of design patterns in program code,2014,International Journal on Software Tools for Technology Transfer,16,3,,315,334,,4,10.1007/s10009-013-0292-z,http://www.scopus.com/inward/record.url?eid=2-s2.0-84901191663&partnerID=40&md5=3f76e783bfa71b7e289c945cdf1106d7,"Indiana University, Kokomo, IN, 46904, United States; University of Wisconsin-Milwaukee, Milwaukee, WI, 53201, United States; University of Southern Indiana, Evansville, IN, 47712, United States","Alnusair, A., Indiana University, Kokomo, IN, 46904, United States; Zhao, T., University of Wisconsin-Milwaukee, Milwaukee, WI, 53201, United States; Yan, G., University of Southern Indiana, Evansville, IN, 47712, United States","The process of understanding and reusing software is often time-consuming, especially in legacy code and open-source libraries. While some core code of open-source libraries may be well-documented, it is frequently the case that open-source libraries lack informative API documentation and reliable design information. As a result, the source code itself is often the sole reliable source of information for program understanding activities. In this article, we propose a reverse-engineering approach that can provide assistance during the process of understanding software through the automatic recovery of hidden design patterns in software libraries. Specifically, we use ontology formalism to represent the conceptual knowledge of the source code and semantic rules to capture the structures and behaviors of the design patterns in the libraries. Several software libraries were examined with this approach and the evaluation results show that effective and flexible detection of design patterns can be achieved without using hard-coded heuristics. © 2013 Springer-Verlag Berlin Heidelberg.",Design patterns; Design recovery; Knowledge representation; Ontology formalisms; Semantic inference; Software maintenance,Application programming interfaces (API); Codes (symbols); Computer software maintenance; Knowledge representation; Semantics; Automatic recovery; Conceptual knowledge; Design Patterns; Design recovery; Open-source libraries; Program understanding; Semantic inference; Software libraries; Open source software,,,,,,"Alnusair, A., Zhao, T., Towards a model-driven approach for reverse engineering design patterns (2009) International Workshop On Transforming and Weaving Ontologies In Model Driven Engineering (TWOMDE'09) At ACM/IEEE MoDELS'09, , In: 2nd, Denver CO., USA; Alnusair, A., Zhao, T., (2012) Source Code Representation Ontology (SCRO), Design Pattern Ontologies, and Framework Ontologies, , http://www.indiana.edu/~awny/index.php/research/ontologies, Available online at; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proceedings of the 19th IEEE International Conference On Software Maintenance (ICSM'03), pp. 305-314. , The Netherlands, Amsterdam; Berners-Lee, T., Hendler, J., Lassila, O., The semantic web (2001) Sci. Am., 284 (5), pp. 34-43; Binun, A., Kniesel, G., DPJF-design pattern detection with high accuracy (2012) Proceedings of the 16th European Conference On Software Maintenance and Reengineering (CSMR'12), pp. 245-254. , Szeged, Hungary; Chen, L., Shadbolt, N.R., Globe, C.A., A semantic web-based approach to knowledge management for grid applications (2001) IEEE Trans. Knowl. Data Eng., 19 (2), pp. 283-296; Cinneide, M.O., Nixon, P., A methodology for the automated introduction of design patterns (1999) Proceedings of the IEEE International Conference On Software Maintenance (ICSM'99), pp. 463-472. , UK, Oxford; de Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral pattern identification through visual language parsing and code instrumentation (2009) Proceedings of 13th European Conference On Software Maintenance and Reengineerig (CSMR'09), pp. 99-108. , Kaiserslautern, Germany; de Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral pattern detection through model checking (2010) Proceedings of 14th European Conference On Software Maintenance and Reengineerig (CSMR'10), pp. 176-185. , Spain, Madrid; Dietrich, J., Elgar, C., A formal description of design patterns using OWL (2005) Proceedings of the Australian Software Engineering Conference (ASWEC 2005), pp. 243-250. , Brisbane, Australia; Dietrich, J., Elgar, C., Towards a web of patterns (2005) Workshop On Semantic Web Enabled Software Engineering (SWESE), pp. 117-132. , Galway, Ireland; Emami, M., Rakesh, G., Hendren, L., Context-sensitive interprocedural points-to analysis in the presence of function pointers (1994) Proceedings of the ACM SIGPLAN Conference On Programming Language Design and Implementation (PLDI'94), pp. 242-256; Falbo, R., Guizzardl, G., Duarte, K.C., Natali, A.C., Developing software for and with reuse: An ontological approach (2002) ACIS International Conference On Computer Science, Software Engineering, Information Technology, E-Business and Applications (CSITeA-2002), pp. 311-316. , Foz do Iguacu, Brazil; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design patterns mining enhanced by machine learning (2005) Proceedings of the 21st IEEE International Conference On Software Maintenance (ICSM'05), pp. 295-304. , Budapest, Hungary; Gamma, E., Helm, E., Johnson, R., Vlissides, J., Design Patterns: Elements of Reusable Object-Oriented Software (1995) Addison-Wesley Professional Computing Series; Gruber, T.R., A translation approach to portable ontology specification (1993) Knowl. Acquis., 5 (2), pp. 192-220; Gueheneuc, Y.G., (2007) P-MARt: Pattern-like Micro Architecture Repository, , http://ptidej.dyndns.org/downloads/pmart/, Retrieved 27 July 2012, from; Guéhenéuc, Y.G., Antoniol, G., DeMIMA: a multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Eng., 34 (5), pp. 667-684; Horrocks, I., Ontologies and the semantic web (2008) Commun. ACM, 51 (12), pp. 58-67; Jasper, R.J., Uschold, M.F., A framework for understanding and classifying ontology applications (1999) IJCAI99 Workshop On Ontologies and Problem-Solving Methods, , Stockholm, Sweden; Kirasic, D., Basch, D., Ontology-based design pattern recognition (2008) Proceedings of the International Conference On Knowledge-Based and Intelligent Information and Engineering Systems (KES'08), pp. 384-393; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proceedings of Working Conference On Reverse, Engineering (WCRE96), pp. 208-215; Manola, F., Miller, E., (2004) RDF Primer. W3C Recommendation, , http://www.w3.org/TR/rdf-primer/, Retrieved July 7 2012, from; Motik, B., Grau, B.C., Sattler, U., Structured objects in OWL: Representation and reasoning (2008) Proceedings of the International World Wide Web Conference (WWW'08), pp. 555-564. , Beijing, China; Motik, B., Patel-Schneider, P.F., Grau, B.C., OWL Web Ontology Language Reference, , http://www.w3.org/TR/owl2-direct-semantics/, W3C Recommendation (2009). Retrieved 4 July 2012, from; Noy, F.N., McGuinness, D.L., (2001) Ontology Development 101: A Guide to Creating Your First Ontology, , Stanford Knowledge System Laboratory Technical Report KSL-01-05 and Stanford Medical Informatics Technical, Report. SMI-2001-0880; O'Connor, M.J., Knublauch, H., Tu, S., Grosof, B., Dean, M., Grosso, W., Musen, M., Supporting rule systems interoperability on the semantic web with SWRL (2005) Proceedings of the 4th International Semantic Web Conference, , Galway, Ireland; Olson, D.L., Delen, D., (2008) Advanced Data Mining Techniques, , Verlag: Springer; Prud'hommeaux, E., Seaborne, A., (2008) SPARQL Query Language For RDF, , http://www.w3.org/TR/rdf-sparql-query/, W3C Recommendation, Retrieved 7 July 2012, from; Rasool, G., Mader, P., Flexible design pattern detection based on feature types (2011) Proceedings of the International Conference On Automated Software Engineering (ASE'11), pp. 243-252. , Lawrence, KS, USA; Sartipi, K., Hu, L., Behavior-driven design pattern recovery (2008) Proceedings of the Twelfth International Conference On Software Engineering and Applications(SEA'08), pp. 179-185. , Orlando, Florida, USA; Shi, N., Olsson, R.A., Reverse engineering of design patterns from Java source code (2006) Proceedings of the 21st IEEE/ACM International Conference On Automated Software Engineering (ASE'06), pp. 123-132. , Tokyo, Japan; Sirin, E., Parsia, B., Grau, B.C., Kalyanpur, A., Kartz, Y., Pellet: a practical OWL-DL reasoner (2007) Web Semant. Sci Serv. Agents World Wide Web, 5 (2), pp. 51-53; Tsantalis, T., Stephanides, A., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng., 32 (11), pp. 896-909; Uschold, M., Healy, M., Williamson, K., Clark, P., Woods, S., Ontology reuse and application (1998) Proceedings of the 1st International Conference On Formal Ontology In Information Systems (FOIS 1998), pp. 179-192; Wang, W., Tzerpos, V., Design pattern detection in Eiffel systems (2005) Proceedings of the 12th Working Conference on Reverse, Engineering (WCRE'05), pp. 165-174","Alnusair, A.; Indiana University, Kokomo, IN, 46904, United States; email: alnusair@iuk.edu",,,Springer Verlag,,,,,14332779,,,,English,Int. J. Softw. Tools Technol. Trans.,Article,Scopus,2-s2.0-84901191663,,
TRUE,4,4,"Griffith, I., Izurieta, C.",Design pattern decay: The case for class grime,2014,International Symposium on Empirical Software Engineering and Measurement,,, a39,,,,,10.1145/2652524.2652570,http://www.scopus.com/inward/record.url?eid=2-s2.0-84907816082&partnerID=40&md5=3879509aaacbcb22336a15a6282c6bb6,"Department of Computer Science, Montana State University, PO Box 173880, United States","Griffith, I., Department of Computer Science, Montana State University, PO Box 173880, United States; Izurieta, C., Department of Computer Science, Montana State University, PO Box 173880, United States","Context: We investigate class grime, a form of design pattern decay, wherein classes of the pattern realization have extraneous attributes or methods, which obfuscate the intended design of a pattern. Goal: To expand the taxonomy of class grime using properties of class cohesion. Using this expanded taxonomy we explore the effect that forms of class grime have on pattern realization understandability. Method: A pilot study utilizing a formal experiment to explore the effects of class grime on design pattern understandability. The experiments used simulated injection of 8 types of class grime into design pattern realizations randomly selected from 16 design pattern types from a set of 6541 realizations from 520 distinct software systems. Results: We found that for each of the 8 identified class grime forms, understandability was negatively affected. Conclusion: This work serves as early communication of research for the validation of the extended taxonomy as well as the method of grime injection used in the experiment. © 2014 ACM.",object oriented design patterns; software architectures; software decay,Design Patterns; Object oriented design; Software Decay; Software architecture,,,,,,"Ampatzoglou, A., Michou, O., Stamelos, I., Building and mining a repository of design pattern instances: Practical and research benefits (2012) Entertainment Computing, 4 (2), pp. 131-142. , (Apr. 2013); Bansiya, J., Davis, C.G., A hierarchical model for object-oriented design quality assessment (2002) IEEE Trans. Soft. Eng, 28 (1), pp. 4-17. , (Jan. 2002), IEEE-CS, Los Alamitos, CA, USA; Bieman, J.M., Kang, B.K., Cohesion and reuse in an object-oriented system (1995) Proceedings of the ACM Symposium on Software Reusability (Seattle, WA, USA, April 23-30). SSR'94, pp. 259-262. , ACM, New York, NY; Briand, L.C., Daly, J.W., Wust, J.K., A unified framework for cohesion measurement in object-oriented systems (1998) Empirical Software Engineering, 3 (1), pp. 65-117. , (Mar. 1998); Briand, L., Morasca, S., Basili, V., Measuring and assessing maintainability at the end of high level design (1993) Proceedings of IEEE Conference on Software Maintenance (Montreal, Canada, September 27-30). CSM'93, pp. 88-87. , IEEE; Eick, S.G., Graves, T.L., Karr, A.F., Marron, J.S., Mockus, A., Does code decay? Assessing the evidence from change management data (2001) IEEE Trans. Soft. Eng, 27 (1), pp. 1-12. , (Jan. 2001), IEEE-CS, Los Alamitos, CA, USA; France, R.B., Kim, D.K., Song, E., Ghosh, S., A uml-based pattern specification technique (2004) IEEE Trans. Soft. Eng, 34 (5), pp. 193-206. , (Mar. 2004); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional, Boston, MA; Izurieta, C., (2009) Decay and Grime Buildup in Evolving Object Oriented Design Patterns, , Ph.D. Dissertation. Colorado State University, Fort Collins, CO, USA. Advisor James Bieman. AAI3385139; Izurieta, C., Bieman, J.M., How software designs decay: A pilot study of pattern evolution (2007) Proceedings of the First International Symposium on Empirical Software Engineering and Measurement (Madrid, Spain, September 20-21, 2007). ESEM 2007, pp. 449-451; Izurieta, C., Bieman, J.M., Testing consequences of grime buildup in object oriented design patterns (2008) Proceedings of the First International Conference on Software Testing, Verification, and Validation (Lillehammer, Norway, April 9-11, 2008). ICST 2008, pp. 171-179; Izurieta, C., Bieman, J.M., A multiple case study of design pattern decay, grime, and rot in evolving software systems (2013) Software Quality J, 21 (2), pp. 289-323. , (Jun. 2013); Izurieta, C., Vetro, A., Zazworka, N., Cai, Y., Seaman, C., Shull, F., Organizing the technical debt landscape Proceedings of the Third International Workshop on Managing Technical Debt (Zurich, Switzerland, June 1, 2012). MTD 2012, pp. 23-26. , IEEE; Schanz, T., Izurieta, C., Object oriented design pattern decay: A taxonomy (2010) Proceedings of the 2010 ACMIEEE International Symposium on Emprical Software Engineering and Measurement (Bolzano-Bozen, Italy, September 16-17, 2010). ESEM 2010, pp. 71-78. , ACM, New York, NY","Griffith, I.; Department of Computer Science, Montana State University, PO Box 173880, United States",,IEEE Software;Microsoft Research;Politecnico di Torino;Telecom Italia JOL (Joint Open Lab);Telecom Italia Lab,IEEE Computer Society,"8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2014",18 September 2014 through 19 September 2014,,108081,19493770,9781450327749,,,English,Int. Symp. Empir. Softw. Eng. Meas.,Conference Paper,Scopus,2-s2.0-84907816082,,
TRUE,v,v,"Issaoui, I., Bouassida, N., Ben-Abdallah, H.",Using metric-based filtering to improve design pattern detection approaches,2014,Innovations in Systems and Software Engineering,11,1,,39,53,,,10.1007/s11334-014-0241-3,http://www.scopus.com/inward/record.url?eid=2-s2.0-84925504132&partnerID=40&md5=65d36421681a891384d8e961cf53e02b,"University of Sfax, Sfax, Tunisia; King Abdulaziz University, Jeddah, Saudi Arabia","Issaoui, I., University of Sfax, Sfax, Tunisia; Bouassida, N., University of Sfax, Sfax, Tunisia; Ben-Abdallah, H., King Abdulaziz University, Jeddah, Saudi Arabia","Design patterns represent high-level recurring abstractions that reflect the know-how of experts. Their detection is a key task in the context of software engineering; it is very useful in program comprehension, design recovery and also for re-documenting object-oriented systems. Despite their usefulness, current design pattern detection approaches have a high time complexity that hinders their application. This complexity is further aggravated with the absence of guiding principles in determining which pattern to look for first among the various patterns. To overcome this practical limit, we propose to optimize any pattern detection approach by foregoing it by a filtering phase that detects possible existence of patterns and that orders the candidate patterns in terms of their degree of resemblance to the analyzed design fragments. The herein proposed filtering approach exploits semantic and structural design metrics to look for the semantic and structural symptoms of design pattern instances. Its performance is experimentally demonstrated through our design pattern detection method MAPeD (Multi-phase Approach for Pattern Discovery) applied on the open source system JUnit. © 2014, Springer-Verlag London.",Design patterns; Filtering; Object-oriented metrics; Quality assurance,Filtration; Open source software; Open systems; Quality assurance; Semantics; Software engineering; Structural design; Technology transfer; Design pattern detections; Design Patterns; Guiding principles; Multiphase approach; Object oriented metrics; Object-oriented system; Open source system; Program comprehension; Object oriented programming,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns: elements of reusable object oriented software, , Addisson-Wesley, Reading:; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32, p. 11; Gueheneuc, Y., Antoniol, G., DeMIMA: a multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering; Belderrar, A., Kpodjedo, S., Guéhéneuc, Y., Antoniol, G., Galinier, P., Sub-graph mining: identifying micro-architectures in evolving object-oriented software. 15th European Conference on Software Maintenance and Reengineering (CSMR’11) (2011) pp 171–180; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking. 14th European conference on software maintenance and reengineering (CSMR’10) (2010) pp 176–185; Bouassida, N., Ben-Abdallah, H., Structural and behavioral detection of design patterns. (ASEA). International conference on advanced software engineering and its applications (2009) CCIS proceedings, , Springer, Berlin:; Masuda, G., Sakamoto, N., Ushijima, K., (1999) Evaluation and analysis of applying design patterns, , In: Proceedings of the international workshop on principles of software evolution; Huston, B., The effects of design pattern application on metric scores (2001) pp 261–269; Chidamber, S., Kemerer, C., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, pp. 476-493; http://www.jhotdraw.org, Gamma E, Eggenschwiler T (2007)http://jrefactory.sourceforge.net/, JRefactory (2007)Bouassida, N., (2013) Ben-Abdallah H, , Issaoui I: Evaluation of an automated multi-phase approach for patterns discovery. Int J Softw Eng Knowl Eng; Arcelli, F., Maggioni, S., Metrics-based detection of micro patterns to improve the assessment of software quality (2009) 1st Symposium on emerging trends in software metrics; Lee, H., Youn, H., Lee, E., A design pattern detection technique that aids reverse engineering (2008) Int J Secur Appl, 2 (1); Blondel, V.D., Gajardo, A., Heymans, M., Senellart, P., Van Dooren, P., A measure of similarity between graph vertices. SIAM (2004) Applications to synonym extraction and web searching; Arcelli, F., Perin, F., Raibulet, C., Ravani, S., JADEPT: dynamic analysis for behavioral design pattern detection. 4th International conference on evaluation of novel approaches to software engineering (ENASE’09) (2009) Milan, pp. 95-106; Aydinoz B (2006) The effect of design patterns on object oriented metrics and software error-proneness. MS Thesis, The Graduate School of Natural and Applied Sciences of Middle East Technical UniversityHernandez, J., Kubo, A., Washizaki, H., Selection of metrics for predicting the appropriate application of design patterns. AsianPLoP 2011: 2nd Asian conference on pattern languages of programs (2011) Tokyo; Abul Khaer, M., Hashem, M., Raihan Masud, M., On use of design patterns in empirical assessment of software design quality (2008) In: Proceedings of the international conference on computer and communication engineering; Hsueh, N., Chu, P., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) pp 1430–1439; Maggioni, S., Arcelli, F., Metrics-based detection of micro patterns (2009) Emerging Trends in Software Metrics; Reißing, R., The impact of pattern use on design quality (2001) OOPSLA 2001 workshop “Beyond Design: Patterns (mis)used”; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: a mapping study (2013) J Syst Softw, pp. 1945-1964; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) IEEE proceedings of the 5th international symposium on software metrics (METRICS, 1998, pp. 23-34. , IEEE Computer Society, Maryland:; Ampatzoglou, A., Frantzeskou, G., Stamelos, I., A methodology to assess the impact of design patterns on software quality (2012) J Inf Softw Technol, pp. 331-346; Larman, C., Applying UML and patterns: an introduction to object-oriented analysis and design and iterative development, 3rd edn (2004) Addison Wesley; Ayata, M., Effect of some software design patterns on real time software performance. A Master’s Thesis (2010) the Graduate School of Imfomatics of Middle East Technical University; Vernazza, T., Granatella, G., Succi, G., Benedicenti, L., Mintchev, M., (2000) Defining metrics for software components, , In: Proceedings of the world multiconference on systemics, cybernetics and informatics; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns. In: Proceedings of the 11th working conference on reverse engineering. IEEE Computer Society Press (2004) pp 172–181; Bieman, J., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Berry, M., Harrison, W., Design patterns and change proneness: an examination of five evolving systems (2003) Proceedings of the 9th international software metrics symposium. IEEE Computer Society Press, pp. 40-49; Issaoui, I., Bouassida, N., Ben-Abdallah, H., A design pattern detection approach based on semantics. In: Proceedings of the the 10th international conference on software engineering research (2012) management and applications (SERA2012) selected papers to appear in Studies in Computational Intelligence, , Springer, Berlin:; http://wordnet.princeton.edu/, Fellbaum C [En ligne]http://argouml.tigris.org/, ArgoUML (2000) [En ligne]http://www.junit.org, JUnit (2007)","Issaoui, I.; University of SfaxTunisia",,,Springer-Verlag London Ltd,,,,,16145046,,,,English,Innov. Syst. Softw. Eng.,Article,Scopus,2-s2.0-84925504132,,
FALSE,4,1,"Abbas, S., Ojo, A.",Applying design patterns in URI strategies-naming in linked geospatial data infrastructure,2014,Proceedings of the Annual Hawaii International Conference on System Sciences,,,6758863,2094,2103,,,10.1109/HICSS.2014.265,http://www.scopus.com/inward/record.url?eid=2-s2.0-84902299114&partnerID=40&md5=6a4bca3de5dd99382feab20465f037d9,"Digital Enterprise Research Institute, National University of Ireland, Galway, Galway, Ireland","Abbas, S., Digital Enterprise Research Institute, National University of Ireland, Galway, Galway, Ireland; Ojo, A., Digital Enterprise Research Institute, National University of Ireland, Galway, Galway, Ireland","The centrality of Uniform Resource Identifiers (URI) as names in Linked Data initiatives has led to the development of guidelines and best practices by World Wide Web Consortium (W3C) and other experts groups on how to design ""good"" URIs in general and for the government domain in particular. However, these URI design guidelines have had limited pragmatic value for several reasons including the underspecified nature of the rules, weak elaboration on nature of problems addressed and consequences of prescribed design decisions. With no conceptual or rigorous underpinning for existing design rules, checking for internal consistency or coverage when developing URI strategies is difficult. We tackle these problems in this paper by: 1) consolidating existing URI design rules, 2) distilling core URI design aspects or facets from these rules and 3) abstracting the rules into a set of consistent URI Design Patterns specifications. This process resulted in 8 Design Patterns from an initial set of 37 URI design rules. Following this, we show how the design patterns could be employed in developing a URI strategy to support the realization of a Linked Spatial Data Infrastructure. We conclude with an evaluation of the URI design patterns and implications of our work. © 2014 IEEE.",,Design; World Wide Web; Best practices; Design decisions; Design Patterns; Geo-spatial data infrastructures; Internal consistency; Spatial data infrastructure; Uniform resource identifiers; World wide web consortiums; Systems science,,,,,,"Bizer, C., Heath, T., Berners-Lee, T., Linked data - The story so far (2009) International Journal on Semantic Web and Information Systems (IJSWIS), 5, pp. 1-22; Berners-Lee, T., (1998) Cool URIs Don't Change; (2012) 223 Best Practices URI Construction, , http://www.w3.org/2011/gld/wiki/223_Best_Practices_URI_Construction; Davidson, P., Designing URI sets for the UK public sector (2009) UK Chief Technology Officer Council, , no. October; Strategy, D.U.R.I., Sector, N.L.P., (2013) Draft URI Strategy for the NL Public Sector, , http://www.w3.org/2013/04/odw/odwl3_submission_14.pdf; Vlissides, J., Helm, R., Johnson, R., Gamma, E., Design patterns: Elements of reusable object-oriented software (1995) Reading: Addi Son-Wesley; Béjar, R., Latre, M., An RM-ODP enterprise view for spatial data infrastructures (2012) Computer Standards & ⋯, 34 (2), pp. 263-272. , Feb; Tóth, K., Portele, C., Liiert, A., Lutz, M., De Lima, M.N., (2012) A Conceptual Model for Developing Interoperability Specifications in Spatial Data Infrastructures; Groot, R., Spatial data infrastructure (SDI) for sustainable land management (1997) ITC Journal; Becker, C., Bizer, C., Dbpedia mobile: A location-enabled linked data browser (2008) Linked Data on the Web (LDOW2008), pp. 6-7; Abbas, S., Ojo, A., Towards a linked geospatial data infrastructure (2013) EGOVIS & EDEM '13, p. 15; Archer, P., (2013) Study on Persistent URIs with Identification of Best Practices and Recommendations on the Topic for the Member States and the European Commission; Challenge-Persistent Resolvable Identifiers, , http://standards.data.gov.uk/challenge/persistent-resolvable-identifiers, UK Cabinet Office; Sauermann, L., Cyganiak, R., Völkel, M., (2011) Cool URIs for the Semantic Web, pp. 1-15; Svatek, V., Design patterns for semantic web ontologies: Motivation and discussion (2004) Proceedings of the 7th Conference on Business ⋯; Borchers, J., A pattern approach to interaction design (2000) Proceedings of the 3rd Conference on Designing ⋯, pp. 369-378; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction; Alexander, C., (1979) The Timeless Way of Building, , New York: Oxford University Press; Mills, S.S.T.M., Don and bonn, England amsterdam and San Juan (1992) Macintosh Human Interface Guidelines; Griffiths, R., Pemberton, L., Pattern languages for interaction design: Building momentum (2000) CHI'OO Extended Abstracts ⋯, p. 2000. , April; Granlund, A., Lafrenière, D., Carr, D., A pattern-supported approach to the user interface design process (2001) Proceedings of HCl International, pp. 1-5; Aming, S.E.N., Arge, I.N.L., Etworks, M.U.O.N., Service naming in large-scale and multi-domain networks (2005) IEEE Communications Surveys, 7 (3), pp. 38-54; Dodds, L., Davis, I., (2011) ""Linked Data Patterns"" ⋯, and Consuming Linked Data; Booth, D., Four uses of a URL: Name, concept, web location and document instance (2003) Retrieved January, 28, p. 2003; Masinter, L., Berners-Lee, T., Fielding, R.T., Uniform resource identifier (URI): Generic syntax (2005) RFC 2396, , August",,,"'University of Hawai'i at Manoa, Shidler College of Business'",IEEE Computer Society,"47th Hawaii International Conference on System Sciences, HICSS 2014",6 January 2014 through 9 January 2014,"Waikoloa, HI",105660,15301605,9781479925049,,,English,Proc. Annu. Hawaii Int. Conf. Syst. Sci.,Conference Paper,Scopus,2-s2.0-84902299114,,
FALSE,4,1,"Van Turnhout, K., Bennis, A., Craenmehr, S., Holwerda, R., Jacobs, M., Niels, R., Zaad, L., Hoppenbrouwers, S., Lenior, D., Bakker, R.",Design patterns for mixed-method research in HCI,2014,"Proceedings of the NordiCHI 2014: The 8th Nordic Conference on Human-Computer Interaction: Fun, Fast, Foundational",,,,361,370,,,10.1145/2639189.2639220,http://www.scopus.com/inward/record.url?eid=2-s2.0-84911440342&partnerID=40&md5=6f188d62c723bc149353b2deb259614d,"HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands","Van Turnhout, K., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Bennis, A., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Craenmehr, S., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Holwerda, R., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Jacobs, M., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Niels, R., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Zaad, L., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Hoppenbrouwers, S., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Lenior, D., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands; Bakker, R., HAN University of Applied Sciences, Academy of Information Technology and Communication, Netherlands","In this paper we discuss mixed-method research in HCI. We report on an empirical literature study of the NordiCHI 2012 proceedings which aimed to uncover and describe common mixed-method approaches, and to identify good practices for mixed-methods research in HCI. We present our results as mixed-method research design patterns, which can be used to design, discuss and evaluate mixedmethod research. Three dominant patterns are identified and fully described and three additional pattern candidates are proposed. With our pattern descriptions we aim to lay a foundation for a more thoughtful application of, and a stronger discourse about, mixed-method approaches in HCI. Copyright is held by the owner/author(s).",Methodology; Mixed-method research; Triangulation,Design; Triangulation; Design Patterns; Empirical literature; Good practices; Methodology; Mixed method; Mixed-methods research; Pattern description; Research designs; Human computer interaction,,,,,,"Brown, J.M., Lindgaard, G., Biddle, R., Joint Implicit Alignment Work of Interaction Designers and Software Developers, pp. 693-702; Dalsgaard, P., Halskov, K., Tangible 3D Tabletops: Combining Tangible Tabletop Interaction and 3D Projection, pp. 109-118; Giusti, L., Xerxes, K., Schladow, A., Wallen, N., Zane, F., Casalegno, F., Workspace Configurations: Setting the Stage for Remote Collaboration on Physical Tasks, pp. 351-360; Grubert, J., Grasset, R., Reitmayr, G., Exploring the Design of Hybrid Interfaces for Augmented Posters in Public Spaces, pp. 238-246; Gonzalez, B., Carroll, E., Latulipe, C., Danceinspired Technology, Technology-inspired Dance, pp. 398-407; Hansen, J.P., Glenstrup, A.J., Wusheng, W., Weiping, L., Zhonghai, W., Collecting Location-based Voice Messages on A TalkingBadge, pp. 219-227; Laporte, L., Slegers, K., De Grooff, D., Using Correspondence Analysis to Monitor the Persona Segmentation Process, pp. 265-274; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Center for Environmental Structure; Bartneck, C., Rauterberg, M., HCI reality: An unreal tournament""™? (2007) International Journal of Human-Computer Studies, 65 (8), pp. 737-743; Bergman, M.M., (2008) Advances in Mixed Methods Research: Theories and Applications, , Sage; Bødker, S., When second wave HCI meets third wave challenges (2006) Proceedings of NordiCHI, pp. 1-8; Borchers, J.O., A pattern approach to interaction design (2001) AI & Society, 15 (4), pp. 359-376; Blomberg, J., Karasti, H., Positioning ethnography within participatory design (2012) Routledge Handbook of Participatory Design, pp. 86-116; Bryman, A., Why do researchers integrate/combine/ mesh/blend/mix/merge/fuse quantitative and qualitative research (2008) Advances in Mixed Methods Research, pp. 87-100; Carroll, J.M., Kellogg, W.A., Artifact as theorynexus: Hermeneutics meets theory-based design (1989) Proceedings of CHI, pp. 7-14; CHI 2013 Contribution Types, , http://chi2013.acm.org/authors/call-forparticipation/papers-notes/selecting-a-contribution-type; Cockton, G., Make evaluation poverty history Proceedings of CHI 2007, , Alt.Chi ACM; Cockton, G., Revisiting usability's three key principles Proceedings of CHI 2008, pp. 2473-2484. , ACM; Creswell, J.W., Clark, V.L.P., (2007) Designing and Conducting Mixed Methods Research, , Wiley Online Library; Dorst, C.H., (1997) Describing Design-A Comparison of Paradigms, , PhD Thesis Delft University of Technology; Fallman, D., The interaction design research triangle of design practice, design studies, and design exploration (2008) Design Issues, 24 (3), pp. 4-18; Gaver, W., What should we expect from research through design? Proceedings of CHI 2012, pp. 937-946. , ACM; Greene, J.C., Caracelli, V.J., Graham, W.F., Toward a conceptual framework for mixed-method evaluation designs (1989) Educational Evaluation and Policy Analysis, 11 (3), pp. 255-274; Gregor, S., Hevner, A.R., Positioning and presenting design science research for maximum impact (2013) MIS Quarterly, 37 (2); Grudin, J., Three faces of human-computer interaction (2005) Annals of the History of Computing, 27 (4), pp. 46-62. , IEEE; Gwet, K., (2001) Handbook of Inter-rater Reliability, pp. 223-246. , Gaithersburg, MD: STATAXIS Publishing Company; Harrison, S., Tatar, D., Sengers, P., The three paradigms of HCI (2007) Proceedings of CHI, , ACM; Helm, R., Johnson, R., Vlissides, J., Gamma, E., (2002) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Hevner, A.R., March, S.T., Park, J., Ram, S., Design science in information systems research (2004) MIS Quarterly, 28 (1), pp. 75-105; Järvinen, P., Research questions guiding selection of an appropriate research method (2000) ECIS, pp. 124-131; Jarvis, N., Cameron, D., Boucher, A., Attention to detail: Annotations of a design process (2012) Proceedings of NordiCHI, pp. 11-20. , ACM; Koskinen, I., Zimmerman, J., Binder, T., Redstrom, J., Wensveen, S., (2011) Design Research Through Practice: From the Lab, Field, and Showroom, , Elsevier; Mackay, W.E., Fayard, A., HCI, natural science and design: A framework for triangulation across disciplines (1997) Proceedings of DIS, pp. 223-234. , ACM; McKenney, S., Reeves, T., (2011) Conducting Educational Design Research; Mingers, J., Combining is research methods: Towards a pluralist methodology (2001) Information Systems Research, 12 (3), pp. 240-259; Newman, W., A preliminary analysis of the products of HCI research, using pro forma abstracts Proceedings of CHI 1994, pp. 278-284. , ACM; Nunamaker, J.F., Jr., Chen, M., Systems development in information systems research (1990) Proceedings of System Sciences, pp. 631-640. , IEEE; Oates, B.J., (2005) Researching Information Systems and Computing, , Sage; Pan, Y., Stolterman, E., Pattern language and HCI: Expectations and experiences (1989) Proceedings of CHI 2013, , ACM; Petter, S.C., Gallivan, M.J., Toward a framework for classifying and guiding mixed method research in information systems Proceedings of System Sciences 2004, , IEEE; Rauterberg, M., HCI as an engineering discipline: To be or not to be!? (2006) African Journal of Information & Communication Technology, 2 (4), p. 22; Runkel, P.J., Macgrath, J.E., (1972) Research on Human Behavior, , Holt, Rinehart and Winston. New York; Shaw, M., What makes good research in software engineering? (2002) International Journal on Software Tools for Technology Transfer, 4 (1), pp. 1-7; Van Turnhout, K., Craenmehr, S., Holwerda, R., Menijn, M., Zwart, J.P., Bakker, R., Trade-offs in design research: Development oriented triangulation (2013) Proceedings of the BSC HCI Conference; Whittaker, S., Terveen, L., Nardi, B.A., Let's stop pushing the envelope and start addressing it: A reference task agenda for HCI (2000) Human-Computer Interaction, 15 (2-3), pp. 75-106; Wolf, T.V., Rode, J.A., Sussman, J., Kellogg, W.A., Dispelling design as the black art of CHI Proceedings of CHI 2006, pp. 521-530. , ACM; Zimmerman, J., Forlizzi, J., Evenson, S., Research through design as a method for interaction design research in HCI Proceedings of CHI 2007, pp. 493-502. , ACM",,,Aalto University;Adage;Cresense;SIGCHI Finland;Tobii,"Association for Computing Machinery, Inc","8th Nordic Conference on Human-Computer Interaction, NordiCHI 2014",26 October 2014 through 30 October 2014,,108725,,1595930361,9781450325424,,,English,"Proc. NordiCHI: Nordic Conf. Hum.-Comput. Interact.: Fun, Fast, Found.",Conference Paper,Scopus,2-s2.0-84911440342,
TRUE,4,4,"Teruel, M.A., Navarro, E., Lopez-Jaquero, V., Montero, F., Gonzalez, P.",A design pattern for representing Workspace Awareness,2014,"Proceedings of the 2014 IEEE 18th International Conference on Computer Supported Cooperative Work in Design, CSCWD 2014",,,6839905,678,683,,,10.1109/CSCWD.2014.6846926,http://www.scopus.com/inward/record.url?eid=2-s2.0-84904623631&partnerID=40&md5=c6b3a0f1b2e915da7666ffeb2006de05,"LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain","Teruel, M.A., LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain; Navarro, E., LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain; Lopez-Jaquero, V., LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain; Montero, F., LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain; Gonzalez, P., LoUISE Research Group, University of Castilla - la Mancha, Albacete, Spain","Similarly to what happens when designing a single-user system, designers and developers will probably have to address some design problems that have often appeared previously in some other developments. This kind of recurrent problem can be identified, documented and captured in a design pattern that provides a reusable solution to a common problem. The main aim of this work is to provide a design pattern that can be applied to the design of CSCW applications supporting Workspace Awareness (WA). The object-oriented pattern presented answers all WA questions by means of a class structure representing the typical entities and behaviors available in collaborative applications (e.g. users, artifacts, collaborative actions). Moreover, a proof of concept is presented, thus assessing the feasibility of this pattern for a concrete technology, namely C# and Visual Studio 2012. © 2014 IEEE.",design pattern; Visual Studio; Workspace Awareness,Computer supported cooperative work; Interactive computer systems; Collaborative application; Concrete technology; Design Patterns; Object-oriented patterns; Proof of concept; Single-user system; Visual studios; Workspace awareness; Design,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, p. 1171. , Oxford University Press; Schümmer, T., Lukosch, S., (2007) Patterns for Computer-Mediated Interaction, , 1st ed. John Wiley & Sons Ltd; Herrmann, T., Hoffmann, M., Jahnke, I., Kienle, A., Kunau, G., Loser, K.-U., Menold, N., Concepts for usable patterns of groupware applications (2003) International ACM SIGGROUP Conference on Supporting Group Work (GROUP'03), pp. 349-358; Gutwin, C., Greenberg, S., A descriptive framework of workspace awareness for real-time groupware (2002) Comput. Support. Coop. Work, 11 (3), pp. 411-446; Gross, T., Stary, C., Totter, A., User-centered awareness in computer-supported cooperative work-systems: Structured embedding of findings from social sciences (2005) Int. J. Hum. Comput. Interact, 18 (3), pp. 323-360. , Jul; Antunes, P., Sapateiro, C., Pino, J., Awareness checklist: Reviewing the quality of awareness support in collaborative applications (2010) Collaboration and Technology, pp. 202-217. , Springer Berlin Heidelberg; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1999) Design Patterns. Elements of Reusable Object-oriented Software, , 2nd ed. Addsion Wesley Longman; Isla, J.L., Gutiérrez, F.L., Gea, M., Supporting social organization modelling in cooperative work using patterns (2006) Computer Supported Cooperative Work in Design, 2, pp. 112-121; Noguera, M., González, M., Garrido, J.L., Hurtado, V., Rodríguez, M., System modeling for systematic development of groupware applications (2006) International Conference on Software Engineering Research and Practice (SERP'06), pp. 750-756; Vreede, G.J., De Briggs, R.O., Kolfschoten, G.L., ThinkLets: A pattern language for facilitated and practitioner guided collaboration processes (2006) Int. J. Comput. Appl. Technol, 25, pp. 140-154; Kolfschoten, G., De Vreede, G., Briggs, R., Computer aided pattern-based collaboration process design: A computer aided collaboration engineering tool (2007) Groupware: Design, Implementation, and Use, pp. 165-172. , Springer Berlin Heidelberg; Iacob, C., Using design patterns in collaborative interaction design processes (2012) ACM 2012 Conference on Computer Supported Cooperative Work Companion (CSCW'12), pp. 107-110; Iacob, C., (2012) Identifying, Relating, and Evaluating Design Patterns for the Design of Software for Synchronous Collaboration, , University of Milan; Teruel, M.A., Navarro, E., López-Jaquero, V., Montero, F., González, P., CSRML: A goal-oriented approach to model requirements for collaborative systems (2011) 30th International Conference on Conceptual Modeling (ER'11), pp. 33-46; Brown, W., Malveau, R., Mowbray, T., (1998) AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, p. 336. , 1st ed. Wiley; Albahari, J., Albahari, B., (2012) C# 5.0 in A Nutshell, p. 1064. , 5th ed. O'Reilly Media; Teruel, M.A., Navarro, E., Lopez-Jaquero, V., Montero, F., González, P., (2013) Workspace Awareness Pattern Project for Visual Studio 2012, , Http://bit.ly/WAPattern; (2012) Age of Empires Online, , Http://www.ageofempiresonline.com, Microsoft Corporation; Gutwin, C., Greenberg, S., Roseman, M., Workspace awareness support with radar views (1996) Conference Companion on Human Factors in Computing Systems Common Ground (CHI'96), pp. 210-211; Lobel, L., Brust, A., (2012) Programming Microsoft SQL Server 2012, p. 816. , Microsoft Press; Marguerie, F., Eichert, S., Wooley, J., (2008) LINQ in Action, p. 600. , 1st ed. Manning Publications; Matthews, M., Cole, J., Gradecki, J.D., (2003) MySQL and Java Developer's Guide, p. 432. , 1st ed. Wiley; Beck, R.P., Desai, S.R., Radigan, R.P., Vroom, D.Q., Software reuse: A competitive advantage (1991) International Conference on Communications (ICC'91), pp. 1505-1509; Endsley, M.R., Situation awareness: Progress and directions (2004) A Cognitive Approach to Situation Awareness: Theory, Measurement and Application, pp. 317-341. , Aldershot, UK: Ashgate Publishing, Ltd",,,"IEEE Systems, Man, and Cybernetics Society",IEEE Computer Society,"2014 18th IEEE International Conference on Computer Supported Cooperative Work in Design, CSCWD 2014",21 May 2014 through 23 May 2014,Hsinchu,106455,,9781479937769,,,English,"Proc. IEEE Int. Conf. Comput. Supported Cooper. Work Des., CSCWD",Conference Paper,Scopus,2-s2.0-84904623631,,
TRUE,4,4,"Pavlič, L., Podgorelec, V., Heričko, M.",A question-based design pattern advisement approach,2014,Computer Science and Information Systems,11,2,,645,664,,,10.2298/CSIS130824025P,http://www.scopus.com/inward/record.url?eid=2-s2.0-84904504286&partnerID=40&md5=3a5ed42827cffb8de145029d22bc0ce2,"University of Maribor, 2000 Maribor, Slovenia","Pavlič, L., University of Maribor, 2000 Maribor, Slovenia; Podgorelec, V., University of Maribor, 2000 Maribor, Slovenia; Heričko, M., University of Maribor, 2000 Maribor, Slovenia","Design patterns are a proven way to build flexible software architectures. But the selection of an appropriate design pattern is a difficult task in practice, particularly for less experienced developers. In this paper, a question-based design pattern advisement approach will be proposed. This approach primarily assists developers in identifying and selecting the most suitable design pattern for a given problem. We will also propose certain extensions to the existing Object-Oriented Design Ontology (ODOL). In addition to the advisement procedure, a new design pattern advisement ontology will be defined. We have also developed a tool that supports the proposed ontology and question-based advisement (OQBA) approach. The conducted controlled experiment and two surveys have shown that the proposed approach is beneficial to all software developers, especially to those who have less experience with design patterns.",Design patterns; Ontology; Pattern selection; Selection algorithm; Semantic web,,,,,,,"Rising, L., Understanding the Power of Abstraction in Patterns (2007) IEEE Software, 24 (4), pp. 46-51; Schmidt, D.C., Using Design Patterns to Develop Reusable Object-Oriented Communication Software (1995) Communications of the ACM, 38 (10), pp. 65-74; Microsoft Patterns & Practices Group, , http://msdn.microsoft.com/practices; Manolescu, D., Kozaczynski, W., Miller, A., Hogg, J., The Growing Divide in the Patterns World (2007) IEEE Software, 24 (4), pp. 61-67; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1998) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Rising, L., (2000) The Pattern Almanac 2000, , Addison Wesley; Budinsky, F.J., Finnie, M.A., Vlissides, J.M., Yu, P.S., Automatic Code Generation from Design Patterns (1996) IBM Systems Journal, 36 (2), pp. 151-171; Dietrich, J., Elgar, C., The Web of Patterns Project, , http://www-ist.massey.ac.nz/wop; Eden, A.H., Yehudai, A., Gil, J., (1997) Precise Specification and Automatic Application of Design Patterns, pp. 143-152. , 12th IEEE International Conference on Automated Software Engineering, IEEE Press, Proceedings; Gomes, P., Pereira, F.C., Paiva, P., Seco, N., Carreiro, P., Ferreira, J., Bento, C., (2003) Selection and Reuse of Software Design Patterns Using CBR and Word Net, pp. 289-296. , 15th International Conference on Software Engineering and Knowledge Engineering, SEKE, Proceedings, (SEKE'03); Birukuo, A., Blanzieri, E., Giorgini, P., (2006) Choosing the Right Design Pattern: The Implicit Culture Approach, Arturo Hinojosa, a Cognitive Model of Design Pattern Selection, , Technical Report DIT-06-007, Informatica e Telecomunicazioni, University of Trento; ODOL-Object-Oriented Design Ontology, , http://svn.sourceforge.net/viewvc/webofpatterns/wop-patterndefinitions/20060324/wop.owl; Rosengard, J.M., Ursu, M.F., Ontological Representations of Software Patterns (2004) Lecture Notes In Computer Science (Proceedings of the of KES'04), 3215, pp. 31-37; Fontoura, M., Lucena, C., Extending UML to Improve the Representation of Design Patterns (2001) Journal of Object-Oriented Programming, 13 (11), pp. 12-19; Sunyé, G., Guennec, A.L., Jézéquel, J.-M., Design Patterns Application in UML (2000) Lecture Notes In Computer Science (ECOOP'2000 Proceedings), 1850, pp. 44-62; France, R.B., Kim, D.K., Ghosh, S., Song, E., A UML-Based Pattern Specification Technique (2004) IEEE Transactions On Software Engineering, 30 (3), pp. 193-206; Berners-Lee, T., Hendler, J., Lassila, O., The Semantic Web (2001) Scientific American, 284 (5), pp. 28-37; W3C Semantic Web Activity, , http://www.w3.org/2001/sw/; Safiz, M., Adamczyk, P., Johnson, R.E., Organizing Security Patterns IEEE Software, 24 (4), pp. 52-60; Fowler, M., (2003) Patterns of Enterprise Application Architecture, , Addison-Wesley; Alexander, C., (1977) A Pattern Language, , Oxford University Press, New York; Kung, D.C., Bhambhani, H., Shah, R., Pancholi, G., An expert system for suggesting design patterns: A methodology and a prototype (2003) Software Engineering With Computational Intelligence, , ed. T. M. Khoshgoftaar. Kluwer Int. Lazovik, A., M. Aiello, and M. Papazoglou; Weiss, M., Birukou, A., Giorgini, P., EuroPLoP 2007 Focus Group On Pattern Repositories, , http://www.patternforge.net/wiki/index.php?title=EuroPLoP2007, Focus Group",,,,ComSIS Consortium,,,,,18200214,,,,English,Comp. Sci. Info. Sys.,Article,Scopus,2-s2.0-84904504286,,
FALSE,3,1,"Sauppé, A., Mutlu, B.",Design patterns for exploring and prototyping human-robot interactions,2014,Conference on Human Factors in Computing Systems - Proceedings,,,,1439,1448,,1,10.1145/2556288.2557057,http://www.scopus.com/inward/record.url?eid=2-s2.0-84900398900&partnerID=40&md5=3f457e198b95e7887a38c6f7b1a72e0a,"Department of Computer Sciences, University of Wisconsin-Madison, 1210 West Dayton Street, Madison, WI 53706, United States","Sauppé, A., Department of Computer Sciences, University of Wisconsin-Madison, 1210 West Dayton Street, Madison, WI 53706, United States; Mutlu, B., Department of Computer Sciences, University of Wisconsin-Madison, 1210 West Dayton Street, Madison, WI 53706, United States","Robotic products are envisioned to offer rich interactions in a range of environments. While their specific roles will vary across applications, these products will draw on fundamental building blocks of interaction, such as greeting people, narrating information, providing instructions, and asking and answering questions. In this paper, we explore how such building blocks might serve as interaction design patterns that enable design exploration and prototyping for human-robot interaction. To construct a pattern library, we observed human interactions across different scenarios and identified seven patterns, such as question-answer pairs. We then designed and implemented Interaction Blocks, a visual authoring environment that enabled prototyping of robot interactions using these patterns. Design sessions with designers and developers demonstrated the promise of using a pattern language for designing robot interactions, confirmed the usability of our authoring environment, and provided insights into future research on tools for human-robot interaction design.",Authoring environment; Design exploration; Design patterns; Design sessions; Human-robot interaction; Interaction design; Prototyping,Human engineering; Human robot interaction; Machine design; Man machine systems; Software prototyping; Authoring environments; Design Exploration; Design Patterns; Fundamental building blocks; Interaction design; Interaction design patterns; Question-answer pairs; Robot interactions; Human computer interaction,,,,,,"Andrist, S., Mutlu, B., Gleicher, M., Conversational gaze aversion for virtual agents (2013) Proc. IVA, pp. 249-262; Bangor, A., Kortum, P.T., Miller, J.T., An empirical evaluation of the system usability scale (2008) Intl. Journal of Human-Computer Interaction, 24 (6), pp. 574-594; Berelson, B., Content Analysis in Communication Research; Brandstatter, V., Lengfelder, A., Gollwitzer, P., Implementation intentions and efficient action initiation (2001) Journal of Personality and Social Psychology, 81 (5), pp. 946-960; Clark, H., (1996) Using Language, , Cambridge U; Clark, H.H., (1992) Arenas of Language Use, , U Chicago; Datta, C., Jayawardena, C., Kuo, I.H., Macdonald, B.A., Robostudio: A visual programming environment for rapid authoring and customization of complex services on a personal service robot (2012) Proc. IROS, pp. 2352-2357; Fong, T., Thorpe, C., Baur, C., Collaboration, Dialogue, Human-robot Interaction, pp. 255-266; Fussell, S.R., Kiesler, S., Setlock, L.D., Yew, V., How people anthropomorphize robots (2008) Proc. HRI, pp. 145-152; Glas, D.F., Satake, S., Kanda, T., Hagita, N., An interaction design framework for social robots (2012) Proc. RSS; Goffman, E., The interaction order (1983) American Sociological Review, 48 (1), pp. 1-17; Hsiao, K.-Y., Mavridis, N., Roy, D., Coupling perception and simulation: Steps towards conversational robotics (2003) Proc. IROS, pp. 928-933; Huang, C.-M., Mutlu, B., Robot behavior toolkit: Generating effective social behaviors for robots (2012) Proc. HRI, pp. 25-32; Humphrey, C.M., Henk, C., Sewell, G., Williams, B.W., Adams, J.A., Assessing the scalability of a multiple robot interface (2007) Proc. HRI, pp. 239-246; Kahn, P.H., Freier, N.G., Kanda, T., Ishiguro, H., Ruckert, J.H., Severson, R.L., Kane, S.K., Design patterns for sociality in human-robot interaction (2008) Proc. HRI, pp. 97-104; Kooijmans, T., Kanda, T., Bartneck, C., Ishiguro, H., Hagita, N., Interaction debugging: An integral approach to analyze human-robot interaction (2006) Proc. HRI, pp. 64-71; Langellier, K.M., Personal narratives: Perspectives on theory and research (1989) Text and Performance Quarterly, 9 (4), pp. 243-276; Lohse, M., Siepmann, F., Wachsmuth, S., A modeling framework for user-driven iterative design of autonomous systems (2013) International Journal of Social Robotics, pp. 1-19; Matarazzo, J., Wiens, A., Interview: Research on its anatomy and structure (2007) Aldine de Gruyter; Mutlu, B., Forlizzi, J., Hodgins, J., A storytelling robot: Modeling and evaluation of human-like gaze behavior (2006) Proc. HUMANOIDS, pp. 518-523; O'leary, M.J., Gallois, C., The last ten turns: Behavior and sequencing in friends' and strangers' conversational findings (1985) Journal of Nonverbal Behavior, 9, pp. 8-27; Peltason, J., Wrede, B., Modeling human-robot interaction based on generic interaction patterns (2010) AAAI Symposium on Dialog with Robots; Perlin, K., Improving noise (2002) ACM Transactions on Graphics (TOG, 21 (3), pp. 681-682; Quigley, M., Conley, K., Gerkey, B., Faust, J., Foote, T., Leibs, J., Wheeler, R., Ng, A., Ros: An open-source robot operating system (2009) ICRA Workshop on Open Source Software; Sacks, H., Schegloff, E.A., Jefferson, G., A simplest systematics for the organization of turn-taking for conversation (1974) Language, 50 (4), pp. 696-735; Schegloff, E., (1967) The First Five Seconds: The Order of Conversational Opening, , PhD thesis, University of California; Schegloff, E.A., Sequencing in conversational openings (1968) American Anthropologist, 70 (6), pp. 1075-1095; Skehan, P., A framework for the implementation of task-based instruction (1996) Applied Linguistics, 17 (1), pp. 38-62; Tannen, D., (1989) Talking Voices: Repetition, Dialogue, and Imagery in Conversational Discourse, 6. , Cambridge U",,,SIGCHI,Association for Computing Machinery,"32nd Annual ACM Conference on Human Factors in Computing Systems, CHI 2014",26 April 2014 through 1 May 2014,"Toronto, ON",105086,,9781450324731,,,English,Conf Hum Fact Comput Syst Proc,Conference Paper,Scopus,2-s2.0-84900398900,,
FALSE,4,1,"Emmerich, K., Liszio, S., Masuch, M.",Defining second screen gaming: Exploration of new design patterns,2014,ACM International Conference Proceeding Series,2014-November,,2663855,,,,,10.1145/2663806.2663855,http://www.scopus.com/inward/record.url?eid=2-s2.0-84938314873&partnerID=40&md5=05f79dd28d63577e4dd4ff55d9f452c9,"Entertainment Computing Group, University of Duisburg-Essen, Forsthausweg 2, Duisburg, Germany","Emmerich, K., Entertainment Computing Group, University of Duisburg-Essen, Forsthausweg 2, Duisburg, Germany; Liszio, S., Entertainment Computing Group, University of Duisburg-Essen, Forsthausweg 2, Duisburg, Germany; Masuch, M., Entertainment Computing Group, University of Duisburg-Essen, Forsthausweg 2, Duisburg, Germany","New technologies have made the mobile phone to a multifunctional ally who accompanies many people in their everyday life. Smartphones and tablet PCs have also established new game settings. In this paper, we investigate a new trend utilizing smart devices as second screens that are added to gaming situations. We give a definition of Second Screen Gaming, and illuminate a special subcategory we call Smart Gaming. Further, we argue that there is a need for comprehensive design guidelines to integrate the second screen as a core part of the game design. Additionally, we have identified several challenges while designing such games and point out the opportunities for game designers in following this new trend. At the end of this work, three game prototypes are introduced as case studies, which demonstrate different aspects of Second Screen Gaming and thereby illustrate how innovative, engaging and highly social games can be created. Copyright © 2014 ACM.",Design guidelines; Design patterns; Digital games; Game design; Second screen; Smart devices; Smart gaming,Cellular telephone systems; Digital devices; Personal computers; Design Patterns; Digital games; Game design; Second screens; Smart devices; Smart gaming; Design,,,,,,"Björk, S., Holopainen, J., (2005) Patterns in Game Design, , Charles River Media, Boston, MA, USA; Charles, D., McNeill, M., McAlister, M., Black, M., Moore, A., Stringer, K., Player-centred game design: Player modelling and adaptive digital games (2005) Proc. Digital Games Research Conference, pp. 285-298; Fullerton, T., (2008) Game Design Workshop: A Playcentric Approach to Creating Innovative Games, , Morgan Kaufmann, Amsterdam; Isbister, K., Enabling social play: A framework for design and evaluation (2010) Evaluating User Experience in Games: Concepts and Methods, pp. 11-22. , Bernhaupt, R. Springer, London; De Kort, Y., Ijsselsteijn, W.A., People, J.G.B., Places, and Play: A research framework for digital game experience in a socio-spatial context (2008) Computers in Entertainment-Theoretical and Practical Computer Applications in Entertainment, 6; Langley, P., Machine learning for adaptive user interfaces (1997) Proc. of the 21st German Annual Conference on Artificial Intelligence, pp. 53-62. , Springer; Poslad, S., (2009) Ubiquitous Computing: Smart Devices, Environments and Interactions, , John Wiley & Sons; Seif El-Nasr, M., Aghabeigi, B., Milam, D., Erfani, M., Lameman, B., Maygoli, H., Mah, S., Understanding and evaluating cooperative games (2005) Proc. of the SIGCHI Conference on Human Factors in Computing Systems, pp. 253-262; Sweller, J., Van Merriënboer, J.J.G., Paas, F.G.W.C., Cognitive architecture and instructional design (1998) Educational Psychology Review, 10, pp. 251-296; Worldwide Smartphone Shipments Top One Billion Units for the First Time, , http://www.idc.com/getdoc.jsp?containerId=prUS24645514, According to IDC. (Press Release, 27 Jan 2014",,,,Association for Computing Machinery,"11th Advances in Computer Entertainment Technology Conference, ACE 2014",11 November 2014 through 14 November 2014,,113147,,9781450329453,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84938314873,,
TRUE,4,4,"Mijač, M., Kermek, D., Stapic, Z.",Complex propagation of events: Design patterns comparison,2014,"Information Systems Development: Transforming Organisations and Society Through Information Systems - Proceedings of the 23rd International Conference on Information Systems Development, ISD 2014",,,,306,316,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84923673952&partnerID=40&md5=60dd9972682ca8ccf7ded3bc915dc42a,"University of Zagreb, Faculty of Organization and Informatics, Varaždin, Croatia","Mijač, M., University of Zagreb, Faculty of Organization and Informatics, Varaždin, Croatia; Kermek, D., University of Zagreb, Faculty of Organization and Informatics, Varaždin, Croatia; Stapic, Z., University of Zagreb, Faculty of Organization and Informatics, Varaždin, Croatia","Today's applications require high level of interactivity and the applications are expected to update their state, and provide users with immediate correct results. In high complex applications this usually means updating states of a number of objects that are part of complex dependency network. To decouple these dependencies such systems usually employ implicit invocation mechanisms such as well-known Observer pattern. However, building efficient propagation system that will keep object states up-to-date is a challenging task, since a number of issues arise. In this paper we identified 18 qualitative criteria and compared 5 design patterns that can be used to build propagation system on top of applications' business objects. The exhaustive comparison results are given along with discussion and remarks that should be taken in consideration when dealing with this challenging task.",Change manager; Design patterns; Events; Implicit invocation; Mediator; Observer; Propagation; Publish-subscribe; Reactive systems,Design; Wave propagation; Design Patterns; Events; Implicit invocation; Mediator; Observer; Publish-subscribe; Reactive system; Complex networks,,,,,,"Avgeriou, P., Zdun, U., Architectural patterns revisited - A pattern language (2005) Proceedings of 10th European Conference on Pattern Languages of Programs (EuroPlop 2005)., , Irsee, Germany; Bainomugisha, E., Lombide Carreton, A., Van Cutsem, T., Mostinckx, S., De Meuter, W., A survey on reactive programming (2013) ACM Comput. Surv, 45 (4); Boeker, M., Propagator in C# - An Alternative to the Observer Design Pattern, , http://www.codeproject.com/Articles/38108/Propagator-in-C-An-Alternative-to-the-Observer-Des, Accessed: July 10, 2013, 2009; Bratko, I., (2000) Prolog Programming for Artificial Intelligence, , Addison Wesley; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: System of Patterns, , John Wiley & Sons, Chichester; Eales, A., The observer pattern revisited (2005) The Educating, Innovating & Transforming: Educators in IT; Eugster, P.T., Felber, P.A., Guerraoui, R., Kermarrec, A.-M., The many faces of publish/subscribe (2003) ACM Comput. Surv., 35 (2), pp. 114-131; Feiler, P., Tichy, W., Propagator: A family of patterns (1997) Technology of Object-oriented Languages and Systems. IEEE; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Gasiunas, V., Satabin, L., Mezini, M., Nunez, A., Noye, J., (2010) Declarative Events for Object-oriented Programming, , Technische Hochschule, Darmstadt; Gupta, S., Hartkopf, J., Ramaswamy, S., Event notifier, a pattern for event notification (1998) Java Rep., 3 (7); Jicheng, L., Hui, Y., Yabo, W., A novel implementation of observer pattern by aspect based on Java annotation (2010) Computer Science and Information Technology (ICCSIT), 2010 3rd IEEE International Conference on, pp. 284-288. , IEEE, Chengdu; Maier, I., Rompf, T., Odersky, M., Deprecating the observer pattern (2010) Ecole Polytechnique Fédérale de Lausanne, , Lausanne, Switzerland; Rege, K., Design patterns for component-oriented software development (1999) 25th Proceedings of EUROMICRO Conference, pp. 220-228. , IEEE Computer Society, Milan; Riehle, D., Describing and composing patterns using role diagrams (1996) The WOON; Riehle, D., The event notification pattern - Integrating implicit invocation with object-orientation (1996) The TAPOS 2.1; Salvaneschi, G., Mezini, M., Reactive behavior in object-oriented applications: An analysis and a research roadmap (2013) The AOSD, , Fukuoka, Japan; Szallies, C., (1997) On Using the Observer Design Pattern",,Linger H.Vrcek N.Lang M.Barry C.Schneider C.Vukovac D.P.Strahonja V.,"DELL;Ministry of Science, Education and Sports;University of Zagreb, Faculty of Organization and Informatics","University of Zagreb, Faculty of Organization and Informatics Varazdin","23rd International Conference on Information Systems Development, ISD 2014",2 September 2014 through 4 September 2014,,109614,,9789536071432,,,English,"Inf. Syst. Dev.: Transform. Organ. Soc. Through Inf. Syst. - Proc. Int. Conf. Inf. Syst. Dev., ISD",Conference Paper,Scopus,2-s2.0-84923673952,,
FALSE,4,1,"Scharffe, F., Zamazal, O., Fensel, D.",Ontology alignment design patterns,2014,Knowledge and Information Systems,40,1,,1,28,,7,10.1007/s10115-013-0633-y,http://www.scopus.com/inward/record.url?eid=2-s2.0-84902141367&partnerID=40&md5=e07b3579615571c010b7c580bc77ef3f,"Institut National de Recherche, en Informatique et Automatique, Montpellier, France; University of Economics, Prague, Czech Republic; University of Innsbruck, Innsbruck, Austria","Scharffe, F., Institut National de Recherche, en Informatique et Automatique, Montpellier, France; Zamazal, O., University of Economics, Prague, Czech Republic; Fensel, D., University of Innsbruck, Innsbruck, Austria","Interoperability between heterogeneous ontological descriptions can be performed through ontology mediation techniques. At the heart of ontology mediation lies the alignment: a specification of correspondences between ontology entities. Ontology matching can bring some automation but are limited to finding simple correspondences. Design patterns have proven themselves useful to capture experience in design problems. In this article, we introduce ontology alignment patterns as reusable templates of recurring correspondences. Based on a detailed analysis of frequent ontology mismatches, we develop a library of common patterns. Ontology alignment patterns can be used to refine correspondences, either by the alignment designer or via pattern detection algorithms. We distinguish three levels of abstraction for ontology alignment representation, going from executable transformation rules, to concrete correspondences between two ontologies, to ontology alignment patterns at the third level. We express patterns using an ontology alignment representation language, making them ready to use in practical mediation tasks. We extract mismatches from vocabularies associated with data sets published as linked open data, and we evaluate the ability of correspondence patterns to provide proper alignments for these mismatches. Finally, we describe an application of ontology alignment patterns for an ontology transformation service. © 2013 Springer-Verlag London.",Data integration; Design patterns; Ontology alignment; Ontology alignment patterns; Ontology mapping; Ontology mediation,,,,,,"P202/10/1825, CSF, CS Fund","Aïtelhadj, A., Boughanem, M., Mezghiche, M., Souam, F., Using structural similarity for clustering XML documents (2011) Knowl Inf Syst, 32 (1), pp. 109-139; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language, , New York: Oxford University Press; Batini, C., Lenzerini, M., Navathe, S.B., A comparative analysis of methodologies for database schema integration (1986) ACM Comput Surv, 18 (4), pp. 323-364; Besana, P., Robertson, D., Rovatsos, M., Exploiting interaction contexts in P2P ontology mapping (2005) International Workshop On Peer-to-peer Knowledge Management (P2PKM), , San Diego, CA, USA; Bizer, C., (2003) D2R MAP-a Database to RDF Mapping Language. In: Proceedings of the 12th International World Wide Web Conference (Posters), p. 2003. , Budapest, May; Blomqvist, E., Sandkuhl, K., Patterns in ontology engineering: Classification of ontology patterns (2005) Proceedings of International Conference On Enterprise Information Systems, 3, pp. 413-416; Chiticariu, L., Hernández, M.A., Kolaitis, P.G., Popa, L., Semi-automatic schema integration in Clio (2007) Proceedings of the 33rd International Conference On Very Large Data Bases (VLDB '07), pp. 1326-1329. , Vienna, Austria; Clancey, W.J., Heuristic classification (1985) Artif Intell, 27 (3), pp. 289-350; Clark, P., Thompson, J., Porter, B., Knowledge patterns (2000) Proceedings of the 7th International Conference On Principles of Knowledge Representation and Reasoning (KR2000), pp. 591-600; Coplien, J.O., (1996) Software Patterns, , New York: SIGS Books; de Bruijn, J., Ehrig, M., Feier, C., Martin-Recuerda, F., Scharffe, F., Weiten, M., Ontology mediation, merging, and aligning (2006) Semantic Web Technologies, , In: Davies J, Studer R, Warren P, Wiley, New York; Doan, A., Halevy, A.Y., Semantic-integration research in the database community (2005) AI Mag, 26 (1), pp. 83-94; Dorneles, C.F., Gonçalves, R., Approximate data instance matching: a survey (2011) Knowl Inf Syst, 27 (1), pp. 1-21; Euzenat, J., Towards a principled approach to semantic interoperability (2001) Proceedings of Workshop On Ontologies and Information Sharing, , In: Gomez-Perez A, Gruninger M, Stuckenschmidt H, Uschold M (eds), IJCAI'01; Euzenat, J., An API for ontology alignment (2004) Proceedings of the 3rd International Semantic Web Conference, pp. 698-712. , In: van Harmelen F, McIlraith S, Plexousakis D, Hiroshima, Japan; Euzenat, J., Scharffe, F., Zimmermann, A., (2007) D2. 2. 10: Expressive Alignment Language and Implementation, , In: Project deliverable 2. 2. 10, Knowledge Web NoE (FP6-507482); Euzenat, J., Shvaiko, P., (2007) Ontology Matching, p. 341. , Heidelberg: Springer; Falconer, S.M., Storey, M.-A.D., A cognitive support framework for ontology mapping (2007) Proceedings of ISWC/ASWC, pp. 114-127; Fensel, D., Motta, E., Benjamins, V.R., Crubezy, M., Decker, S., Gaspari, M., Groenboom, R., Wielinga, B., The unified problem-solving method development language UPML (2002) Knowl Inf Syst, 5 (1), pp. 83-131; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Boston: Addison-Wesley Longman; Gangemi, A., Ontology design patterns for semantic web content (2005) Proceedings of the 4th International Semantic Web Conference, pp. 262-276; Ghazvinian, A., Noy, N.F., Jonquet, C., Shah, N.H., Musen, N.A., What four million mappings can tell you about two hundred ontologies (2009) Proceedings of the ISWC 2009, , Springer, Washington; Groza, T., Grimnes, G.A.A., Handschuh, S., Decker, S., From raw publications to Linked Data (2011) Knowl Inf Syst, 34, pp. 1-21; Gruber, T.R., Toward principles for the design of ontologies used for knowledge sharing (1995) Int J Hum Comput Stud, 43 (4-5), pp. 907-928; Hu, W., Qu, Y., Falcon-AO: a practical ontology matching system (2008) J Web Semant, 6 (3), pp. 237-239; Kalfoglou, Y., Schorlemmer, M., Ontology mapping: the state of the art (2003) Knowl Eng Rev, 18 (1), pp. 1-31; Klein, M., Combining and relating ontologies: An analysis of problems and solutions (2001) Proceedings of Workshop On Ontologies and Information Sharing; McGuinness, D.L., Fikes, R., Rice, J., Wilder, S., The chimaera ontology environment (2000) Proceedings of the 17th National Conference On Artificial Intelligence (AAAI 2000); Melnik, S., Rahm, E., Bernstein, P.A., Rondo: A programming platform for generic model management (2003) Proceedings of SIGMOD 03; Miller, R.J., Retrospective on Clio: Schema mapping and data exchange in practice (2007) Proceedings of the (2007) International Workshop On Description Logics (DL2007), , Brixen-Bressanone, Italy; Mocan, A., Cimpian, E., Kerrigan, M., Formal model for ontology mapping creation (2006) Proceedings of the International Semantic Web Conference (ISWC 2006), pp. 459-472; Newell, A., The knowledge level (1982) Artif Intell, 18 (1), pp. 87-127; Noy, N.F., Griffith, N., Musen, M.A., Collecting community-based mappings in an ontology repository (2008) Proceedings of International Semantic Web Conference, pp. 371-386; Noy, N.F., Musen, M.A., PROMPT: Algorithm and tool for automated ontology merging and alignment (2000) Proceedings of the Seventeenth National Conference On Artificial Intelligence and Twelfth Conference On Innovative Applications Of, Artificial Intelligence, pp. 450-455; Oztemel, E., Arslankaya, S., Enterprise knowledge management model: a knowledge tower (2012) Knowl Inf Syst, 31 (1), pp. 171-192; Le Phuoc, D., Polleres, A., Morbidoni, C., Hauswirth, M., Tummarello, G., Rapid semantic web mashup development through semantic web pipes (2009) Proceedings of the 18th World Wide Web Conference (WWW2009), pp. 581-590. , Madrid, Spain; Popa, L., Velegrakis, Y., Miller, R.J., Hernández, M.A., Fagin, R., Translating web dat (2002) Proceedings of International Conference On Very Large Data Bases (VLDB), pp. 598-609; Presutti, V., Daga, E., Gangemi, A., Salvati, A., (2008) Posters & Demos Session of the 7th International Semantic Web Conference (ISWC 2008), , http://ontologydesignpatterns.org; Presutti, V., Gangemi, A., Content ontology design patterns as practical building blocks for web ontologies (2008) Proceedings of International Conference On Conceptual Modeling (ER), pp. 128-141; Rahm, E., Bernstein, P.A., A survey of approaches to automatic schema matching (2001) VLDB J, 10 (4), pp. 334-350; Rivero, C.R., Schultz, A., Bizer, C., Ruiz, D., Benchmarking the performance of linked data translation systems (2012) Proceedings of Linked Data On the Web (LDOW2012); Salam, A., Khayal, M.S.H., Mining top-k frequent patterns without minimum support threshold (2012) Knowl Inf Syst, 30 (1), pp. 57-86; Scharffe, F., (2009) Correspondence Patterns Representation, , Ph. D Thesis, University of Innsbruck; Shvaiko, P., Euzenat, J., A survey of schema-based matching approaches (2005) J Data Semant, IV, pp. 146-171; Shvaiko, P., Euzenat, J., Ten Challenges for Ontology Matching (2008) Proceedings of the 7th International Conference On Ontologies, DataBases, and Applications of Semantics (ODBASE 2008), pp. 1164-1182; Staab, S., Erdmann, M., Maedche, A., Engineering ontologies using semantic patterns (2001) Proceedings of the IJCAI-01 Workshop On E-business & the Intelligent Web, , Seattle, WA, USA, August 5, 2001; Šváb, O., Exploiting patterns in ontology mapping (2007) Proceedings of the 6th International Semantic Web Conference and 2nd Asian Semantic Web Conference (ISWC/ASWC2007), pp. 950-954. , Busan, South Korea, Springer; Šváb-Zamazal, S., Svátek, V., Scharffe, F., Pattern-based ontology transformation service (2009) Proceedings of the First International Conference On Knowledge Engineering and Ontology Development (KEOD'09), , Madeira, Portugal; Ullman, J.D., Information integration using logical views (1997) Proceedings of the 11th International Conference On Database Theory (ICDT 2007), pp. 19-40; Visser, P.R.S., Jones, D.M., Bench-Capon, T.J.M., Shave, M.J.R., An analysis of ontological mismatches: Heterogeneity versus interoperability (1997) AAAI, (1997) Spring Symposium On Ontological Engineering, pp. 164-172. , Stanford, USA; Wache, H., Semantische Mediation für heterogene Informationsquellen (2003) J Kuenstliche Intell, 17 (4), pp. 56-62; Wielinga, B.J., Schreiber, A.T., Breuker, J.A., KADS: a modelling approach to knowledge engineering (1992) J Knowl Acquis, 4 (1), pp. 5-53; Zhdanova, A.V., Shvaiko, P., Community-driven ontology matching (2006) Proceedings of the 3rd European semantic web conference (ESWC 2006), pp. 34-49","Scharffe, F.; Institut National de Recherche, en Informatique et Automatique, Montpellier, France; email: scharffe@lirmm.fr",,,Springer-Verlag London Ltd,,,,,2191377,,,,English,Knowl. Inf. Systems. Syst.,Article,Scopus,2-s2.0-84902141367,,
FALSE,4,1,"Kamilaris, A., Pitsillides, A.",The impact of remote sensing on the everyday lives of mobile users in urban areas,2014,"2014 7th International Conference on Mobile Computing and Ubiquitous Networking, ICMU 2014",,,6799087,153,158,,,10.1109/ICMU.2014.6799087,http://www.scopus.com/inward/record.url?eid=2-s2.0-84900000928&partnerID=40&md5=e5d9c7dc3ace2924ccf3ab45ffe44fad,"Networks Research Laboratory, Department of Computer Science, University of Cyprus, Nicosia, Cyprus","Kamilaris, A., Networks Research Laboratory, Department of Computer Science, University of Cyprus, Nicosia, Cyprus; Pitsillides, A., Networks Research Laboratory, Department of Computer Science, University of Cyprus, Nicosia, Cyprus","Increasing urbanism creates serious ambient problems that downgrade the quality of life of citizens. Environmental awareness may help people to take more informed decisions in their everyday lives, ensuring their health and safety. The Web of Things is becoming a reality, as embedded sensors are being deployed in urban areas for environmental monitoring. These sensors are accessible and discoverable through the Web, and their services can be harnessed by mobile users on the go. In this paper, we perform a small case study, by using mini focus groups, to identify the impact of remote sensing on the everyday lives of users. By means of UrbanRadar, an application that discovers and interacts with environmental services offered by Web-enabled urban sensors, we investigate and discuss the acceptance, influence, usefulness and potential of these services to mobile users. Finally, based on the feedback from participants, we identify eleven design patterns, important for future mobile applications involving remote sensing. © 2014 IEEE.",Case Study; Design Patterns; Mobile Computing; Remote Sensing; Urban Computing; Web of Things,Mobile computing; Regional planning; Ubiquitous computing; World Wide Web; Design Patterns; Environmental awareness; Environmental Monitoring; Environmental services; Health and safety; Mobile applications; Urban computing; Web of things; Remote sensing,,,,,,"http://www.un.org/millenniumgoals/pdf/mdg2007.pdf, United Nations. Millennium Development Goals Report, 2007Gershenfeld, N., Krikorian, R., Cohen, D., (2004) The Internet of Things. Scientific American, 291 (4), pp. 76-81; Dunkels, A., Voigt, T., Alonso, J., Making tcp/ip viable for wireless sensor networks (2004) Proc. of EWSN 2004, , Berlin, Germany; Schor, L., Sommer, P., Wattenhofer, R., Towards a zero-configuration wireless sensor network architecture for smart buildings (2009) Proc. BuildSys, , Berkeley, California, USA; Guinard, D., Trifa, V., Wilde, E., Architecting a mashable open world wide web of things (2010) Technical Report 663, Institute for Pervasive Computing, ETH Zurich; Kostakos, V., Nicolai, T., Yoneki, E., O'neill, E., Kenn, H., Crowcroft, J., Understanding and measuring the urban pervasive infrastructure (2009) Personal Ubiquitous Computing, 13 (5), pp. 355-364; Campbell, A.T., Eisenman, S.B., Lane, N.D., Miluzzo, E., Peterson, R.A., Lu, H., Zheng, X., Ahn, G.-S., The rise of people-centric sensing (2008) IEEE Internet Computing, 12 (4), pp. 12-21; Goldman, J., Shilton, K., Participatory sensing: A citizenpowered approach to illuminating the patterns that shape our world Woodrow Wilson International Center for Scholars; Maisonneuve, N., Stevens, M., Niessen, M.E., Hanappe, P., Steels, L., Citizen noise pollution monitoring (2009) Proc. of the 10th Annual International Conference on Digital Government Research, pp. 96-103; Willett, W., Aoki, P., Kumar, N., Subramanian, S., Woodruff, A., Common sense community: Scaffolding mobile sensing and analysis for novice users (2010) Pervasive Computing, pp. 301-318. , Springer Berlin Heidelberg; Kamilaris, A., Iannarilli, N., Trifa, V., Pitsillides, A., Bridging the mobile web and the web of things in urban environments (2011) First Workshop on the Urban Internet of Things, in Proc. of IoT 2010, , Tokyo, Japan; Ostermaier, B., Roemer, K., Mattern, F., Fahrmair, M., Kellerer, W., A real-time search engine for the web of things (2010) Proc. of IoT, , Tokyo, Japan; Wang, H., Tan, C.C., Li, Q., Snoogle: A search engine for the physical world (2008) Proc. of INFOCOM, pp. 1382-1390; Kamilaris, A., Pitsillides, A., Using dns for global discovery of environmental services (2012) Proc. of WEBIST, , Porto, Portugal; Guinard, D., Trifa, V., Towards the web of things: Web mashups for embedded devices (2009) MEM Workshop, in Proc. of WWW, , Madrid, Spain; Kitzinger, J., Qualitative research: Introducing focus groups (1995) British Medical Journal, 311, pp. 299-302; Robert, B.C., Influence: Science and practice (2001) Allyn and Bacon; Darby, S., (2001) Making It Obvious: Designing Feedback into Energy Consumption, pp. 685-696. , Springer Berlin Heidelberg",,,,IEEE Computer Society,"2014 7th International Conference on Mobile Computing and Ubiquitous Networking, ICMU 2014",6 January 2014 through 8 January 2014,Singapore,105035,,,,,English,"Int. Conf. Mob. Comput. Ubiquitous Networking, ICMU",Conference Paper,Scopus,2-s2.0-84900000928,,
FALSE,3,1,"Kudelka, M., Snasel, V., Horak, Z., Ella Hassanien, A., Abraham, A., Velásquez, J.D.",A novel approach for comparing web sites by using MicroGenres,2014,Engineering Applications of Artificial Intelligence,35,,,187,198,,2,10.1016/j.engappai.2014.06.011,http://www.scopus.com/inward/record.url?eid=2-s2.0-84906083827&partnerID=40&md5=21d1ffbd7d476f824810004ecf4239e1,"Cairo University, Egypt; VSB Technical University of Ostrava, Czech Republic; Department of Industrial Engineering, University of Chile, Av. República 701, Santiago, Chile","Kudelka, M., VSB Technical University of Ostrava, Czech Republic; Snasel, V., VSB Technical University of Ostrava, Czech Republic; Horak, Z., VSB Technical University of Ostrava, Czech Republic; Ella Hassanien, A., Cairo University, Egypt; Abraham, A., VSB Technical University of Ostrava, Czech Republic; Velásquez, J.D., Department of Industrial Engineering, University of Chile, Av. República 701, Santiago, Chile","In this paper, a novel approach is introduced to compare web sites by analysing their web page content. Each web page can be expressed as a set of entities called MicroGenres, which in turn are abstractions about design patterns and genres for representing the page content. This description is useful for web page and web site classification and for a deeper insight into the web site's social context. The web site comparison is useful for extracting patterns which can be used for improving Web search engine effectiveness, the identification of best practices in web site design and of course in the organization of web page content to personalize the web user experience on a web site. The effectiveness of the proposed approach was tested in a real world case, with e-shop web sites showing that a web site can be represented in a high level of abstraction by using MicroGenres, the contents of which can then be compared and given a measure corresponding to web site similarity. This measure is very useful for detecting web communities on the Web, i.e.; a group of web sites sharing similar contents, and the result is essential in performing a focused and effective information search as well as minimizing web page retrieval. © 2014 Elsevier Ltd.",Detection; Genre; Microgenre; Web design pattern,Curricula; Error detection; Information retrieval; Search engines; Design Patterns; Genre; High level of abstraction; Information search; Microgenre; Web designs; Web site classification; Web site design; Websites,,,,,,"Adamic, L., Adar, E., How to search a social network (2005) Soc. Netw., 27 (3), pp. 187-203; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language Towns, Buildings, Construction, , Oxford University Press USA; Barnum, C., Dragga, S., (2001) Usability Testing and Research, , Allyn & Bacon Inc. Needham Heights, MA, USA; Bauer, C., Scharl, A., Quantitative evaluation of Web site content and structure (2000) Internet Res. Electron. Netw. Appl. Policy, 10 (1), pp. 31-43; Belohlávek, R., Vychodil, V., What is a fuzzy concept lattice (2005) Proceedings of CLA, 5, pp. 34-45; Berry, M.W., Dumais, S.T., Letsche, T.A., Computational methods for intelligent information access (1995) Proceedings of the IEEE/ACM SC95 Conference on Supercomputing, 1995. IEEE, p. 20. , Washington, DC, USA; Boese, E., (2005) Stereotyping the Web: Genre Classification of Web Documents, , (Ph.D. thesis). Colorado State University, USA; Borchers, J.O., Interaction design patterns: Twelve theses (2000) Workshop, 2, pp. 3-9. , The Hague; Chaker, J., Habib, O., Genre categorization of web pages (2007) Proceedings of the Seventh IEEE International Conference on Data Mining Workshops, pp. 455-464. , IEEE Computer Society Washington, Washington, DC, USA; Chang, C., Kayed, M., Girgis, M., Shaalan, K., A survey of web information extraction systems (2006) IEEE Trans. Knowl. Data Eng., 18 (10), pp. 1411-1428; Choi, B., Yao, Z., Web page classificationaz (2005) Foundations and Advances in Data Mining, pp. 221-274. , Springer, Berlin, Germany; Dong, L., Watters, C., Duffy, J., Shepherd, M., An examination of genre attributes for web page classification (2008) Proceedings of the 41st Annual Hawaii International Conference on System Sciences, pp. 133-143. , IEEE Computer Society, Washington, DC, USA; Kennedy, A., Shepherd, M., Automatic identification of home pages on the web (2005) Proceedings of the 38th Annual Hawaii International Conference on System Sciences, pp. 1-9. , HICSS'05. IEEE; Kobayashi, M., Takeda, K., Information retrieval on the web (2000) ACM Comput. Surv., 32 (2), pp. 144-173; Kocibova, J., Klos, K., Lehecka, O., Kudelka, M., Snasel, V., Web page analysis: Experiments based on discussion and purchase web patterns (2007) Web Intelligence and Intelligent Agent Technology Workshops, pp. 221-225; Kudelka, M., Snasel, V., Horak, Z., Hassanien, A., Abraham, A., Web communities defined by web page content (2009) Comput. Social Netw. Anal., pp. 349-370; Kudelka, M., Snasel, V., Klos, K., Pokorny, J., Visual similarity of web pages (2010) Advances in Intelligent Web Mastering: Proceedings of the Sixth Atlantic Web Intelligence Conference-AWIC'2009, p. 135. , Prague, Czech Republic, September 2009. Springer Verlag, Washington, DC, USA; London, UK; Kudelka, M., Snasel, V., Lehecka, O., El-Qawasmeh, E., Semantic analysis of Web pages using Web patterns (2006) Proceedings of the 2006 IEEE/WIC/ACM International Conference on Web Intelligence, pp. 329-333. , IEEE Computer Society, Washington, DC, USA; London, UK; Kudelka, M., Snasel, V., Lehecka, O., El-Qawasmeh, E., Pokorny, J., Web pages reordering and clustering based on web patterns (2008) SOFSEM 2008: Theory and Practice of Computer Science, pp. 731-742; Kumar, R., Novak, J., Tomkins, A., Structure and evolution of online social networks (2010) Link Mining: Models, Algorithms, and Applications, pp. 337-357. , Springer, Berlin, Germany; Lee, D., Jeong, O., Lee, S., Opinion mining of customer feedback data on the web (2008) Proceedings of the Second International Conference on Ubiquitous Information Management and Communication. ACM, pp. 230-235. , New York, NY, USA; Lee, D., Seung, H., Learning the parts of objects by non-negative matrix factorization (1999) Nature, 401 (6755), pp. 788-791; Limanto, H., Giang, N., Trung, V., Zhang, J., He, Q., Huy, N., An information extraction engine for web discussion forums (2005) Special Interest Tracks and Posters of the 14th International Conference on World Wide Web. ACM, pp. 978-979. , New York, NY, USA; Lindemann, C., Littig, L., Coarse-grained classification of web sites by their structural properties (2006) Proceedings of the Eighth Annual ACM International Workshop on Web Information and Data Management. ACM, pp. 35-42. , New York, NY, USA; Martin, J., Text and clause fractal resonance (1995) Text (The Hague), 15 (1), pp. 5-42; Nie, Z., Wen, J., Ma, W., Object-level vertical search (2007) CIDR, pp. 235-246; Qi, X., Davison, B., Web page classification features and algorithms (2009) ACM Comput. Surv., 41 (2), pp. 1-31; Rajaraman, A., Kosmix high-performance topic exploration using the deep web (2009) Proc. VLDB Endow., 2 (2), pp. 1524-1529; Rosso, M., User-based identification of Web genres (2008) J. Am. Soc. Inf. Sci., 59 (7), pp. 1053-1072; Schmidt, S., Stoyan, H., Weichselgarten, A., (2005) Web-Based Extraction of technical features of products, 1, pp. 246-250. , GI Jahrestag; Shen, D., Chen, Z., Yang, Q., Zeng, H., Zhang, B., Lu, Y., Ma, W., Web-page classification through summarization (2004) Proceedings of the 27th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 242-249. , ACM, New York, NY, USA; Snasel, V., Polovincak, M., Dahwa, H., Horak, Z., On concept lattices and implication bases from reduced contexts (2008) Supplementary Proceedings of the 16th International Conference on Conceptual Structures, ICCS, pp. 83-90; Sun, A., Lim, E., Ng, W., Web classification using support vector machine (2002) Proceedings of the Fourth International Workshop on Web Information and Data Management, pp. 96-99. , ACM, New York, NY, USA; Takama, Y., Mitsuhashi, N., Visual similarity comparison for Web page retrieval (2005) Proceedings of the 2005 IEEE/WIC/ACM International Conference on Web Intelligence, pp. 301-304; Tidwell, J., (2005) Designing Interfaces: Patterns for Effective Interaction Design, , O'Reilly, CA, USA; Van Duyne, D., Landay, J., Hong, J., (2002) The Design of Sites Patterns, Principles, and Processes for Crafting A Customer-centered Web Experience, , Addison-Wesley Professional Boston, USA; Van Welie, M., (2008) A Pattern Library for Interaction Design, , http://www.welie.com, (last accessed March 2010); Velásquez, J.D., Web site keywords a methodology for improving gradually the web site text content (2012) Intell. Data Anal., 16 (2), pp. 327-348; Velásquez, J.D., Dujovne, L.E., L'Huillier, Extracting significant website key objects a semantic web mining approach (2011) Eng. Appl. Artif. Intell., 24 (8), pp. 1532-1541; Yu, H., Han, J., Chang, K., PEBL Web page classification without negative examples (2004) IEEE Trans. Knowl. Data Eng., 16 (1), pp. 70-81; Zheng, S., Song, R., Wen, J., Template-independent news extraction based on visual consistency (2007) Proceedings of the National Conference on Artificial Intelligence, 7, pp. 1507-1513","Velásquez, J.D.; Department of Industrial Engineering, University of Chile, Av. República 701, Santiago, Chile; email: jvelasqu@dii.uchile.cl",,,Elsevier Ltd,,,,,9521976,,EAAIE,,English,Eng Appl Artif Intell,Article,Scopus,2-s2.0-84906083827,,
TRUE,3,3,"Ahmaro, I.Y.Y., Bin Mohd Yusoff, M.Z., Mohd Abualkishik, A.",The current practices of software reusability approaches in Malaysia,2014,"2014 8th Malaysian Software Engineering Conference, MySEC 2014",,,6986009,172,176,,,10.1109/MySec.2014.6986009,http://www.scopus.com/inward/record.url?eid=2-s2.0-84929307939&partnerID=40&md5=0f9c7fcd6c297d0b14df27d751262803,"College of Information Technology, Department of Software Engineering, Universiti Tenaga Nasional (UNITEN), Selangor, Malaysia","Ahmaro, I.Y.Y., College of Information Technology, Department of Software Engineering, Universiti Tenaga Nasional (UNITEN), Selangor, Malaysia; Bin Mohd Yusoff, M.Z., College of Information Technology, Department of Software Engineering, Universiti Tenaga Nasional (UNITEN), Selangor, Malaysia; Mohd Abualkishik, A., College of Information Technology, Department of Software Engineering, Universiti Tenaga Nasional (UNITEN), Selangor, Malaysia","Software reusability refers to the expected reuse potential of a software assets and module can be adapted in more than one software system. It is an effective method to enhance the software productivity and quality. Despite the importance of software reusability, very few study has been carried out in Malaysian IT industry. Hence, this study is aimed to identify the adopted software reusability approaches in the Malaysian IT industry. Quantitative analysis method was used by collecting data through online questionnaire, distributed to 183 IT industry players in Malaysia. Results from this study indicated that the main software reusability approaches adopted by Malaysian IT industry are design patterns, component-based development, application frameworks, COTS Integration and Service-oriented Systems. © 2014 IEEE.",application frameworks; component-based development; COTS Integration; design patterns; Service-oriented Systems; software reusability,Application programs; Reusability; Software engineering; Application frameworks; Component-Based Development; COTS integration; Design Patterns; Service Oriented Systems; Computer software reusability,,,,,,"Ahmaro, I.Y.Y., Abualkishik, A.M., Mohd Yusoff, M.Z., Taxonomy, definition, approaches, benefits, reusability levels, factors and adaption of software reusability: A review of the research literature (2014) Journal of Applied Sciences, 14, pp. 2396-2421; Zhang, B., Bao, L., Zhou, R., Hu, S., Chen, P., A black-box strategy to migrate GUI-based legacy systems to web services (2008) Service-Oriented System Engineering, 2008. SOSE'08. IEEE International Symposium on, pp. 25-31. , December). IEEE; Kamalraj, R., Geetha, B.G., Singaravel, G., Reducing efforts on software project management using software package reusability (2009) InAdvance Computing Conference, 2009. IACC 2009. IEEE International, pp. 1624-1627. , March). IEEE; Sharma, A., Grover, P.S., Kumar, R., Reusability assessment for software components (2009) ACM SIGSOFT Software Engineering Notes, 34 (2), pp. 1-6; Gill, N.S., Importance of software component characterization for better software reusability (2006) ACM SIGSOFT Software Engineering Notes, 31 (1), pp. 1-3; Singaravel, G., Palanisamy, V., Krishnan, A., Overview analysis of reusability metrics in software development for risk reduction (2010) InInnovative Computing Technologies (ICICT), 2010 International Conference on, pp. 1-5. , February) IEEE; Rothenberger, M., Dooley, K., Kulkarni, U., Strategies for software reuse: A principal component analysis of reuse practices (2003) IEEE Transactions of Software Engineering, 29 (9); Sukhvinder, S.S., Gurpreet S, S., Reusability of the software (2010) International Journal of Computer Applications, 7, pp. 0975-8887. , October; Sommerville, I., Prechelt, L., (2004) Software Reuse, , Software Engineering; Sandhu, P.S., Singh, H., Software reusability model for procedure based domain-specific software components (2008) Int. J. Software Eng. Knowl. Eng., 18, pp. 1063-1081; Marshall, J.J., Downs, R.R., Reuse readiness levels as a measure of software reusability (2008) Geoscience and Remote Sensing Symposium, 2008. IGARSS 2008. IEEE International, 3, pp. III-1414. , , July). IEEE; Sagar, S., Nerurkar, N.W., Sharma, A., A soft computing based approach to estimate reusability of software components (2010) ACM SIGSOFT Software Engineering Notes, 35 (5), pp. 1-5; Budhija, N., Ahuja, S.P., Review of software reusability (2011) International Conference on Computer Science and Information Technology (ICCSIT'2011), , , Dec); Zhang, B., Bao, L., Zhou, R., Hu, S., Chen, P., A black-box strategy to migrate GUI-based legacy systems to web services (2008) Service-Oriented System Engineering, 2008. SOSE'08. IEEE International Symposium on, pp. 25-31. , December IEEE; Budhija, N., Ahuja, S.P., Review of software reusability (2011) International Conference on Computer Science and Information Technology (ICCSIT'2011), , , Dec); Singh, Y., Bhatia, P.K., Sangwan, O., Software reusability assessment using soft computing techniques (2011) ACM SIGSOFT Software Engineering Notes, 36 (1), pp. 1-7; Jalender, B., Govardhan, A., Premchand, P., Designing code level reusable software components (2012) Int. J. Software Eng. Appl., 3, pp. 219-229",,Jawawi D.N.A.Sulaiman S.Mohamad R.Sa'Adon N.A.,,Institute of Electrical and Electronics Engineers Inc.,"8th Malaysian Software Engineering Conference, MySEC 2014",23 September 2014 through 24 September 2014,,109755,,9781479954391,,,English,"Malays. Softw. Eng. Conf., MySEC",Conference Paper,Scopus,2-s2.0-84929307939,,
FALSE,3,1,"Martín-Rodilla, P., Panach, J.I., Pastor, O.",User interface design guidelines for rich applications in the context of cultural heritage data,2014,Proceedings - International Conference on Research Challenges in Information Science,,,6861049,,,,,10.1109/RCIS.2014.6861049,http://www.scopus.com/inward/record.url?eid=2-s2.0-84906751576&partnerID=40&md5=a19dec34ebc3b84a8ede64dea849fdac,"Institute of Heritage Sciences, Spanish National Research Council, Santiago de Compostela, Spain; Escola Tècnica Superior d'Enginyeria, Departament d'Informàtica, Universitat de València, Burjassot, Valencia, Spain; Centro de Investigación en Métodos de Producción de Software, Universitat Politècnica de València, Valencia, Spain","Martín-Rodilla, P., Institute of Heritage Sciences, Spanish National Research Council, Santiago de Compostela, Spain; Panach, J.I., Escola Tècnica Superior d'Enginyeria, Departament d'Informàtica, Universitat de València, Burjassot, Valencia, Spain; Pastor, O., Centro de Investigación en Métodos de Producción de Software, Universitat Politècnica de València, Valencia, Spain","Advanced interaction techniques are necessary to explore the potential of large data-volume systems. In this context, rich internet application patterns were defined, but usually reduced to the development of social web applications. However, other types of applications, such as data-analysis applications, require also advanced interaction solutions to assist users in making decisions and data-analysis. This paper identifies a set of problems emerged in the interaction between humans and data-analysis applications. We propose a set of guidelines for rich applications as a solution for these problems. As illustrative example of a real data-analysis environment, the paper focuses on a case study in the cultural heritage domain, highlighting the existing interaction problems and how they can be solved through the design guidelines proposed. The set of design guidelines allows to specify interfaces abstractly, creating a repository to solve interaction problems. These guidelines aim to serve as a basis for a future identification of new rich applications design patterns. © 2014 IEEE.",Cultural Heritage; Data Analysis; Design Guidelines; Rich Application,Data reduction; Design; Information science; User interfaces; World Wide Web; Cultural heritages; Design Patterns; Interaction problems; Interaction techniques; Making decision; Rich Internet Applications; Social Web applications; User interface designs; Problem solving,,,,,,"Davenport, T.H., Competing on talent analytics (2010) Harvard Business Review, 10, pp. 52-58; Keim, D., (2008) Visual Analytics: Definition, , process, and challenges: Springer; Davenport, T.H., (1993) Process Innovation: Reengineering Work Through Information Technology: Harvard Business Press; Smith, H., Fingar, P., (2003) Business Process Management: The Third Wave Vol. 1: Meghan-Kiffer Press Tampa; Van Someren, M.W., (1994) The Think Aloud Method: A Practical Guide to Modelling Cognitive Processes: Academic Press London; España, S., An empirical comparative evaluation of requirements engineering methods Journal of the Brazilian Computer Society, 16, pp. 3-19. , 2010/05/01 2010; Norman, K.L., Panizzi, E., Levels of automation and user participation in usability testing (2006) Interacting with Computers, 18, pp. 246-264; Cairo, A., (2012) The Functional Art: An Introduction to Information Graphics and Visualization: New Riders; https://www.coursera.org, Coursera. AvailableBederson, B.B., Ordered and quantum treemaps: Making effective use of 2D space to display hierarchies (2002) ACM Trans. Graph., 21, pp. 833-854; Russell, M.A., (2009) Dojo: The Definitive Guide: O'Reilly; Reas, C., Fry, B., (2007) Processing: A Programming Handbook for Visual Designers and Artists, 6812. , Mit Press; Bostock, M., D data-driven documents (2011) Visualization and Computer Graphics, 17, pp. 2301-2309. , IEEE Transactions on; Van Ham, F., Re-inventing and re-implementing the wheel. Visualization component reuse in a large enterprise (2012) SIGRAD, p. 5; Soares Sous, K.V.J., Henderson-Sellers, B., Gonzalez-Perez, C., Evaluating a graphical notation for modelling software development methodologies (2012) Journal of Visual Languages and Computing, 23 (4), pp. 195-212. , November 2007; Ning, Z., OncoViz: A user-centric mining and visualization tool for cancer-related literature (2010) The Proceedings of the 2010 ACM Symposium on Applied Computing, , presented at Sierre, Switzerland; Pastor, O., OO-Method: An OO software production environment combining conventional and formal methods (1997) Advanced Information Systems Engineering, 1250, pp. 145-158. , A. Olivé and J. Pastor, Eds., ed: Springer Berlin Heidelberg; Molina, P., JUST-UI: A user interface specification model (2002) Computer-Aided Design of User Interfaces III, pp. 63-74. , C. Kolski and J. Vanderdonckt, Eds., ed: Springer Netherlands; Jacobson, I., (1999) The Unified Software Development Process Vol. 1: Addison-Wesley Reading; Nunes, N., Cunha, J., Wisdom - A UML based architecture for interactive systems (2001) Interactive Systems Design, Specification, and Verification, 1946, pp. 191-205. , P. Palanque and F. Paternò, Eds., ed: Springer Berlin Heidelberg; Valverde Giromé, F., (2010) Oows 2. 0: Un Método de Ingeniería Web Dirigido Por Modelos Para la Producción de Aplicaciones Web 2. 0, , Research Center on Software Production Methods (PROS) Universitat Politècnica de Valencia, Valencia, Spain; Limbourg, Q., USIXML: A language supporting multi-path development of user interfaces (2005) Engineering Human Computer Interaction and Interactive Systems, pp. 200-220. , ed: Springer; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Longman Publishing Co., Inc; Brambilla, M., A tool for model-driven design of rich internet applications based on AJAX (2010) Handbook of Research on Web 2.0, 3.0, and X.0: Technologies, Business, and Social Applications, pp. 96-118. , ed: IGI Global; Martín-Rodilla, P., The role of software in cultural heritage issues: Types, user needs and design guidelines based on principles of interaction (2012) RCIS'12: Sixth International Conference on Research Challenges in Information Science, pp. 1-2. , Valencia, Spain; Gonzalez-Pérez, C., Parcero-Oubiña, C., A conceptual model for cultural heritage definition and motivation (2011) CAA'11: 39th Annual Conference on Computer Applications and Quantitative Methods in Archaeology Ed Beijing, , China; Doerr, M., The cidoc crm, an ontological approach to schema heterogeneity (2005) Semantic Interoperability and Integration, 4391; Gonzalez-Perez, C., Extending an abstract reference model for transdisciplinary work in cultural heritage (2012) Metadata and Semantics Research, 343, pp. 190-201. , J. Dodero, et al., Eds., ed: Springer Berlin Heidelberg; González-Pérez, C., Hug, C., Crafting archaeological methodologies: Suggesting method engineering for the humanities and social sciences (2013) Computer Applications and Quantitative Methods in Archaeology (CAA) 2012, , Southampton, UK; Martín-Rodilla, P., Software-assisted knowledge generation in the archaeological domain: A conceptual framework (2013) The 25th International Conference on Advanced Information Systems Engineering (CAiSE 2013): Doctoral Consortium, , presented at Valencia, Spain; Criado-Boado, F., Before the barrows: Forms of monumentality and forms of complexity in iberia and uruguay (2006) Archaeology of Burial Mounds, pp. 38-52. , University of West Bohemia and D. o. A. L. Š. (ed.), Eds., ed; Interaction Flow Modeling Language; Alexander, C., (1979) The Timeless Way of Building, , ed: New York: Oxford University Press; Network, Y.D., (2013) Yahoo Design Pattern Library, , http://developer.yahoo.com/ypatterns/, Available; Molina Moreno, P.J., (2003) Especificación Del Interfaz de Usuario: De Los Requisitos A la Generación Automática, , Universitat Politècnica de València; Wieringa, R., Design science methodology: Principles and practice (2010) The Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 2, , presented at Cape Town, South Africa",,,EMSI;IEEE Morocco Section;Laboratoire de Mathematiques Informatique et Applications (LAMIA),IEEE Computer Society,"8th IEEE International Conference on Research Challenges in Information Science, IEEE RCIS 2014",28 May 2014 through 30 May 2014,Marrakesh,107211,21511349,9781479923939,,,English,Proc. Int. Conf. Res. Challenges Inf. Sci.,Conference Paper,Scopus,2-s2.0-84906751576,,
FALSE,3,1,"Hsieh, Y.-M., Pan, M.-S.",ESFM: An Essential Software Framework for Meshfree Methods,2014,Advances in Engineering Software,76,,,133,147,,,10.1016/j.advengsoft.2014.06.006,http://www.scopus.com/inward/record.url?eid=2-s2.0-84904316287&partnerID=40&md5=5c8e5ad2bb067f4f8cacb78c5893e47d,"Department of Construction Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan","Hsieh, Y.-M., Department of Construction Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan; Pan, M.-S., Department of Construction Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan","This paper describes an Essential Software Framework for Meshfree Methods (ESFM). Through thorough analyses of many existing meshfree methods, their common elements and procedures are identified, and a general procedure is formulated into ESFM that can facilitate their implementations and accelerate new developments in meshfree methods. ESFM also modulates performance-critical components such as neighbor-point searching, sparse-matrix storage, and sparse-matrix solver enabling developed meshfree analysis programs to achieve high-performance. ESFM currently consists of 21 groups of classes and 94 subclasses, and more algorithms can be easily incorporated into ESFM. Finally, ESFM provides a common ground to compare various meshfree methods, enabling detailed analyses of performance characteristics. © 2014 Elsevier Ltd. All rights reserved.",Design pattern; Meshfree methods; Meshless methods; Object-oriented design; Software framework; Weak-form,Engineering; Software engineering; Design Patterns; Mesh-free method; Mesh-less methods; Object-oriented design; Software frameworks; Weak-form; Computer programming,,,,,,"Liu, G.R., (2003) Mesh Free Methods: Moving beyond the Finite Element Method Boca Raton, , CRC Press; Liu, G.R., Gu, Y.T., (2005) An Introduction to Meshfree Methods and Their Programming Dordrecht, , Springer The Netherlands; Bordas, S.P.A., Rabczuk, T., Rodenas, J.-J., Kerfriden, P., Moumnassi, M., Belouettar, S., Recent advances towards reducing the meshing and re-meshing burden in computational sciences (2010) Comput Technol Rev, 2, pp. 51-82; Chen, J.-S., Pan, C., Wu, C.-T., Large deformation analysis of rubber based on a reproducing kernel particle method (1997) Computational Mechanics, 19 (3), pp. 211-227; Chen, J.-S., Pan, C., Wu, C.-T., Liu, W.K., Reproducing Kernel Particle Methods for large deformation analysis of non-linear structures (1996) Computer Methods in Applied Mechanics and Engineering, 139 (1-4), pp. 195-227. , PII S0045782596010833; Li, S., Hao, W., Liu, W.K., Numerical simulations of large deformation of thin shell structures using meshfree methods (2000) Computational Mechanics, 25 (2), pp. 102-116; Liew, K.M., Ng, T.Y., Wu, Y.C., Meshfree method for large deformation analysis-a reproducing kernel particle approach (2002) Engineering Structures, 24 (5), pp. 543-551. , DOI 10.1016/S0141-0296(01)00120-1, PII S0141029601001201; Rabczuk, T., Gracie, R., Song, J.H., Belytschko, T., Immersed particle method for fluid-structure interaction (2010) Int J Numer Meth Eng, 81, pp. 48-71; Rabczuk, T., Bordas, S., Askes, H., Meshfree methods for dynamic fracture (2010) Comput Technol Rev, 1, pp. 157-185; Belytschko, T., Gu, L., Lu, Y.Y., Fracture and crack growth by element free Galerkin methods (1994) Modell Simul Mater Sci Eng, 2, pp. 519-534; Belytschko, T., Lu, Y.Y., Gu, L., Crack propagation by element-free Galerkin methods (1995) Eng Fract Mech, 51, pp. 295-315; Rabczuk, T., Belytschko, T., Adaptivity for structured meshfree particle methods in 2D and 3D (2005) International Journal for Numerical Methods in Engineering, 63 (11), pp. 1559-1582. , DOI 10.1002/nme.1326; Rabczuk, T., Xiao, S.P., Sauer, M., Coupling of mesh-free methods with finite elements: Basic concepts and test results (2006) Communications in Numerical Methods in Engineering, 22 (10), pp. 1031-1065. , DOI 10.1002/cnm.871; Zhuang, X., Augarde, C.E., Mathisen, K.M., Fracture modeling using meshless methods and level sets in 3D: Framework and modeling (2012) Int J Numer Meth Eng, 92, pp. 969-998; Belytschko, T., Krongauz, Y., Organ, D., Fleming, M., Krysl, P., Meshless methods: An overview and recent developments (1996) Computer Methods in Applied Mechanics and Engineering, 139 (1-4), pp. 3-47. , PII S004578259601078X; Li, S., Liu, W.K., Meshfree and particle methods and their applications (2002) Applied Mechanics Reviews, 55 (1), pp. 1-34. , DOI 10.1115/1.1431547; Nguyen, V.P., Rabczuk, T., Bordas, S., Duflot, M., Meshless methods: A review and computer implementation aspects (2008) Math Comput Simul, 79, pp. 763-813; Gu, Y.T., Meshfree methods and their comparisons (2005) Int J Comput Methods, 2, pp. 477-515; Fries, T.P., Matthies, H.G., (2004) Classification and Overview of Meshfree Methods, , Brunswick Germany; Krysl, P., Belytschko, T., ESFLIB: A library to compute the element free Galerkin shape functions (2001) Computer Methods in Applied Mechanics and Engineering, 190 (15-17), pp. 2181-2205. , DOI 10.1016/S0045-7825(00)00229-2, PII S0045782500002292; Sáncheza, J.M.M., Gonçalvesb, P.B., Shape function object modeling for meshfree methods (2010) Asociacion Argentina Mec Comput, XXIX, pp. 4753-4767; Nakama, Y., Shimada, A., Kanto, Y., Ando, T., Yagawa, G., Object oriented development of FMM3D: Foundation software for parallel 3D free mesh method (2002) Advances in Meshfree and X-Fem Methods: Proceedings of the 1st Asian Workshop on Meshfree Methods, pp. 194-199. , Singapore; Rabczuk, T., Belytschko, T., Xiao, S.P., Stable particle methods based on Lagrangian kernels (2004) Computer Methods in Applied Mechanics and Engineering, 193 (12-14), pp. 1035-1063. , DOI 10.1016/j.cma.2003.12.005, PII S0045782504000088; GeoPDEs - Innovative Compatible Discretization Techniques for Partial Differential Equations, , http://www.geopdes.apnetwork.it/, [accessed 18.03.14]; De Falco, C., Reali, A., Vazquez, R., GeoPDEs: A research tool for isogeometric analysis of PDEs (2011) Adv Eng Softw, 42, pp. 1020-1034; Igafem - Open Source 3D Matlab Isogeometric Analysis Code, , http://www.sourceforge.net/projects/cmcodes/?source=navbar, [accessed 18.03.14]; Igabem - Isogeometric Boundary Element Analysis with Matlab, , http://www.sourceforge.net/projects/igabem/, [accessed 18.03.14]; Igafemgui, , http://www.sourceforge.net/projects/igafemgui/, [accessed 18.03.14]; ElemFreGalerkin, , http://www.sourceforge.net/projects/elemfregalerkin/, [accessed 18.03.14]; Nguyen, V.P., Spa, B., Rabczuk, T., (2013) Isogeometric Analysis: An Overview and Computer Implementation Aspects; Simpson, R.N., Bordas, S.P.A., Lian, H., Trevelyan, J., An isogeometric boundary element method for elastostatic analysis: 2D implementation aspects (2013) Comput Struct, 118, pp. 2-12; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (2007) Design Patterns: Elements of Reusable Object-oriented Software, , 34th ed. Addison-Wesley Massachusetts, MA, USA; OpenMP, , http://www.openmp.org/wp/, [accessed 18.03.14]; https://www.developer.nvidia.com/cuda-zone, NVIDIA CUDA ZONE. [accessed 18.03.14]Intel Thread Building Blocks, , https://www.threadingbuildingblocks.org/, [accessed 18.03.14]; Thrust, , https://www.code.google.com/p/thrust/, [accessed 18.03.14]; Baugh, Jr.J.W., Rehak, D.R., Object-oriented design of finite element programs (1989) Comput Struct, pp. 91-100; Scholz, S.P., Elements of an object-oriented fem++ program in C++ (1992) Comput Struct, 43, pp. 517-529; Menétrey, P., Zimmermann, T., Object-oriented non-linear finite element analysis: Application to J2 plasticity (1993) Comput Struct, 49, pp. 767-777; Kong, X.A., Chen, D.P., An object-oriented design of FEM programs (1995) Comput Struct, 57, pp. 157-166; Dubois-Pelerin, Y., Pegon, P., Object-oriented programming in nonlinear finite element analysis (1998) Computers and Structures, 67 (4), pp. 225-241. , PII S0045794998000546; Archer, G.C., Fenves, G., Thewalt, C., A new object-oriented finite element analysis program architecture (1999) Comput Struct, 70, pp. 63-75; Chen, H.-M., Archer, G.C., A distributed object-oriented finite-element analysis program architecture (2001) Computer-Aided Civil and Infrastructure Engineering, 16 (5), pp. 326-336; Commend, S., Zimmermann, T., Object-oriented nonlinear finite element programming: A primer (2001) Advances in Engineering Software, 32 (8), pp. 611-628. , DOI 10.1016/S0965-9978(01)00011-4, PII S0965997801000114; Patzak, B., Bittnar, Z., Design of object oriented finite element code (2001) Advances in Engineering Software, 32 (10-11), pp. 759-767. , DOI 10.1016/S0965-9978(01)00027-8, PII S0965997801000278; Yu, L., Kumar, A.V., Object-oriented modular framework for implementing the finite element method (2001) Computers and Structures, 79 (9), pp. 919-928. , DOI 10.1016/S0045-7949(00)00192-9; Kromer, V., Dufosse, F., Gueury, M., An object-oriented design of a finite element code: Application to multibody systems analysis (2004) Adv Eng Softw, 35, pp. 273-287; Phongthanapanich, S., Dechaumphai, P., EasyFEM-An object-oriented graphics interface finite element/finite volume software (2006) Advances in Engineering Software, 37 (12), pp. 797-804. , DOI 10.1016/j.advengsoft.2006.05.006, PII S0965997806000603; Bangerth, W., Hartmann, R., Kanschat, G., Deal. II - A general-purpose object-oriented finite element library (2007) ACM Trans Math Softw, 33, pp. 1-24; Fang, H., Hand, A.J., Haddock, J.E., White, T.D., An object-oriented framework for finite element pavement analysis (2007) Advances in Engineering Software, 38 (11-12), pp. 763-771. , DOI 10.1016/j.advengsoft.2006.08.045, PII S0965997806002043; Pesch, L., Bell, A., Sollie, H., Ambati, V.R., Bokhove, O., Van Der Vegt, J.J.W., HpGEM - A software framework for discontinuous Galerkin finite element methods (2007) ACM Trans Math Softw, p. 33; Heng, B.C.P., Mackie, R.I., Using design patterns in object-oriented finite element programming (2009) Comput Struct, 87, pp. 952-961; Bordas, S., Nguyen, P.V., Dunant, C., Guidoum, A., Nguyen-Dang, H., An extended finite element library (2007) International Journal for Numerical Methods in Engineering, 71 (6), pp. 703-732. , DOI 10.1002/nme.1966; XFEM - XFEM Implementation in MATLAB, , http://www.sourceforge.net/projects/xfem/, [accessed 18.03.14]; PERMIX - A Platform for Multiscale Analysis, , http://www.sourceforge.net/projects/permix/, [accessed 18.03.14]; OpenXfem++ - An XFEM (EXtended Finite Element Method) Written in C++, , http://www.sourceforge.net/projects/openxfem/?source=navbar, [accessed 18.03.14]; Talebi, H., Silani, M., Bordas, S.P.A., Kerfriden, P., Rabczuk, T., A computational library for multiscale modeling of material failure (2014) Comput Mech, 53, pp. 1047-1071; Yang, C.T., Hsieh, S.H., An object-oriented framework for versatile discrete objects simulation using design patterns (2005) Comput Mech, 36, pp. 85-99; Kozicki, J., Donzé, F.V., A new open-source software developed for numerical simulations using discrete modeling methods (2008) Comput Method Appl Mech, 197, pp. 4429-4443; Belytschko, T., Lu, Y.Y., Gu, L., Element-free Galerkin methods (1994) Int J Numer Meth Eng, 37, pp. 229-256; Lu, Y.Y., Belytschko, T., Gu, L., A new implementation of the element free Galerkin method (1994) Comput Method Appl Mech, 113, pp. 397-414; Liu, G.R., Gu, Y.T., A point interpolation method for two-dimensional solids (2001) International Journal for Numerical Methods in Engineering, 50 (4), pp. 937-951. , DOI 10.1002/1097-0207(20010210)50:4<937::AID-NME62>3.0.CO;2-X; Wang, J.G., Liu, G.R., A point interpolation meshless method based on radial basis functions (2002) International Journal for Numerical Methods in Engineering, 54 (11), pp. 1623-1648. , DOI 10.1002/nme.489; Berg, Md., Cheong, O., Kreveld, Mv., Overmars, M., (2008) Computational Geometry: Algorithms and Applications, , Springer New York; Maron, M.J., Lopez, R.J., (1991) Numerical Analysis: A Practical Approach, , 3rd ed. Wadsworth USA; Beissel, S., Belytschko, T., Nodal integration of the element-free Galerkin method (1996) Computer Methods in Applied Mechanics and Engineering, 139 (1-4), pp. 49-74. , PII S0045782596010791; Lancaster, P., Salkauskas, K., Surfaces generated by moving least squares methods (1981) Math Comput, 37, pp. 141-158; Liu, G.R., Gu, Y.T., A point interpolation method (1999) Proceedings of 4th Asia-Pacific Conference on Computational Mechanics Singapore, pp. 1009-1014; Wang, J.G., Liu, G.R., Radial point interpolation method for elastoplastic problems (2000) Proc of the 1st Int Conf on Structural Stability and Dynamics, pp. 703-708. , Taipei, Taiwan; Dolbow, J., Belytschko, T., Numerical integration of the Galerkin weak form in meshfree methods (1999) Comput Mech, 23, pp. 219-230; Chen, J.-S., Wu, C.-T., Yoon, S., You, Y., Stabilized conforming nodal integration for Galerkin mesh-free methods (2001) International Journal for Numerical Methods in Engineering, 50 (2), pp. 435-466. , DOI 10.1002/1097-0207(20010120)50:2<435::AID-NME32>3.0.CO;2-A; Li, C.J., Lamberti, P., Dagnino, C., Numerical integration over polygons using an eight-node quadrilateral spline finite element (2009) J Comput Appl Math, 233, pp. 279-292; Liu, Y., Belytschko, T., A new support integration scheme for the weakform in mesh-free methods (2010) Int J Numer Meth Eng, 82, pp. 699-715; Zhu, T., Atluri, S.N., A modified collocation method and a penalty formulation for enforcing the essential boundary conditions in the element free Galerkin method (1998) Computational Mechanics, 21 (3), pp. 211-222; Atluri, S.N., Zhu, T., A new Meshless Local Petrov-Galerkin (MLPG) approach in computational mechanics (1998) Computational Mechanics, 22 (2), pp. 117-127; Gu, L., Moving kriging interpolation and element-free Galerkin method (2003) International Journal for Numerical Methods in Engineering, 56 (1), pp. 1-11. , DOI 10.1002/nme.553; Lam, K.Y., Wang, Q.X., Li, H., A novel meshless approach - Local Kriging (LoKriging) method with two-dimensional structural analysis (2004) Comput Mech, 33, pp. 235-244; Zhuang, X.Y., Zhu, H.H., Augarde, C., An improved meshless Shepard and least squares method possessing the delta property and requiring no singular weight function (2014) Comput Mech, 53, pp. 343-357; Barry, W., Saigal, S., A three-dimensional Element-Free Galerkin elastic and elastoplastic formulation (1999) International Journal for Numerical Methods in Engineering, 46 (5), pp. 671-693. , DOI 10.1002/(SICI)1097-0207(19991020)46:5<671::AID-NME650>3.0.CO;2- 9; Deeks, A.J., Augarde, C.E., A meshless local Petrov-Galerkin scaled boundary method (2005) Computational Mechanics, 36 (3), pp. 159-170. , DOI 10.1007/s00466-004-0649-y; Liu, G.R., Zhang, G.Y., Gu, Y.T., Wang, Y.Y., A meshfree radial point interpolation method (RPIM) for three-dimensional solids (2005) Computational Mechanics, 36 (6), pp. 421-430. , DOI 10.1007/s00466-005-0657-6; Sterk, M., Trobec, R., Meshless solution of a diffusion equation with parameter optimization and error analysis (2008) Engineering Analysis with Boundary Elements, 32 (7), pp. 567-577. , DOI 10.1016/j.enganabound.2007.10.002, PII S0955799707001622; Li, G., Jin, X., Aluru, N.R., (2005) Meshless Methods for Numerical Solution of Partial Differential Equations. Handbook of Materials Modeling, , Springer Netherlands p. 2447-74; Zhuang, X.Y., Heaney, C., Augarde, C., On error control in the element-free Galerkin method (2012) Eng Anal Bound Elem, 36, pp. 351-360; Krongauz, Y., Belytschko, T., Enforcement of essential boundary conditions in meshless approximations using finite elements (1996) Computer Methods in Applied Mechanics and Engineering, 131 (1-2), pp. 133-145; Zhou, J.X., Wen, J.B., Zhang, H.Y., Zhang, L., A nodal integration and post-processing technique based on Voronoi diagram for Galerkin meshless methods (2003) Computer Methods in Applied Mechanics and Engineering, 192 (35-36), pp. 3831-3843. , DOI 10.1016/S0045-7825(03)00376-1; Puso, M.A., Solberg, J., A stabilized nodally integrated tetrahedral (2006) International Journal for Numerical Methods in Engineering, 67 (6), pp. 841-867. , DOI 10.1002/nme.1651; Liu, G.R., Zhang, G.Y., Wang, Y.Y., Zhong, Z.H., Li, G.Y., Han, X., A nodal integration technique for meshfree radial point interpolation method (NI-RPIM) (2007) International Journal of Solids and Structures, 44 (11-12), pp. 3840-3860. , DOI 10.1016/j.ijsolstr.2006.10.025, PII S0020768306004434; Puso, M.A., Chen, J.S., Zywicz, E., Elmer, W., Meshfree and finite element nodal integration methods (2008) International Journal for Numerical Methods in Engineering, 74 (3), pp. 416-446. , DOI 10.1002/nme.2181; Bentley, J.L., Multidimensional binary search trees used for associative searching (1975) Commun ACM, 18, pp. 509-517; Perkins, E., Williams, J.R., A fast contact detection algorithm insensitive to object sizes (2001) Engineering Computations (Swansea, Wales), 18 (1-2), pp. 48-61; George, A., Liu, J.W.H., (1981) Computer Solutions of Large Sparse Positive Definite Systems Englewood Cliffs, , Prentice Hall NJ; Jennings, A., A compact storage scheme for the solution of symmetric linear simultaneous equations (1966) Comp. J., 9, pp. 281-285; Sherman, A.H., (1975) On the Efficient Solution of Sparse Systems of Linear and Nonlinear Equations, , Doctoral dissertation. New Haven, CT, USA: Yale University; Liu, W.-H., Sherman, A.H., Comparative analysis of the Cuthill-McKEE and the reverse Cuthill-McKEE ordering algorithms for sparse matrices (1976) Siam J Numer Anal, 13, pp. 198-213; Sloan, S.W., Algorithm for profile and wavefront reduction of sparse matrices (1986) International Journal for Numerical Methods in Engineering, 23 (2), pp. 239-251; Saad, Y., (2003) Iterative Methods for Sparse Linear Systems, , 2nd ed. Society for Industrial and Applied Mathematics Philadelphia, USA; Booch, G., Rumbaugh, J., Jacobson, I., (2005) Unified Modeling Language User Guide, , 2nd ed. Addison-Wesley; Miles, R., Hamilton, K., (2006) Learning UML 2.0: O'Reilly; Schenk, O., Gartner, K., Fichtner, W., Stricker, A., PARDISO: A high-performance serial and parallel sparse linear solver in semiconductor device simulation (2001) Future Generation Computer Systems, 18 (1), pp. 69-78. , DOI 10.1016/S0167-739X(00)00076-5, PII S0167739X00000765; Demmel, J.W., Eisenstat, S.C., Gilbert, J.R., Li, X.S., Liu, J.W.H., A supernodal approach to sparse partial pivoting (1999) SIAM Journal on Matrix Analysis and Applications, 20 (3), pp. 720-755. , PII S0895479895291765; Davis, T.A., Algorithm 832: UMFPACK V4.3 - An unsymmetric-pattern multifrontal method (2004) ACM Trans Math Softw, 30, pp. 196-199; Das, B.M., (1998) Principles of Foundation Engineering, , 4th ed. Brooks/Cole USA; Pan, M.S., Hsieh, Y.M., The evaluation of sparse matrix performance in meshfree analysis (2012) Proceedings of ICCCBE 2012 Moscow, Russia; Hsieh, Y.M., Pan, M.S., Enhancing performance of meshfree methods by hybrid computing (2012) Proceedings of ICCCBE 2012 Moscow, Russia","Pan, M.-S.; Department of Construction Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan; email: d9505503@mail.ntust.edu.tw",,,Elsevier Ltd,,,,,9659978,,AESOD,,English,Adv Eng Software,Article,Scopus,2-s2.0-84904316287,,
FALSE,3,1,"Kühn, E., Craß, S., Joskowicz, G., Novak, M.",Flexible modeling of policy-driven upstream notification strategies,2014,Proceedings of the ACM Symposium on Applied Computing,,,,1352,1354,,,10.1145/2554850.2555153,http://www.scopus.com/inward/record.url?eid=2-s2.0-84905653311&partnerID=40&md5=8f38ffbe32ed7421fc4b7943fa6916b2,"Institute of Computer Languages, Vienna University of Technology, Argentinierstr. 8, 1040 Wien, Austria","Kühn, E., Institute of Computer Languages, Vienna University of Technology, Argentinierstr. 8, 1040 Wien, Austria; Craß, S., Institute of Computer Languages, Vienna University of Technology, Argentinierstr. 8, 1040 Wien, Austria; Joskowicz, G., Institute of Computer Languages, Vienna University of Technology, Argentinierstr. 8, 1040 Wien, Austria; Novak, M., Institute of Computer Languages, Vienna University of Technology, Argentinierstr. 8, 1040 Wien, Austria","We present the advantages of a new coordination model termed ""Peer Model"" for the design of coordination strategies and introduce new extensions for the modeling of time and reference. The motivating example is the wireless, reliable, and timely upstream propagation of events about approaching trains, detected by sensors, to a rail crossing. Embedded wireless nodes along the tracks propagate the events upstream. The Peer Model provides flexibility, as new requirements do not demand a complete re-design and reimplementation of notification strategies, which is achieved by means of high-level abstractions, modularization, and patterns with exchangeable policies. Copyright 2014 ACM.",Coordination model; Design pattern; Middleware; Tuple space,Middleware; Coordination model; Coordination strategy; Design Patterns; High-level abstraction; Modularizations; Tuple space; Upstream propagation; Wireless nodes; Modular construction,,,,,,"Benigni, F., Secure P2P programming on top of tuple spaces (2008) WETICE, , IEEE; Borger, E., Approaches to modeling business processes: A critical analysis of BPMN, workflow patterns and YAWL (2012) Software and System Modeling, 11 (3); Bowden, F., A brief survey and synthesis of the roles of time in petri Nets (2000) Mathematical and Computer Modelling, 31 (10-12), pp. 55-68; Carriero, N., Gelernter, D., Linda in context (1989) Communications of the ACM, 32 (4), pp. 444-458; Clarke, D., Costa, D., Arbab, F., Connector colouring I: Synchronisation and context dependency (2007) Sc. of Computer Programming, 66 (3), pp. 205-225; Costa, P., TeenyLIME: Transiently shared tuple space middleware for wireless sensor networks (2006) Mid Sens. ACM; Fok, C.-L., Roman, G.-C., Lu, C., Rapid development and flexible deployment of adaptive wireless sensor network applications (2005) ICDCS, , IEEE; Kühn, E., Introducing the concept of customizable structured spaces for agent coordination in the production automation domain (2009) AAMAS, , IFAAMAS; Kühn, E., Peer-based programming model for coordination patterns (2013) Coordination LNCS, , Springer; Mottola, L., Picco, G.-P., Programming wireless sensor networks: Fundamental concepts and state of the art (2011) ACM CSUR, 43 (3), pp. 191-1951; Ratzer, A.V., CPN tools for editing, simulating, and analysing coloured petri Nets (2003) ICATPN, , LNCS. Springer",,,ACM Special Interest Group on Applied Computing (SIGAPP),Association for Computing Machinery,"29th Annual ACM Symposium on Applied Computing, SAC 2014",24 March 2014 through 28 March 2014,Gyeongju,106778,,9781450324694,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-84905653311,,
FALSE,4,3,"Rasoolzadegan, A., Barforoush, A.A.",Reliable yet flexible software through formal model transformation (rule definition),2014,Knowledge and Information Systems,40,1,,79,126,,,10.1007/s10115-013-0621-2,http://www.scopus.com/inward/record.url?eid=2-s2.0-84902181542&partnerID=40&md5=c0f9e2dc207066a26f53be685601dafa,"Intelligent Systems Laboratory, Amirkabir University of Technology (Tehran Polytechnic), Tehran, Iran","Rasoolzadegan, A., Intelligent Systems Laboratory, Amirkabir University of Technology (Tehran Polytechnic), Tehran, Iran; Barforoush, A.A., Intelligent Systems Laboratory, Amirkabir University of Technology (Tehran Polytechnic), Tehran, Iran","The results of literature review show that the need for both reliability and flexibility is increasingly becoming important among the various classes of software applications. Developing reliable yet flexible software is a hard problem. Although modeling methods enjoy a lot of advantages, the use of just one of them, in many cases, may not guarantee the development of reliable and flexible software. Formal modeling methods ensure reliability. However, lack of knowledge and high cost practically force developers to use semi-formal methods instead. Semi-formal (visual) modeling methods, which are widely used in practical large-scale software development, are not good enough for reliable software development. This paper proposes a new practical approach to the development of reliable yet flexible software. In the proposed approach, formal (Object-Z) and semi-formal (UML) models are transformed into each other using a set of bidirectional formal rules. Formal modeling and refinement ensure the reliability of software. Visual models facilitate the interactions among stakeholders who are not familiar enough with the complex mathematical concepts of formal methods. Visual models help detect the unexpected behavior and inconsistencies of software. Applying design patterns to visual models improves the flexibility of software. The transformation of formal and visual models into each other through the iterative and evolutionary process, proposed in this paper, helps develop the software applications that need to be highly reliable yet flexible. The feasibility of the proposed approach is evaluated using the multi-lift case study. © 2013 Springer-Verlag London.",Design patterns; Flexibility; Model transformation; Object-Z; Reliability; UML,,,,,,,"Kim, S., Carrington, D., A formal mapping between UML models and Object-Z specifications (2000) Proceedings of ZB2000: Formal Specification and Development In Z and B, 1878. , York, UK, Lecture notes in computer science, vol, Springer; Rasoolzadegan, A., Abdollahzadeh, A., Specifying a parallel, distributed, real-time, and embedded system: Multi-lift system case study (2011) Technical Report, Information Technology and Computer Engineering, , Faculty, Amirkabir University of Technology, Tehran, Iran; Rasoolzadegan, A., Abdollahzadeh, A., A new approach to software development process with formal modeling of behavior based on visualization (2011) Proceedings of 6th International Conference On Software Engineering, , Advances (ICSEA), Barcelona, Spain; Charatan, Q., Kans, A., Formal software development: From VDM to Java (2004) Palgrave Macmillan; Bjorner, D., (2006) Software Engineering III: Domains, Requirements, and Software Design, , Springer; Williams, J.R., (2009) Automatic Formalization of UML to Z, , MSc. thesis, Department of Computer Science, University of York; Schmidt, D.C., Model-driven engineering (2006) IEEE Comput, 39 (2), pp. 25-31; Pressman, R., (2009) Software Engineering: A Practitioner's Approach, , 7th edn. McGraw Hill; Somerville, I., (2006) Software Engineering, , 8th edn. Addison Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Pattern: Elements of Reusable Object-oriented Software, , 5th edn. Addison-Wesley Publishing Company; Freeman, E., Freeman, E., Kathy Sierra, B., (2004) Head First Design Patterns, , 1st edn. O'Reilly Media; Tilley, T., (2004) Formal Concept Analysis Applications to Requirements Engineering and Design, , Ph. D. dissertation, The University of Queensland, Australia; Sun, J., Dong, J.S., Liu, J., Wang, H., Object-Z web environment and projections to UML (2001) Proceedings of 10th International WWW Conference, pp. 725-734. , New York, ACM; Kim, S., Carrington, D., A formal meta-modeling approach to a transformation between the UML state machine and Object-Z (2002) Proceedings of ICFEM 2002: International Conference Formal Engineering Methods, 2495, pp. 548-560. , vol, of LNCS, Springer, pp; Zafar, N.A., Alhumaidan, F., Transformation of class diagrams into formal specification (2011) IJCSNS Int J Comput Sci Netw Secur, 11 (5), pp. 289-295; Miao, H., Liu, L., Li, L., Formalizing UML Models With Object-Z (2002) Proceedings of ICFEM2002: Conference On Formal Engineering Methods, pp. 523-534; Jackson, D., (2006) Software Abstractions: Logic, Language, and Analysis, , MIT Press; Polack, F., SAZ: SSADM version 4 and Z (2001) Proceedings of Software Specification Methods: An Overview Using a Case Study, pp. 21-38. , Springer. pp; Graham, D., Williams, J., Christen, P., Visualizing temporal cluster changes using relative density self-organizing maps (2010) Knowl Inf Syst, 25 (2), pp. 281-302. , doi:10.1007/s10115-009-0264-5; Kim, S.K., Using integrated meta-modeling to define OO design patterns with Object-Z and UML (2004) Proceedings of 11th Asia-Pacific Software Engineering Conference, pp. 257-264. , Busan, Korea; Markovic, S., Baar, T., Refactoring OCL annotated UML class diagrams (2008) Softw Syst Model (SoSyM), 7 (1), pp. 25-47; Kim, S.K., Carrington, D.A., A formalism to describe design patterns based on role concepts (2009) Formal Aspects Comput, 21 (5), pp. 397-420; Amálio, N., Polack, F., Stepney, S., An object-oriented structuring for Z based on views (2005) Proceedings ZB2005: 4th International Conference of B and Z Users, pp. 262-278. , Guildford, UK, LNCS 3455, Springer. pp; Bollin, A., Coupling-based transformations of Z specifications into UML diagrams (2011) Innov Syst Softw Eng, 7 (4), pp. 283-292; Miloudi, K.E., Amrani, Y.E., Ettouhami, A., An automated translation of UML class diagrams into a formal specification to detect UML inconsistencies (2011) Proceeding of 6th International Conference On Software Engineering, , Advances (ICSEA), Barcelona, Spain; Facon, P., Laleau, R., Nguyen, R., From OMT diagrams to B specifications (2001) Proceedings of Software Specifications Methods: An Overview Using a Case Study, pp. 57-77. , Springer. pp; Laleau, R., Polack, F., A rigorous metamodel for uml static conceptual modeling of information systems (2001) Proceedings of CAiSE 2001: Advanced Information Systems Engineering, 2068, pp. 402-416. , of LNCS. pp; Laleau, R., Polack, F., Coming and going from UML to B: A proposal to support traceability in rigorous IS development (2002) Proceedings of ZB 2002: Formal Specification and Development In Z and B, Grenoble, 2272, pp. 517-534. , of LNCS, Springer; Treharne, H., Supplementing a UML development process with B (2002) Proceedings of FME 2002: Formal Methods-getting it Right, 2391, pp. 568-586. , of LNCS, Springer. pp; Hammad, A., Tatibouët, B., Voisinet, J., Weiping, W., From B specification to UML Statechart diagrams (2001) Proceedings of ICFEM 2002: International conference of formal engineering methods, 2495, pp. 511-522. , of LNCS, Springer; Snook, C., Butler, M., UML-B: formal modeling and design aided by UML (2006) ACM Trans Softw Eng Methodol, 15 (1), pp. 92-122; Fischer, C., Olderog, E., Wehrheim, H., A CSP view on UML-RT structure diagrams (2001) Proceedings of fundamental approaches to software engineering, 2029, pp. 91-108. , of LNCS, Springer. pp; Engels, G., Küster, J.M., Heckel, R., A methodology for specifying and analyzing consistency of object-oriented behavioral models (2001) Proceedings of 9th ACM SIGSOFT Symposium On Foundations of Software Engineering, pp. 186-195; Davies, J., Crichton, C., Concurrency and refinement in the UML (2002) Proceedings of Refine 2002: The BCS FACS Refinement Workshop, Vol 70 (3) of Electronic Notes In Theoretical Computer Science, , Elsevier Science; Xia, J., Xia, L., A formal requirement specification method based on Object-Z (2010) Proceedings of Asia-Pacific Youth Conference On Communication, Kunming, pp. 209-212. , China, APYCC; Parisi, M., Managing scope creep with design patterns in formal specifications (2011) Int J Softw Eng Appl, 5 (1), pp. 63-72; Mai, D., (2009) Object-Z-based Test Case Generator, , MSc. thesis, Department of Computer Science, University of La Crosse, Wisconsin; Kim, S., Carrington, D., A Formal Model of the UML Meta-model: The UML State Machine and Its Integrity Constraints (2002) Proceedings of ZB 2002, 2272, pp. 497-516. , Springer. pp, Grenoble of LNCS; Amálio, N., (2006) Generative Frameworks For Rigorous Model-driven Development, , PhD thesis, Department of Computer Science, University of York; Bouquet, F., Dadeau, F., Groslambert, J., Checking JML specifications with B machines (2005) Proceedings of ZB 2005, Vol 3455 of LNCS, pp. 434-453. , Springer; Eden, A., (2000) Precise Specification of Design Patterns and Tool Support In their Application, , PhD thesis, Department of Computer Science, Tel Aviv University; Eden, A., Formal specification of object oriented design (2001) Proceedings of International Conference On Multidisciplinary Design In Engineering, , CSME-MDE; Raje, R., Chinnasamy, S., elelepus-a language for specification of software design patterns (2001) Proceedings of SAC '01: The 2001 ACM Symposium On Applied, Computing, pp. 600-604; Flores, A., Moore, R., Reynoso, L., A Formal Model of Object-oriented Design and GoF Design Patterns (2001) Proceedings of FME 2001: International Symposium of Formal Methods Europe, 2021, pp. 223-241. , of LNCS, Springer; Reynoso, L., Moore, R., (2000) GoF Behavioral Patterns: A Formal Specification, , The United Nations Univ, Technical report; Blazy, S., Gervais, S., Laleau, R., Reuse of Specification Patterns With the B Method (2003) Proceedings of ZB 2003: Formal Specification and Development In Z and B, 2651, pp. 40-57. , Turku, Finland, vol, of LNCS, Springer. pp; Kim, S., Carrington, D., A Rigorous Foundation For Pattern-based Design Models (2005) Proceedings of ZB 2005: International Conference of B and Z Users, 3455. , Springer. pp; Taibi, T., (2007) Design Pattern Formalization Techniques, , UAE: IGI Publishing, Hershey, New York; Kong, J., Zhang, K., Dong, J., Xu, D., Specifying behavioral semantics of UML diagrams through graph transformations (2009) J Syst Softw, 82, pp. 292-306; Chen, Y., Miao, H., From an abstract Object-Z specification to UML diagram (2004) J Inf Comput Sci, 1 (2), pp. 319-324; Ehlmann, B.K., Association patterns for data modeling and definition (2011) Knowl Inf Syst, 26 (1), pp. 59-86. , doi:10.1007/s10115-009-0262-7; Rasoolzadegan, A., Abdollahzadeh, A., Empirical evaluation of modeling languages using multi-lift system case study (2011) Proceedings of MSV'11: The 8th Annual International Conference On Modeling, Simulation and Visualization Methods, , Las Vegas, Nevada, USA; Christensen, H.B., (2010) Flexible, Reliable Software: Using Patterns and Agile Development, , 1st edn. Chapman Hall/CRC; Martinho, R., A two-step approach for modeling flexibility in software processes (2008) Proceedings of 23rd IEEE/ACM International Conference On Automated Software Engineering, pp. 427-430. , Italy, pp; Vidal, J.C., Lama, M., Bugarin, A., Toward the use of Petri nets for the formalization of OWL-S choreographies (2011) Knowl Inf Syst, , doi: 10. 1007/s10115-011-0451-z; Farooq, S.U., Quadri, S.M.K., Ahmad, N., Metrics, models and measurements in software reliability (2012) Proceedings of 2012 IEEE 10th International Symposium On Applied Machine Intelligence and Informatics, pp. 441-449. , Slovakia, pp; Penna, G.D., Magazzeni, D., Orefice, S., A spatial relation-based framework to perform visual information extraction (2012) Knowl Inf Syst, 30 (3), pp. 667-692. , doi:10.1007/s10115-011-0394-4; Goldsby, H., Cheng, B., Konrad, S., Kamdoum, S., A visualization framework for the modeling and formal analysis of high assurance systems (2006) Proceedings of Model Driven Engineering Languages and Systems, pp. 707-721. , MoDELS), Italy; Amálio, N., Glodt, C., Kelsen, P., Building VCL Models and Automatically Generating Z Specifications From Them (2011) Proceedings of 17th International Symposium On Formal Methods. Lecture Notes In Computer Science, 6664, pp. 149-153. , Ireland. pp; Medina-Medina, N., Molina-Ortiz, F., García-Cabrera, L., Adaptation and user modeling in hypermedia learning environments using the SEM-HP model and the JSEM-HP tool (2011) Knowl Inf Syst, 29 (3), pp. 629-656. , doi:10.1007/s10115-010-0357-1; Baumeister, J., Freiberg, M., Knowledge visualization for evaluation tasks (2011) Knowl Inf Syst, 29 (2), pp. 349-378. , doi: 10. 1007/s10115-010-0350-8; Derrick, J., Boiten, E.A., (2001) Refinement In Z and Object-Z, , 1st edn. Springer; Qin, S., Linking Object-Z with spec# (2007) Proceedings of 12th IEEE International Conference On Engineering Complex Computer Systems, pp. 185-196. , Auckland, New Zealand; Rasoolzadegan, A., Abdollahzadeh, A., Developing reliable yet flexible software through if-then model transformation rules (2012) Amirkabir J Sci Technol Misc, 44 (2); Allilaire, F., Bézivin, J., Jouault, F., Kurtev, I., ATL: Eclipse support for model transformation (2006) Proceedings of the Eclipse Technology EXchange Workshop (eTX) At the ECOOP 2006 Conference, , Nantes, France; Bagge, A.H., Constructs and concepts: Language design for flexibility and reliability (2009) Research School In Information and Communication Technology, , PhD thesis, Department of Informatics, University of Bergen, Norway; Brereton, P., Kitchenham, B.A., Budgen, D., Turner, M., Khalil, M., Lessons from applying the systematic review process within the software engineering domain (2007) J Syst Softw, 80, pp. 571-583","Barforoush, A. A.; Intelligent Systems Laboratory, Amirkabir University of Technology (Tehran Polytechnic), Tehran, Iran; email: ahmad@aut.ac.ir",,,Springer-Verlag London Ltd,,,,,2191377,,,,English,Knowl. Inf. Systems. Syst.,Article,Scopus,2-s2.0-84902181542,,
TRUE,3,3,"Roubtsov, S., Roubtsova, E.",Implementation of decision modules,2014,ACM International Conference Proceeding Series,,,,,,,,10.1145/2630768.2630775,http://www.scopus.com/inward/record.url?eid=2-s2.0-84907078437&partnerID=40&md5=be551089490432ecad9a9d1059ad6013,"Technical University Eindhoven, Netherlands; Open University of the Netherlands, Netherlands","Roubtsov, S., Technical University Eindhoven, Netherlands; Roubtsova, E., Open University of the Netherlands, Netherlands","Separation of concerns can have different forms. The well accepted concern is an object behavior usually specified as a life cycle module. In this paper, we define another type of concern, a decision module, and identify it in requirements and models. Separation of decision modules in programs may improve traceability of requirements and simplify code analysis. We present the results of our experiments with implementation of decision modules. We implement the modules using object composition, reflection, the publisher-subscriber design pattern and aspects. We present the possibilities of different implementation forms and illustrate our observations of pros and cons with an example of a document submission system. © 2014 ACM.",Decision Module; Model; Program; Protocol Contracts; Requirement,Computer applications; Computer programming; Models; Code analysis; Decision modules; Design Patterns; Object behavior; Object composition; Program; Requirement; Separation of concerns; Life cycle,,,,,,"Bracha, G., Cook, W., Mixin-based inheritance (1990) OOP-SLA/ECOOP '90 Proceedings of the European Conference on Object-oriented Programming on Object-oriented Programming Systems, Languages, and Applications, pp. 303-311; (2000) Defining Business Rules. What Are They Really?, , http://www.businessrulesgroup.org/first-paper/BRG-whatisBR_3ed.pdf; ASpectJ Project, , http://projects.eclipse.org-/projects/tools.aspectj; JSR-318 Enterprise JavaBeans, Version 3.2, p. 2013. , EJB 3.2 Expert Group; Filman, R., Elrad, T., Clarke, S., Akşit, M., (2004) Aspect-Oriented Software Development, , Addison-Wesley; Hoare, C., (1985) Communicating Sequential Processes, , Prentice-Hall International; (2014) JSR-000337 Java SE 8 Release; Jensen, K., (1997) Coloured Petri Nets, , Springer; Java 8: Now You Have Mixins?, , http://kerflyn.wordpress.com/2012/07/09/java-8-now-you-have-mixins/, Kerflyn's Blog; Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C., Loingtier, J.-M., Irwin, J., Aspect-oriented programming (1997) Proceedings of the European Conference on Object-Oriented Programming, 1241, pp. 220-242; McNeile, A., Roubtsova, E., CSP parallel composition of aspect models (2008) AOM'08, pp. 13-18; McNeile, A., Roubtsova, E., Aspect-Oriented Development Using Protocol Modeling (2010) LNCS, 6210, pp. 115-150; McNeile, A., Simons, N., http://www.metamaxim.com/McNeile, A., Simons, N., Protocol Modelling. A Modelling Approach that Supports Reusable Behavioural Abstractions (2006) Software and System Modeling, 5 (1), pp. 91-107; Unified Modeling Language: Superstructure Version 2.1.1 Formal/2007-02-03, p. 2003. , OMG; JavaEE Compatibility, , http://www.oracle.com/-technetwork/java/javaee/overview/ compatibility-jsp-136984.html/; Spring Framework, , http://projects.spring.io/spring-framework/; Mixin, , http://en.wikipedia.org/wiki/Mixin",,,and Applications (ECMFA);European Conference on Modelling Foundations,Association for Computing Machinery,"6th ACM SIGCHI Annual International Workshop on Behaviour Modelling - Foundations and Applications, BM-FA 2014",22 July 2014 through 22 July 2014,York,107542,,9781450327916,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84907078437,,
TRUE,3,3,"Sharma, V.S., Anwer, S.",Performance antipatterns: Detection and evaluation of their effects in the cloud,2014,"Proceedings - 2014 IEEE International Conference on Services Computing, SCC 2014",,,6930605,758,765,,,10.1109/SCC.2014.103,http://www.scopus.com/inward/record.url?eid=2-s2.0-84919684873&partnerID=40&md5=5fb1639d67c24fe6120b1a112bd924fd,"Accenture Technology Labs, Bangalore, India; Indraprastha Institute of Information Technology, Delhi, IIIT-Delhi, New Delhi, India","Sharma, V.S., Accenture Technology Labs, Bangalore, India; Anwer, S., Indraprastha Institute of Information Technology, Delhi, IIIT-Delhi, New Delhi, India","The way an application is designed and certain patterns thereof, play a significant role and might have a positive or a negative effect on the performance of the application. Some design patterns that have a negative effect on performance, also called performance antipatterns, may become important when evaluating migrating the application to the Cloud. Although there has been work done in the past related to defining performance antipatterns, there has been none that highlights the importance and effects of these performance antipatterns when an application is migrated to Cloud. In this work we present an approach to automatically detect important performance antipatterns in an application, by leveraging static code analysis and information about prospective deployment of the application components on the Cloud. We also experimentally show that these antipatterns may become prominent and pull down the application's performance if the application is migrated to the Cloud. Our results show that the performance of the parts of the application with such antipatterns suffer significantly and hence, the detection of these antipatterns has an overarching significance in the domain of software development for the Cloud. The approach we present here has also been implemented in a prototype cloud migration assessment tool. © 2014 IEEE.",Cloud computing; Cloud migration; CloudFoundry; PaaS; Performance antipatterns,Cloud computing; Software design; Anti-patterns; Application components; Assessment tool; Cloud migrations; CloudFoundry; Design Patterns; PaaS; Static code analysis; Application programs,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software. Boston, , MA, USA: Addison-Wesley Longman Publishing Co., Inc; Smith, C.U., Williams, L.G., Software performance antipatterns (2000) Proceedings of the 2nd International Workshop on Software and Performance, Ser. WOSP '00, pp. 127-136. , http://doi.acm.org/10.1145/350391.350420, New York, NY, USA: ACM; Smith, C.U., New software performance antipatterns: More ways to shoot yourself (2002) Proceedings of the Int. CMG Conference, pp. 667-674; Smith, C.U., More new software performance antipatterns: Even more ways to shoot yourself in the foot (2003) Proceedings of the Int. CMG Conference; Sharma, V.S., Sengupta, S., Nagasamudram, S., Mat: A migration assessment toolkit for paas clouds (2013) 2013 IEEE Sixth International Conference on Cloud Computing; Sharma, V.S., Anwer, S., Detecting performance antipatterns before migrating to the cloud (2013) Poster/Short Paper at the 2013 IEEE International Conference on Cloud Computing Technology and Science, pp. 148-151. , http://dx.doi.org/10.1109/CloudCom.2013.166; Cloud Foundry, , http://www.cloudfoundry.com/, VMWare; http://www.heroku.com/, Heroku cloud application platformhttp://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html, Apache tomcat clustering/session replication how-toWierda, A., Dortmans, E., Somers, L.J., Detecting patterns in object-oriented source code-A case study (2007) ICSOFT (SE), pp. 13-24. , J. Filipe, B. Shishkov, and M. Helfert, Eds. INSTICC Press; Washizaki, H., Fukaya, K., Kubo, A., Fukazawa, Y., Detecting design patterns using source code of before applying design patterns (2009) ACISICIS, pp. 933-938; Misra, J., Annervaz, K.M., Kaulgud, V.S., Sengupta, S., Titus, G., Java source-code clustering: Unifying syntactic and semantic features (2012) ACM SIGSOFT Software Engineering Notes, 37 (6), pp. 1-8; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) IWPC, p. 94; Arcelli, D., Cortellessa, V., Trubiani, C., Antipattern-based model refactoring for software performance improvement (2012) Proceedings of the 8th International ACM SIGSOFT Conference on Quality of Software Architectures, Ser. QoSA '12, pp. 33-42. , http://doi.acm.org/10.1145/2304696.2304704, New York, NY, USA: ACM; Parsons, T., Murphy, J., Detecting performance antipatterns in component based enterprise systems (2008) Journal of Object Technology, 7 (3), pp. 55-91; http://www.sable.mcgill.ca/soot/, Soot: a java optimization frameworkhttp://checkstyle.sourceforge.net/, Checkstyle 5. 6http://eclipse-metrics.sourceforge.net/descriptions/pages/cohesion/HendersonSellers.html, Henderson-sellershttp://codenforcer.com/lcom.aspx, Lack of cohesion of methods (lcom and lcom hs (henderson-sellers))https://github.com/Spring-Source/spring-petclinic/, Springsource/spring-petclinicTrivedi, K.S., (2002) Probability and Statistics with Reliability, , queuing and computer science applications, 2nd ed. Chichester, UK: John Wiley and Sons Ltd",,Ferrari E.Kaliappa R.Hung P.C.K.,,Institute of Electrical and Electronics Engineers Inc.,"11th IEEE International Conference on Services Computing, SCC 2014",27 June 2014 through 2 July 2014,,108740,,9781479950669,,,English,"Proc. - IEEE Int. Conf. Serv. Comput., SCC",Conference Paper,Scopus,2-s2.0-84919684873,,
TRUE,v,v,"Alhusain, S., Coupland, S., John, R., Kavanagh, M.",Towards machine learning based design pattern recognition,2013,"2013 13th UK Workshop on Computational Intelligence, UKCI 2013",,,6651312,244,251,,2,10.1109/UKCI.2013.6651312,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891109219&partnerID=40&md5=4af84cfa8d1ba0eb21ee4065995ce715,"Centre for Computational Intelligence de Montfort University, Leicester, United Kingdom; Automated Scheduling Optimisation and Planning (ASAP), Group University of Nottingham, Nottingham, United Kingdom; Business Development Manager Emerald HillLimited, Leicester, United Kingdom","Alhusain, S., Centre for Computational Intelligence de Montfort University, Leicester, United Kingdom; Coupland, S., Centre for Computational Intelligence de Montfort University, Leicester, United Kingdom; John, R., Automated Scheduling Optimisation and Planning (ASAP), Group University of Nottingham, Nottingham, United Kingdom; Kavanagh, M., Business Development Manager Emerald HillLimited, Leicester, United Kingdom","Software design patterns are abstract descriptions of best practice solutions for recurring design problems. The information about which design pattern is implemented where in a software design is very helpful and important for software maintenance and evolution. This information is usually lost due to poor, obsolete or lack of documentation, which raises the importance of automatic recognition techniques. However, their vague and abstract nature allows them to be implemented in various ways, which gives them resistance to be automatically and accurately recognized. This paper presents the first recognition approach to be solely based on machine learning methods. We build a training dataset by using several existing recognition tools and we use feature selection methods to select the input feature vectors. Artificial neural networks are then trained to perform the whole recognition process. Our approach is evaluated by conducting an experiment to recognize six design patterns in an open source application. © 2013 IEEE.",machine learning; pattern recognition; reverse engineering; Software design patterns,Automatic recognition; Design Patterns; Feature selection methods; Open source application; Recognition process; Software design patterns; Software maintenance and evolution; Training dataset; Neural networks; Pattern recognition; Reverse engineering; Software design; Learning systems,,,,,,"Buschmann, F., (1999) Pattern Oriented Software Architecture: A System of Patters, , John Wiley &Sons; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Pearson Education; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Gueheneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Arcelli Fontana, F., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Information Sciences, 181 (7), pp. 1306-1324; Arcelli, F., Cristina, L., Enhancing software evolution through design pattern detection (2007) Proceedings of the Third International IEEE Workshop on Software Evolvability, pp. 7-14; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: A mapping study (2013) Journal of Systems and Software, 86 (7); Bishop, C.M., (1995) Neural Networks for Pattern Recognition, , Oxford University Press; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) Proceedings of the 21st IEEE International Conference on Software Maintenance, pp. 295-304; Zanoni, M., (2012) Data Mining Techniques for Design Pattern Detection, , Ph.D. dissertation, Universita degli Studi di Milano-Bicocca; Uchiyama, S., Washizaki, H., Fukazawa, Y., Kubo, A., Design pattern detection using software metrics and machine learning (2011) Proceedings of the First International Workshop on Model-Driven Software Migration, pp. 38-47; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181; Gueheneuc, Y.-G., Guyomarch, J.-Y., Sahraoui, H., Improving design-pattern identification: A new approach and an exploratory study (2010) Software Quality Journal, 18 (1), pp. 145-174; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the 24rd International Conference on Software Engineering, pp. 338-348; Balanyi, Z., Ferenc, R., Mining design patterns from c++ source code (2003) Proceedings of the International Conference on Software Maintenance, pp. 305-314; Smith, J., Stotts, D., Spqr: Flexible automated design pattern extraction from source code (2003) Proceedings of the 18th IEEE International Conference on Automated Software Engineering, pp. 215-224; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196; Pettersson, N., Lowe, W., Nivre, J., Evaluation of accuracy in design pattern occurrence detection (2010) IEEE Transactions on Software Engineering, 36 (4), pp. 575-590; Arcelli, F., Zanoni, M., Caracciolo, A., A benchmark platform for design pattern detection (2010) Proceedings of the 2nd International Conference on Pervasive Patterns and Applications (PATTERNS); Gueheneuc, Y.-G., P-MARt: Pattern-like micro architecture repository (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories; Fulop, L., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering, pp. 143-152; Gueheneuc, Y.-G., P-mart: Pattern-like Micro-architecture Repository., , http://www.ptidej.net/tool/designpatterns; Tsoumakas, G., Katakis, I., Multi-label classification: An overview (2007) International Journal of Data Warehousing and Mining (IJDWM), 3 (3), pp. 1-13; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Dietrich, J., Elgar, C., A formal description of design patterns using owl (2005) Proceedings of the Australian Software Engineering Conference, pp. 243-250; Dietrich, J., Elgar, C., Towards a web of patterns (2007) Web Semantics: Science, Services and Agents on the World Wide Web, 5 (2), pp. 108-116; Finder [Design Pattern Detection], , https://wiki.cse.yorku.ca/project/dpd/finder; Ampatzoglou, A., Michou, O., Stamelos, I., Building and mining a repository of design pattern instances: Practical and research benefits (2012) Entertainment Computing; Easy Retrival and Adaption of Open Source Software Components, , http://www.percerons.com/cbse.html; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134; Dubey, S.K., Sharma, A., Comparison study and review on objectoriented metrics (2012) Global Journal of Computer Science and Technology, 12 (7); Jureczko, M., Spinellis, D., Using object-oriented design metrics to predict software defects (2010) Proceedings of the Fifth International Conference on Dependability of Computer Systems, Monographs of System Dependability, pp. 69-81; Duda, R., Hart, P., Stork, D., (2001) Pattern Classification, , Wiley; Dash, M., Liu, H., Feature selection for classification (1997) Intelligent Data Analysis, 1 (1-4), pp. 131-156; Arauzo-Azofra, A., Aznarte, J.L., Bentez, J.M., Empirical study of feature selection methods based on individual feature evaluation for classification problems (2011) Expert Systems with Applications, 38 (7), pp. 8170-8177; Kononenko, I., Estimating attributes: Analysis and extensions of relief (1994) Proceedings of the European Conference on Machine Learning, pp. 171-182; Tan, A.-H., Pan, H., Predictive neural networks for gene expression data analysis (2005) Neural Networks, 18 (3), pp. 297-306; Breiman, L., (1984) Classification and Regression Trees, , Wadsworth Inc; Zhao, Z., Liu, H., Spectral feature selection for supervised and unsupervised learning (2007) Proceedings of the 24th International Conference on Machine Learning, pp. 1151-1157; He, H., Garcia, E., Learning from imbalanced data (2009) IEEE Transactions on Knowledge and Data Engineering, 21 (9), pp. 1263-1284; He, H., Bai, Y., Garcia, E., Li, S., ADASYN: Adaptive synthetic sampling approach for imbalanced learning (2008) Proceedings of the IEEE International Joint Conference on Neural Networks, pp. 1322-1328; Stathakis, D., How many hidden layers and nodes (2009) International Journal of Remote Sensing, 30 (8), pp. 2133-2147; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Transactions on Systems, Man and Cybernetics, 39 (6), pp. 1271-1282; Zhou, Z.-H., Liu, X.-Y., Training cost-sensitive neural networks with methods addressing the class imbalance problem (2006) IEEE Transactions on Knowledge and Data Engineering, 18 (1), pp. 63-77; Niere, J., Wadsack, J., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension, pp. 274-279; Niere, J., Fuzzy logic based interactive recovery of software design (2002) Proceedings of the 24rd International Conference on Software Engineering, pp. 727-728","Centre for Computational Intelligence de Montfort University, Leicester, United Kingdom",,,,"2013 13th UK Workshop on Computational Intelligence, UKCI 2013",9 September 2013 through 11 September 2013,"Guildford, Surrey",101572,,9781479915682,,,English,"UK Workshop Comput. Intell., UKCI",Conference Paper,Scopus,2-s2.0-84891109219,,
TRUE,1,1,"Pérez, F., Valderas, P., Fons, J.",A domain-specific language for enabling doctors to specify biomechanical protocols,2013,"Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC",,,6645251,99,102,,,10.1109/VLHCC.2013.6645251,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891088125&partnerID=40&md5=978f2124d89182da465450ff15cc6209,"Escuela Politécnica Superior, Universidad San Jorge, Autovía A-23 Zaragoza-Huesca Km.299, 50830 Villanueva de Gállego (Zaragoza), Spain; Centro de Investigación en Métodos de Productión de Software, Universitat Politècnica de València, Camino de Vera, s/n, 46022 Valencia, Spain","Pérez, F., Escuela Politécnica Superior, Universidad San Jorge, Autovía A-23 Zaragoza-Huesca Km.299, 50830 Villanueva de Gállego (Zaragoza), Spain, Centro de Investigación en Métodos de Productión de Software, Universitat Politècnica de València, Camino de Vera, s/n, 46022 Valencia, Spain; Valderas, P., Centro de Investigación en Métodos de Productión de Software, Universitat Politècnica de València, Camino de Vera, s/n, 46022 Valencia, Spain; Fons, J., Centro de Investigación en Métodos de Productión de Software, Universitat Politècnica de València, Camino de Vera, s/n, 46022 Valencia, Spain","New technologies are entering medical practice at an astounding pace. However, these technologies often cause to doctors learn and use difficulties. Then, doctors require assistance of a biomedical engineer. This is currently happening in a local hospital that has new technology to analyze biomechanical protocols in patients. Protocols are used to measure performances and identify changes in human body movements and muscles. Doctors are neither familiar with the concepts nor tools used, so biomedical engineers carry out descriptions of protocols rather than doctors. In this paper, we present the design of a domain-specific language that enables doctors to specify biomechanical protocols by addressing learning barriers (using design patterns). We also make doctors' descriptions compatible with the existing tools, and we also support legacy biomedical descriptions (combining meta-modeling and model transformations). © 2013 IEEE.",,Design Patterns; Domain specific languages; Human body movement; Learning barriers; Medical practice; Metamodeling; Model transformation; Engineers; Problem oriented languages; Tools; Visual languages; Biomechanics,,,,,,"(2010) Increasing Complexity of Medical Technology and Consequences for Training and Outcome of Care, , W. H. Organization, Geneva : World Health Organization, August; Mernik, M., Heering, J., Sloane, A.M., When and how to develop domain-specific languages (2005) ACM Comput. Surv., 37 (4), pp. 316-344. , Dec; Ko, A.J., Myers, B.A., Aung, H.H., Six learning barriers in end-user programming systems (2004) VLHCC '04, pp. 199-206. , http://dx.doi.org/10.1109/VLHCC.2004.47, Proceedings of the 2004 IEEE Symposium on Visual Languages - Human Centric Computing, ser. Washington, DC, USA: IEEE Computer Society, [Online]. Available; Van Welie, M., Trtteberg, H., Interaction patterns in user interfaces (2000) PLoP 2000, pp. 13-16; Couper, M.P., Tourangeau, R., Conrad, F.G., Crawford, S.D., What they see is what we get: Response options for web surveys (2004) Soc. Sci. Comput. Rev., 22 (1), pp. 111-127; Galitz, W.O., (2002) The Essential Guide to User Interface Design: An Introduction to GUI Design Principles and Techniques, , New York, NY, USA: John Wiley & Sons, Inc; (2013), http://www.btsbioengineering.com/BTSBioengineering/Kinematics/ BTSSMARTANALYZER/BTSSMARTANALYZER.html, [Online]. Available","Escuela Politécnica Superior, Universidad San Jorge, Autovía A-23 Zaragoza-Huesca Km.299, 50830 Villanueva de Gállego (Zaragoza), Spain",,IEEE Computer Society;NSF;Microsoft Research;Nokia,,"2013 IEEE Symposium on Visual Languages and Human Centric Computing, VL/HCC 2013",15 September 2013 through 19 September 2013,"San Jose, CA",101514,19436092,9781479903689,,,English,"Proc. of IEEE Symp. Vis. Lang. Hum.-Cent. Comput., VL/HCC",Conference Paper,Scopus,2-s2.0-84891088125,,
TRUE,v,v,"Yu, D., Ge, J., Wu, W.",Detection of design pattern instances based on graph isomorphism,2013,"Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS",,,6615444,874,877,,,10.1109/ICSESS.2013.6615444,http://www.scopus.com/inward/record.url?eid=2-s2.0-84890033169&partnerID=40&md5=e7a26954fac625f52814c443cfd765f9,"School of Computer, Hangzhou Dianzi University, Hangzhou, China; Zhejiang Provincial Key Laboratory of Network Technology and Information Security, Hangzhou, China","Yu, D., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Ge, J., School of Computer, Hangzhou Dianzi University, Hangzhou, China; Wu, W., Zhejiang Provincial Key Laboratory of Network Technology and Information Security, Hangzhou, China","Detecting design pattern instances from source codes can assist the understanding of the systems. This paper presents an approach to the detection of design patterns based on graph isomorphism. We introduce two kinds of graphs, among which one represents the system design and the other describes the design patterns to be recovered. In order to detect instances of design patterns, we first identify in system graph all the candidate classes that correspond to the pattern classes. Afterwards we select some of candidate classes to form the sub-graphs of system graph, which are then checked isomorphic to the pattern graph or not. Those isomorphic sub-graphs are regarded to be corresponding to instances of the design patterns. The detection of decorator pattern is given as the example to show the effectiveness of the approach. © 2013 IEEE.",decorator pattern; dectection; design patterns; graph isomorphism,decorator pattern; dectection; Design Patterns; Graph isomorphism; Pattern class; Source codes; Subgraphs; Set theory; Software engineering; Graph theory,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Publishing Company, Reading, MA; Dong, L., Zhao, Y.J., Peng, T., A Review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering (IJSEKE), 19, pp. 823-855. , World Scientific Publishing; Krarner, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proceedings of the 3'd Working Conference on Date of Conference, p. 208. , IEEE Press, Monterey; Pande, A., Gupta, M., Tripath, A.K., A New approach for detecting design patterns by graph decomposition and graph isomorphism (2010) Communications in Computer and Information Science, 95, pp. 108-109. , Springer.Heidelberg; Pande, A., Gupta, M., Tripathi, A.X., DNIT-A New approach for design pattern detection (2010) International Conference on Computer and Communication Technology (ICCCT-2010), , proceedings to be published by the IEEE; Pande, A., Gupta, M., Design pattern detection using graph matching (2010) International Journal of Computer Engineering and Information Technology( IJCEIT), 15 (20), pp. 59-64","School of Computer, Hangzhou Dianzi University, Hangzhou, China",,,,"2013 4th IEEE International Conference on Software Engineering and Service Science, ICSESS 2013",23 May 2013 through 25 May 2013,Beijing,101371,23270586,9781467349970,,,English,"Proc.IEEE Int. Conf. Software Eng. Serv. Sci., ICSESS",Conference Paper,Scopus,2-s2.0-84890033169,,
TRUE,v,v,"Alhusain, S., Coupland, S., John, R., Kavanagh, M.",Design pattern recognition by using adaptive neuro fuzzy inference system,2013,"Proceedings - International Conference on Tools with Artificial Intelligence, ICTAI",,,6735303,581,587,,,10.1109/ICTAI.2013.92,http://www.scopus.com/inward/record.url?eid=2-s2.0-84897724593&partnerID=40&md5=81f097794d2e5698fcdbc635518a3c96,"Centre for Computational Intelligence, De Montfort University, Leicester, United Kingdom; Automated Scheduling Optimisation and Planning (ASAP) Group, University of Nottingham, Nottingham, United Kingdom; Emerald Hill Limited, Leicester, United Kingdom","Alhusain, S., Centre for Computational Intelligence, De Montfort University, Leicester, United Kingdom; Coupland, S., Centre for Computational Intelligence, De Montfort University, Leicester, United Kingdom; John, R., Automated Scheduling Optimisation and Planning (ASAP) Group, University of Nottingham, Nottingham, United Kingdom; Kavanagh, M., Emerald Hill Limited, Leicester, United Kingdom","Software design patterns describe recurring design problems and provide the essence of best practice solutions. It is useful and important, for various software engineering tasks, to know which design pattern is implemented where in a software design. However, this information is often lost due to poor or absent documentation, and so accurate recognition tools are required. The problem is that design patterns, given their abstract and vague nature, have a level of resistance to be automatically and accurately recognized. Although this vagueness or fuzziness can be captured and modelled by the fuzzy inference system, it has not yet been applied to solve this problem. This paper fills this gap by proposing an approach for design pattern recognition based on Adaptive Neuro Fuzzy Inference System. Our approach consists of two phases: space reduction phase and design pattern recognition phase. Both phases are implemented by ANFIS. We evaluate the approach by an experiment conducted to recognize six design patterns in an open source application. The results show that the approach is viable and promising. © 2013 IEEE.",ANFIS; machine learning; pattern recognition; Software design patterns,Adaptive neuro-fuzzy inference system; ANFIS; Design Patterns; Design problems; Fuzzy inference systems; Open source application; Software design patterns; Space reductions; Fuzzy systems; Learning systems; Pattern recognition; Software design; Tools; Problem solving,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language Towns, Buildings, Constructions, ser, , Center for Environmental Structure Berkeley, Calif: Center for Environmental Structure series. Oxford University Press; Brown, W., Malveau, R., McCormick, H.W.S., Mowbray, T.J., (1998) AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, , Wiley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns Elements of Reusable Object-Oriented Software, , Pearson Education; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) Proceedings of the 21st IEEE International Conference on Software Maintenance, pp. 295-304; Buschmann, F., (1999) Pattern Oriented Software Architecture: A System of Patters, , John Wiley & Sons; Arcelli, F., A tool for design pattern detection and software architecture reconstruction (2011) Information Sciences, 181 (7), pp. 1306-1324. , Fontana and M. Zanoni; Balanyi, Z., Ferenc, R., Mining design patterns from c++ source code (2003) Proceedings of the International Conference on Software Maintenance, pp. 305-314; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Ampatzoglou, A., Charalampidou, S., Stamelos, I., Research state of the art on GoF design patterns: A mapping study (2013) Journal of Systems and Software, 86 (7); Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Software & Systems Modeling, 4 (1), pp. 55-70; Gueheneuc, Y.-G., Guyomarch, J.-Y., Sahraoui, H., Improving design-pattern identification: A new approach and an exploratory study (2010) Software Quality Journal, 18 (1), pp. 145-174; Pettersson, N., Lowe, W., Nivre, J., Evaluation of accuracy in design pattern occurrence detection (2010) IEEE Transactions on Software Engineering, 36 (4), pp. 575-590; Jang, J.-S.R., ANFIS: Adaptive-network-based fuzzy inference system,"" Systems, Man and Cybernetics (1993) IEEE Transactions on, 23 (3), pp. 665-685; Alhusain, S., Coupland, S., John, R., Kavanagh, M., Towards machine learning based design pattern recognition (2013) Proceedings of the 13th Annual UK Workshop on Computational Intelligence; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the 24rd International Conference on Software Engineering, pp. 338-348; Niere, J., Fuzzy logic based interactive recovery of software design (2002) Proceedings of the 24rd International Conference on Software Engineering, pp. 727-728; Dubois, D., Prade, H., Possibility theory, probability theory and multiple-valued logics: A clarification (2001) Annals of Mathematics and Artificial Intelligence, 32 (1-4), pp. 35-66; Zanoni, M., Data mining techniques for design pattern detection (2012) Ph.D. Dissertation, , Universit̀a degli Studi di Milano-Bicocca; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181; Uchiyama, S., Washizaki, H., Fukazawa, Y., Kubo, A., Design pattern detection using software metrics and machine learning (2011) Proceedings of the First International Workshop on Model-Driven Software Migration, pp. 38-47; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196; Dubey, S.K., Sharma, A., Comparison study and review on object-oriented metrics (2012) Global Journal of Computer Science and Technology, 12 (7); Jureczko, M., Spinellis, D., Using object-ori ented design metrics to predict software defects (2010) Proceedings of the Fifth International Conference on Dependability of Computer Systems, Monographs of System Dependability, pp. 69-81; Dash, M., Liu, H., Feature selection for classification (1997) Intelligent Data Analysis, 1 (1-4), pp. 131-156; Kononenko, I., Estimating attributes: Analysis and extensions of relief (1994) Proceedings of the European Conference on Machine Learning, pp. 171-182; Tan, A.-H., Pan, H., Predictive neural networks for gene expression data analysis (2005) Neural Networks, 18 (3), pp. 297-306; Breiman, L., (1984) Classification and Regression Trees, , Wadsworth Inc; Zhao, Z., Liu, H., Spectral feature selection for supervised and unsupervised learning (2007) Proceedings of the 24th International Conference on Machine Learning, pp. 1151-1157; Chiu, S.L., Fuzzy model identification based on cluster estimation (1994) Journal of Intelligent and Fuzzy Systems, 2 (3), pp. 267-278; He, H., Garcia, E., Learning from imbalanced data (2009) IEEE Transactions on Knowledge and Data Engineering, 21 (9), pp. 1263-1284; He, H., Bai, Y., Garcia, E., Li, S., ADASYN: Adaptive synthetic sampling approach for imbalanced learning (2008) Proceedings of the IEEE International Joint Conference on Neural Networks, pp. 1322-1328; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Transactions on Systems, Man and Cybernetics, 39 (6), pp. 1271-1282; Gueheneuc, Y.-G., P-MARt: Pattern-like micro architecture repository (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories; Lebon, M., Tzerpos, V., Fine-grained design pattern detection (2012) Proceedings of the IEEE 36th International Conference on Computer Software and Applications, pp. 267-272","Centre for Computational Intelligence, De Montfort University, Leicester, United Kingdom",,Biological and Artificial Intelligence Foundation (BAIF);IEEE Computer Society;ATRC at Wright State University;George Mason University;IEEE in NJ,,"25th IEEE International Conference on Tools with Artificial Intelligence, ICTAI 2013",4 November 2013 through 6 November 2013,"Washington, DC",103029,10823409,9781479929719,PCTIF,,English,Proc. Int. Conf. Tools Artif. Intell. ICTAI,Conference Paper,Scopus,2-s2.0-84897724593,,
TRUE,4,4,"Chaturvedi, A., Prabhakar, T.V.",Ontology driven creational design patterns - Creating objects on the fly,2013,"Proceedings of the 2013 Research in Adaptive and Convergent Systems, RACS 2013",,,,365,372,,,10.1145/2513228.2513243,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891401130&partnerID=40&md5=e6d32aaa8ae267125a4ec508b60293a4,"Department of Computer Science and Engineering, Indian Institute of Technology, Kanpur, Uttar Pradesh, India","Chaturvedi, A., Department of Computer Science and Engineering, Indian Institute of Technology, Kanpur, Uttar Pradesh, India; Prabhakar, T.V., Department of Computer Science and Engineering, Indian Institute of Technology, Kanpur, Uttar Pradesh, India",We have explored the use of a generic ontology component to separate and encapsulate the design pattern logic of the GoF creational design patterns. We used a unique generic ontology as a runtime component in the creational patterns and then analyzed and compared the implementations with that of traditional GoF creational patterns. We concluded after experimental analysis that ontology driven solutions to creational design patterns not only mitigate the drawbacks identified in the creational patterns but also make the patterns a plug and play component whereby the desired objects can be created on the fly. © 2013 ACM.,adaptability; creational design patterns; GoF design patterns; maintainability; ontology; reusability,adaptability; Design Patterns; Experimental analysis; On the flies; Plug and play; Runtimes; Maintainability; Ontology; Reusability,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns Elements of Reusable Object-Oriented Software, , Addison-Wesley; Soukup, J., Implementing Patterns (1995) Pattern Languages of Program Design, pp. 395-412. , Coplien J. O., Schmidt, D. C. (eds.) Addison Wesley; Budinsky, F., Finnie, M., Yu, P., Vlissides, J., Automatic code generation from Design Patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171; Gruber, T., A translation approach to portable ontology specification (1993) Knowledge Acquisition, 5 (2), pp. 199-220; Hannemann, J., Kiczales, G., Design Pattern Implementation in Java and AspectJ (2002) Proceedings of the 17th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications (OOPSLA'02), 37 (11), pp. 161-173; Garcia, A., Sant'Anna, C., Figueiredo, E., Kulesza, U., Lucena, C., Staa, A., Modularizing Design Patterns with Aspects: A Quantitative Study (2005) LNCS Transactions on Aspect-Oriented Software Development, 1, pp. 36-74. , Springer; Noble, J., Natural Creation - A composite pattern for creating objects (1999) Proceedings of Technology of Object Oriented Languages and Systems (TOOLS), pp. 78-88; Chaturvedi, A., Prabhakar, T.V., Ontology - Driven MVC: A Variant of MVC Architectural Style (2012) Proceedings of the International Conference on Software Engineering and New Technologies (ICSENT'12), pp. 158-174. , Hammamet, Tunisia; Chaturvedi, A., Prabhakar, T.V., Ontological Visitor Pattern (2013) Indian Conference on Patterns and Pattern Languages of Programs (GuruPLoP'13), Bangalore, India; Chaturvedi, A., Prabhakar, T.V., Ontology - Driven Observer Pattern (2013) Proceedings of the International Workshop on Ontologies Meet Advanced Information Systems (OAIS'13), pp. 158-174. , Springer International Publishing Switzerland, Genoa, Italy; Protégé Ontology Editor, , http://protege.stanford.edu/, Accessed on 5 March 2012","Department of Computer Science and Engineering, Indian Institute of Technology, Kanpur, Uttar Pradesh, India",,ACM Special Interest Group on Applied Computing (ACM SIGAPP);Association of Convergent Computing Technology (ACCT);Concordia University;Seoul National University;Korean Institute of Information Scientists and Engineers (KIISE) Special Interest Group on Dependabl;Winway Systems,,"2013 Research in Adaptive and Convergent Systems, RACS 2013",1 October 2013 through 4 October 2013,"Montreal, QC",101542,,9781450323482,,,English,"Proc. Res. Adapt. Convergent Syst., RACS",Conference Paper,Scopus,2-s2.0-84891401130,,
TRUE,4,4,"Šelmeci, R., Rozinajová, V.",SOA design patterns - Can they improve the process of model driven development?,2013,"Proceedings - IEEE 10th International Conference on Services Computing, SCC 2013",,,6649769,753,754,,,10.1109/SCC.2013.117,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891929579&partnerID=40&md5=b60034c9a90bff2610311b95a601cf6f,"Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia","Šelmeci, R., Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia; Rozinajová, V., Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia","SOA brought significant progress in information systems development, but the full exploitation of its advantages is sometimes hindered by specific problems. One of them is concerned with paradigm of Model Driven Development (MDD), where it is necessary to control correctness of the whole design within many models on different levels of abstraction. This is the place, where we would like to contribute. We propose a new approach to application of SOA design patterns in the development process. Patterns are transformed into a machine acceptable form using category theory and attributed graphs. This form is language independent, leads up to automated detection of pattern or antipattern in the description/model of SOA based system and in the future can facilitate also correctness checking. © 2013 IEEE.",attributed graph; design pattern; Model Driven Development; Service Oriented Architecture; structural modelling,Attributed graphs; Automated detection; Design Patterns; Information systems development; Language independents; Levels of abstraction; Model driven development; Structural modelling; Information services; Service oriented architecture (SOA),,,,,,"Bottoni, P., Guerra, E., De Lara, J., A language-independent and formal approach to pattern-based modelling with support for composition and analysis (2010) Information and Software Technology, 52, pp. 821-844; Erl, T., (2009) SOA Design Patterns, , Prentice Hall PTR; Wang, Y., Huang, J., Formal Modeling and Specification of Design Patterns Using RTPA (2009) Software Applications: Concepts, Methodologies, Tools, and Applications, pp. 635-647. , Tiako, P.F., ed.: IGI Global; Zdun, U., Dustdar, S., Model-driven and pattern-based integration of process-driven SOA models (2007) International Journal of Business Process Integration and Management, 2, pp. 109-119","Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia",,IEEE Computer Society,,"2013 IEEE 10th International Conference on Services Computing, SCC 2013",27 June 2013 through 2 July 2013,"Santa Clara, CA",101605,,9780768550268,,,English,"Proc. - IEEE Int. Conf. Serv. Comput., SCC",Conference Paper,Scopus,2-s2.0-84891929579,,
TRUE,4,4,"Rosa, N.S.",Formalising middleware systems: A design pattern-based approach,2013,Proceedings - International Computer Software and Applications Conference,,,6649895,658,667,,,10.1109/COMPSAC.2013.105,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891302355&partnerID=40&md5=667e7bd4eeb7144544ab0955407f1800,"Universidade Federal de Pernambuco, Centro de Informática, Recife, Pernambuco, Brazil","Rosa, N.S., Universidade Federal de Pernambuco, Centro de Informática, Recife, Pernambuco, Brazil","Middleware systems are widely recognized as complex software systems. The origin of this complexity is mainly related to the need of providing distribution transparencies (e.g., location, access, mobility) and services (e.g., naming, security, concurrency control) to distributed application developers. This complexity suggests the use of formal methods that can help in both understanding of the middleware's behavior and checking of desired middleware properties. Due to the aforementioned complexity, the formalization itself is also not a trivial task. In this context, this paper presents an approach to formalize middleware systems centered on the formalization and composition of middleware design patterns. In order to illustrate the proposed approach, we formalize and check properties of an object oriented middleware. © 2013 IEEE.",Design Patterns; Formal Specification; Middleware,Complex software systems; Design Patterns; Distributed applications; Formal Specification; Middleware design; Middleware system; Object-oriented middleware; Concurrency control; Middleware,,,,,,"Basin, David, Rittinger, Frank, Viganò, L., A formal analysis of the corba security service (2002) Lecture Notes in Computer Science, (2272), pp. 330-349; Bastide, Rèmi, Palanque, Philippe, Sy, Ousmane, Navarre, David, Formal specification of corba services: Experience and lessons learned (2000) OPSLA'00, pp. 105-117; Bastide, Rèmi, Sy, Ousmane, Navarre, David, Palanque, Philippe, A formal specification of the corba event service (2000) FMOODS'00, pp. 371-396; Bayley, I., Zhu, H., Formal specification of the variants and behavioral features of design patterns (2010) J. Syst. Softw, 83, pp. 209-221; Bolognesi, T., Brinksma, E., Introduction to the iso specification language lotos (1987) Computer Networks and ISDN Systems, 14, pp. 25-59; Buschman, F., Henney, K., Schmidt, D.C., (2007) Pattern-Oriented Software Architecture-A Pattern Language for Distributed Computing, 4. , John Wiley &Sons Ltd; http://www.inrialpes.fr/vasy/cadp, CADP ToolboxCampbell, Andrew, T., Coulson, Geoff, Kounavis, Michael, E., Managing complexity: Middleware explained (1999) IT Professional, IEEE Computer Society, 1 (5), pp. 22-28. , October; Dietrich, J., Elgar, C., A formal description of design patterns using OWL (2005) 'Proc. Australian Software Engineering Conf, pp. 243-250; Dwyer, M.B., Avrunin, G.S., Corbett, J.C., Patterns in property specifications for finite-state verification (1999) 'Proceedings of the 21st International Conference on Software Engineering, pp. 411-420. , ACM, New York, NY, USA; Gamma, E., Helm, R., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Flores, A., Moore, R., Reynoso, L., A formal model of object-oriented design and gof design patterns (2001) 'Proceedings of the International Symposium of Formal Methods Europe on Formal Methods for Increasing Software Productivity, pp. 223-241. , Springer-Verlag, London, UK; Giovanny, F., Lucero, J.Q., Specifying the odp trader: An introduction to e-lotos (1997) 'Formal Techniques for Networked and Distributed Systems (FORTE), pp. 127-142; Huang, J., Wang, Y., Formal specification and representation of design patterns using rtpa (2006) 'Proc. 5th IEEE Int. Conf. Cognitive Informatics ICCI 2006, pp. 370-379; (1995) ITU-T X. 901 | ISO/IEC 10746-1 ODP Reference Model Part 1. Overview, , ISO ISO, Technical report, ISO; Dong, J., Alencar, P.S.C., Composing pattern-based components and verifying correctness (2007) Journal of Systems and Software, 11 (80), pp. 1755-1769; Kreuz, Detlef, Formal specification of corba services using object-z (1998) Second IEEE International Conference on Formal Engineering Methods, pp. 180-189; McC Smith, J., Stotts, D., Elemental design patterns: A formal semantics for composition of OO software architecture (2002) 'Proc. 27th Annual NASA Goddard/IEEE Software Engineering Workshop, pp. 183-190; Soundarajan, N., Hallstrom, J.O., Responsibilities and rewards: Specifying design patterns (2004) ICSE '04: Proceedings of the 26th International Conference on Software Engineering, pp. 666-675. , Washington, DC, USA; Soundarajan, N., Hallstrom, J.O., Shu, G., Delibas, A., Patterns: From system design to software testing (2008) Innovations in Systems and Software Engineering, 4 (1), pp. 71-85. , April; Nicholson, J., Gasparis, E., Eden, A.H., Kazman, R., Automated verification of design patterns with lepus3 (2009) 'First NASA Formal Methods Symposium (NFM 2009), pp. 1-10; Singh, P.B., Chaudhary, B.D., Structural formalization of design-pattern based software design (2009) 'Proceedings of the 2009 Third International Conference on Digital Society, pp. 283-288. , IEEE Computer Society, Washington, DC, USA; Singh, B., (2008) A Formal Model of Pattern-based Design, , Master's thesis, Motilal Nehru National Institute of Technology; Rosa, Nelson, Cunha, Paulo, A software architecture-based approach for formalising middleware behavior (2004) Electronic Notes in Theoretical Computer Science, 108, pp. 39-51; Saeki, M., Behavioral specification of gof design patterns with lotos (2000) 'Proceedings of the Seventh Asia-Pacific Software Engineering Conference, pp. 408-. , IEEE Computer Society, Washington, DC, USA; Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., (2006) Pattern-Oriented Software Architecture-Patterns for Concurrent and Networked Objects, 2. , John Wiley &Sons Ltd; Schmidt, Douglas, Buschmann, Frank, Patterns, frameworks, and middleware: Their synergistic relationships (2003) Proceedings of the 25th International Conference on Software Engineering, pp. 694-704; Taibi, T., Formal specification of design patterns and their instances (2006) 'Ieee International Conference on Computer Systems and Applications, pp. 33-36; Taibi, T., Formalising design patterns composition (2006) IEE Proceedings Software, 3 (153), pp. 127-136; Taibi, T., Formal specification of design patterns-A balanced approach (2003) Journal of Object Technology, 2 (4), pp. 127-140; Venkatasubramanian, Nalini, Safe composability of middleware services (2002) Communications of the ACM, 45 (6), pp. 49-52. , June; Vinoski, Steve, Where is middleware (2002) IEEE Internet Computing, 6 (2), pp. 83-85; Vissers, C.A., Scollo, G., Van Sinderen, M., Architecture and specification style in formal descriptions of distributed systems (1991) Theoretical Computer Science, 89, pp. 179-206; Volter, M., Kircher, M., Zdun, U., (2005) Remoting Patterns: Foundations of Enterprise, , Internet and Real Time Distributed Object Middleware, John Wiley &Sons Ltd; Vu, N.-C., Wang, Y., Specification of design patterns using real-time process algebra (RTPA) (2004) 'Proc. Canadian Conf. Electrical and Computer Engineering, pp. 1545-1548; Zdun, U., Kircher, M., Volter, M., Remoting patterns: Design reuse of distributed object middleware solutions (2004) IEEE Internet Computing, 8 (6), pp. 60-68","Rosa, N.S.; Universidade Federal de Pernambuco, Centro de Informática, Recife, Pernambuco, Brazil; email: nsr@cin.ufpe.br",,IEEE Computer Society,,"2013 IEEE 27th International Parallel and Distributed Processing Symposium Workshops and PhD Forum, IPDPSW 2013",20 May 2013 through 24 May 2013,"Boston, MA",101626,7303157,,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-84891302355,,
TRUE,v,v,"Wegrzynowicz, P., Stencel, K.",Relaxing queries to detect variants of design patterns,2013,"2013 Federated Conference on Computer Science and Information Systems, FedCSIS 2013",,,6644226,1571,1578,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84892517310&partnerID=40&md5=3aa2b1de061efe804a810b425b4ecd28,"Institute of Informatics, University of Warsaw, Banacha 2, Warsaw, 02-097, Poland","Wegrzynowicz, P., Institute of Informatics, University of Warsaw, Banacha 2, Warsaw, 02-097, Poland; Stencel, K., Institute of Informatics, University of Warsaw, Banacha 2, Warsaw, 02-097, Poland","Design patterns codify general solutions to frequently encountered design problems. They also facilitate writing robust and readable code. Their usage happens to be particularly profitable if the documentation of the resulting system is lost, inaccurate or out of date. In reverse engineering, detection of instances of design patterns is extremely helpful as it aids grasping high level design ideas. However, the actual instances of design patterns can diverge from their canonical textbook templates. Useful pattern detection tools should thus be able to identify not only orthodox implementations but also their disparate variants. In this paper, we present a method to generate queries to detect canonical instances of design patters. We formulate these queries so that they are language-agnostic. They precisely reflect the intents of the canonical implementations of design patterns. However, they abstract from any peculiarities of programming languages. Next, we show a systematic technique to relax these queries so that they also cover variant implementations of patterns. We discuss our proof-of-concept implementation of this approach in our prototype tool D-CUBED. Finally, we report the results of an experimental comparison of D-CUBED and state-of-the-art detectors. © 2013 Polish Information Processing Society.",,Design Patterns; Design problems; Experimental comparison; General solutions; High-level design; Proof of concept; Prototype tools; Useful patterns; Computer science; Design; Information systems; Reverse engineering; Java programming language,,,,,,"Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., (1994) Design Patterns, , Addison-Wesley; Niere, J., Wendehals, L., (2003) An Interactive and Scalable Approach to Design Pattern Recovery, , Tech. Rep; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE '02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA: ACM; Niere, J., Wadsack, J.P., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) IWPC '03: Proceedings of the 11th IEEE International Workshop on Program Comprehension, p. 274. , Washington, DC, USA: IEEE Computer Society; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in java (2005) ASE '05: Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, pp. 224-232. , New York, NY, USA: ACM; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE '06: Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134. , Washington, DC, USA: IEEE Computer Society; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) IWPC, pp. 94-104. , IEEE Computer Society; Fabry, J., Mens, T., Language independent detection of objectoriented design patterns (2004) Computer Languages, Systems and Structures, 30 (1-2), pp. 21-33; Smith, J., Stotts, D., (2005) Formalized Design Pattern Detection and Software Achitecture Analysis, , Dept. of Computer Science, University of North Carolina, Tech. Rep. TR05-012; Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) ASE, pp. 166-173. , IEEE Computer Society; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) ICSM '03: Proceedings of the International Conference on Software Maintenance, p. 305. , Washington, DC, USA: IEEE Computer Society; Ferenc, R., Gustafsson, J., Müller, L., Paakki, J., Recognizing design patterns in C++ programs with integration of columbus and maisa (2002) Acta Cybern., 15 (4), pp. 669-682; Stencel, K., Wegrzynowicz, P., Detection of diverse design pattern variants (2008) APSEC '08: Proceedings of the 2008 15th Asia-Pacific Software Engineering Conference, pp. 25-32. , Washington, DC, USA: IEEE Computer Society; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection (2006) First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE'06, , http://cs.msi.vxu.se/papers/PLN2006a.pdf, October; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Software Maintenance and Reengineering, European Conference on, 0, pp. 143-152; Stencel, K., Wegrzynowicz, P., Implementation variants of the singleton design pattern (2008) OTM Workshops, Ser. Lecture Notes in Computer Science, 5333, pp. 396-406. , R. Meersman, Z. Tari, and P. Herrero, Eds.Springer; Stencel, K., Wegrzynowicz, P., Visitor pattern revisited for recognition (2008) ADBIS (Local Proceedings, pp. 154-166. , P. Atzeni, A. Caplinskas, and H. Jaakkola, Eds. Tampere University of Technology. Pori. Publication; Wegrzynowicz, P., Stencel, K., Towards a comprehensive test suite for detectors of design patterns (2009) ASE, pp. 103-110. , IEEE Computer Society; Horn, A., On sentences which are true of direct unions of algebras (1951) J. Symb. Log., 16 (1), pp. 14-21; Wegrzynowicz, P., Stencel, K., The good, the bad, and the ugly: Three ways to use a semantic code query system (2009) OOPSLA Companion, pp. 821-822. , S. Arora and G. T. Leavens, Eds. ACM; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE, pp. 123-134. , IEEE Computer Society; Gamma, E., Eggenschwiler, T., http://www.jhotdraw.org/, 1996-2008Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Software Eng., 32 (11), pp. 896-909; Brown, K., (1997) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Master's thesis, University of Illinois at Urbana Campaign; Prechelt, L., Krämer, C., Functionality versus practicality: Employing existing tools for recovering structural design patterns (1998) J. UCS, 4 (11), pp. 866-882; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) WCRE '04: Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181. , Washington, DC, USA: IEEE Computer Society; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) ICSM '05: Proceedings of the 21st IEEE International Conference on Software Maintenance, pp. 295-304. , Washington, DC, USA: IEEE Computer Society; Bansiya, J., Automating design-pattern identification (1998) Dr. Dobbs Journal; Keller, R.K., Schauer, R., Robitaille, S., Pag, P., Pattern-based reverse-engineering of design components (1999) ICSE '99: Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , Los Alamitos, CA, USA: IEEE Computer Society Press; Binun, A., Kniesel, G., DPJF-Design pattern detection with high accuracy (2012) CSMR, pp. 245-254. , T. Mens, A. Cleve, and R. Ferenc, Eds. IEEE","Institute of Informatics, University of Warsaw, Banacha 2, Warsaw, 02-097, Poland",,Ministry of Science and Higher Eduction;Intel,,"2013 Federated Conference on Computer Science and Information Systems, FedCSIS 2013",8 September 2013 through 11 September 2013,Krakow,102014,,9781467344715,,,English,"Fed. Conf. Comput. Sci. Inf. Syst., FedCSIS",Conference Paper,Scopus,2-s2.0-84892517310,,
FALSE,1,4,"Steinegger, M., Zoitl, A., Fein, M., Schitter, G.",Design patterns for separating fault handling from control code in discrete manufacturing systems,2013,IECON Proceedings (Industrial Electronics Conference),,,6699838,4368,4373,,,10.1109/IECON.2013.6699838,http://www.scopus.com/inward/record.url?eid=2-s2.0-84893621302&partnerID=40&md5=b6793530b0d2c6691e2023c32dbe5f6b,"Automation and Control Institute, Vienna University of Technology, Gußhausstraße 27-29, AT-1040 Vienna, Austria; Fortiss GmbH, Guerickestraße 25, DE-80805 Munich, Germany","Steinegger, M., Automation and Control Institute, Vienna University of Technology, Gußhausstraße 27-29, AT-1040 Vienna, Austria; Zoitl, A., Fortiss GmbH, Guerickestraße 25, DE-80805 Munich, Germany; Fein, M., Automation and Control Institute, Vienna University of Technology, Gußhausstraße 27-29, AT-1040 Vienna, Austria; Schitter, G., Automation and Control Institute, Vienna University of Technology, Gußhausstraße 27-29, AT-1040 Vienna, Austria","The objective of this paper is to propose a methodology for strictly separating fault detection and fault handling methods from control code in discrete manufacturing systems. In order to enable the separation, two different design patterns are elaborated. Based on an analysis of typical faults in manufacturing systems, a library of reusable function blocks for fault detection, handling, and also fault recovery is developed. These function blocks are implemented according to the international standard IEC 61499 and are applied within the design patterns. The design patterns are evaluated with the sequential control of an injection molding machine. It is shown, that the design patterns simplify the engineering and the separation of the fault detection and fault handling from control code significantly, since they provide clear design rules. Applying the proposed design patterns reduces the complexity of industrial control applications drastically. Furthermore, the function block library provides reusable and proven fault detection and fault handling methods. © 2013 IEEE.",,Design Patterns; Discrete manufacturing systems; Fault recovery; Function Block; Industrial control applications; International standards; Sequential control; Typical faults; Fault detection; Industrial electronics; Manufacture; Standards; Separation,,,,,,"Smith, R.E., Gini, M., Reliable realtime robot operation employing intelligent forward recovery (1986) Journal of Robotic Systems, 3 (3), pp. 281-300; Güttel, K., (2013) Konzept Zur Generierung von Steuerungscode Für Fertigungsanlagen Unter Verwendung Wissensbasierter Methoden [German], Ser. VDI Fortschritt-Berichte, 444. , A. Fay and K. Krüger, Eds. VDI Verlag; Brandl, D., Design patterns for flexible manufacturing (2006) International Society of Automation (ISA); Christensen, J., Design patterns for systems engineering in iEC 61499 (2000) Fachtagung Verteilte Automatisierung, pp. 269-276; Lee, S., Tilbury, D., A modular control design method for a flexible manufacturing cell including error handling (2007) International Journal of Flexible Manufacturing Systems, 19 (3), pp. 308-330; Ferrarini, L., Allevi, M., Dedé, A., A methodology for fault isolation and identification in automated equipments (2011) Proc. of the 9th IEEE Int. Conf. on Industrial Informatics, pp. 157-162; Ferrarini, L., Allevi, M., Dedé, A., Design and implementation of an automatic on-line diagnosis with tiDiaM and tiDE (2010) Proc. of the 15th IEEE Int. Conf. on Emerging Technologies and Factory Automation, pp. 1-6; Serna, F., Catalán, C., Blesa, A., Rams, J., Design patterns for failure management in iEC 61499 function blocks (2010) Proc. of the 15th IEEE Int. Conf. on Emerging Technologies and Factory Automation, pp. 1-7; (2005) IEC 61499-Function blocks, part 1:Architecture, , Int. Electrotechnical Commision, January; Luo, Z., Sheth, A., Kochut, K., Miller, J., Exception handling in workflow systems (2000) Applied Intelligence, 13, pp. 125-147; Hagen, C., Alonso, G., Exception handling in workflow management systems (2000) IEEE Transactions on Software Engineering, 26 (10), pp. 943-958; Li, J., Mai, Y., Butler, G., Implementing exception handling policies for workflow management system (2003) 10th Asia-Pacific Software Engineering Conference, pp. 564-573; Russell, N., Aalst, W., Hofstede, A., Workflow exception patterns (2006) Advanced Information Systems Engineering, Ser. Lecture Notes in Computer Science, 4001, pp. 288-302. , E. Dubois and K. Pohl, Eds. Springer Berlin Heidelberg; Isermann, R., Ballé, P., Trends in the application of model-based fault detection and diagnosis of technical processes (1997) Control Engineering Practice, 5 (5), pp. 709-719; Sünder, C., Zoitl, A., Rainbauer, M., Favre-Bulle, B., Hierarchical control modelling architecture for modular distributed automation systems (2006) IEEE Int. Conf. on Industrial Informatics, pp. 12-17; Sünder, C., Zoitl, A., Christensen, J., Steininger, H., Fritsche, J., Considering iEC 61131-3 and iEC 61499 in the context of component frameworks (2008) Proc. of the 6th IEEE Int. Conf. on Industrial Informatics, pp. 277-282; Zoitl, A., Prähofer, H., Building hierarchical automation solutions in the iEC 61499 modeling language (2011) Proc. of the 9th IEEE Int. Conf. on Industrial Informatics, pp. 557-564; Prähofer, H., Hurnaus, D., Schatz, R., Wirth, C., Mössenböck, H., Monaco:A dSL approach for programming automation systems (2008) Conference on Software Engineering, pp. 242-256","Automation and Control Institute, Vienna University of Technology, Gußhausstraße 27-29, AT-1040 Vienna, Austria",,The Institute of Electrical and Electronics Engineers (IEEE);IEEE Industrial Electronics Society (IES);Austrian Institute of Technology (AIT);Vienna University of Technology (TU Vienna),,"39th Annual Conference of the IEEE Industrial Electronics Society, IECON 2013",10 November 2013 through 14 November 2013,Vienna,102387,,9781479902248,IEPRE,,English,IECON Proc,Conference Paper,Scopus,2-s2.0-84893621302,,
TRUE,v,v,"Bernardi, M.L., Cimitile, M., Di Lucca, G.A.",A model-driven graph-matching approach for design pattern detection,2013,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,6671292,172,181,,2,10.1109/WCRE.2013.6671292,http://www.scopus.com/inward/record.url?eid=2-s2.0-84893364877&partnerID=40&md5=6f58b6db368d4f5013655104c3d982a0,"Department of Engineering University of Sannio, Italy, Italy; Faculty of Economics, Unitelma Sapienza University, Italy","Bernardi, M.L., Department of Engineering University of Sannio, Italy, Italy; Cimitile, M., Faculty of Economics, Unitelma Sapienza University, Italy; Di Lucca, G.A., Department of Engineering University of Sannio, Italy, Italy","In this paper an approach to automatically detect Design Patterns (DPs) in Object Oriented systems is presented. It allows to link system's source code components to the roles they play in each pattern. DPs are modelled by high level structural properties (e.g. inheritance, dependency, invocation, delegation, type nesting and membership relationships) that are checked against the system structure and components. The proposed metamodel also allows to define DP variants, overriding the structural properties of existing DP models, to improve detection quality. The approach was validated on an open benchmark containing several open-source systems of increasing sizes. Moreover, for other two systems, the results have been compared with the ones from a similar approach existing in literature. The results obtained on the analyzed systems, the identified variants and the efficency and effectiveness of the approach are thoroughly presented and discussed. © 2013 IEEE.",Design Patterns Mining; Reverse Engineering; Software Comprehension; Source Code Analysis,Design pattern (DPs); Design pattern detections; Design Patterns; Object-oriented system; Open source system; Software comprehension; Source code analysis; System structures; Structural properties; Reverse engineering,,,,,,"Prechelt, M.P.L., Unger-Lamprecht, B., Tichy, W., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Trans. Softw. Eng, 28 (6), pp. 595-606; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng, 32 (11), pp. 896-909. , Nov; Smith, J.M., Stotts, D., Spqr: Flexible automated design pattern extraction from source code (2003) Proc. 18th IEEE International Conference on Automated Software Engineering, pp. 215-224. , Oct. 6-10; Bernardi, M.L., Cimitile, M., Di Lucca, G., Model driven design pattern mining using graph-matching heuristic approach (2012) Software Engineering Technical Report RCOST, , http://www.rcost.unisannio.it/ingsoft/dpf, University of Sannio, Benevento; Gueheneuc, Y.G., (2007) P-mart: Pattern-like Micro Architecture Repository; Arcelli Fontana, F., Caracciolo, A., Zanoni, M., Dpb: A benchmark for design pattern detection tools (2012) Software Maintenance and Reengineering (CSMR), 2012 16th European Conference on, pp. 235-244; Bernardi, M.L., Di Lucca, G.A., Model-driven detection of design patterns (2010) Proceedings of the 26th IEEE International Conference on Software Maintenance, pp. 12-18. , ser. ICSM 10, September, Timioara, Romania; Dong, J., Zhao, Y., Peng, T., Architecture and design pattern discovery techniques -A review (2007) Software Engineering Research and Practice, pp. 621-627. , H. R. Arabnia and H. Reza, Eds. CSREA Press; Rasool, G., Streitfdert, D., A survey on design pattern recovery techniques (2011) IJCSI International Journal of Computer Science Issues, 8 (2), pp. 251-260; Rasool, G., Philippow, I., Mader, P., Design pattern recovery based on annotations (2010) Adv. Eng. Softw, 41 (4), pp. 519-526. , Apr; Stencel, K., Wegrzynowicz, P., Detection of diverse design pattern variants (2008) Proceedings of the 15th Asia-Pacific Software Engineering Conference, pp. 25-32. , ser. APSEC 08. Washington, DC, USA IEEE Computer Society; Lee, H., Youn, H., Lee, E., Automatic detection of design pattern for reverse engineering (2007) Proceedings of the 5th ACIS International Conference on Software Engineering Research, Management & Applications, pp. 577-583. , ser. SERA 07. Washington, DC, USA IEEE Computer Society; Von Detten, M., Becker, S., Combining clustering and pattern detection for the reengineering of component-based software systems (2011) Proceedings of the Joint ACM SIGSOFT Conference -QoSA and ACM SIGSOFT Symposium -ISARCS on Quality of Software Architectures -QoSA and Architecting Critical Systems ISARCS, pp. 23-32. , ser. QoSA-ISARCS 11. New York, NY, USA: ACM; Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A.I., Software metrics by architectural pattern mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress, pp. 325-332; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th International Workshop on Program Comprehension, p. 153. , ser. IWPC 98. Washington, DC, USA IEEE Computer Society; Gueheneuc, Y.G., Guyomarch, J.Y., Sahraoui, H., Improving design-pattern identification: A new approach and an exploratory study (2010) Software Quality Control, 18 (1), pp. 145-174. , Mar; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) Trans. Sys. Man Cyber. Part A, 39 (6), pp. 1271-1282. , Nov; Arcelli, F., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Inf. Sci, 181 (7), pp. 1306-1324. , http://dx.doi.org/10.1016/j.ins.2010.12.002, Apr; Tonella, P., Torchiano, M., Du Bois, B., Systa, T., Empirical studies in reverse engineering: State of the art and future trends (2007) Empirical Softw. Engg, 12 (5), pp. 551-571. , Oct; Heering, J., Hendriks, P.R.H., Klint, P., Rekers, J., The syntax definition formalism sdf reference manual (1989) SIGPLAN Not, 24 (11), pp. 43-75. , Nov; Beyer, D., Relational programming with crocopat (2006) Proceedings of the 28th International Conference on Software Engineering, pp. 807-810. , ser. ICSE 06. New York, NY, USA ACM; Goldstein, M., Moshkovich, D., System grokking: A novel approach for software understanding, validation, and evolution (2009) Proceedings of the 7th International Conference on Next Generation Information Technologies and Systems, pp. 38-49. , ser. NGITS09. Berlin, Heidelberg: Springer-Verlag; Gamma, R.J.J.V.E., Helm, R., (1998) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Petterssonw. Lowe, N., Nivre, J., Evaluation of accuracy in design pattern occurrence detection (2010) IEEE Trans. Softw. Eng, 36 (4), pp. 575-590. , Jul; Gueheneuc, Y.G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Niere, J., Schafer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE 02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA ACM","Department of Engineering University of Sannio, ItalyItaly",,The Reengineering Forum;Technical Council on Software Engineering (TCSE),,"20th Working Conference on Reverse Engineering, WCRE 2013",14 October 2013 through 17 October 2013,Koblenz,102314,10951350,9781479929313,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-84893364877,,
TRUE,v,v,"Di Martino, B., Esposito, A.",Automatic recognition of design patterns from UML-based software documentation,2013,ACM International Conference Proceeding Series,,,,280,289,,,10.1145/2539150.2539173,http://www.scopus.com/inward/record.url?eid=2-s2.0-84896849475&partnerID=40&md5=b584a71be85db9c6c8ef03b7137b1855,"Second University of Naples, Aversa (CE), Italy","Di Martino, B., Second University of Naples, Aversa (CE), Italy; Esposito, A., Second University of Naples, Aversa (CE), Italy","Here we describe a procedure and a prototype implementation for the automatic recognition of Design Patterns from documentation of Software Artefacts' design and implementation, provided in a machine readable form, namely the XMI coded representation of UML diagrams. The procedure exploits a semantic representation of the patterns to be recognized, based on the ODOL ontology defined by the University of Massey (New Zealand) [12], which we have augmented with an OWL-S based representation of the patterns' dynamic behaviour. Both the UML set of diagrams related to the analysed Software Artefacts and the ODOL+OWL-S patterns' representation are automatically scanned and translated into a first order logic representation (namely Prolog). A set of first order logic rules, independent from the specific pattern to be recognized, have been defined to describe the heuristics and features which trigger the recognition, exploiting the Prolog description of the patterns to be recognized and the base of Prolog facts which represents the UML documentation. © 2013 ACM.",Design pattern; Expert System; OWL; Prolog,Design and implementations; Design Patterns; Documentation of software; OWL; Prolog; Prototype implementations; Semantic representation; Software documentation; Expert systems; Formal logic; Information retrieval; Web services; Birds,,,,,,"Altova Umodel, , http://www.altova.com/umodel.html; Evoluzione dei Sistemi Software e Reverse Engineering, , http://essere.disco.unimib.it/; Euml2, , http://www.soyatec.com/euml2/; http://www.objectaid.com/Ballis, D., Baruzzo, A., Comini, M., A rule-based method to match software patterns against uml models (2008) Electronic Notes in Theoretical Computer Science, 219, pp. 51-66; Bechhofer, S., Van Harmelen, F., Hendler, J., Horrocks, I., McGuinness, D.L., Patel-Schneider, P.F., Stein, L.A., Owl web ontology language reference (2004) W3C Recommendation, 10, pp. 2006-2101; Bergenti, F., Poggi, A., Improving uml designs using automatic design pattern detection (2000) 12th International Conference on Software Engineering and Knowledge Engineering (SEKE), pp. 336-343. , Citeseer; Beyer, D., Lewerentz, C., Crocopat: Efficient pattern analysis in object-oriented programs (2003) Program Comprehension, 2003. 11th IEEE International Workshop on, pp. 294-295. , IEEE; Di Martino, B., Cretella, G., Semantic and algorithmic recognition support to porting software applications to cloud (2012) Joint Workshop on Intelligent Methods for Software System Engineering (JIMSE 2012), pp. 24-30; Di Martino, B., Cretella, G., Towards a semantic engine for cloud applications development support Procs. CSIS, 2012; Di Martino, B., Esposito, A., Towards a common semantic representation of design and cloud patterns 15th International Conference on Information Integration and Web-based Applications and Services (IiWAS2013), , Manuscript submitted for publication to the; Dietrich, J., Elgar, C., An ontology based representation of software design patterns (2007) Design Patterns Formalization Techniques, p. 258; Dietrich, J., Elgar, C., Towards a web of patterns (2007) Web Semantics, 5 (2), pp. 108-116. , DOI 10.1016/j.websem.2006.11.007, PII S1570826807000030, Software Engineering and the Semantic Web; Erich, G., Richard, H., Ralph, J., John, V., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Reading: Addison Wesley Publishing Company; Huston, S.D., Johnson, J.C., Syyid, U., (2003) The ACE Programmer's Guide: Practical Design Patterns for Network and Systems Programming, , Addison-Wesley Professional; Lanusse, A., Tanguy, Y., Espinoza, H., Mraidha, C., Gerard, S., Tessier, P., Schnekenburger, R., Terrier, F., Papyrus uml: An open source toolset for mda (2009) Proc. of the Fifth European Conference on Model-Driven Architecture Foundations and Applications (ECMDA-FA 2009), pp. 1-4. , Citeseer; Lavender, R.G., Schmidt, D.C., (1995) Active Object-an Object Behavioral Pattern for Concurrent Programming; Mark, B., Jerry, H., Ora, L., Drew, M., Sheila, M., Srini, N., Massimo, P., Katia, S., OWL-s: Semantic Markup for Web Services, , http://www.w3.org/Submission/2004/SUBM-OWL-S-20041122/; Mattson, T.G., Sanders, B.A., Massingill, B.L., (2004) Patterns for Parallel Programming, , Pearson Education; Mikkonen, T., Formalizing design patterns (1998) Proceedings of the 20th International Conference on Software Engineering, pp. 115-124. , IEEE Computer Society; Shi, N., Olsson, R.A., Reverse engineering of design patterns for high performance computing (2005) Proceedings of the 2005 Workshop on Patterns in High Performance Computing, , Citeseer; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Automated Software Engineering, 2006. ASE'06. 21st IEEE/ACM International Conference on, pp. 123-134. , IEEE; (2005) U. StarUML. Modeling Tool. Multilingual Project, , version 5.0. 2.1570; Taibi, T., Ngo, D.C.L., Formal specification of design patterns - A balanced approach (2003) Journal of Object Technology, 2 (4), pp. 127-140; Vassiliadis, V., (2006) Thea. A Web Ontology Language-owl Library for [Swi] Prolog. Web-published Manual; Vu, D.H., (2010) Specifying Object-oriented Design Patterns Using Owl; Wust, J., (2005) Sdmetrics: The Software Design Metrics Tool for Uml","Second University of Naples, Aversa (CE), Italy",,International Organization of Information;Integration and Web-Based Applications and;Services (@WAS),,"15th International Conference on Information Integration and Web-Based Applications and Services, iiWAS 2013",2 December 2013 through 4 December 2013,Vienna,102952,,9781450321136,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84896849475,,
TRUE,3,3,"Botella, F., Alarcon, E., Pẽalver, A.",A new proposal for improving heuristic evaluation reports performed by novice evaluators,2013,ACM International Conference Proceeding Series,,,,72,75,,,10.1145/2535597.2535601,http://www.scopus.com/inward/record.url?eid=2-s2.0-84893478720&partnerID=40&md5=38e3642ec93012b90556d93a9df0cb01,"Center of Operations Research, University Institute, Miguel Hernandez University of Elche, Elche, Spain; Statistics, Mathematics and Informatics Department, Miguel Hernandez University of Elche, Elche, Spain","Botella, F., Center of Operations Research, University Institute, Miguel Hernandez University of Elche, Elche, Spain; Alarcon, E., Statistics, Mathematics and Informatics Department, Miguel Hernandez University of Elche, Elche, Spain; Pẽalver, A., Center of Operations Research, University Institute, Miguel Hernandez University of Elche, Elche, Spain","In this paper, we propose a new approach to improve the results of the heuristics evaluation performed by novice evaluators combining the classical usability reports with the interaction pattern design in concrete types of usability problems. Normally, usability reports generated by experts or by any automatic tool are limited to a list of problems detected with qualitative and quantitative data plus graphics or simple suggestions for solving detected problems. Sometimes these suggestions are not sufficient to fix the detected problem, as the designer is not able to capture or reproduce the problem. Our proposal will provide support to designers, trying to unify the recommendations offered by evaluators introducing the concept of design patterns in the report. In this manner, the final report could be enriched with one design pattern for some of the detected usability problems, thus enabling a better understanding of the detected issue by designers. © 2013 ACM.",design patterns; heuristic evaluation; usability,Automatic tools; Design Patterns; Heuristic evaluation; Interaction pattern; New approaches; Quantitative data; usability; Usability problems; Design; Human computer interaction; Usability engineering; Problem solving,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1997) A Pattern Language: Towns/Building/Construction, , Oxford University Express; Chattratichart, J., Lindgaard, G., A comparative evaluation of heuristic-based usability inspection methods (2008) CHI'08 Extended Abstracts on Human Factors in Computing Systems, pp. 2213-2220. , ACM; Deshpande, Y., Murugesan, S., Ginige, A., Hansen, S., Schwabe, D., Gaedke, M., White, B., Web Engineering (2002) Journal of Web Engineering, 1 (1), pp. 3-17; Desurvire, H., Kondziela, J., Atwood, M., What is Gained and Lost When Using Evaluation Methods Other Than Empirical Testing (1992) Proceedings HCI 1992, pp. 15-18. , Monnk, A., Diaper, D., and Harrison, M.D. (eds.) Cambridge University Press; Fenton, N., Pfleeger, S.L., (1996) Software Metrics: A Rigorous and Practical Approach, , Second Edition. International Thomson Computer Press; Flavin, C., Guinalu, M., Gurrea, R., The influence of the perceived usability on website loyalty. An empirical analysis (2005) Proceeding of Congresso Internazionale ""Le Tendenze del Marketing"" Parigi, pp. 1-30; Granollers, T., Lorés, J., Cañas, J.J., (2005) Diseño de Sistemas Interactivos Centrados en El Usuario, , Editorial UOC; Hertzum, M., Jacobsen, N.E., The evaluator effect: A chilling fact about usability evaluation methods (2001) International Journal of Human-Computer Interaction, 13 (4), pp. 421-443; Hornbøk, K., Frøkjær, E., Comparing usability problems and redesign proposals as input to practical systems development (2005) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 391-400; Kitchenham, B., Pearl, B.O., Budgen, D., Turner, M., Bailey, J., Linkman, S., Systematic literatura reviews in software engineering - A systematic literature review (2009) Information and Software Technology, 51, pp. 7-15; Ling, C., Salvendy, G., Effect of evaluators' cognitive style on heuristic evaluation: Field dependent and field independent evaluators (2009) International Journal of Human- Computer Studies, 67, pp. 382-393; Masip, L., Oliva, M., Granollers, T., The open repository of heuristics (2012) Proceedings of the 13th International Conference on Interacción Persona-Ordenador. (Elche, Spain, October 3-5, 2012), pp. 55-62; Molich, R., Dumas J, S., Comparative Usability Evaluation (2008) Journal Behav. Inf. Tech., 27 (3), pp. 263-281. , Taylor & Francis Inc; Nielsen, J., Molich, R., Heuristic evaluation of user interfaces (1990) Proceedings of ACM CHI 1990, pp. 249-256. , ACM Press; Nielsen, J., Finding usability problems through heuristic evaluation (1992) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 373-380; Nielsen, J., (1995) Severity Ratings for Usability Problems, , http://www.nngroup.com/articles/how-to-rate-the-severity-of-usability- problems; Patterns in Interaction Design, , http://www.welie.com, Retrieved from; Tidwell, J., Interaction Design Patterns (1998) Proceedings of Conference on Pattern Languages of Programming (Monticello, Illinois, USA, August 11-14, 1998). PLoP'98, pp. 1-23. , TR #WUCS-98-25; Van Welie, M., Van Der Veer, G.C., Patterns as Tools for User Interface Design (2000) Proceedings of International Workshop on Tools for Working with Guidelines, Biarritz, France, pp. 313-324; Yahoo Design Pattern Library, , http://developer.yahoo.com/ypatterns, Retrieved from","Center of Operations Research, University Institute, Miguel Hernandez University of Elche, Elche, Spain",,Chilean Computer Science Society (SCCC),,"2013 Chilean Conference on Human - Computer Interaction, ChileCHI 2013",11 November 2013 through 15 November 2013,Temuco,102311,,9781450322003,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84893478720,,
TRUE,4,4,"He, J., Wang, L., Zhao, J.",Supporting automatic code review via design pattern,2013,"Proceedings - 7th International Conference on Software Security and Reliability Companion, SERE-C 2013",,,,211,218,,,10.1109/SERE-C.2013.37,http://www.scopus.com/inward/record.url?eid=2-s2.0-84887767474&partnerID=40&md5=c12e8de0f4dd2fcc7b2a61e0dd9f3111,"State Key Lab of Novel Software Technology, Dept. of Computer Science and Technology, Nanjing University, Nanjing, China","He, J., State Key Lab of Novel Software Technology, Dept. of Computer Science and Technology, Nanjing University, Nanjing, China; Wang, L., State Key Lab of Novel Software Technology, Dept. of Computer Science and Technology, Nanjing University, Nanjing, China; Zhao, J., State Key Lab of Novel Software Technology, Dept. of Computer Science and Technology, Nanjing University, Nanjing, China","Code review is a very important means to ensure the quality of code in practice. It has been widely used in industry since it was proposed. Nowadays code review is still mainly done by manual work in industry. However, increasing scale of the software challenges manual reviewing. So automating the code review process is highly desired. Design patterns are a set of summaries of code design experiences that are widely used repeatedly, and well classified. Programmers need to correctly implement code based on design patterns. To ensure that the code is implemented as expected, this paper proposes an approach to automatically review code in the view of specified design patterns. Firstly, we identify the design patterns that are specified in the design models. Second, we construct a set of review rules by extracting design constraints from identified design patterns. Last, the code is checked against the generated review rules, and inconsistencies are reported as result. A supporting tool was developed, and two experiments were conducted to demonstrate the applicability of our approach. © 2013 IEEE.",Abstract Syntax Tree; Code Review; Design pattern; UML,Abstract Syntax Trees; Automatic codes; Code review; Design constraints; Design Patterns; Software challenges; Supporting tool; UML; C (programming language); Software reliability; Security of data,,,,,"61021062, NSFC, National Natural Science Foundation of China; 61170066, NSFC, National Natural Science Foundation of China","Nija, S., Ron, O., Reverse engineering of design patterns for high performance computing (2005) Workshop on Patterns in High Performance Computing; Fagan, M.E., Design and code inspections to reduce errors in program development [j] (1976) IBM Systems Journal, pp. 182-211; Nikolaos, T., Alexander, C., Spyros, T.H., George, S., A novel approach to automated design pattern detection (2005) Panhellenic Conference on Informatics, , Volos, Greece; Chan, K., An agent-based approach to computer assisted code inspections (2001) Australian Software Engineering Conference, pp. 147-152. , Canberra, Australia: IEEE; Hitoshi, F., Eunhye, C., Hiroshi, W., Efficiency analysis of model-based review in actual software design International Conference on Software Engineering, pp. 604-607; Erich, G., Richard, H., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, October; Ingo, S., Mirko, C., Ines, F., Heiko, D., Experiences with model and autocode reviews in model-based software development (2006) International Workshop on Software Engineering for Automotive Systems, pp. 45-52; Mirko, C., Heiko, D., Ines, F., Using model and code reviews in modelbased development of ECU software (2006) SAE Technical Paper; Wen Qian, L., Easterbrook, mylopoulos, rule-based detection of inconsistency in UML models (2002) Workshop on Consistency Problems in UML-Based Software Development, pp. 106-123; Thomas, G., Tobias, B., Experiences on defining and evaluating an adapted review process (2003) International Conference on Software Engineering, pp. 506-511; Federico, B., Agostino, P., Improving UML designs using automatic design pattern detection (2000) International Conference on Software Engineering and Knowledge Engineering, pp. 336-343; Mario, L.B., Giuseppe, A.L., Model-driven detection of design patterns (2010) IEEE International Conference on Software Maintenance, pp. 1-5; Albin, Cointe, Gueheneuc, Jussien, Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings. 16th Annual International Conference on Automated Software Engineering, pp. 166-173; Nija, S., Ron, O., Reverse engineering of design patterns from java source code (2006) International Conference on Automated Software Engineering, pp. 123-134","State Key Lab of Novel Software Technology, Dept. of Computer Science and Technology, Nanjing University, Nanjing, China",,IEEE Reliability Society;National Institute of Standards and Technology (NIST),,"7th International Conference on Software Security and Reliability, SERE-C 2013",18 June 2013 through 20 June 2013,"Gaithersburg, MD",100790,,,,,English,"Proc. - Int. Conf. Softw. Secur. Reliab. Companion, SERE-C",Conference Paper,Scopus,2-s2.0-84887767474,,
FALSE,3,1,"Farkas, C., Valentine, S.",Software safety and security for programmable logic controllers,2013,"Proceedings of the 2013 10th International Conference on Information Technology: New Generations, ITNG 2013",,,6614378,639,,,1,10.1109/ITNG.2013.98,http://www.scopus.com/inward/record.url?eid=2-s2.0-84886681288&partnerID=40&md5=ab1907f2524e585259194047ea63ada5,"Department of Computer Science and Engineering, University of South Carolina, Columbia, SC, United States; Department of Industrial and Engineering Technology, York Technical College, Rock Hill, SC, United States","Farkas, C., Department of Computer Science and Engineering, University of South Carolina, Columbia, SC, United States; Valentine, S., Department of Industrial and Engineering Technology, York Technical College, Rock Hill, SC, United States","Supervisory Control and Data Acquisition (SCADA) systems are widely used in automated manufacturing and in all areas of our nation's infrastructure. Current research on SCADA security focuses on the primary SCADA components and targets network centric attacks. Security risks via attacks against the peripheral devices such as the Programmable Logic Controllers (PLCs) have not been sufficiently addressed. Since PLCs dictate the functionality of the processes it is crucial that they function correctly and securely. In this paper we study the problem of providing safety and security for ladder logic code. We argue that general purpose safety and security methods are insufficient for PLCs due to the specific context and the unique processing logic of ladder logic applications. We present a PLC Security Framework (PLC-SF) that is compatible with the current PLC compilers, detects and classifies incorrect and unsafe ladder logic code. After the classification of the vulnerabilities, PLC-SF recommends appropriate design-patterns to eliminate the problems. © 2013 IEEE.",design patterns; ladder logic; PLC; security; software reliability,Automated Manufacturing; Design Patterns; Ladder logic; Peripheral devices; Safety and securities; security; Security frameworks; Supervisory control and dataacquisition systems (SCADA); Computer software selection and evaluation; Controllers; Information technology; Programmable logic controllers; Programmed control systems; Software reliability; SCADA systems,,,,,,"(2005) 21 Steps to Improve Cyber SCADA Security, , US Department of Energy. Technical Report, US Department of Energy; Weiss, J., (2010) Stuxnet: Cybersecurity Trojan Horse, , InTech; Valentine, S., Farkas, C., (2011) Software Security: Application-Level Vulnerabilites in SCADA Systems, , IRI; (2006) Sustainable Security for Infrastructure SCADA, , Sandia National Laboritories. June; Howard, M., LeBlanc, D., Viega, J., (2009) 24 Deadly Sins of Software Secuirty: Programming Flaws and How to Fix Them, , McGraw-Hill; Valentine, S., Farkas, C., (2007) PLC Code Vulnerabilities Through SCADA Systems, , IFIP 11.10","Department of Computer Science and Engineering, University of South Carolina, Columbia, SC, United States",,Premier Hall for Science and Engineering (PHASE),,"2013 10th International Conference on Information Technology: New Generations, ITNG 2013",15 April 2013 through 17 April 2013,"Las Vegas, NV",100370,,9780769549675,,,English,"Proc. Int. Conf. Inf. Technol.: New Generations, ITNG",Conference Paper,Scopus,2-s2.0-84886681288,,
TRUE,4,4,"Khwaja, S., Alshayeb, M.",A framework for evaluating software design pattern specification languages,2013,"2013 IEEE/ACIS 12th International Conference on Computer and Information Science, ICIS 2013 - Proceedings",,,6607814,41,45,,,10.1109/ICIS.2013.6607814,http://www.scopus.com/inward/record.url?eid=2-s2.0-84886519583&partnerID=40&md5=a758ac180b9f207fb257e03b5534a9b8,"Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran 31261, Saudi Arabia","Khwaja, S., Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran 31261, Saudi Arabia; Alshayeb, M., Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran 31261, Saudi Arabia","Software design patterns are solutions to recurring problems. These solutions have been widely accepted and adopted by the software practitioners. Design Patterns were initially described informally through the use of textual descriptions or some object oriented graphical notations. However, informal descriptions of design patterns give rise to ambiguity and incorrect usage of the design pattern. Many design pattern specification languages have been proposed to address the shortcomings of informal descriptions. These design pattern formalization techniques have been developed for different intentions including verification of design patterns and detection of design patterns in source code. In this paper we provide a set of evaluation criteria to evaluate and compare the various design pattern specification languages in order to aid practitioners and researchers to select the appropriate language for their use. © 2013 IEEE.",comparison framework; design pattern specification languages; design patterns,comparison framework; Design Patterns; Evaluating software; Evaluation criteria; Graphical notation; Software design patterns; Software practitioners; Textual description; Information science; Specification languages; Software architecture,,,,,,"Payne, M.C., (2006) Enhancing Design Pattern Languages for Automatic Software Design Pattern Detection; Dong, J., Alencar, P., Cowan, D., Formal specification and verification of design patterns (2007) Design Pattern Formalization Techniques, pp. 94-108. , ed: IGI Global; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Beck, K., Cunningham, W., Using pattern languages for object oriented programs (1987) OOPSLA-Conference on Object-Oriented Programming, Systems, Languages, and Applications; Coplien, J.O., (2002) Advanced C++ Programming Styles and Idioms, , Addison-Wesley Pub (Sd; Erich Gamma, R.H., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Gasparis, E., LePUS: A formal language for modeling design patterns (2007) Design Pattern Formalization Techniques, pp. 357-372. , ed: IGI Global; Raje, R.R., Chinnasamy, S., Olson, A.M., Hidgon, W., The applications and enhancement of lepus for specifying design patterns (2007) Design Pattern Formalization Techniques, Ed: IGI Global, pp. 236-257; Kim, D.-K., Role-based metamodeling language for specifying design patterns (2007) Design Pattern Formalization Techniques, pp. 183-205. , ed: IGI Global; Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using DPML (2002) CRPIT '02: Proceedings of the Fortieth International Conference on Tools Pacific, pp. 3-11. , ed. Sydney, Australia: Australian Computer Society, Inc; Gangemi, A., Ontology design patterns for semantic web content (2005) Proceedings of the Fourth International Semantic Web Conference, pp. 262-276. , ed: Springer; Dietrich, J., Elgar, C., An ontology based representation of software design patterns (2007) Design Pattern Formalization Techniques, pp. 258-279. , ed: IGI Global; Eden, A.H., Gil, J.Y., Yehudai, A., A Formal Language for Design Patterns, , Washington University, St. Louis, Missouri, USA1996; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., (2003) Precise Specification to Compound Patterns with ExLePUS, pp. 440-445; Khwaja, S., Alshayeb, M., Towards design pattern definition language (2011) Software: Practice and Experience; Kent, S., (1997) Constraint Diagrams: Visualizing Invariants in Object-oriented Models, pp. 327-341; Taibi, T., Ngo, D.C., Formal specification of design pattern combination using BPSL (2003) Information and Software Technology, 45, pp. 157-170. , March; Blewitt, A., SPINE: Language for pattern verification (2007) Design Pattern Formalization Techniques, pp. 109-122. , ed: IGI Global; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., (2009) Behavioral Pattern Identification Through Visual Language Parsing and Code Instrumentation, pp. 99-108; Saeki, M., Behavioral specification of GOF design patterns with LOTOS (2000) APSEC '00: Proceedings of the Seventh Asia-Pacific Software Engineering Conference, p. 408. , ed. Washington, DC, USA: IEEE Computer Society; Flores, A., Cechich, A., Aranda, G., A generic model of object-oriented patterns specified in rsl (2007) Design Pattern Formalization Techniques, pp. 44-72. , T. Taibi, Ed., ed: IGI Global","Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran 31261, Saudi Arabia",,Institute of Electrical and Electronics Engineers (IEEE)Computer Society;International Association for Computer and Information Science (ACIS),,"2013 IEEE/ACIS 12th International Conference on Computer and Information Science, ICIS 2013",16 June 2013 through 20 June 2013,Niigata,100349,,9781479901746,,,English,"IEEE/ACIS Int. Conf. Comput. Inf. Sci., ICIS - Proc.",Conference Paper,Scopus,2-s2.0-84886519583,,
FALSE,3,1,"Duan, Y., Kattepur, A., Zhou, H., Chang, Y., Huang, M., Du, W.",Service value broker patterns: Towards the foundation,2013,"2013 IEEE/ACIS 12th International Conference on Computer and Information Science, ICIS 2013 - Proceedings",,,6607832,149,154,,,10.1109/ICIS.2013.6607832,http://www.scopus.com/inward/record.url?eid=2-s2.0-84886468635&partnerID=40&md5=6db9b3fcf2a004359fcc4266d2e9b7a6,"College of Information Science and Technology, Hainan University, China; ARLES Group, INRIA Paris-Rocquencourt, France","Duan, Y., College of Information Science and Technology, Hainan University, China; Kattepur, A., ARLES Group, INRIA Paris-Rocquencourt, France; Zhou, H., College of Information Science and Technology, Hainan University, China; Chang, Y., College of Information Science and Technology, Hainan University, China; Huang, M., College of Information Science and Technology, Hainan University, China; Du, W., College of Information Science and Technology, Hainan University, China","We identify that to improve the reusability of implementation in service engineering, we need to collect and modulate reusable strategy, knowledge and experience crossing business modeling, knowledge management and economic analysis simultaneously from an interdisciplinary perspective. Strategically to ease the complexity, we adopt the existing experience from design patterns by forming a service design pattern called service value broker(SVB). SVB can efficiently integrate the three domains with relieved complexity, enhanced reusability and efficiency, etc, catering different abstraction levels. In this paper, we focus on modeling the foundational aspects of SVB presentation and value transaction, etc. © 2013 IEEE.",business modeling; conceptualization; design pattern; knowledge management; service value,Abstraction level; Business modeling; conceptualization; Design Patterns; Foundational aspects; Knowledge and experience; Service engineering; Service values; Information science; Knowledge management; Reusability; Systems engineering; Economic analysis,,,,,,"Barendregt, H.P., The lambda calculus-its syntax and semantics (1984) Ser. Studies in Logic and the Foundations of Mathematics, 103. , North-Holland; Cucinotta, T., Anastasi, G., Abeni, L., Respecting temporal constraints in virtualised services (2009) COMPSAC, (2), pp. 73-78; Duan, Y., A dualism based semantics formalization mechanism for model driven engineering (2009) IJSSCI, 1 (4), pp. 90-110; Duan, Y., Semantics computation: A problem solving perspective (2011) IJIMT, 2 (6), pp. 490-499; Duan, Y., Semantics computation: Towards identifying answers from problem expressions (2011) SSNE, pp. 19-24; Duan, Y., A survey on service contract (2012) Proceedings of SNPD 2012, , IEEE Computer Society; Duan, Y., Modeling service value transfer beyond normalization (2012) SNPD, pp. 811-816; Duan, Y., Value modeling and calculation for everything as a service (xaas) based on reuse (2012) Proceedings of SNPD 2012, , IEEE Computer Society; Duan, Y., Cruz, C., Formalizing semantic of natural language through conceptualization from existence (2011) IJIMT, 2 (1), pp. 37-42; Duan, Y., Cruz, C., Elfaki, A., Bai, Y., Du, W., Modeling value evaluation of semantics aided secondary language acquisition as model driven knowledge management (2013) IEEE ICIS; Duan, Y., Kattepur, A., Zhou, H., Chang, Y., Huang, M., Du, W., Service value broker patterns: An empirical collection (2013) IEEE SNPD; Duan, Y., Zhou, H., Chang, Y., Huang, M., Elfaki, A., Du, W., Characterizing e-service economics based on e-contract and driven by e-value (2013) IEEE ICIS; Feldstein, M., Domestic saving and international capital movements in the long run and the short run (1982) National Bureau of Economic Research, , Tech. Rep. 947; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., Design patterns: Abstraction and reuse of object-oriented design (1993) ECOOP, pp. 406-431; Gordijn, J., Akkermans, J.M., Value-based requirements engineering: Exploring innovative e-commerce ideas (2003) Requir. Eng., 8 (2), pp. 114-134; Kattepur, A., Benveniste, A., Jard, C., Optimizing decisions in web services orchestrations (2011) ICSOC, pp. 77-91; Miller, G.A., Wordnet: A lexical database for english (1995) Communications of the ACM, 38, pp. 39-41; Plummer, D., Cloud Services Brokerage: A Musthave for Most Organizations, , http://www.forbes.com/sites/gartnergroup/2012/03/22/cloud-services- brokerage-a-must-have-for-most-organizations/; Van Emden, M.H., Kowalski, R.A., The semantics of predicate logic as a programming language (1976) J. ACM, 23 (4), pp. 733-742; Van Staden, S., Calcagno, C., Separation, abstraction, multiple inheritance and view shifting (2009) ETH Zurich, , Tech. Rep. 655; Yao, J., Tan, W., Nepal, S., Chen, S., Zhang, J., Roure, D.D., Goble, C.A., Reputationnet: A reputation engine to enhance servicemap by recommending trusted services (2012) IEEE SCC, pp. 454-461","College of Information Science and Technology, Hainan UniversityChina",,Institute of Electrical and Electronics Engineers (IEEE)Computer Society;International Association for Computer and Information Science (ACIS),,"2013 IEEE/ACIS 12th International Conference on Computer and Information Science, ICIS 2013",16 June 2013 through 20 June 2013,Niigata,100349,,9781479901746,,,English,"IEEE/ACIS Int. Conf. Comput. Inf. Sci., ICIS - Proc.",Conference Paper,Scopus,2-s2.0-84886468635,,
FALSE,3,1,"Kogan, K., Nikolenko, S., Culhane, W., Eugster, P., Ruan, E.",Towards efficient implementation of packet classifiers in SDN/OpenFlow,2013,HotSDN 2013 - Proceedings of the 2013 ACM SIGCOMM Workshop on Hot Topics in Software Defined Networking,,,,153,154,,5,10.1145/2491185.2491219,http://www.scopus.com/inward/record.url?eid=2-s2.0-84883731481&partnerID=40&md5=59a33fda9877124a6f3b04d113b252d7,"Purdue University, United States; National Research University, Higher School of Economics, Steklov Mathematical Institute, Russian Federation; Cisco Systems, United States","Kogan, K., Purdue University, United States; Nikolenko, S., National Research University, Higher School of Economics, Steklov Mathematical Institute, Russian Federation; Culhane, W., Purdue University, United States; Eugster, P., Purdue University, United States; Ruan, E., Cisco Systems, United States",Traffic classification is a core problem underlying efficient implementation of network services. In this work we draw from our experience in classifier design for commercial systems to address this problem in SDN and OpenFlow. We identify methods from other fields of computer science and show research directions that can be applied for efficient design of packet classifiers. Proposed abstractions and design patterns can significantly reduce requirements on network elements and enable deployment of functionality that would be infeasible in a traditional way. © 2013 ACM.,,Classifier design; Commercial systems; Design Patterns; Efficient designs; Efficient implementation; Network element; Network services; Traffic classification; Telecommunication traffic,,,,,,"Allender, E., Hellerstein, L., McCabe, P., Pitassi, T., Saks, M.E., Minimizing DNF formulas and AC0 d circuits given a truth table (2006) IEEE Conference on Computational Complexity, pp. 237-251; Kesselman, A., Kogan, K., Nemzer, S., Segal, M., Space and speed tradeoffs in TCAM hierarchical packet classification (2013) J. Comput. Syst. Sci., 79 (1), pp. 111-121; Khot, S., Saket, R., Hardness of minimizing and learning DNF expressions (2008) FOCS, pp. 231-240; Liu, A.X., Meiners, C.R., Torng, E., TCAM razor: A systematic approach towards minimizing packet classifiers in TCAMs (2010) IEEE/ACM Trans. Netw., 18 (2), pp. 490-500; Content addressable memory, , http://www.netlogicmicro.com; (2012) OpenFlow 1.3 specification, , http://www.openflow.org/wk/index.php/OpenFlow_1_3_proposal; Umans, C., The minimum equivalent DNF problem and shortest implicants (2001) J. Comput. Syst. Sci., 63 (4), pp. 597-611; Hay, D., Kanizo, Y., Keslassy, I., Palette: Distributing tables in software-defined networks (2013) INFOCOM",Purdue UniversityUnited States,,ACM SIGCOMM,,"2013 2nd ACM SIGCOMM Workshop on Hot Topics in Software Defined Networking, HotSDN 2013",16 August 2013 through 16 August 2013,Hong Kong,99158,,9781450320566,,,English,HotSDN - Proc. ACM SIGCOMM Workshop Hot Top. Softw. Defined Networking,Conference Paper,Scopus,2-s2.0-84883731481,,
FALSE,4,3,"Castellanos, C., Vergnaud, T., Borde, E., Derive, T., Pautet, L.",Formalization of design patterns for security anddependability,2013,ISARCS 2013 - Proceedings of the 4th ACM Sigsoft International Symposium on Architecting Critical Systems,,,,17,26,,1,10.1145/2465470.2465476,http://www.scopus.com/inward/record.url?eid=2-s2.0-84880056635&partnerID=40&md5=87dd2f5416f1972cbbd21c42748a6ec7,"Télécom-ParisTech, 36 rue Barrault, 75013 Paris, France; THALES Communications and Security, 1 avenue Augustin Fresnel, 91767 Palaiseau, France","Castellanos, C., Télécom-ParisTech, 36 rue Barrault, 75013 Paris, France; Vergnaud, T., THALES Communications and Security, 1 avenue Augustin Fresnel, 91767 Palaiseau, France; Borde, E., Télécom-ParisTech, 36 rue Barrault, 75013 Paris, France; Derive, T., THALES Communications and Security, 1 avenue Augustin Fresnel, 91767 Palaiseau, France; Pautet, L., Télécom-ParisTech, 36 rue Barrault, 75013 Paris, France","In critical systems, failures or attacks based on software misconceptions can have catastrophic consequences. In order to avoid those situations, such systems need security and dependability (S&D) constraints. Usually S&D design patterns shape S&D mechanisms. Security and dependability experts identify S&D mechanisms to reach S&D objectives and manually apply them to the system architecture. Our contribution consists in studying S&D design patterns application. We formalize these S&D design patterns as model transformations, preconditions and postconditions to automate their integration. Finally, we illustrate this process with a Software Defined Radio case study to which we apply the red/black (R/B) architecture security design pattern. © 2013 ACM.",component based software engineering; critical embedded systems; dependability; design pattern; model transformations; security,Component-based software engineering; dependability; Design Patterns; Model transformation; security; Software engineering; Mathematical models,,,,,,"Meta Object Facility (mof) 2.0 Query/view/transformation Specification; Object Constraint Language (ocl); Uml-marte; Unified Modeling Language - Infrastructure; (2011) Aadl Standard; Avizienis, A., Laprie, J.-C., Randell, B., Landwehr, C., Basic concepts and taxonomy of dependable and secure computing (2004) Dependable and Secure Computing, IEEE Transactions on, 1, p. 11. , october; Bernardi, S., Merseguer, J., Petriu, D., A dependability profile within MARTE (2011) Journal of Software and Systems Modeling, 10 (3), pp. 313+336; Best, B., Jürjens, J., Nuseibeh, B., Model-based security engineering of distributed information systems using umlsec (2007) ICSE, pp. 581-590; Bishop, M., What is computer security? (2003) Security Privacy, IEEE, 1 (1), pp. 67-69. , jan.-feb; Bouaziz, R., Hamid, B., Desnos, N., Towards a better integration of patterns in secure component-based systems design (2011) Lecture Notes in Computer Science, 6786, pp. 607-621. , B. Murgante, O. Gervasi, A. Iglesias, D. Taniar, and B. Apduhan, editors, Computational Science and Its Applications - ICCSA 2011, Springer Berlin Heidelberg; Briffaut, J., (2007) Formalisation et Garantie de Propriétés de Sécurité Système: Application à la Détection D'intrusions, , PhD thesis, Orlean's University; Cadoret, F., Borde, E., Gardoll, S., Pautet, L., Design patterns for rule-based refinement of safety critical embedded systems models (2012) ICECCS, pp. 67-76; Czarnecki, K., Helsen, S., Classification of model transformation approaches Proceedings of the 2nd OOPSLA Workshop on Generative Techniques in the Context of the Model Driven Architecture, 2003; Dong, J., Alencar, P., Cowan, D., Formal Specification and Verification of Design Patterns (2007) Design Patterns Formalization Techniques, p. 94. , chapter 5, IGI-Publishing; Douglass, B.P., (2002) Real-Time Design Patterns: Robust Scalable Architecture for Real-Time Systems, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA; Ferraiolo, D.F., Kuhn, D.R., Role-based access controls (2009) CoRR, , abs/0903.2171; Gamma, E.E.A., (1994) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gawand, H., Mundada, R., Swaminathan, P., Design patterns to implement safety and fault tolerance (2011) International Journal of Computer Applications, 18 (2), pp. 6-13. , March; Hanmer, R.S., (2007) Patterns for Fault Tolerant Software, , John Wiley & Sons, December 14; Lano, K., Formalising Design Patterns as Model Transformation (2007) Design Patterns Formalization Techniques, p. 94. , chapter 8, IGI-Publishing; Lodderstedt, T., Basin, D.A., Doser, J., Secureuml: A uml-based modeling language for model-driven security (2002) UML, pp. 426-441; Maplesden, D., Hosking, J., Grundy, J., A visual Langauge for Design Pattern Modeling Instantiation (2007) Design Patterns Formalization Techniques, p. 20. , chapter 2, IGI-Publishing; Yoshioka, K.M.N., Washizaki, H., A survey on security patterns (2008) Progress in Informatics, 5, pp. 35-47; Rushby, J., (2008) Separation and Integration in Mils (The Mils Constitution), , Technical report, Computer Science Laboratory SRI International, February; Saridakis, T., (2002) A System of Patternsfor Fault Tolerance; Schumacher, M., Fernandez, E.B., Hybertson, D., Buschmann, F., Sommerlad, P., (2006) Security Patterns - Integrating Security and Systems Engineering, , John Wiley & Sons Inc., New York, USA; Taibi, T., An Integrated Approach to Design Patterns Formalization (2007) Design Patterns Formalization Techniques, p. 94. , chapter 1, IGI-Publishing","Télécom-ParisTech, 36 rue Barrault, 75013 Paris, France",,ACM SIGSOFT,,"4th ACM Sigsoft International Symposium on Architecting Critical Systems, ISARCS 2013",17 June 2013 through 21 June 2013,"Vancouver, BC",97774,,,,,English,ISARCS - Proc. ACM Sigsoft Int. Symp. Archit. Crit. Syst.,Conference Paper,Scopus,2-s2.0-84880056635,,
TRUE,4,4,"Ampatzoglou, A., Charalampidou, S., Stamelos, I.",Research state of the art on GoF design patterns: A mapping study,2013,Journal of Systems and Software,86,7,,1945,1964,,15,10.1016/j.jss.2013.03.063,http://www.scopus.com/inward/record.url?eid=2-s2.0-84879951544&partnerID=40&md5=7f4002373a0ee56cf628c7f621fb8471,"Department of Informatics, Aristotle University of Thessaloniki, Thessaloniki, Greece; Department of Computer Science and Technology, Chalmers University of Technology, Gothenburg, Sweden","Ampatzoglou, A., Department of Informatics, Aristotle University of Thessaloniki, Thessaloniki, Greece; Charalampidou, S., Department of Computer Science and Technology, Chalmers University of Technology, Gothenburg, Sweden; Stamelos, I., Department of Informatics, Aristotle University of Thessaloniki, Thessaloniki, Greece","Design patterns are used in software development to provide reusable and documented solutions to common design problems. Although many studies have explored various aspects of design patterns, no research summarizing the state of research related to design patterns existed up to now. This paper presents the results of a mapping study of about 120 primary studies, to provide an overview of the research efforts on Gang of Four (GoF) design patterns. The research questions of this study deal with (a) if design pattern research can be further categorized in research subtopics, (b) which of the above subtopics are the most active ones and (c) what is the reported effect of GoF patterns on software quality attributes. The results suggest that design pattern research can be further categorized to research on GoF patterns formalization, detection and application and on the effect of GoF patterns on software quality attributes. Concerning the intensity of research activity of the abovementioned subtopics, research on pattern detection and on the effect of GoF patterns on software quality attributes appear to be the most active ones. Finally, the reported research to date on the effect of GoF patterns on software quality attributes are controversial; because some studies identify one pattern's effect as beneficial whereas others report the same pattern's effect as harmful. © 2013 Elsevier Inc. All rights reserved.",Design patterns; Mapping study; Software quality attributes,Design Patterns; Mapping studies; Pattern detection; Research activities; Research efforts; Research questions; Software quality attributes; State of research; Computer software reusability; Computer software selection and evaluation; Mapping; Research,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Town, Buildings, Construction, , Oxford University Press New York; Ampatzoglou, A., Frantzeskou, G., Stamelos, I., A methodology to assess the impact of design patterns on software quality (2012) Information and Software Technology, Elsevier, 54 (4), pp. 331-346. , APRIL; Ampatzoglou, A., Stamelos, I., Software engineering research for computer games: A systematic review (2010) Information and Software Technology, Elsevier, 52 (9), pp. 888-901. , September; Avgeriou, P., Zdun, U., Architectural patterns revisited - A pattern language (2005) 10th European Conference on Pattern Languages of Programs (EuroPLOP'05), 6-10 July 2005, , Irsee, Germany; Basili, V., Caldiera, G., Rombach, H.D., (1994) Goal Question Metric Approach Encyclopedia of Software Engineering, pp. 528-532. , John Wiley & Sons; Bjork, S., Lundgren, S., Holopainen, J., Game design patterns (2003) Lecture Note of the Game Design Track of Game Developers Conference, March 4-8, , San Jose, CA, USA; Bereton, P., Kitchenham, B., Budgen, D., Turner, M., Khalil, M., Lessons from applying the systematic literature review process within the software engineering domain (2007) Journal of Systems and Software, Elsevier, 80 (4), pp. 571-583. , APRIL; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture, , Wiley West Sussex, UK; Cai, K.Y., Card, D., An analysis of topics in software engineering - 2006 (2008) Journal of Systems and Software, Elsevier, 81 (6), pp. 1051-1058. , JUNE; Da Silva, F.Q.B., Santos, A.L.M., Soares, S.C.B., França, A.C.C., Monteiro, C.V.F., A critical appraisal of systematic reviews in software engineering from the perspective of the research questions asked in the reviews (2010) Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM' 10), , ACM, Bolzano, Italy, 16-17 September 2010; Dormey, G.R., A model for software product quality (1995) IEEE Transactions on Software Engineering, 21 (2), pp. 146-162. , February; Dyba, T., Dingsoyr, T., Empirical studies of agile software development: A systematic review (2008) Information and Software Technology, Elsevier, 50 (9-10), pp. 833-859. , AUGUST; Galster, M., Avgeriou, P., Qualitative analysis of the impact of SOA patterns on quality attributes (2012) Proceedings of the 12th International Conference on Quality Software (QSIC 2012), IEEE Computer Society, , Xi'an, China, 27-29 August 2012; Gamma, E., Helms, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional Reading, MA; Glass, R.L., Vessey, I., Ramesh, V., Research in software engineering: An analysis of the literature (2002) Information and Software Technology, Elsevier, 44 (8), pp. 491-506. , June; Hauge, O., Ayala, C., Conradi, R., Adoption of open source software in software-intensive organizations - A systematic literature review (2010) Information and Software Technology, Elsevier, 52 (11), pp. 1133-1154. , November; Heckman, S., Williams, L., A systematic literature review of actionable alert identification techniques for automated static code analysis (2011) Information and Software Technology, Elsevier, 53 (4), pp. 363-387. , April; Höfer, A., Tichy, W.F., Status of Empirical Research in Software Engineering (2007) Lecture Notes in Computer Science, 4336, pp. 10-19. , Springer Dagstuhl Castle, Germany; (1992) Information Technology - Software Product Evaluation - Quality Characteristics and Guidelines for Their Use, , Iso9126 International Organisation for Standardization Geneva; Kitchenham, B., Charters, S., Guidelines for performing systematic literature reviews in software engineering (2007) Technical Report EBSE-2007-001, Keele University & Durham University Joint Report, , Staffordshire, UK; Kitchenham, B., Brereton, O.P., Budgen, D., Turner, M., Bailey, J., Linkman, S., Systematic literature reviews in software engineering - A systematic literature review (2009) Information and Software Technology, Elsevier, 51 (1), pp. 7-15. , January; Kitchenham, B.A., Budgen, D., Brereton, O.P., Using mapping studies as the basis for further research - A participant-observer case study (2011) Information and Software Technology, Elsevier, 53 (6), pp. 638-651. , June; Kitchenham, B., Pfleeger, S.L., Software quality: The elusive target (1996) IEEE Software, IEEE, 13 (1), pp. 12-21. , January; Kitchenham, B., Pretorius, R., Budgen, D., Brereton, O.P., Turner, M., Niazi, M., Linkman, S., Systematic literature reviews in software engineering - A tertiary study (2010) Information and Software Technology, Elsevier, 52 (8), pp. 792-805. , August; Noblit, G.W., Hare, R.D., (1988) Meta-ethnography: Synthesizing Qualitative Studies, , Sage London; Petticrew, M., Roberts, H., (2006) Systematic Reviews in the Social Sciences: A Practical Guide, , Blackwell Publications MA, USA; Souza, J., Matwin, S., Japkowicz, N., Evaluating data mining models: A pattern language (2002) 9th Conference on Pattern Language of Programs (PLOP'02), , Monticello, Illinois, 8-12 September 2002; Vokáč, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns - A replication in a real programming environment (2004) Empirical Software Engineering, Springer, 9 (3), pp. 149-195. , September; Walia, G.S., Carver, J.C., A systematic literature review to identify and classify software requirement errors (2009) Information and Software Technology, Elsevier, 51 (7), pp. 1087-1109. , July; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering, , Kluwer Academic Publishers Boston/Dordrecht/London; Zhang, C., Budgen, D., What do we know about the effectiveness of software design patterns (2012) IEEE Transactions on Software Engineering, IEEE, 38 (5), pp. 1213-1231. , September-october","Ampatzoglou, A.; Department of Informatics, Aristotle University of Thessaloniki, Thessaloniki, Greece; email: apamp@csd.auth.gr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-84879951544,,
TRUE,4,4,"Lano, K., Kolahdouz-Rahimi, S.",Optimising model-transformations using design patterns,2013,MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development,,,,77,82,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878022525&partnerID=40&md5=3b14d6b313bb1a9d86cff2d8c675603b,"Dept. of Informatics, King's College London, London, United Kingdom","Lano, K., Dept. of Informatics, King's College London, London, United Kingdom; Kolahdouz-Rahimi, S., Dept. of Informatics, King's College London, London, United Kingdom","This paper identifies how metrics of model transformation complexity can be used to guide the choice and application of design patterns to improve the quality and efficiency of model transformation specifications. Heuristics for choosing design patterns based on the metrics are defined, and the process is applied to an example transformation.",Design patterns; Model transformations; Model-driven development,Design Patterns; Model driven development; Model transformation; Mathematical models; Software design,,,,,,"Agrawal, A., Vizhanyo, A., Kalmar, Z., Shi, F., Narayanan, A., Karsai, G., Reusable idioms and patterns in graph transformation languages (2005) Electronic Notes in Theoretical Computer Science, pp. 181-192; Bezivin, J., Jouault, F., Palies, J., (2003) Towards Model Transformation Design Patterns, , ATLAS group, University of Nantes; Cuadrado, J., Jouault, F., Molina, J., Bezivin, J., Optimization patterns for OCL-based model transformations (2008) MODELS 2008, 5421, pp. 273-284. , LNCS, Springer-Verlag, 2008; Duddy, K., Gerber, A., Lawley, M., Raymond, K., Steel, J., Model transformation: A declarative, reusable pattern approach (2003) 7th International Enterprise Distributed Object Computing Conference (EDOC '03); Harman, M., Jones, B., Search-based software engineering (2001) Information and Software Technology, 43 (14), pp. 833-839. , 2001; Iacob, M., Steen, M., Heerink, L., Reusable model transformation patterns (2008) Enterprise Distributed Object Computing Conference; Johannes, J., Zschaler, S., Fernandez, M., Castillo, A., Kolovos, D., Paige, R., Abstracting complex languages through transformation and composition (2009) MODELS 2009, 5795, pp. 546-550. , LNCS; Lano, K., Kolahdouz-Rahimi, S., Design patterns for model transformations (2011) ICSEA 2011; Lano, K., (2012) UML-RSDS Manual, , http://www.dcs.kcl.ac.uk/staff/kcl/uml2web/umlrsds.pdf; Lutz, R., Evolving good hierarchical decompositions of complex systems (2001) Journal of Systems Architecture, 47, pp. 613-634; Mancoridis, S., Mitchell, B., Chen, Y., Gansner, E., Bunch: A clustering tool for the recovery and maintenance of software system structures (1999) IEEE International Conference on Software Maintenance, pp. 50-59. , IEEE Press; Tzerpos, V., Holt, R., (1999) MoJo: A Distance Metric for Software Clustering, , University of Toronto","Dept. of Informatics, King's College London, London, United Kingdom",,"Inst. Syst. Technol. Inf., Control Commun. (INSTICC)",,"1st International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2013",19 February 2013 through 21 February 2013,Barcelona,97043,,9789898565426,,,English,MODELSWARD - Proc. Int. Conf. Model-Driven Eng. Softw. Dev.,Conference Paper,Scopus,2-s2.0-84878022525,,
TRUE,v,v,"Alnusair, A., Zhao, T., Yan, G.",Automatic recognition of design motifs using semantic conditions,2013,Proceedings of the ACM Symposium on Applied Computing,,,,1062,1067,,1,10.1145/2480362.2480564,http://www.scopus.com/inward/record.url?eid=2-s2.0-84877987924&partnerID=40&md5=5c2daca5fa843e44aaee21040724e91c,"Indiana University, Kokomo, 2300 S. Washington Street, Kokomo, IN, United States; University of Wisconsin-Milwaukee, 3200 N. Cramer Street, Milwaukee, WI, United States","Alnusair, A., Indiana University, Kokomo, 2300 S. Washington Street, Kokomo, IN, United States; Zhao, T., University of Wisconsin-Milwaukee, 3200 N. Cramer Street, Milwaukee, WI, United States; Yan, G., Indiana University, Kokomo, 2300 S. Washington Street, Kokomo, IN, United States","Program comprehension is vital for building, enhancing and maintaining existing software systems. In this paper, we propose an automatic reverse engineering approach that leverages understanding and reusing software libraries through the automatic recovery of the motifs described by design patterns. Initially we formalise the description of common patterns. We then exploit Semantic Web knowledge representation mechanisms for capturing these descriptions in source-code. Empirical evaluations of this approach show evidence that when conceptual knowledge of source-code is represented using ontology formalisms, and when semantic rules are used to capture pattern structure and behavior, we can achieve an effective and flexible detection of patterns without relying on hard-coded heuristics. Copyright 2013 ACM.",Design patterns; Ontology formalisms; Program comprehension; Semantic reasoning; Software maintenance,Automatic recognition; Conceptual knowledge; Design Patterns; Empirical evaluations; Engineering approaches; Program comprehension; Representation mechanism; Semantic reasoning; Computer software maintenance; Knowledge representation; Reverse engineering; Computer programming,,,,,,"Ontologies, , http://www.indiana.edu/~awny/index.php/research/ontologies/, website; Binun, A., Kniesel, G., DPJF - Design pattern detection with high accuracy (2012) Proceedings of the European Conference on Software Maintenance and Reengineering, pp. 245-254. , Szeged, Hungary; Cinneide, M.O., Nixon, P., A methodology for the automated introduction of design patterns (1999) The IEEE International Conference on Software Maintenance, pp. 463-472. , Oxford, UK; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral pattern detection through model checking (2010) The European Conference on Software Maintenance and Reengineerig, pp. 176-185; Dietrich, J., Elgar, C., Towards a web of patterns (2005) Workshop on Semantic Web Enabled Software Engineering, pp. 117-132. , Ireland; Gamma, E., Helm, E., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guéhenéuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) The IEEE/ACM International Conference on Automated Software Engineering, pp. 123-132. , Tokyo, Japan; Tsantalis, T., Stephanides, A., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909","Indiana University, Kokomo, 2300 S. Washington Street, Kokomo, IN, United States",,"ACM Special Interest Group on Applied Computing (SIGAPP);ISEC Engenharia;Politecnico de Coimbra;Caixa Geral de Depositos;Institute of Systems and Robotics (ISR), University of Coimbra",,"28th Annual ACM Symposium on Applied Computing, SAC 2013",18 March 2013 through 22 March 2013,Coimbra,96995,,9781450316569,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-84877987924,,
FALSE,v,4,"Ampatzoglou, A., Michou, O., Stamelos, I.",Building and mining a repository of design pattern instances: Practical and research benefits,2013,Entertainment Computing,4,2,,131,142,,5,10.1016/j.entcom.2012.10.002,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873823123&partnerID=40&md5=778c6419e0e4869129d84a8ddd4fffd1,"Department of Informatics, Aristotle University, Aristotle University Campus, 54124, Thessaloniki, Greece","Ampatzoglou, A., Department of Informatics, Aristotle University, Aristotle University Campus, 54124, Thessaloniki, Greece; Michou, O., Department of Informatics, Aristotle University, Aristotle University Campus, 54124, Thessaloniki, Greece; Stamelos, I., Department of Informatics, Aristotle University, Aristotle University Campus, 54124, Thessaloniki, Greece","Design patterns are well-known design solutions that are reported to produce substantial benefits with respect to software quality. However, to our knowledge there are no scientific efforts on gathering information on software projects that use design patterns. This paper introduces a web repository of design patterns instances that have been used in open source projects. The usefulness of such a repository lies in the provision of a base of knowledge, where developers can identify reusable components and researchers can find a mined data set. Currently, 141 open source projects have been considered and more than 4500 pattern instances have been found and recorded in the database of the repository. The evaluation of the repository has been performed from an academic and a practical point of view. The results suggest that the repository can be useful for both experienced and inexperienced users. However, the benefits of using the repository are more significant for inexperienced users. © 2012 International Federation for Information Processing.",Computer games; Design patterns; Repository; Software engineering,Computer game; Data sets; Design Patterns; Design solutions; Open source projects; Repository; Reusable components; Software project; Software Quality; Web repositories; Software engineering; Computer software selection and evaluation,,,,,,"Alexander, R.T., Bieman, J.M., France, R.B., A software engineering research repository, Special Interest Group on Software Engineering Lecture Notes (SIGSOFT'04 Lecture Notes) (2004) Association of Computing Machinery, 29 (5), pp. 1-4; Ampatzoglou, A., Chatzigeorgiou, A., Evaluation of object-oriented design patterns in game development (2007) Information and Software Technology, 49 (5), pp. 445-454; Ampatzoglou, A., Kritikos, A., Kakarontzas, G., Stamelos, I., An empirical investigation on the reusability of design patterns and software packages (2011) Journal of Systems and Software, 84, pp. 2265-2283; Ampatzoglou, A., Stamelos, I., Software engineering research for computer games: a systematic review (2010) Information and Software Technology, 52 (9), pp. 888-901; Ampatzoglou, A., Charalampidou, S., Savva, K., Stamelos, I., (2010) An empirical study on design pattern employment in open-source software, pp. 275-284. , in: Proceedings of the 5th International Conference on Evaluation of Novel Approaches in Software Engineering (ENASE '10), 22-24 July 2010, Athens, Greece; Apperly, H., (2001) Configuration Management and Component Libraries in Component-Based Software Engineering: Putting the Pieces Together, pp. 513-526. , Addison-Wesley Longman Publishing; Arnout, K., Meyer, B., Pattern componentization: the factory example (2006) Innovations in Systems and Software Engineering, 2 (2), pp. 65-79; Aversano, L., Canfora, G., Cerulo, L., Grosso, C.D., Di Penta, M., (2007), pp. 385-394. , An empirical study on the evolution of design patterns, in: Foundations of Software Engineering (FSE' 07), 3-7 September 2007, Dubrovnik, Croatia, Association of Computing MachineryBasili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in software engineering (1996) IEEE Transaction on Software Engineering, 12 (7), pp. 733-743; Bernstein, P.A., Dayal, U., (1994) An overview of repository technology, pp. 705-713. , in: Proceedings of the 20th Conference on Very Large Data Bases (VLDB'94), September 1994, Santiago, Chile, Association of Computing Machinery, 12-15; Bibi, S., Stamelos, I., Angelis, L., (2003), Bayesian belief networks as a software productivity estimation tool, in: 1st Balkan Conference in Informatics, Thessaloniki, Greece, NovemberBieman, J.M., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., (2003) Design patterns and change proneness: an examination of five evolving systems, pp. 40-49. , in: Proceedings of the 9th International Symposium on Software Metrics (METRICS'03), 03-05 September 2003, Sydney, Australia, IEEE Computer Society; Bjork, S., Holopainen, J., (2004) Patterns in Game Design, Game Development Series, , Charles River Media; Brown, W., (2000) Large-Scale Component-Based Development, , Prentice Hall; Burégio, V., Almeida, E., Ludrédio, D., Meira, S., (2008), pp. 88-99. , A reuse repository system: from specification to deployment, in: Proceedings of the 10th International Conference on Software Reuse (ICSR'2008), 25-29 May 2008, Springer, Beijing, ChinaConclin, M., Howison, J., Crowston, K., (2005) Collaboration using OSSmole: a repository of FLOSS data and analyses, pp. 1-5. , in: International Workshop on Mining Software Repositories (MSR'05), St. Louis, Missouri, 17 May, 2005, Association of Computing Machinery; Damiani, E., Fugini, M.G., Bellettini, C., Corrigenda: a hierarchy-aware approach to faceted classification of object-oriented components (1999) Transactions on Software Engineering and Methodology, 8 (3), pp. 425-472; (2011), http://www.percerons.com, Percerons Component Search Engine, Available from: <>Di Penta, M., Cerulo, L., Gueheneuc, Y.G., Antoniol, G., (2008), pp. 217-226. , An empirical study of the relationships between design pattern roles and class change proneness, in: Proceedings of the IEEE International Conference on Software Maintenance (ICSM'08), 28 September - 04 October 2008, Beijing, China, IEEEFrakes, W.B., Pole, T.P., An empirical study of representational methods for reusable software components (1994) Transactions on Software Engineering, 20 (8), pp. 617-630; Fullerton, T., Play-centric games education (2006) IEEE Computer, 39 (6), pp. 36-42; Gamma, E., Helms, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional, Reading, MA; Garcia, V., Lucrédio, D., Durão, F., Santos, E., De Almeida, E., De Mattos Fortes, R., De Lemos Meira, S., (2006) From specification to experimentation: a software component search engine architecture, , in: Proceedings of the 9th International Symposium on Component-Based Software Engineering (CBSE'06), June 29 - July 1 , Vasteras; Harrison, W., A flexible method for maintaining software metrics data: a universal metrics repository (2004) The Journal of Systems and Software, 72 (2), pp. 225-234; Harrison, N.B., Avgeriou, P., How do architecture patterns and tactics interact? A model and annotation (2010) Journal of Systems and Software, 83 (10), pp. 1735-1758; Meyer, B., Arnout, K., Componentization: the visitor example (2006) Computer, IEEE Computer Society, 39 (7), pp. 23-30; McShaffry, M., (2003) Game Coding Complete, , Paraglyph Press, Arizona, USA; McWilliams, A., Reicher, T., Klinker, G., Bruegge, B., (2004) Design Patterns for Augmented Reality Systems, pp. 1-8. , in: Proceedings of the 2004 International Workshop Exploring the Design and Engineering of Mixed Reality Systems (MIXER' 04), 13 January 2004, Funchal, Madeira; Meneely, A., Williams, L., Gehringer, E.F., (2008), pp. 7-11. , Rose: a repository of education-friendly open-source projects, in: Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education (ITiCSE '08), 30 June - 02 July 2008, Madrid, Spain, Association of Computing MachineryMiller, J., Roper, M., Wood, M., Brooks, A., Towards a benchmark for the evaluation of software testing techniques (1995) Information and Software Technology, 37 (1), pp. 5-13; Mili, R., Mili, A., Mittermeir, R.T., Storing and retrieving components: a refinement based system (1997) Transactions on Software Engineering, 23 (7), pp. 445-460; Mili, A., Mili, R., Mittermeir, R., A survey of software reuse libraries (1998) Annals of Software Engineering, 5, pp. 349-414; Mili, H., Ah-Ki, E., Godin-Hamid Mcheick, R., An experiment in software component retrieval (2003) Information and Software Technology, 45 (10), pp. 633-649; Nguyen, D.Z., Wong, S.B., (2002), pp. 126-130. , Design Patterns for Games, in: Special Interest Group on Computer Science Education (SIGCSE'02), 27 February - 2 March 2002, Cincinnati, Kentucky, Association of Computing MachineryPrieto-Diaz, R., Implementing faceted classification for software reuse (1991) Communications, 34 (5), pp. 89-97; Prieto-Diaz, R., Freeman, P., Classifying software for reusability (1987) Software, 4 (1), pp. 6-16; Rhyne, T.M., Doenges, P., Hibbard, B., Pfister, H., Robins, N., (2000), pp. 519-521. , The impact of Computer Games on scientific & information visualization: if you can't beat them, join them, in: 11th Visualization Conference, 8-13 October 2000, Salt Lake City, Utah, USA, IEEE Computer SocietyRollings, A., Morris, D., (2003) Game Architecture and Design, , New Riders, Indianapolis; Rucker, R., (2003) Software Engineering and Computer Games, , Addison Wesley, Essex, United Kingdom; Sametinger, J., (1997) Software Engineering with Reusable Components, , Springer-Verlag; Scacchi, W., Free and open source development practices in the game community (2004) Software Magazine, 21 (1), pp. 59-66; Seacord, R., Hissam, S., Wallnau, K., Agora: a search engine for software Components (1998) Internet Computing, 2 (6), pp. 62-70; Shi, N., Olson, R., (2006) Reverse engineering of design patterns from java source code, , in: 21st International Conference on Automated Software Engineering, September 2006, Tokyo, Japan, IEEE/ACM; Sowe, S.K., Angelis, L., Stamelos, I., Manolopoulos, Y., (2007) Using repository of repositories (RoRs) to study the growth of F/OSS projects, pp. 11-14. , a meta-analysis research approach, in: Open Source Software Conference, 11-14 June 2007, Limerick, Ireland, Springer; Tsantalis, N., Chatzigeorgiou, A., Stefanidis, G., Halkidis, S.T., Design patterns detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Valente, L., Conci, A., (2005), pp. 1-10. , Guff: A game development tool, in: XVIII Brazilian Symposium on Computer Graphics and Image Processing (SIBGRAPI' 05), 9-12 October 2005, Natal, BrazilVitharana, P., Zahedi, F., Jain, H., Knowledge-based repository scheme for storing and retrieving business components: a theoretical design and an empirical analysis (2003) Transaction on Software Engineering, 29 (7), pp. 649-664; Vokac, M., Defect frequency and design patterns: an empirical study of industrial code (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 904-917; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering, , Kluwer Academic Publishers, Boston/Dordrecht/London; Zyda, M., Educating the next generation of game developers (2006) IEEE Computer, 39 (6), pp. 30-34","Ampatzoglou, A.; Department of Informatics, Aristotle University, Aristotle University Campus, 54124, Thessaloniki, Greece; email: apamp@csd.auth.gr",,,,,,,,18759521,,,,English,Entertain. Comput.,Article,Scopus,2-s2.0-84873823123,,
TRUE,v,v,"Zhang, H., Liu, S.",Java source code static check eclipse plug-in based on common design pattern,2013,"Proceedings - 2013 4th World Congress on Software Engineering, WCSE 2013",,,6754280,165,170,,,10.1109/WCSE.2013.30,http://www.scopus.com/inward/record.url?eid=2-s2.0-84899085278&partnerID=40&md5=e247377306b46990adb87a3772f07d3f,"School of Software, Harbin Institute of Technology, Harbin, China","Zhang, H., School of Software, Harbin Institute of Technology, Harbin, China; Liu, S., School of Software, Harbin Institute of Technology, Harbin, China","Design patterns represent the best practices used by experienced java developers. Design patterns abstract reusable object-oriented software designs which are solutions to general problems that software developers faced during software development. Each pattern solves design problems that occur in every day development. The detection of design patterns during the process of software reverse engineering can provide a better understanding of the software system. The most recent approaches in design pattern detection rely on the abstract syntax tree representation of the source code for fact extraction. This paper proposes a new way to detect design pattern in Java applications by analyzing the java source code. This paper discussed about the relations both between classes and objects and established the derivative design pattern about model property. Using the roles, responsibilities and collaboration information of each design pattern define static definitions. The static definitions are used to find candidate instances during the static analysis by using BCEL. After the static analysis the found candidate instances are validated by using the dynamic behavior of design patterns. We instrument the Java byte code of the application we are analyzing with additional code fragments and extract method traces from the running application. These method traces represent the dynamic facts of an application. The several restrictions are presented to define design patterns dynamically. Four common patterns of original GoF design patterns are tested and the results are analyzed which give better results in detecting design patterns comparing with other tools. In addition a Java source code static checking tool, an Eclipse plug-in, is implemented. Finally several java applications source codes were analyzed by using the plug-in, and verified the feasibility of the approach. © 2013 IEEE.",BCEL; Design pattern; Eclipse Plug-in,Computer software reusability; Software design; Static analysis; Tools; Abstract Syntax Trees; BCEL; Design pattern detections; Design Patterns; Object-oriented software designs; Plug-ins; Running applications; Software reverse engineering; Java programming language,,,,,,"Vlissides, J., Helm, R., Johnson, R., Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Reading: Addison-Wesley; Smith, M.C.J., Stotts, D., Elemental design patterns: A logical inference system and theorem prover support for flexible discovery of design patterns (2002) Proceedings of the 9th European Conference on Arti Intelligence; Ramirez, A.J., Cheng, C.B.H., Design patterns for developing dynamically adaptive systems (2010) Proc. 2010 ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS '10), pp. 49-58. , ACM, New York; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) Software Engineering, IEEE Transactions, 32 (11), pp. 896-909. , Nov; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Proc. 21st IEEE/ACM, L Conf. Automated Software Eng, pp. 123-134. , Sept; Babaoglu, O., Canright, G., Deutsch, A., Design patterns from biology for distributed computing (2006) ACM Transactions on Autonomous and Adaptive Systems (TAAS), 1 (1), pp. 26-66; Zhu, H., Bayley, I., Shan, L., Amphlett, R., Tool support for design pattern recognition at model level (2009) Computer Software and Applications Conference, COMPSAC'09, 33rd Annual IEEE International, 1, pp. 228-233; Cheon, Y., Perumandla, A., Specifying and checking method call sequences of Java programs (2007) Software Quality Journal, 15 (1), pp. 7-25; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) ACM SIGSOFT Software Engineering Notes, 30 (4), pp. 1-7; Smith, J.M., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Automated Software Engineering, 2003. Proceedings, 18th IEEE International Conference, pp. 215-224. , Oct; Porras, C.G., Guéhéneuc, Y., An empirical study on the efficiency of different design pattern representations in UML class diagrams (2010) Empirical Software Engineering, 15 (5), pp. 493-522; Shuai, J., Huaxin, M., Design patterns in object oriented analysis and design (2011) Software Engineering and Service Science (ICSESS), 2011 IEEE 2nd International Conference, pp. 326-329; Cavalcanti, A., Gaudel, M., A note on traces refinement and the conf relation in the Unifying Theories of Programming (2010) Unifying Theories of Programming, pp. 42-61. , Springer Berlin Heidelberg",,,,IEEE Computer Society,"2013 4th World Congress on Software Engineering, WCSE 2013",3 December 2013 through 4 December 2013,Hong Kong,104643,,,,,English,"Proc. World Congr. Softw. Eng., WCSE",Conference Paper,Scopus,2-s2.0-84899085278,,
TRUE,v,v,"Al-Jamimi, H.A., Ahmed, M.",Using prolog rules to detect software design patterns: Strengths and weaknesses,2013,"Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE",2013-January,January,,727,730,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84937715068&partnerID=40&md5=ad1086b137f876276cba5e50e4b74d7b,"Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia","Al-Jamimi, H.A., Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia; Ahmed, M., Information and Computer Science Department, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia","Software design patterns reflect best practice solutions applied to frequent design problems. In the literature, various approaches have been proposed to detect the occurrences of design patterns. Prolog rules and similar formalisms have already been utilized for reasoning about the structural and behavioral properties of the software design. Nevertheless, these approaches suffer some weaknesses that we aim to reveal and discuss. In this paper, we discuss Prolog based approaches to detect the design patterns in software. In addition, we evaluate the capability of Prolog rules and highlight the strengths and weaknesses. Copyright © 2013 by Knowledge Systems Institute Graduate School.",Design pattern; Detection; Prolog rules; Software design,Error detection; Knowledge engineering; Pattern recognition; Software engineering; Behavioral properties; Best practices; Design Patterns; Design problems; Prolog rules; Software design patterns; Software design,,,,,"11-INF1633-04, KFUPM, King Fahd University of Petroleum and Minerals","Gamma, E., (1995) Design Patterns: Elements of Reusable Object- Oriented Software, , New York, NY: Addison-Wesley Professional Computing Series, Addison-Wesley Publishing Company; Qiu, Q.J.M., Detecting design pattern using sub graph discovery (2010) The 2nd Asian Conference on Intelligent Information and Database Systems(ACIIDS).; Clocksin, W.F., Mellish, C.S., (2003) Programming in Prolog, , Fifth ed. ed, Springer-Verlag; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-216; Wuyts, R., Declarative reasoning about the structure of object oriented systems (1998) Proceedings of the 26th Conference on the Technology of Object-Oriented Languages and Systems, pp. 112-124; Heuzeroth, D., Mandel, S., Löwe, W., Generating design pattern detectors from pattern specifications Proc. of the 18th IEEE International Conference on Automated Software Engineering2003, pp. 245-248. , IEEE Computer Society Press: Montreal, Quebec, Canada; Huang, H., A practical pattern recovery approach based on both structural and behavioral analysis (2005) Journal of Systems and Software, 75 (1-2), pp. 69-87; Stoianov, A., Sora, I., Detecting patterns and antipatterns in software using prolog rules (2010) Proceedings of International Joint Conference on Computational Cybernetics and Technical Informatics, pp. 253-258; Dong, J., Adding pattern related information in structural and behavioral diagrams (2004) Information and Software Technology, 46 (5), pp. 293-300",,,Knowledge Systems Institute Graduate School,Knowledge Systems Institute Graduate School,"25th International Conference on Software Engineering and Knowledge Engineering, SEKE 2013",27 June 2013 through 29 June 2013,,112836,23259000,,,,English,"Proc. Int. Conf. Softw. Eng. Knowl. Eng., SEKE",Conference Paper,Scopus,2-s2.0-84937715068,,
TRUE,1,1,"Ware, C., Wright, W., Pioch, N.J.",Visual thinking design patterns,2013,Proceedings:  DMS 2013 - 19th International Conference on Distributed Multimedia Systems,,,,150,155,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84923887046&partnerID=40&md5=af14d6ab31b314ed086cdd946f88a8dd,"Center for Coastal and Ocean Mapping, University of New Hampshire, Durham, NH, United States; Oculus Info Inc, Toronto, ON, Canada; Systems and Technology Research LLC, Suite 5850, 400 W. Cummings Park, Woburn, MA, United States","Ware, C., Center for Coastal and Ocean Mapping, University of New Hampshire, Durham, NH, United States; Wright, W., Oculus Info Inc, Toronto, ON, Canada; Pioch, N.J., Systems and Technology Research LLC, Suite 5850, 400 W. Cummings Park, Woburn, MA, United States","In visual analytics, interactive data visualizations provide a bridge between analytic computations, often involving “big data”, and computations in the brain of the user. Visualization provides a high bandwidth channel from the computer to the user by means of the visual display, with interactions including brushing, dynamic queries, and generalized fisheye views designed to select and control what is shown. In this paper we introduce Visual Thinking Design Patterns (VTDPs) as part of a methodology for producing cognitively efficient designs. We describe their main components, including epistemic actions (actions to seek knowledge) and visual queries (pattern searches that provide a whole or partial solution to a problem). We summarize the set of 20 VTDPs we have identified so far and show how they can be used in a design methodology. © 2013 by Knowledge Systems Institute Graduate School.",Data visualization; Design patterns; Visual analytics; Visual thinking,Data visualization; Design; Multimedia systems; Visualization; Analytic computations; Design Methodology; Design Patterns; Efficient designs; Epistemic actions; High-bandwidth channels; Visual analytics; Visual thinking; Big data,,,,,,"Ware, C., (2012) Information Visualization, Perception for Design, , Third Edition. Morgan Kaufman; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language, , Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Card, S.K., Moran, T.P., Newell, A., (1983) The Psychology of Human-Computer Interaction, , London: Lawrence Erlbaum Associates; Anderson, J.R., Matessa, M., Lebiere, C., ACT-R: A theory of higher level cognition and its relation to visual attention (1997) Human-Computer Interaction, 12 (4), pp. 439-462; Pirolli, P., Card, S., The sensemaking process and leverage points for analyst technology as identified through cognitive task analysis (2005) Proceedings of International Conference on Intelligence Analysis, 5; Elmqvist, N., Fekete, J.D., Hierarchical Aggregation for Information Visualization: Overview, Techniques, and Design Guidelines (2010) IEEE Transactions on Visualization and Computer Graphics, 16 (3), pp. 439-454; Van Ham, F., Perer, A., Search, Show Context, Expand on Demand”: Supporting Large Graph Exploration with Degree-of-Interest (2009) Visualization and Computer Graphics, IEEE Transactions, 15 (6), pp. 953-960; Becker, R., Cleveland, W.S., Brushing scatterplots Technometrics, 29, pp. 127-142; Furnas, G.W., Generalized fisheye views (1986) ACM, 17 (4); Ahlberg, C., Shneiderman, B., Visual information seeking: Tight coupling of dynamic query filters with starfield displays (1994) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems: Celebrating Interdependence, pp. 313-317. , ACM; Amar, R., Stasko, J., A knowledge task-based framework for design and evaluation of information visualizations (2004) Information Visualization, 2004. INFOVIS 2004. IEEE Symposium On, pp. 143-150; Jonker, D., Langevin, S., Bozowsky, N., Wright, W., Aperture: An Open Web 2.0 Visualization Framework (2011) Hawaii International Conference on System Sciences","Ware, C.; Center for Coastal and Ocean Mapping, University of New HampshireUnited States",,Knowledge Systems Institute Graduate School,Knowledge Systems Institute Graduate School,"19th International Conference on Distributed Multimedia Systems, DMS 2013",8 August 2013 through 10 August 2013,,109469,,1891706349,,,English,Intl. Conf. Distributed Multimedia Syst.,Conference Paper,Scopus,2-s2.0-84923887046,,
TRUE,v,v,"Bouassida, N., Ben-Abdallah, H., Issaoui, I.",Evaluation of an automated multi-phase approach for patterns discovery,2013,International Journal of Software Engineering and Knowledge Engineering,23,10,,1367,1398,,,10.1142/S0218194013500435,http://www.scopus.com/inward/record.url?eid=2-s2.0-84899732482&partnerID=40&md5=e71b4f54846dbc281e9656d52c8bf782,"Mircl Laboratory, Institut Supérieur d'Informatique et de Multimédia, University of Sfax, Sfax, Tunisia; King Abdulaziz University, P.O. Box 80200, Jeddah 21589, Saudi Arabia; Mircl Laboratory, Faculté des Sciences Economiques et de Gestion, University of Sfax, Sfax, Tunisia","Bouassida, N., Mircl Laboratory, Institut Supérieur d'Informatique et de Multimédia, University of Sfax, Sfax, Tunisia; Ben-Abdallah, H., King Abdulaziz University, P.O. Box 80200, Jeddah 21589, Saudi Arabia; Issaoui, I., Mircl Laboratory, Faculté des Sciences Economiques et de Gestion, University of Sfax, Sfax, Tunisia","Design patterns capitalize the knowledge of expert designers and offer reuse that provides for higher design quality and overall faster development. To attain these advantages, a designer must, however, overcome the difficulties in understanding design patterns and determining those appropriate for his/her particular application. On the other hand, one way to benefit from design patterns is to assist inexperienced designers in pattern detection during the design elaboration. Such detection should tolerate variations between the design and the pattern since the exact instantiation of a pattern is infrequent in a design. However, not all variations of a pattern are tolerated. In particular, some structural variations may result in non-optimal instantiations where the requirements are respected but the structure is different; such variations are called spoiled patterns and should also be detected and transformed into acceptable pattern instantiations. This paper first presents an improvement of our design/spoiled pattern detection approach, named MAPeD (Multi-phase Approach for Pattern Discovery). The latter uses an XML information retrieval technique to identify design/spoiled pattern occurrences in a design using, first, static and semantic information and, secondly, dynamic information. This multi-phase detection approach tolerates structural differences between the examined design and the identified design pattern. Furthermore, thanks to the matching information it collects, our identification technique can offer assistance for the improvement of a design. In its second contribution, this paper evaluates MAPeD by comparing its recall and precision rates for five open source systems: JHotDraw, JUnit, JRefactory, MapperXML, QuickUML. The latter were used by other approaches in experimental evaluations. Our evaluation shows that our design pattern identification approach has an average improvement of 9.98% in terms of precision over the best known approach. © 2013 World Scientific Publishing Company.",Design patterns; structural and behavioral detection; XML retrieval,Open systems; XML; Design Patterns; Experimental evaluation; Identification techniques; Pattern instantiation; Structural differences; Structural variations; XML information retrieval; XML Retrieval; Design,,,,,,"Albin-Amiot, H., Cointe, P., Gueheneuc, Y.G., Un meta-modele pour coupler application et detection des design patterns (2002) L'Objet, 8 (1), pp. 1-18; Alikacem, E., Sahraoui, H.A., D-etection d'anomalies utilisant un langage de description r-egle de qualit-e (2006) LMO'06, pp. 185-200; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th IEEE International Workshop on Program Understanding, pp. 153-160; Arcelli, F., Perin, F., Raibulet, C., Ravani, S., JADEPT: Dynamic analysis for behavioral design pattern detection (2009) 4th International Conference on Evaluation of Novel Approaches to Software Engineering, pp. 95-106; Arcelli, F., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Information Sciences, 181 (7), pp. 1306-1324; Arcelli, F., Zanoni, M., Caracciolo, A., A benchmark platform for design pattern detection (2010) Proceedings of PATTERNS, pp. 42-47; Bergenti, F., Poggi, A., Improving UML design pattern detection (2000) Proceedings of the 12th International Conference on Software Engineering and Knowledge Engineering; Blewitt, A., Bundy, A., Automatic verication of Java design patterns (2001) Proceedings of 16th Annual International Conference on Automated Software Engineering, pp. 324-327; Blondel, V.D., Gajardo, A., Heymans, M., Senellart, P., Van Dooren, P., A measure of similarity between graph vertices: Applications to synonym extraction and web searching (2004) SIAM Review, 46 (4), pp. 647-666; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Technical Report TR-96-07, University of Illinois at Urbana-Champaign; Bouassida, N., Ben-Abdallah, H., A new approach for pattern problem detection (2010) 22nd International Conference on Advanced Information System Engineering; Bouassida, N., Ben-Abdallah, H., Pattern and spoiled pattern detection through an information retrieval (2010) Journal of Emerging Technologies in Web Intelligence, 2 (3), pp. 167-175; Bouhours, C., Leblanc, H., Percebois, C., Structural variants detection for design pattern instantiation (2006) 1st International Workshop on Design Pattern Detection for Reverse Engineering; Bouhours, C., Leblanc, H., Percebois, C., Bad smells in design and design patterns (2009) Journal of Object Technology, 8 (3); Carriere, S.J., Woods, S.G., Kazman, R., Software architectural transformation (1999) Proceedings of the 6th Working Conference on Reverse Engineering, pp. 13-23; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) TOOLS, 30, pp. 18-32; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2010) 14th European Conference on Software Maintenance and Reengineering, pp. 176-185; Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching (2008) Proceedings of the ACM Symposium on Applied Computing, pp. 765-769; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Transactions on Systems, Man and Cybernetics, 39 (6), pp. 1271-1282; El Boussaidi, G., Mili, H., Detecting patterns of poor design solutions by using constraint propagation (2008) Proceedings of the 11th International Conference on Model Driven Engineering Languages and Systems, pp. 189-203; Florijin, G., Meijers, M., Van Winsen, P., Tool support for object oriented patterns (1997) ECOOP 1997, LNCS, 1241, pp. 472-495; Frakes, W.B., Baeza-Yates, R., (1992) Information Retrieval: Data Structures and Algorithms, , Prentice Hall; Füleuro;op, L.J., Hegedus, P., Ferenc, R., Gyimóthy, T., Towards a benchmark for evaluating reverse engineering tools (2008) Proceedings of the 15th Working Conference on Reverse Engineering; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addisson-Wesley, Reading; Gamma, E., Eggenschwiler, T., http://www.jhotdraw.orgGueheneuc, Y., Antoniol, G., DeMIMA: A multilayered approach for design pattern identication (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Gueheneuc, Y.-G., P-MARt: Pattern-like micro architecture repository (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories; Heuzeroth, D., Mandel, S., Lowe, W., Generating design pattern detectors from pattern specications (2003) Proceedings of the 18th IEEE International Conference on Automated Software Engineering; Ka-Yee, J.N., Gueheneuc, Y.-G., Giuliano, A., Identication of behavioural and creational design motifs through dynamic analysis (2010) Journal of Software Maintenance, 22 (8), pp. 597-627; Kniesel, G., Binun, A., Standing on the shoulders of giants - A data fusion approach to design pattern detection (2009) 17th IEEE International Conference on Program Comprehension, pp. 208-217; Lee, H., Youn, H., Lee, E., A design pattern detection technique that aids reverse engineering (2008) International Journal of Security and Applications, 2 (1); Manning, C.D., Raghavan, P., Schütze, H., (2008) An Introduction to Information Retrieval, , Cambridge University Press, Cambridge; Moha, N., Gueheneuc, Y.G.L., Meur, A.F., Duchien, L., A domain analysis to specify design defects and generate detection algorithms (2008) Proceedings of the 11th International Conference on Fundamental Approaches to Software Engineering, , Springer-Verlag; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, , doi: 10.1109/ASE.2006.57; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11); Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., (2006) Design Pattern Detection, , http://java.uom.gr/_nikos/pattern-detection.html; Van Rijsbergen, C.J., (1979) Information Retrieval, , 2nd edition (London, Butterworths; (2007), http://jrefactory.sourceforge.net(2007), http://www.junit.orghttp://ptidej.dyndns.org/downloads/pmartDong, J., Lad, S., Zhao, Y., DP-miner: Design pattern discovery using matrix (2007) 14th Annual IEEE International Conference and Workshops on the Engineering of Computer- Based Systems; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Birukou, A., Blanzieri, E., Giorgini, P., Weiss, M., Facilitating pattern repository access with the implicit culture framework (2007) Proceedings of the Focus Group on Pattern Repositories; (2000), http://argouml.tigris.org",,,,World Scientific Publishing Co. Pte Ltd,,,,,2181940,,ISEKE,,English,Int. J. Software Engineer. Knowledge Engineer.,Article,Scopus,2-s2.0-84899732482,,
TRUE,1,1,"Nye, B.D.",Integrating GIFT and autotutor with sharable knowledge objects (SKO),2013,CEUR Workshop Proceedings,1009,,,54,61,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84924985461&partnerID=40&md5=63d25de283131e1ead3e115f51be6b63,"Institute for Intelligent Systems, University of Memphis, Memphis, TN, United States","Nye, B.D., Institute for Intelligent Systems, University of Memphis, Memphis, TN, United States","AutoTutor and the Generalized Intelligent Framework for Tutoring (GIFT) are two separate projects that have independently recognized the need for greater interoperability and modularity between intelligent tutoring systems. To this end, both projects are moving toward service-oriented delivery of tutoring. A project is currently underway to integrate AutoTutor and GIFT. This paper describes the Sharable Knowledge Object (SKO) framework, a serviceoriented, publish and subscribe architecture for natural language tutoring. First, the rationale for breaking an established tutoring system into separate services is discussed. Secondly, a short history of AutoTutor's software design is reviewed. Next, the design principles of the new SKO framework for tutoring are described. Finally, the plans and progress for integration with the GIFT architecture are presented.",Design Patterns; Intelligent Tutoring Systems; Message Passing; Service Oriented Architectures; Systems Integration,Artificial intelligence; Computer aided instruction; Information services; Interoperability; Message passing; Software design; Design Patterns; Design Principles; Intelligent tutoring system; Natural languages; Service Oriented; Short history; Systems integration; Tutoring system; Service oriented architecture (SOA),,,,,,"Graesser, A.C., Conley, M.W., Olney, A., Intelligent tutoring systems (2012) APA Educational Psychology Handbook, Vol 3: Application to Learning and Teaching, pp. 451-473. , Harris, K.R., Graham, S., Urdan, T., Bus, A.G., Major, S., Swanson, H.L. (eds.). APA, Washington, DC; Graesser, A.C., Lu, S., Jackson, G.T., Mitchell, H.H., Ventura, M., Olney, A., Louwerse, M.M., AutoTutor: A tutor with dialogue in natural language (2004) Behavior Research Methods, Instruments, and Computers, 36 (2), pp. 180-192; Graesser, A.C., McNamara, D.S., Louwerse, M.M., Cai, Z., Coh-metrix: Analysis of text on cohesion and language (2004) Behavior Research Methods, Instruments, and Computers, 36 (2), pp. 193-202. , May; Hu, X., Cai, Z., Han, L., Craig, S.D., Wang, T., Graesser, A.C., AutoTutor lite (2009) AIED 2009, , IOS Press Amsterdam The Netherlands; Murray, T., An overview of intelligent tutoring system authoring tools (2003) Authoring Tools for Advanced Technology Learning Environments, pp. 493-546; Nye, B.D., ITS and the digital divide: Trends, challenges, and opportunities (2013) AIED, 2013; Nye, B.D., Graesser, A.C., Hu, X., Multimedia learning in intelligent tutoring systems (2013) Multimedia Learning, , Mayer, R.E. (ed.) (3rd Ed.). Cambridge University Press; Pavlik, P.I., Maass, J., Rus, V., Olney, A.M., Facilitating co-adaptation of technology and education through the creation of an open-source repository of interoperable code (2012) ITS 2012, pp. 677-678. , Springer, Berlin; Pavlik, P.I., Toth, J., How to build bridges between intelligent tutoring system subfields of research (2010) ITS 2010. LNCS, 6095, pp. 103-112. , Aleven, V and Kay, J and Mostow, J. (ed.); Wiemer-Hastings, P., Graesser, A.C., Harter, D., The foundations and architecture of autotutor (1998) ITS 1998. LNCS, 1452, pp. 334-343. , Goettl, B.P., Halff, H.M., Redfield, C.L., Shute, V.J. (eds.) Springer, Berlin (Sep; Raymond, E.S., (2003) The Art of UNIX Programming, , Addison-Wesley; Roschelle, J., Kaput, J., Educational software architecture and systemic impact: The promise of component software (1996) Journal of Educational Computing Research, 14 (3), pp. 217-228; Sottilare, R.A., Goldberg, B.S., Brawner, K.W., Holden, H.K., A modular framework to support the authoring and assessment of adaptive computer-based tutoring systems (cbts) (2012) I/ITSEC; Vanlehn, K., The behavior of tutoring systems (2006) International Journal of Artificial Intelligence in Education, 16 (3), pp. 227-265; Woolf, B., (2009) Building Intelligent Interactive Tutors: Student-centered Strategies for Revolutionizing E-learning","Nye, B.D.; Institute for Intelligent Systems, University of MemphisUnited States",Walker E.Looi C.-K.,,CEUR-WS,"Workshops at the 16th International Conference on Artificial Intelligence in Education, AIED 2013",9 July 2013 through 13 July 2013,,111484,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84924985461,,
FALSE,3,4,"Tengtrirat, T., Prompoon, N.",Applying exception handling patterns for user interface customization in software games modification,2013,Lecture Notes in Engineering and Computer Science,2202,,,529,535,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84880065799&partnerID=40&md5=14f49b214f967d125b55101fdf1e7220,"Software Engineering Laboratory, Center of Excellence in Software Engineering, Department of Computer Engineering, Thailand","Tengtrirat, T., Software Engineering Laboratory, Center of Excellence in Software Engineering, Department of Computer Engineering, Thailand; Prompoon, N., Software Engineering Laboratory, Center of Excellence in Software Engineering, Department of Computer Engineering, Thailand","There may be1 an error that usually occurs during the use of software. It may appear in different forms and may result in different effects. Developer should perform software verification and validation and make correction in order to reduce the chance of software mulfunction. In software game, end user is allowed to modify software especially interface customization. This may easily cause an error. This research presents a method for error detection and management for software game modification using exception handling patterns and game engine. The proposed method can be applied to other similar software types.",Design Pattern; Game Engine; Software Games Modification; User Interface Customization,Computer science; Design Patterns; Different effects; Exception handling patterns; Game Engine; Interface customization; Software games; Software types; Software verification and validation; User interfaces,,,,,,"Burnett, M., Cook, C., Rothermel, G., End-user software engineering (2004) Communications of the ACM, 47 (9), pp. 53-58; Lerner, B.S., Christov, S., Exception handling patterns for process modeling (2010) IEEE Transactions on Software Engineering, 36 (2), pp. 162-183. , March/April; Tang, S., Hanneghan, M., An ontology for documenting serious game design 2011 Developments in E-systems Engineering, pp. 431-431. , Game Content Model: Stephen Tang and Martin Hanneghan; Lee, S.H., Lee, G.H., Hoon, H., Song, D.H., Rhew, S.Y., An empirical model of the game software development processes Proceedings of the 4th International Conference on Software Engineering Research, , Management and Applications (SERA;06); El-Nasr, M.S., Smith, B.K., Learning through game modding (2006) ACM Computers in Entertainment, 4 (1), pp. 1-20. , January; Scacchi, W., Modding as a basis for developing game systems (2011) 1st International Workshop on Games and Software Engineering, pp. 5-8. , GAS; Burnett, M., What is end-user software engineering and why does it matter? 2nd International Symposium on End-User Development 2009, pp. 15-28; Ko, A.J., The state of the art in end-user software engineering (2011) ACM Computer Survey, (21); http://blog.vuscode.com/malovicn/archive/2007/12/18/model-view-presenter- mvp-vs-model-view-controller-mvc.aspx, Model View Presenter (MVP) VS Model View Controller (MVC) [Last Accessed: September 03, 2012]Hunter, M., The MVPC software design pattern Tidying the House 2006, pp. 1-5; Peker, A.G., Can, T., A design goal and design pattern based approach for development of game engines for mobile platforms (2011) The 16th International Conference on Computer Games; Lerner, B.S., Christov, S., Wise, A., Osterweil, L.J., Exception handling patterns for processes WEH '08, Proceedings of the 4th International Workshop on Exception Handling, pp. 55-61",,,et al.;IAENG Society of Artificial Intelligence;IAENG Society of Bioinformatics;IAENG Society of Computer Science;IAENG Society of Data Mining;IAENG Society of Electrical Engineering,Newswood Limited,"International MultiConference of Engineers and Computer Scientists 2013, IMECS 2013",13 March 2013 through 15 March 2013,Kowloon,97671,20780958,9789881925183,,,English,Lect. Notes Eng. Comput. Sci.,Conference Paper,Scopus,2-s2.0-84880065799,,
FALSE,1,3,"Fallon, R., Polovina, S.",REA analysis of SAP HCM; some initial findings,2013,CEUR Workshop Proceedings,1040,,,31,43,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84924699822&partnerID=40&md5=b99de17bf5c78472dc06810753dafc57,"Communication and Computing Research Centre (CCRC), Sheffield Hallam University, United Kingdom","Fallon, R., Communication and Computing Research Centre (CCRC), Sheffield Hallam University, United Kingdom; Polovina, S., Communication and Computing Research Centre (CCRC), Sheffield Hallam University, United Kingdom","This paper explores further the claim that the Transaction-Oriented Architecture (TOA) based on the principles of Resources, Events, Agents (REA) can enhance Enterprise Resource Planning (ERP) systems by providing a principled theoretical basis that can underpin ERP business process implementations. We provide details of some of our initial findings of the REA/TOA analysis which we carried out on the SAP Human Capital Management (HCM) module. Given that SAP is recognized as the dominant ERP system with over 50% of the market share, this technology is viewed as the representative case study technology for exploring the theory of REA in actual ERP systems. In particular O'Leary's and Dunn et al.'s works are expanded upon, substantiating O'Leary's findings that SAP was found to be consistent with REA in its database, semantic and structure orientations. Using SAP's HCM module as the exemplar, two notable discoveries are made. These are namely (i) identifying that several anomalies exist in the underlying data model, and (ii) that there are many more REA entities than previously discovered by Dunn et al. Through the SAP HCM exemplar it is shown that REA adds value to modelling business processes in ERP systems.",Combining and unifying business intelligence with semantic technologies (CUBIST); Design patterns; ERP; HCM; Ontology; REA; SAP A.G.; Semantics; TOA (transaction-oriented architecture),Competition; Formal concept analysis; Information analysis; Management science; Ontology; Semantic Web; Semantics; Design Patterns; HCM; REA; SAP A.G; Semantic technologies; TOA (transaction-oriented architecture); Enterprise resource planning,,,,,,"Bieman, J.M., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) Software Metrics Symposium, 2003. Proceedings. Ninth International, , pp. n/a; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Boston: Addison-Wesley; Polovina, S., Hill, R., A transactions pattern for structuring unstructured corporate information in enterprise applications (2009) International Journal of Intelligent Information Technologies (IJIIT), 5, pp. 33-47; Polovina, S., The transaction concept in enterprise systems (2011) The 2nd CUBIST Workshop, p. 43; Gargeya, V.B., Brady, C., Success and failure factors of adopting SAP in ERP system implementation (2005) Business Process Management Journal, 11, pp. 501-516; McCarthy, W.E., The REA accounting model: A generalized framework for accounting systems in a shared data environment (1982) The Accounting Review, 57, pp. 554-578; Dunn, C.L., Cherrington, J.O., Hollander, A.S., (2005) Enterprise Information Systems: A Pattern-based Approach, , Boston: McGraw-Hill; Haßmann, R., Krämer, C., Richter, J., (2010) Personnel Planning and Development Using SAP ERP HCM, , Boston: SAP PRESS; Borch, S.E., Stefansen, C., Evaluating the REA enterprise ontology from an operational perspective (2004) Proceedings of the CAiSE, , pp. n/a; O'Leary, D.E., On the relationship between REA and SAP (2004) International Journal of Accounting Information Systems, 5, pp. 65-81; Geerts, G.L., McCarthy, W.E., (1997) Modeling Business Enterprises as Value-added Process Hierarchies with Resource-event-agent Object Templates, , Berlin: Springer; Hessellund, A., (2006) Modeling Issues in REA, , pp. n/a; Murthy, U., Wiggins, C., Jr., (2004) OOREA: An Object-oriented Resources, Events, Agents Model for Enterprise Systems Design, , pp. n/a; Booch, G., Rumbaugh, J., Jacobson, I., The unified modeling language (1996) Unix-review, 14, pp. 41-44. , 46, 48",,Dau F.Andrews S.,,CEUR-WS,"3rd CUBIST Workshop on Combining and Uniting Business Intelligence with Semantic Technologies, CUBIST-WS 2013 - Co-located with the 11th International Conference on Formal Concept Analysis, ICFCA 2013",22 May 2013,,111454,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84924699822,,
TRUE,1,1,"Ghose, A., Chakravarty, K., Agrawal, A.K., Ahmed, N.",Poster abstract: Unobtrusive indoor surveillance of patients at home using multiple kinect sensors,2013,SenSys 2013 - Proceedings of the 11th ACM Conference on Embedded Networked Sensor Systems,,,40,,,,,10.1145/2517351.2517412,http://www.scopus.com/inward/record.url?eid=2-s2.0-84905700543&partnerID=40&md5=716d86bc323adf99ea2fcccfb8ac5eb5,"Innovation Lab, TCS, United States","Ghose, A., Innovation Lab, TCS, United States; Chakravarty, K., Innovation Lab, TCS, United States; Agrawal, A.K., Innovation Lab, TCS, United States; Ahmed, N., Innovation Lab, TCS, United States","In this paper we propose a system for unobtrusive automated indoor surveillance of subjects in indoor environment using the Kinect sensor. We demonstrate that the features of identity, location and activity of a person can be detected with considerable accuracy using the system. Further, we show how existing design patterns can be used to create a data parallel and scalable architecture for such surveillance in real-time.",Kinect; Surveillance; System-Architecture,Embedded systems; Space surveillance; Data parallel; Design Patterns; Indoor environment; Indoor surveillance; Kinect; Kinect sensors; Scalable architectures; System-Architecture; Monitoring,,,,,,"http://ipindiaservices.gov.in/patentsearch/PublishedSearch/ publishApplicationNumber.aspx?application_number=2651/MUM/2011, RIPSAC Patent India Accessed: 28th-July-2013Chakravarty, K., Das, D., Sinha, A., Konar, A., Feature selection by differential evolution algorithm-a case study in personnel identification (2013) Evolutionary Computation (CEC 2013) IEEE Congress on, pp. 892-899; Ghose, Ubiheld-ubiquitous healthcare monitoring system for elderly and chronic patients (2013) 1st Workshop on Human Factors and Activity Recognition in Healthcare, Wellness and Assisted Living (Recognise2Interact 2013), UbiComp 2013, , page to appear ACM; Ni, B., Wang, G., Moulin, P., Rgbd-hudaact: A color-depth video database for human daily activity recognition (2013) Consumer Depth Cameras for Computer Vision, pp. 193-208. , Springer; Xia, L., Chen, C.-C., Aggarwal, J., View invariant human action recognition using histograms of 3d joints (2012) Computer Vision and Pattern Recognition Workshops (CVPRW 2012 IEEE Computer Society Conference on, pp. 20-27. , IEEE",,,ACM SigArch;ACM SigBed;ACM SigComm;ACM SigMetrics;ACM SigMobile;ACM SigOps,Association for Computing Machinery,"11th ACM Conference on Embedded Networked Sensor Systems, SenSys 2013",11 November 2013 through 15 November 2013,Rome,106891,,9781450320276,,,English,SenSys - Proc. ACM Conf. Embedded Networked Sens. Syst.,Conference Paper,Scopus,2-s2.0-84905700543,,
FALSE,3,1,"Anjos, J.M.S., Coracini, G.K., Villani, E.",A proposal and verification of a software architecture based on LabVIEW for a multifunctional robotic end-effector,2013,Advances in Engineering Software,55,,,32,44,,3,10.1016/j.advengsoft.2012.09.004,http://www.scopus.com/inward/record.url?eid=2-s2.0-84868261830&partnerID=40&md5=88fa73cd5a5485de6869bc8de2650167,"Instituto Tecnológico de Aeronáutica, Praça Marechal Eduardo Gomes, 50, Vila das Acácias, CEP 12.228-900, São José dos Campos, SP, Brazil","Anjos, J.M.S., Instituto Tecnológico de Aeronáutica, Praça Marechal Eduardo Gomes, 50, Vila das Acácias, CEP 12.228-900, São José dos Campos, SP, Brazil; Coracini, G.K., Instituto Tecnológico de Aeronáutica, Praça Marechal Eduardo Gomes, 50, Vila das Acácias, CEP 12.228-900, São José dos Campos, SP, Brazil; Villani, E., Instituto Tecnológico de Aeronáutica, Praça Marechal Eduardo Gomes, 50, Vila das Acácias, CEP 12.228-900, São José dos Campos, SP, Brazil","This paper proposes a software architecture based on LabVIEW for controlling discrete event systems. The proposed architecture is an adaptation of the producer-consumer design pattern. This work uses the control software of a multifunctional robotic end-effector as a test-bed for analyzing the applicability of the software architecture and its limitations and advantages. This case study demonstrates the effectiveness of the architecture for dealing with the integration of multiple functionalities in the control system. For this case study, the validation of the architecture is performed using two verification techniques: (1) a formal verification using timed automata and the UPPAAL model checker and (2) the CoFI (Conformance and Fault Injection) method for defining the set of test cases to check the software product. Both verification techniques identified errors that were introduced into the control system during the programming phase. © 2012 Elsevier Ltd. All rights reserved.",Discrete event systems; LabVIEW; Model checking; Model-based testing; Multifunctional end-effector; Software verification,Control software; Design Patterns; Fault injection; Formal verifications; LabViEW; Model based testing; Multifunctional end-effector; Proposed architectures; Software products; Software verification; Test case; Timed Automata; Uppaal model checkers; Verification techniques; Automata theory; Computer programming languages; Control systems; Discrete event simulation; Model checking; Robotics; Software testing; Software architecture,,,,,,"Anjos, J.M.S., (2010) Proposta de Arquitetura de Software de Controle Para Efetuador Robótico Multifunctional, , 123 f. Master thesis. São José dos Campos-SP: Instituto Tecnológico de Aeronáutica (ITA); Anjos, J.M.S., Gripp, J., Pontes, R.P., Villani, E., Applying the CoFI testing methodology to a multifunctional robot end-effector (2011) Proceedings of the 5th Latin - American Symposium on Dependable Computing (LADC) - Industrial Track, pp. 1-6. , São José dos Campos (Brasil); Ambrosio, A.M., Martins, E., Vijaykumar, N.L., Carvalho, S.V., A conformance testing process for space applications software services (2006) Journal of Aerospace Computing Information and Communication (JACIC), 3 (4), pp. 146-158. , USA; Bell, I., Falcon, J., Limroth, J., Robinson, K., Integration of hardware into the LabVIEW environment for rapid prototyping and the development of control design applications (2004) Proceedings of UKACC Control 2004 Mini Symposia, pp. 79-81. , Bath; Behrmann, G., A Tutorial on UPPAAL (2005) Proceedings of the 4th International School on Formal Methods for the Design of Computer, Communication, and Software Systems (SFM-RT́04), 3185. , LNCS; Chen, M., Object oriented programming in LabVIEW for acquisition and control systems at the aerodynamics laboratory of the National Research Council of Canada (2007) Proceedings of the 22nd International Congress on Instrumentation in Aerospace Simulation Facilities (ICIASF 2007), pp. 1-6. , Pacific Grove (USA); De Queiroz, M.H., Cury, J.E.R., Synthesis and implementation of local modular supervisory control for a manufacturing cell (2002) Proceedings of the International Workshop on Discrete Event Systems (WODES'02); Dietrich, P., Malik, R., Wonham, W.M., Brandin, B.A., Implementation considerations in supervisory control (2001) Proceedings of SCODES'01, , Paris (France); Falcon, J.S., LabVIEW state diagram toolkit for the design and implementation of discrete-event systems (2006) Proceedings of the 8th International Workshop on Discrete Event Systems, pp. 469-470. , Michigan (USA): Ann Arbor; Farines, J.M., De Queiroz, M.H., Rocha, V.G., Carpes, A.M.M., Vernadat, F., Cregut, X., A model-driven engineering approach to formal verification of PLC programs (2011) Proc of IEEE 16th Conference on Emerging Technologies & Factory Automation (ETFA), pp. 1-8. , Toulouse (France); Furtado, J.M.S., (2010) Projeto e Validação de Um Sistema de Medição de Perpendicularidade Para Efetuadores Robóticos, , 137 f. Master thesis. São José dos Campos-SP: Instituto Tecnológico de Aeronáutica (ITA); Hellgren, A., Lennartson, B., Fabian, M., Modelling and PLC-based implementation of modular supervisory control (2002) Proceedings of the 6th International Workshop on Discrete Event Systems (WODES), pp. 1-6. , Zaragoza (Spain); Josifovska, S., The father of LabVIEW (2003) IEE Rev, 49 (9), pp. 30-33; Leal, A.B., Da Cruz, D.L.L., Hounsell, M.S., Supervisory control implementation into programmable logic controllers (2009) Proceedings of the 14th IEEE International Conference on Emerging Technologies and Factory Automation, , Mallorca (Spain); Martins, E., Sabião, S.B., Ambrosio, A.M., ConData: A tool for automating specification-based test case generation for communication systems (1999) Softw Qual J, 8 (4), pp. 303-319; Mireles, Jr.J., Lewis, F.L., Intelligent material handling: Development and implementation of a matrix-based discrete-event controller (2001) IEEE Trans Ind Electr, 48 (6), pp. 1087-1097; Miremadi, S., Åkesson, K., Lennartson, B., Fabian, M., Supervisor computation and representation: A case study (2002) Proceedings of the International Workshop on Discrete Event Systems (WODES'02); Oliveira, K.V., Gorgonio, K.C., Perkusich, A., Lima, A.M.N., Silva, L.D., Automatic timed automata extraction from ladder programs for model-based analysis of control systems (2010) Software Engineering for Secure Systems: Industrial and Research Perspectives, pp. 305-328. , Mouratidis H, (Org.) Hershey, Pennsylvania (USA): IGI Global; Olson, J.M., (2005) Modeling of A Discrete Event Manufacturing Plant and Design and Implementation of Controller Using LabVIEW and Programmable Logic Controller, p. 147. , Master thesis, Iowa State University (Ames, Iowa); Ramadage, P.J., Wonham, W.M., The control of discrete event systems (1989) Proc IEEE, 77, pp. 81-98; Tavakoli, S., Mousavi, A., Komashie, A., A generic framework for real-time discrete event simulation (DES) modeling (2008) Proceedings of the 2008 Winter Simulation Conference, pp. 1931-1938. , Miami (USA); Turley, R., Wright, M., Developing engine test software in LabVIEW (1997) Proceedings of 1997 IEEE Autotestcon Proceedings, pp. 575-579. , Anaheim (USA); Yin, M., Xu, Y., Li, X., Design of virtual instrument software system based on nested state machine (2009) Proceedings of the International Conference on Computational Intelligence and Software Engineering (CiSE 2009), pp. 1-3. , Wuhan (China); Whitley, K.N., Blackwell, A.F., Visual programming in the wild: A survey of LabVIEW programmers (2001) J Visual Lang Comput, 12, pp. 435-472. , 10.1006/jvlc.2000.0198","Villani, E.; Instituto Tecnológico de Aeronáutica, Praça Marechal Eduardo Gomes, 50, Vila das Acácias, CEP 12.228-900, São José dos Campos, SP, Brazil; email: evillani@ita.br",,,,,,,,9659978,,AESOD,,English,Adv Eng Software,Article,Scopus,2-s2.0-84868261830,,
TRUE,4,4,"Mirakhorli, M., Mäder, P., Cleland-Huang, J.",Variability points and design pattern usage in architectural tactics,2012,"Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE 2012",,,,,,,,10.1145/2393596.2393657,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871324999&partnerID=40&md5=0473ba2034387ac91f354db9e9b69924,"DePaul University, Chicago, IL 60604, United States; Johannes Kepler University, Linz, Austria","Mirakhorli, M., DePaul University, Chicago, IL 60604, United States; Mäder, P., Johannes Kepler University, Linz, Austria; Cleland-Huang, J., DePaul University, Chicago, IL 60604, United States","Architectural tactics are important building blocks of software architecture. Tactics come in many shapes and sizes, describe solutions for addressing specific quality concerns, and are prevalent across high-performance fault-tolerant systems. Once a decision is made to utilize a tactic, the developer must generate a concrete plan for realizing the tactic in the design and code. Unfortunately, the variability points found in individual tactics can make this a challenging task. To address this knowledge gap, we conducted a study to investigate how design patterns were used to implement various tactics. Data mining techniques were used to identify potential pattern instances within tactic implementations. Our manual analysis of the retrieved data identified a distinct set of variability points for each tactic, as well as corresponding design patterns used to address them. From these observations we construct tactic-level decision trees depicting variability points of a tactic and generate a reference model which provides implementation guidance. © 2012 ACM.",architecture; design patterns; tactics,Building blockes; Data mining techniques; Design Patterns; Fault-tolerant systems; Implementation guidance; Knowledge gaps; Manual analysis; Reference models; tactics; Decision trees; Software architecture; Architecture,,,,,,"Apache-Hadoop Design Documents, , http://hadoop.apache.org/common/docs/current/hdfs-design.html; Apache Ofbiz, , http://ofbiz.apache.org/; Microsoft Compute Cluster Pack, , http://msdn.microsoft.com/enus/library/cc136762(v=vs.85).aspxa; Bachmann, F., Bass, L., Klein, M., (2003) Deriving Architectural Tactics: A Step Toward Methodical Architectural Design, , Technical Report, Software Engineering Institute; Bachmann, P., Deferred cancellation: A behavioral pattern (2008) Proceedings of the 15th Conference on Pattern Languages of Programs, PLoP '08, pp. 18:1-18:17. , New York, NY, USA, ACM; Bass, L., Clements, P., Kazman, R., (2003) Software Architecture in Practice, , Adison Wesley; Birman, K., Security options for distributed settings (2012) Guide to Reliable Distributed Systems, Texts in Computer Science, pp. 543-569. , Springer London; Bosch, J., (2000) The Design and Use of Software Architectures, , Addison-Wesley; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: A System of Patterns, , John Wiley & Sons, Inc., New York, NY, USA; Champagne, R., Gagne, S., Towards automation of performance architectural tactics application Proceedings of the IEEE/IFIP Conference on Software Architecture, 2011; Cleland-Huang, J., Settimi, R., Zou, X., Solc, P., The detection and classification of non-functional requirements with application to early aspects (2006) RE, pp. 36-45; Cleland-Huang, J., Settimi, R., Zou, X., Solc, P., Automated detection and classification of non-functional requirements (2007) Requir. Eng., 12 (2), pp. 103-120; De Bruin, H., Van Vliet, H., Top-down composition of software architectures (2002) ECBS, pp. 147-; Perry, D.E., Wolf, A.L., Foundations for the study of software architecture (1992) SIGSOFT Software Eng. Notes, 17 (4), pp. 40-52; Eick, S., Graves, T., Karr, A., Marron, J., Mockus, A., Does code decay? Assessing the evidence from change management data (2001) Software Engineering, IEEE Transactions on, 27 (1), pp. 1-12. , jan; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns, Software Engineering, Object-oriented Programming, , Addison-Wesley; Gueheneuc, Y., Rabih, M., A simple recommender system for design patterns Proceedings of the 1st European PLoP Focus Group on Pattern Repositories, 2007; Hanmer, R., Patterns for Fault Tolerant Software (2007) Wiley Series in Software Design Patterns; Harrison, W., Ossher, H., Subject-oriented programming: A critique of pure objects (1993) SIGPLAN Not., 28 (10), pp. 411-428. , Oct; Izurieta, C., Bieman, J.M., How software designs decay: A pilot study of pattern evolution (2007) ESEM, pp. 449-451; Kerievsky, J., (2005) Refactoring to Patterns, , Addison-Wesley; Mirakhorli, M., Cleland-Huang, J., A decision-centric approach for tracing reliability concerns in embedded software systems Proceedings of the Workshop on Embedded Software Reliability (ESR), Held at ISSRE10, November 2010; Mirakhorli, M., Cleland-Huang, J., Tracing architectural concerns in high assurance systems: (nier track) (2011) Proceedings of the 33rd International Conference on Software Engineering, pp. 908-911; Mirakhorli, M., Shin, Y., Cleland-Huang, J., Cinar, M., A tactic centric approach for automating traceability of quality concerns (2012) International Conference on Software Engineering, ICSE, (1); Rasool, G., Mäder, P., Flexible design pattern detection based on feature types (2011) ASE, pp. 243-252; Scott, J., Kazman, R., (2009) Realizing and Refining Archituctural Tactics: Availability, , Technical Report, CMU/SEI-2009-006, ESC-TR-009-006; Shaw, M., Garlan, D., Software Architecture: Perspectives on an Emerging Discipline (2011) Software and Systems Traceability, , Andrea Zisman, Jane Cleland-Huang and Olly Gotel. Springer-Verlag; The Sourcerer Project, , sourcerer.ics.uci.edu; Van Gurp, J., Bosch, J., Svahnberg, M., On the notion of variability in software product lines (2001) WICSA, pp. 45-54; Van Gurp, J., Brinkkemper, S., Bosch, J., Design preservation over subsequent releases of a software product: A case study of baan erp: Practice articles (2005) J. Softw. Maint. Evol., 17, pp. 277-306. , July; Wojcik, R., Bachmann, F., Bass, L., Clements, P., Merson, P., Nord, R., Wood, B., (2006) Attribute-driven Design (Add), , version 2.0, 2006-023","Mirakhorli, M.; DePaul University, Chicago, IL 60604, United States; email: m.mirakhorli@acm.org",,"Assoc. Comput. Mach., Spec. Interest;Group Softw. Eng. (ACM SIGSOFT)",,"20th ACM SIGSOFT International Symposium on the Foundations of Software Engineering, FSE 2012",11 November 2012 through 16 November 2012,"Cary, NC",94505,,9781450316149,,,English,"Proc. ACM SIGSOFT Int. Symp. Found. Softw. Eng., FSE",Conference Paper,Scopus,2-s2.0-84871324999,,
FALSE,4,1,"Gonzalez-Sanchez, J., Chavez-Echeagaray, M.-E., Atkinson, R., Burleson, W.",Affective computing meets design patterns: A pattern-based model for a multimodal emotion recognition framework,2012,ACM International Conference Proceeding Series,,,,,,,,10.1145/2396716.2396730,http://www.scopus.com/inward/record.url?eid=2-s2.0-84870947002&partnerID=40&md5=5ab9206219f50b127e52103e5b5bac9c,"Arizona State University, United States; University Drive and Mill Avenue, Tempe, AZ 85287, United States","Gonzalez-Sanchez, J., Arizona State University, United States, University Drive and Mill Avenue, Tempe, AZ 85287, United States; Chavez-Echeagaray, M.-E., Arizona State University, United States, University Drive and Mill Avenue, Tempe, AZ 85287, United States; Atkinson, R., Arizona State University, United States, University Drive and Mill Avenue, Tempe, AZ 85287, United States; Burleson, W., Arizona State University, United States, University Drive and Mill Avenue, Tempe, AZ 85287, United States","There is a growing interest in how to leverage information about user's emotions as a mean of personalizing the response of computer systems. This is particularly useful for computer-aided learning, health, and entertainment systems. However, there are few architectures, frameworks, libraries, or software tools that allow developers to easily integrate emotion recognition into their software projects. The work reported in this paper offers a way to address this shortcoming in models by proposing the use of software design patterns for modeling a multimodal emotion recognition framework. The framework is designed to: (1) integrate existing sensing devices and SDK platforms, (2) include diverse inference algorithms, and (3) correlate measurements from diverse sources. We describe our experience using this model and its impact on facets, such as creating a common language among stakeholders, supporting an incremental development, and adjusting to a highly shifting development team, as well as the qualities achieved and trade-offs made. © 2011 ACM.",design patterns; emotion recognition; framework; multimodal,Affective Computing; Common languages; Design Patterns; Development teams; Emotion recognition; Entertainment systems; framework; Incremental development; Inference algorithm; Multi-modal; Multimodal emotion recognition; Pattern-based models; Sensing devices; Software design patterns; Software project; Computer aided instruction; Economic and social effects; Inference engines; Sensors; Software design,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1997) A Pattern Language, , Oxford University Press; Arroyo, I., Cooper, D.G., Burleson, W., Woolf, B.P., Muldner, K., Christopherson, R., Emotion Sensors Go to School (2009) Artificial Intelligence in Education. Building Learning Systems That Care: from Knowledge Representation to Affective Modelling (Vol. Frontiers in Artificial Intelligence and Applications 200), pp. 17-24. , V. Dimitrova, R. Mizoguchi, B. du Boulay & A. Grasser (Eds.), IOS Press; (2011) Bodymedia Fit, , http://www.bodymedia.com/; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) A System of Patterns: Pattern-oriented Software Architecture, , Wiley; Chao, X., Zhiyong, F., A Trusted Affective Model Approach to Proactive Health Monitoring System (2008) Proceedings of the 2008 International Seminar on Future BioMedical Information Engineering. FBIE '08, pp. 429-432. , IEEE Computer Society; Deugo, D., Foundation Patterns (1998) Proceedings of Fifth Pattern Languages of Programs Conference. Allerton Park, Illinois; D'Mello, S., Picard, R.W., Graesser, A., Toward an Affect-Sensitive AutoTutor (2007) IEEE Intelligent Systems, 22 (4), pp. 53-61; El Kaliouby, R., Robinson, P., Generalization of a vision-based computational model of mind-reading (2005) Proceedings of First International Conference on Affective Computing and Intelligent Interaction. ACII'05, pp. 582-589. , Springer-Verlang; (2011) EMOTIV - Brain Computer Interface Technology, , http://www.emotiv.com; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA; Gilleade, K., Dix, A., Allanson, J., Affective Videogames and Modes of Affective Gaming: Assist Me, Challenge Me, Emote Me (2005) Proceedings of Digital Games Research Association. DIGRA'05, pp. 16-20; Gonzalez-Sanchez, J., Chavez-Echeagaray, M.E., Atkinson, R., Burleson, W., An Agent-Based Software Architecture for a Multimodal Emotion Recognition Framework (2001) Proceedings of 2011 Ninth Working IEEE/IFIP Conference on Software Architecture. WICSA'11, pp. 187-193. , IEEE Computer Society; (1999) IEEE: Standard Glossary of Software Engineering Terminology, 1. , 610.12-1990, IEEE Press; Jing, D., Sheng, Y., Kang, Z., Visualizing design patterns in their applications and compositions (2007) IEEE Transactions on Software Engineering, 33 (7), pp. 433-453; Johnson, R.E., Components, frameworks, patterns (1997) Proceedings of the 1997 Symposium on Software Reusability. SSR '97, pp. 10-17. , Harandi, M. (Ed.). ACM; Khomh, F., Gueheneuc, Y.G., Do Design Patterns Impact Software Quality Positively? (2008) Proceedings of 12th European Conference on Software Maintenance and Reengineering. CSMR'08, pp. 274-278; Mota, S., Picard, R.W., Automated Posture Analysis for Detecting Learners Interest Level (2003) Proceedings of Computer Vision and Pattern Recognition Workshop. CVPRW'03, 5, p. 49. , IEEE Press; Picard, R.W., (1997) Affective Computing, , MIT Press; Qi, Y., Picard, R.W., Context-Sensitive Bayesian Classifiers and Application to Mouse Pressure Pattern Classification (2002) Proceedings of International Conference on Pattern Recognition. ICPR'02, 3, p. 30448; (2011) SERIAL Port Design Pattern, , http://www.eventhelix.com/RealtimeMantra/PatternCatalog/ serial_port_design_pattern.htm; Sharbrough, F., Chatrian, G.-E., Lesser, R.P., Lüders, H., Nuwer, M., Picton, T.W., American Electroencephalographic Society Guidelines for Standard Electrode Position Nomenclature (1991) J. Clin. Neurophysiol, 8, pp. 200-202; Sinha, A., Client-server computing (1992) Communications of the ACM, 35, pp. 77-98; Strauss, M., Reynolds, C., Hughes, S., Park, K., McDarby, G., Picard, R.W., The HandWave Bluetooth Skin Conductance Sensor (2005) Proceedings of First International Conference on Affective Computing and Intelligent Interaction. ACII'05, pp. 699-706. , Springer-Verlang; (2011) TOBII Technology - Eye Tracking and Eye Control, , http://www.tobii.com; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proceedings of 5th Conference on Software Maintenance and Reengineering, pp. 77-84. , Sousa, P. and Ebert, J. (Eds.), IEEE Computer Society Press; Woolf, B., Burelson, W., Arroyo, I., Emotional Intelligence for Computer Tutors (2007) Supplementary Proceedings of the 13th International Conference on Artificial Intelligence in Education. AIED '07, pp. 6-15","Gonzalez-Sanchez, J.University Drive and Mill Avenue, Tempe, AZ 85287, United States; email: javiergs@asu.edu",,Hillside Europe;IT-Szene Munchen,,"16th European Conference on Pattern Languages of Programs, EuroPLoP 2011",13 July 2011 through 17 July 2011,Irsee,94399,,9781450313025,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84870947002,,
TRUE,v,v,"Lebon, M., Tzerpos, V.",Fine-grained design pattern detection,2012,Proceedings - International Computer Software and Applications Conference,,,6340155,267,272,,,10.1109/COMPSAC.2012.37,http://www.scopus.com/inward/record.url?eid=2-s2.0-84870823918&partnerID=40&md5=afce7146d6fc86507939dcd709109540,"Department of Computer Science and Engineering, York University, Toronto, Canada","Lebon, M., Department of Computer Science and Engineering, York University, Toronto, Canada; Tzerpos, V., Department of Computer Science and Engineering, York University, Toronto, Canada","Design patterns have been used successfully to build well-organized, flexible software systems. In the reverse engineering field, detecting design patterns can simplify program comprehension by providing clues about the rationale behind the system's design. However, the precision and recall of existing approaches to design pattern detection leave room for improvement. In this paper, we introduce a novel technique called FiG that complements existing detection methods by utilizing finegrained static information contained in the software system. Our approach filters a large number of false positives by utilizing fine-grained rules that describe the static structure of a design pattern. We have implemented our approach in the context of the Eiffel programming language. Several experiments were performed to determine the effectiveness of the proposed approach. © 2012 IEEE.",Design pattern detection; Reverse engineering; Software design patterns,Design Patterns; Detection methods; Eiffel programming language; False positive; Novel techniques; Precision and recall; Program comprehension; Software design patterns; Software systems; Static information; Static structures; Computer software; Reverse engineering,,,,,,"Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) Software Engineering, IEEE Transactions on, 34 (5), pp. 667-684. , Sept.-Oct; Shi, N., Olsson, R.A., Reverse engineering of design patterns from Java source code (2006) Proceedings of the 21st International Conference on Automated Software Engineering. Washington, pp. 123-134. , DC, USA: IEEE Computer Society; Smith, J.M., Stotts, D., Elemental design patterns: A formal semantics for composition of object-oriented software architecture (2003) Proceedings of the 27th Annual NASA Goddard; Nickel, U., Niere, J., Zundorf, A., The FUJABA environment (2000) Proceedings of the 22nd International Conference on Software Engineering, pp. 742-745. , IEEE Computer Society; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) Proceedings of the Eleventh International Workshop on Program Comprehension, pp. 94-103. , IEEE Computer Society Press; Keller, R., Schauer, R., Robitaille, S., Page, P., Patternbased reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , IEEE Computer Society Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Lebon, M., (2007) A Fine-grained Model for Design Pattern Detection in Eiffel Systems, , http://www.cse.yorku.ca/~bil/LebonThesis.pdf, Master's thesis, York University, available online at; Wang, W., Tzerpos, V., Design pattern detection in Eiffel systems (2005) Proceedings of the 12th Working Conference on Reverse Engineering, pp. 165-174. , Washington, DC, USA: IEEE Computer Society; Bezault, E., Gobo Eiffel Project, , http://www.gobosoft.com/eiffel/gobo/index.html; Jezequel, J.-M., Train, M., Mingins, C., (1999) Design Patterns and Contracts, , Addison-Wesley","Lebon, M.; Department of Computer Science and Engineering, York University, Toronto, Canada; email: maurice@cse.yorku.ca",,IEEE;IEEE Computer Society,,"36th IEEE Annual International Computer Software and Applications Conference, COMPSAC 2012",16 July 2012 through 20 July 2012,Izmir,94244,7303157,9780769547367,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-84870823918,,
TRUE,4,4,"Mannava, V., Ramesh, T.",Multimodal pattern-oriented software architecture for self-configuration and self-healing in autonomic computing systems,2012,ACM International Conference Proceeding Series,,,,382,389,,,10.1145/2393216.2393281,http://www.scopus.com/inward/record.url?eid=2-s2.0-84870706781&partnerID=40&md5=f08fc12ef2309149cffc7541ed6b596e,"Department of Computer Science and Engineering, K L University, Vaddeswaram, 522502 Andhra Pradesh, India; Department of Computer Science and Engineering, National Institute of Technology, Warangal, 506004 Andhra Pradesh, India","Mannava, V., Department of Computer Science and Engineering, K L University, Vaddeswaram, 522502 Andhra Pradesh, India, Department of Computer Science and Engineering, National Institute of Technology, Warangal, 506004 Andhra Pradesh, India; Ramesh, T., Department of Computer Science and Engineering, National Institute of Technology, Warangal, 506004 Andhra Pradesh, India","Because of the diverse nature of software systems, it is unlikely that systems will be developed using a purely service or component programming paradigms. Therefore, the ability to combine the strength of various programming paradigms and use them in a complementary manner becomes essential. As far as we know, there are no studies on composition of design patterns and pattern languages for autonomic computing domain. The work presented in the paper is concerned with composition of existing design patterns which are taken from various programming paradigms that are used for developing of the self-configuration and self-healing characteristics of the autonomic computing systems. In this paper we propose multimodal pattern-oriented software architecture with composition of Worker Object, Look-Up, Row Data Gateway Database access, Adaptation Detector, Case-Based Reasoning, Leader/Followers,and Observer design patterns using Java Web Services (JWS), JUDDI service repository, and Java Aspect Components (JAC) Frame work by Providing multimodality among the application working modes at various levels. We have also focused on the Data-Mining Association Rule Based Learning concept to introduce new service as composition of two or more services and thereby reducing the number of client requests to handle. Copyright © 2012 ACM.",Aspect-oriented programming (AOP); Aspect-oriented programming design pattern; Autonomic computing system; Design patterns; Feature-oriented programming (FOP); Java aspect components (JAC); Remote method invocation (RMI),Aspect-oriented; Autonomic computing system; Design Patterns; Feature-oriented programming; Java aspect components (JAC); Programming design; Remote method invocations; Aspect oriented programming; Data mining; Software architecture; Web services; Java programming language,,,,,,"Aubert, O., Beugnard, A., (2001) Adaptive Strategy Design Pattern; Cacho, N., Sant'anna, C., Figueiredo, E., Garcia, A., Batista, T., Lucena, C., Composing design patterns: A scalability study of aspect-oriented programming (2006) Proceedings of the 5th International Conference on Aspect-oriented Software Development, pp. 109-121. , ACM; Dobson, S., Sterritt, R., Nixon, P., Hinchey, M., Fulfilling the vision of autonomic computing (2010) IEEE Computer, 43 (1), pp. 35-41; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) Systems, Man and Cybernetics, Part A: Systems and Humans, IEEE Transactions on, 39 (6), pp. 1271-1282; Gamma, R.J.E., Helm, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, United States; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269; Lincke, R., Lundberg, J., Lowe, W., Comparing software metrics tools (2008) Proceedings of the 2008 International Symposium on Software Testing and Analysis, pp. 131-142. , ACM; Mannava, V., Ramesh, T., A novel adaptive monitoring compliance design pattern for autonomic computing systems (2011) ACC (1), Volume 190 of Communications in Computer and Information Science, pp. 250-259. , Springer; Mannava, V., Ramesh, T., An aspectual feature module based adaptive design pattern for autonomic computing systems (2012) Intelligent Information and Database Systems, pp. 130-140. , http://www.codeswat.com, volume 7198 of Lecture Notes in 1, Computer Science, Springer Berlin/Heidelberg; Mannava, V., Ramesh, T., An aspectual feature module based adaptive design pattern for autonomic computing systems (2012) Proceedings of the 4th Asian Conference on Intelligent Information and Database Systems - Volume Part III, ACIIDS'12, pp. 130-140. , Berlin, Heidelberg, Springer-Verlag; Mannava, V., Ramesh, T., Composite design pattern for feature-oriented service injection and composition of web services for distributed computing systems with service oriented architecture (2012) International Journal of Web & Semantic Technology (IJWesT), 3 (3), pp. 73-84; Mannava, V., Ramesh, T., Multimodal pattern-oriented software architecture for self-optimization and self-configuration in autonomic computing system using multi objective evolutionary algorithms (2012) Proceedings of the International Conference on Advances in Computing, Communications and Informatics, ICACCI '12, pp. 1236-1243. , New York, NY, USA, ACM; Mannava, V., Ramesh, T., A novel adaptive re-configuration compliance design pattern for autonomic computing systems (2012) Procedia Engineering, 30, pp. 1129-1137. , International Conference on Communication Technology and System Design 2011; Mannava, V., Ramesh, T., A novel approach for developing jxta peer-to-peer computing systems using aspect-oriented programming methodologies (2012) Proceedings of the International Conference on Advances in Computing, Communications and Informatics, ICACCI '12, pp. 421-427. , New York, NY, USA, ACM; Mannava, V., Ramesh, T., A service administration a design pattern for dynamically con-guring communication services in autonomic computing systems (2012) Intelligent Information and Database Systems, pp. 53-63. , volume 7196 of Lecture Notes in Computer Science, Springer Berlin/Heidelberg; Pawlak, R., Retaille, J.-P., Seinturier, L., (2005) Foundations of AOP for J2EE Development (Foundation), , Apress, Berkely, CA, USA; Psaier, H., Skopik, F., Schall, D., Dustdar, S., Behavior monitoring in self-healing service-oriented systems (2010) COMPSAC, pp. 357-366; Ramirez, A.J., Cheng, B.H., Applying adaptation design patterns (2009) Proceedings of the 6th International Conference on Autonomic Computing, ICAC '09, pp. 69-70. , New York, NY, USA, ACM; Rasche, A., Polze, A., Dynamic reconfiguration of component-based real-time software (2005) Proceedings of the 10th IEEE International Workshop on Object-Oriented Real-Time Dependable Systems, WORDS '05, pp. 347-354. , Washington, DC, USA, IEEE Computer Society; Soule, P., (2010) Autonomics Development: A Domain-Specific Aspect Language Approach, , Autonomic Systems. Springer Verlag; Taibi, T., Formalizing design patterns composition (2006) The IEE-Proceeding Software, 153 (3), pp. 127-136","Mannava, V.; Department of Computer Science and Engineering, K L University, Vaddeswaram, 522502 Andhra Pradesh, India; email: vishnumannava@acm.org",,Avinashilingam University,,"2nd International Conference on Computational Science, Engineering and Information, CCSEIT 2012",26 October 2012 through 28 October 2012,Coimbatore,94208,,9781450313100,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84870706781,,
TRUE,v,v,"Paydar, S., Kahani, M.",A Semantic Web based approach for design pattern detection from source code,2012,"2012 2nd International eConference on Computer and Knowledge Engineering, ICCKE 2012",,,6395394,289,294,,,10.1109/ICCKE.2012.6395394,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873120377&partnerID=40&md5=d5518f91d4795b18176e0e13d02894b9,"Web Technology Lab., Dept. of Computer Engineering, Ferdowsi University of Mashhad, Mashhad, Iran","Paydar, S., Web Technology Lab., Dept. of Computer Engineering, Ferdowsi University of Mashhad, Mashhad, Iran; Kahani, M., Web Technology Lab., Dept. of Computer Engineering, Ferdowsi University of Mashhad, Mashhad, Iran","Design patterns provide experience reusability and increase quality of object oriented designs. Knowing which design patterns are implemented in a software is important in comprehending, maintaining and refactoring its design. However, despite the interest in using design patterns, traditionally, their usage is not explicitly documented. Therefore, a method is required to reveal this information from some artifacts of the systems (e.g. source codes, models, and executables). In this paper, an approach is proposed which uses the Semantic Web technologies for automatically detecting design patterns from Java source code. It is based on the semantic data model as the internal representation, and on SPARQL query execution as the analysis mechanism. Experimental evaluations demonstrate that this approach is both feasible and effective, and it reduces the complexity of detecting design patterns to creating a set of SPARQL queries. © 2012 IEEE.",design pattern; ontology; semantic web; software analysis; source code,Design Patterns; Executables; Experimental evaluation; Internal representation; Java source codes; Object oriented design; Query execution; Refactorings; Semantic data model; Semantic Web technology; Software analysis; Source codes; Web-based approach; Knowledge engineering; Ontology; Query processing; Reusability; Semantic Web; Java programming language,,,,,,"Hu, L., Sartipi, K., Dynamic analysis and design pattern detection in java programs (2008) Proc. 20th International Conference on Software Engineering and Knowledge Engineering (SEKE 2008), pp. 842-846. , San Francisco Bay; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; http://www.w3.org/RDF/, RDF-Semantic Web Standardshttp://www.w3.org/TR/rdf-schema/, RDF Vocabulary Description Language 1. 0: RDF Schemahttp://www.w3.org/TR/owl-features/, OWL Web Ontology Language OverviewAntoniou, G., Harmelen, F.V., Web ontology language: Owl (2009) Handbook of Ontologies, pp. 91-110. , S. Staab, R. Studer (eds. ), , Springer; http://www.w3.org/RDF/advantages.html, The RDF Advantages PageGamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design pattern discovery using matrix (2007) Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems, pp. 371-380. , DOI 10.1109/ECBS.2007.33, 4148953, Proceedings - 14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, ECBS 2007: Raising Expectations of Computer-Based Systems; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., A two phase approach to design pattern recovery (2007) Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR, pp. 297-306. , DOI 10.1109/CSMR.2007.10, 4145047, Proceedings - CSMR 2007: 11th European Conference on Software Maintenance and Reengineering - Software Evolution in Complex Software Intensive Systems; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Proc. 21st IEEE/ACM International Conference on Automated Software Engineering (ASE '06), pp. 123-134. , Washington, DC; Sharma, T., Janakiram, D., Inferring design patterns using the rep graph (2010) Journal of Object Technology, 9, pp. 95-110; Kiefer, K., Bernstein, A., Tappolet, J., Mining software repositories with isparql and a software evolution ontology (2007) Proc. 4th International Workshop on Mining Software Repositories (MSR), , Minneapolis, MA; Hartig, O., Kost, M., Freytag, J.C., Automatic component selection with semantic technologies (2008) Proc. 4th International Workshop on Semantic Web Enabled Software Engineering (SWESE 2008), , Karlsruhe, Germany; Alnusair, A., Zhao, T., Retrieving reusable software components using enhanced representation of domain knowledge Recent Trends in Information Reuse and Integration, Lecture Notes in Computer Science (LNCS), , Springer Verlag. unpublished; Schuegerl, P., Rilling, J., Charland, P., Enriching se ontologies with bug report quality (2008) Proc. 4th International Workshop on Semantic Web Enabled Software Engineering (SWESE 2008), , Karlsruhe, Germany; Durão, F.A., Vanderlei, T.A., Almeida, E.S., Meira, S.R.L., Applying a semantic layer in a source code search tool (2008) Proc. ACM Symposium on Applied Computing (SAC '08), pp. 1151-1157. , New York, NY; Keivanloo, I., Roostapour, L., Schugerl, P., Rilling, J., Semantic web-based source code search (2010) Proc. 6th International Workshop on Semantic Web Enabled Software Engineering (SWESE 2010), , San Francisco, CA; Tappolet, J., Semantics-aware software project repositories (2008) Proc. 5th European Semantic Web Conference (ESWC'08), , Ph. D. Symposium, Tenerife, Spain; Tappolet, J., Kiefer, C., Bernstein, A., Semantic web enabled software analysis (2010) Journal of Web Semantics, 8, pp. 225-240; Kiefer, C., Bernstein, A., Stocker, M., The fundamentals of isparql-A virtual triple approach for similarity-based semantic web tasks (2007) Proc. 6th International Semantic Web Conference (ISWC), pp. 295-309; Kiefer, C., Bernstein, A., Locher, A., Adding data mining support to sparql via statistical relational learning methods (2008) Proc. 5th European Semantic Web Conference (ESWC'08), pp. 478-492. , Tenerife, Spain; Dong, J., Zhao, Y., Peng, T., A review of dsign pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Binkley, D., Source code analysis: A road map (2007) Future of Software Engineering (FOSE '07), 2007, pp. 115-130; Shahri, H.H., Hendler, J.A., Porter, A.A., Software configuration management using ontologies (2007) Proc. 3rd International Workshop on Semantic Web Enabled Software Engineering (SWESE 2007), Innsubruk, Austria; Happel, H.J., Seedof, S., Applications of ontologies in software engineering Proc. 2nd International Workshop on Semantic Web Enabled Software Engineering (SWESE 2006); Wang, Y., Bai, X., Li, J., Huang, R., Ontology-based test case generation for testing web services (2007) ISADS, , March; Bagheri, E., Ensan, F., Gasevic, D., Decision support for the software product line domain engineering lifecycle (2012) Automated Software Engineering Journal, 19, pp. 335-337","Paydar, S.; Web Technology Lab., Dept. of Computer Engineering, Ferdowsi University of Mashhad, Mashhad, Iran; email: samad.paydar@stu-mail.um.ac.ir",,,,"2012 2nd International eConference on Computer and Knowledge Engineering, ICCKE 2012",18 October 2012 through 19 October 2012,Mashhad,95197,,9781467344760,,,English,"Int. eConf. Comput. Knowl. Eng., ICCKE",Conference Paper,Scopus,2-s2.0-84873120377,,
TRUE,4,4,"Snyder, P.L., Valetto, G., Fernandez-Marquez, J.L., Serugendo, G.D.M.",Augmenting the repertoire of design patterns for self-organized software by reverse engineering a bio-inspired P2P system,2012,"International Conference on Self-Adaptive and Self-Organizing Systems, SASO",,,6394127,199,204,,2,10.1109/SASO.2012.23,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873555836&partnerID=40&md5=65e430b7bbd74170ae4c39fa4d00f4ea,"Drexel University, Department of Computer Science, Philadelphia, PA, United States; University of Geneva, Carouge, Switzerland","Snyder, P.L., Drexel University, Department of Computer Science, Philadelphia, PA, United States; Valetto, G., Drexel University, Department of Computer Science, Philadelphia, PA, United States; Fernandez-Marquez, J.L., University of Geneva, Carouge, Switzerland; Serugendo, G.D.M., University of Geneva, Carouge, Switzerland","Investigations of self-organizing mechanisms, often inspired by phenomena in natural or societal systems, have yielded a wealth of techniques for the self-Adaptation of complex, large- and ultra-large-scale software systems. The principled design of self-Adaptive software using principles of self-organization remains challenging. Several studies have approached this problem by proposing design patterns for self-organization. In this paper, we present the results of applying a catalog of biologically inspired design patterns to Mycoload, a self-organizing system for clustering and load balancing in decentralized service networks. We reverse-engineered Mycoload, obtaining a design that isolates instances of several patterns. This exercise allowed us to identify additional reusable self-organization mechanisms, which we have also abstracted out as design patterns: SPECIALIZATION, which we present here for the first time, and a generalized form of COLLECTIVE SORT. The pattern-based design also led to a better understanding of the relationships among the multiple self-organizing mechanisms that together determine the emegent dynamics of Mycoload. © 2012 IEEE.",bio-inspired algorithms; design modeling; design patterns; self-organization,Bio-inspired; Bio-inspired algorithms; Biologically inspired design; Design modeling; Design Patterns; P2P system; Self adaptation; Self organizations; Self-adaptive software; Self-organization mechanisms; Self-organizing mechanism; Self-organizing systems; Service network; Societal systems; Software systems; Computer software; Cybernetics; Reverse engineering; Design,,,,,,"Parunak, H., Brueckner, S., Software engineering for selforganizing systems (2011) Proc. of 12th Int'l Wkshp. on Agent- Oriented Software Engineering (AOSE 2011; Gardelli, L., Viroli, M., Omicini, A., Design patterns for self-organizing multiagent systems (2007) 2nd Int'l Wkshp. on Engineering Emergence in Decentralised Autonomic System (EEDAS) 2007, ICAC 2007, pp. 62-71. , June; De Wolf, T., Holvoet, T., Design patterns for decentralised coordination in self-organising emergent systems (2007) Proc. of 4th Int'l Conf. on Engineering Self-Org. Systems, pp. 28-49. , Berlin, Heidelberg: Springer-Verlag; Fernandez-Marquez, J.L., Di Marzo Serugendo, G., Montagna, S., Viroli, M., Arcos, J.L., Description and composition of bio-inspired design patterns: A complete overview (2012) Natural Computing, pp. 1-25; Valetto, G., Snyder, P.L., Dubois, D.J., Nitto, E.D., Calcavecchia, N.M., A self-organized load-balancing algorithm for overlay-based decentralized service networks (2011) Proceeding of SASO'11. IEEE, pp. 168-177; Snyder, P., Greenstadt, R., Valetto, G., Myconet: A fungi-inspired model for superpeer-based peer-to-peer overlay topologies (2009) SASO'09, pp. 40-50; Snyder, P., Valetto, G., Fernandez-Marquez, J.L., Serugendo, G.D.M., (2012) Describing Self-organizing Software with Design Patterns: A Reverse Engineering Experience, , Drexel University, Tech. Rep. DU-CS-12-07; Nagpal, R., A catalog of biologically-inspired primitives for engineering self-organization (2004) Engineering Self- Organising Systems, Nature-Inspired Approaches to Software Engineering. LNCS, 2977, pp. 53-62. , Springer; Mamei, M., Menezes, R., Tolksdorf, R., Zambonelli, F., Case studies for self-organization in computer science (2006) Jrnl. of Systems Architecture, 52, pp. 443-460. , Aug; Kasinger, H., Bauer, B., Denzinger, J., Design pattern for self-organizing emergent systems based on digital infochemicals (2009) Proc. of the Int.Conf. on Engineering of Autonomic and Autonomous Systems (EASe'2009), pp. 45-55. , IEEE Computer Society; Parunak, H., Brueckner, S., Weyns, D., Holvoet, T., Valckenaers, P., E pluribus unum: Polyagent and delegate MAS architectures (2007) Proc. of 8th Int'l Wkshp. on Multi-Agent- Based Simulation (MABS07), pp. 36-51. , Springer; Cruz Torres, M.H., Van Beers, T., Holvoet, T., No more design patterns for multi-Agent systems (2011) Proceedings of the Compilation of the Co-located Workshops on DSM'11, TMC'11, AGERE!'11, AOOPES'11, NEAT'11, VMIL'11, Ser. SPLASH '11 Workshops, pp. 213-220. , New York, NY, USA: ACM; Babaoglu, O., Canright, G., Deutsch, A., Caro, G.A.D., Ducatelle, F., Gambardella, L.M., Ganguly, N., Urnes, T., Design patterns from biology for distributed computing (2006) ACM Trans. on Autonomous and Adaptive Sys, 1, pp. 26-66; Sudeikat, J., Renz, W., (2008) Engineering Environment-mediated Multi-Agent Systems, pp. 39-57. , D. Weyns, S. A. Brueckner, and Y. Demazeau, Eds. Berlin, Heidelberg: Springer-Verlag, ch. Toward Systemic MAS Development: Enforcing Decentralized Self-organization by Composition and Refinement of Archetype Dynamics; Ramirez, A.J., Cheng, B.H.C., (2010) Design patterns for developing dynamically adaptive systems, pp. 49-58; Nitschke, G., Schut, M., Eiben, A., Emergent specialization in biologically inspired collective behavior systems (2008) Intelligent Complex Adaptive Systems, pp. 215-253. , A. Yang and Y. Shan, Eds. IGI Publishing; Salazar, N., Rodriguez-Aguilar, J.A., Arcos, J.L., Robust coordination in large convention spaces (2010) AI Communications, 23 (4), pp. 357-372; Kersch, P., Szabo, R., Kis, Z., Erdei, M., Kovács, B., Self organizing ambient control space: An ambient network architecture for dynamic network interconnection (2005) Proc. of 1st ACM Wkshp. on Dynamic Interconnection of Networks. ACM, pp. 17-21; Fernandez-Marquez, J.L., Arcos, J.L., Serugendo, G.D.M., A decentralized approach for detecting dynamically changing diffuse event sources in noisy WSN environments (2012) Applied Artificial Int., 26 (4), pp. 376-397; Nagpal, R., Programmable self-Assembly using biologicallyinspired multiagent control (2002) 1st Int'l. Joint Conf. on Autonomous Agents and Multiagent Systems: Part 1, pp. 418-425; Selvakennedy, S., Sinnappan, S., Shang, Y., A biologically-inspired clustering protocol for wireless sensor networks (2007) Computer Communications, 30 (14-15), pp. 2786-2801; Sudeikat, J., Renz, W., Toward systemic mas development: Enforcing decentralized self-organization by composition and refinement of archetype dynamics (2008) Engineering Environment-Mediated Multi-Agent Systems, pp. 39-57; Casadei, M., Gardelli, L., Viroli, M., Simulating emergent properties of coordination in maude: The collective sort case (2007) Electronic Notes in Theoretical Computer Science, 175 (2), pp. 59-80; Gardelli, L., Viroli, M., Casadei, M., Omicini, A., Designing self-organising MAS environments: The collective sort case (2007) Env.s for Multi-Agent Systems III, pp. 254-271; Casadei, M., Viroli, M., Gardelli, L., On the collective sort problem for distributed tuple spaces (2009) Science of Computer Programming, 74 (9), pp. 702-722; Deneubourg, J., Goss, S., Franks, N., Sendova-Franks, A., Detrain, C., Chrétien, L., The dynamics of collective sorting robot-like ants and ant-like robots (1991) Proc. of 1st Int'l Conf on Simulation of Adaptive Behavior on from Animals to Animats, pp. 356-363; Wang, T., Zhang, H., Collective sorting with multiple robots (2004) Robotics and Biomimetics 2004. ROBIO 2004. IEEE Int'l Conf. On. IEEE, pp. 716-720; Mühleisen, H., Augustin, A., Walther, T., Harasic, M., Teymourian, K., Tolksdorf, R., A self-organized semantic storage service (2010) Proc. of the 12th Int'l Conf. on Info. Integration and Web-based App. & Serv. ACM, pp. 357-364","Snyder, P.L.; Drexel University, Department of Computer Science, Philadelphia, PA, United States",,"IEEE;IEEE Communications Society;Universite Jean Moulin Lyon 3, Ecole Universitaire de Management;Ecole Nationale Superieure des Mines;UCLB Lyon 1",,"2012 IEEE 6th International Conference on Self-Adaptive and Self-Organizing Systems, SASO 2012",10 September 2012 through 14 September 2012,Lyon,95450,19493673,9780769548517,,,English,"Int. Conf. Self-Adaptive and Self-Organizing Syst., SASO",Conference Paper,Scopus,2-s2.0-84873555836,,
FALSE,4,1,"Milam, D., Bartram, L., El-Nasr, M.S.",Design patterns of focused attention,2012,ACM International Conference Proceeding Series,,,,,,,,10.1145/2427116.2427121,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873379264&partnerID=40&md5=3d87155ae12bb76a5879315a709724d4,"School of Interactive Arts + Technology (SIAT), Simon Fraser University Surrey, 250 -13450 102 Avenue, Surrey, BC V3T 0A3, Canada; Northeastern University, Colleges of Computer and Information Sciences, and Arts, Media and Design, Boston, MA 02115, United States","Milam, D., School of Interactive Arts + Technology (SIAT), Simon Fraser University Surrey, 250 -13450 102 Avenue, Surrey, BC V3T 0A3, Canada; Bartram, L., School of Interactive Arts + Technology (SIAT), Simon Fraser University Surrey, 250 -13450 102 Avenue, Surrey, BC V3T 0A3, Canada; El-Nasr, M.S., Northeastern University, Colleges of Computer and Information Sciences, and Arts, Media and Design, Boston, MA 02115, United States","This paper explores game design patterns specific to the visual presentation of game elements. Informed by the similarity theory of visual perception coupled with designers' tacit knowledge, we establish an empirical basis to investigate visual balance, specifically in terms of maintaining, disrupting, and swapping the focus of attention. Since visual balance is a concept that is intertwined with difficulty and depends on users' expertise, we also explore the differences in novice vs. expert designs by collecting design configurations from designers, thus uncovering designers' tacit knowledge in regards to expertise. This is accomplished through the creation of a toolset to explore game elements in a railed shooter game comprised of targets, non-targets, and visual feedback with variables of size, speed, and density. Eight expert game designers encoded settings where the theory is evaluated. As a result of this investigation, we identify patters of similarity, noise, and ramps. © 2012 ACM.",game design; game design pattern; perception; visual attention; visual design,Design configurations; Design Patterns; Focus of Attention; Game design; Game designers; Similarity theory; Tacit knowledge; Toolsets; Visual Attention; Visual balance; Visual design; Visual feedback; Visual perception; Visual presentation; Computer software; Sensory perception; Visual communication; Design,,,,,,"Bartram, L., Ware, C., Filtering and Brushing with Motion (2002) Information Visualization, 1 (1), pp. 66-79. , 2002; Bateman, S., (2011) Target Assistance for Subtly Balancing Competitive Play, , Vancouver, Canada, 2011; Bergström, K., Exploring Aesthetical Gameplay Design Patterns -Camaraderie in Four Games (2010) Proceedings of the 14th International Academic MindTrek Conference: Envisioning Future Media Environments (Tampere, Finland, 2010); Björk, S., Holopainen, J., Games and Design Patterns (2006) The Game Design Reader, , E. Zimmerman and K. Salen, eds. MIT Press; Block, B., (2001) The Visual Story: Seeing the Structure of Film, TV, and New Media, , Focal Press; Byrne, E., (2005) Game Level Design, , Charles River Media; Ching, F., (1996) Form, Space & Order, , Van Nostrand Reinhold; Desurvire, H., Wiberg, C., User Experience Design for Inexperienced Gamers: GAP - Game Approachability Principles (2010) Evaluating User Experiences in Games, , Springer-Verlag; Duncan, J., Humphreys, G.W., Visual search and stimulus similarity (1989) Psychological Review, 96 (3), pp. 433-458. , 1989; El-Nasr, M.S., Yan, S., Visual attention in 3D video games (2006) Proceedings of the 2006 ACM SIGCHI International Conference on Advances in Computer Entertainment Technology (New York, NY, USA, 2006); Fiel, J., Scattergood, M., (2005) Beginning Game Level Design, , Thomson Course Technology; Hoeg, T., (2008) The Invisible Hand: Using Level Design Elements to Manipulate Player Choice, , Guildhall at Southern Methodist University; Hullett, K., Whitehead, J., Design Patterns in FPS Levels (2010) Proceedings of the 5th International Conference on Foundations of Digital Games (Monterey, CA, 2010); Huniche, R., Chapman, V., (2005) AI for Dynamic Difficulty Adjustment in Games, , Valencia, Spain, 2005; Kingstone, A., Bischof, W.F., Perceptual grouping and motion coherence in visual search (1999) Psychological Science, 10 (2), pp. 151-156. , 1999; Klimmt, C., Hartmann, T., Effectance, self-efficacy, and the motivation to play video games (2006) Playing Video Games: Motives, Responses, and Consequences, pp. 132-145. , P. Vorderer and J. Bryant, eds. Lawrence Erlbaum Associates; LeBlanc, M., Tools for Creating Dramatic Game Dynamics (2006) The Game Design Reader: A Rules of Play Anthology, , E. Zimmerman and K. Salen, eds. MIT Press; Lemarchand, R., Attention NOT Immersion: Making your games better with psychology and playtesting, the Uncharted Way (2012) Game Developers Conference (San Francisco, CA, 2012); Lockyer, M., (2011) Simple Motion Textures for Ambient Affect, , Vancouver, Canada, 2011; Milam, D., (2011) Effect of Camera and Object Motion on Visual Load in 3D Games, , Vancouver, Canada, 2011; Milam, D., Toolset to explore visual motion designs in a video game (2012) SIGCHI, , Austin, TX, 2012; Milam, D., Seif El-Nasr, M., Analysis of Level Design ""Push & Pull"" within 21 games (2010) Foundations of Digital Games, , Monterey, CA, 2010; Milam, D., Seif El-Nasr, M., (2010) Design Patterns to Guide Player Movement in 3D Games, , 2010; Milham, I., (2011) Creating Horror and Immersion with the Art of Dead Space; Niedenthal, S., (2009) Complicated Shadows: The Aesthetic Significance of Simulated Illumination in Digital Games, , Blekinge Institute of Technology; Rogers, S., Everything I Learned about Level Design I Learned from Disneyland (2009) Game Developers Conference (San Francisco, CA, 2009); Samarinas, A., (2009) Illuminating Minotaur's Lair: Light Design and Navigation in Gameworlds, , IT University of Copenhagen; Seif El-Nasr, M., Dynamic Intelligent Lighting for Directing Visual Attention in Interactive 3D Scenes (2009) IEEE Transactions on Computational Intelligence and AI in Games, 1 (2). , 2009; Smith, H., Worch, M., What Happened Here? Environmental Storytelling (2010) Game Developers Conference (San Francisco, CA, 2010); Smith, R., (2009) Helping Your Players Feel Smart: Puzzles As User Interface; Treisman, A.M., Gelade, G., A feature-integration theory of attention (1980) Cognitive Psychology, 12 (1), pp. 97-136. , 1980; Upton, B., (2007) Narrative Landscapes: Shaping Player Experience Through World Geometry; Vlachos, A., Water Flow in Portal 2 (2010) SIGGRAPH, , Los Angeles, 2010; Wertheimer, M., Laws of Organization in Perceptual Forms (1923) Psychologische Forschung [Psychological Research], 4 (1), pp. 301-350. , 1923; Wolf, J., Guided Search 2.0: A revised model of visual search (1994) Psychonomic Bulletin & Review, 1 (2), pp. 202-238. , 1994","Milam, D.; School of Interactive Arts + Technology (SIAT), Simon Fraser University Surrey, 250 -13450 102 Avenue, Surrey, BC V3T 0A3, Canada; email: dma35@sfu.ca",,Soc. Adv. Sci. Digit. Games (SASDG);ACM Special Interest Group on Computer-Human Interaction (SIGCHI),,"1st Workshop on Design Patterns in Games, DPG 2012 - Co-located with the 7th International Conference on the Foundations of Digital Games",29 May 2012 through 29 May 2012,"Raleigh, NC",95377,,9781450318549,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84873379264,,
FALSE,4,1,"McDonald, C.",A design pattern for responsible information systems education,2012,ACIS 2012 :  Proceedings of the 23rd Australasian Conference on Information Systems,,,,,,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878322453&partnerID=40&md5=bff6d957ae098a449f5cb01420c65333,"University of Canberra, Australia","McDonald, C., University of Canberra, Australia","This paper explores the idea of responsible systems design. To do so, it examines a case study - the accreditation of Information Systems (IS) courses by the professional body. A professionally accredited educational program, like any other non-trivial design product, represents the balancing of competing influences, ideas and stakeholders. The case is particularly relevant because there have been significant changes in the context of Australian IS education recently that have made more complex the task of designing educational systems in a responsible manner. A general approach to addressing this complexity is articulated here as a design pattern to guide IS educational design. The pattern identifies the influences on design, the processes and products of design and the feedback mechanism required to demonstrate that stakeholder requirements are satisfied. Design tensions and principles arising from the model are discussed and future work identified. McDonald, Craig © 2012.",Accreditation; Design pattern; Design principles; Education,Design Patterns; Design Principles; Design products; Educational program; Educational systems; Feedback mechanisms; General approach; Information systems educations; Accreditation; Information systems; Product design; Education,,,,,,"ACS, , http://www.acs.org.au; ACS Accreditation Workshop, , http://learnonline.canberra.edu.au/course/view.php?id=7824; ACM IS Curriculum 2010, , http://www.acm.org/education/curricula/IS2010ACMfinal.pdf; ACM IT Curriculum 2012, , http://www.sigite.org/it-model-curriculum; AQF, , www.aqf.edu.au/; Biggs, J., Tang, C., (2011) Teaching for Quality Learning at University Buckingham: Open, , University Press/McGraw Hill; Gregor, S., The Nature of Theory in Information Systems (2006) MISQ, 30 (3); Gregor, S., von Konsky, B.R., Hart, R., Wilson, D., (2008) The ICT Profession and the ICT Body of Knowledge Vers. 5.0, , Australian Computer Society, Sydney, Australia; Hil, R., (2012) Whackademia: An Insider's Account of the Troubled, , University New South Books; Lidwell, W., Holden, K., Butler, J., (2010) Universal Principles of Design Rockport Publishers; McDonald, C., An Enhanced Product-Process Design Pattern (2006) Proceedings of 17th Australasian Conference on Information Systems, , Adelaide; McDonald, C., Quality by Design: Towards the One-page Quality Portfolio (2008) Proceedings of AUQF Quality and Standards in Higher Education, , Canberra; Moore, K.D., (2005) Effective Instructional Strategies: From Theory to Practice Sage.; Morsella, E., Bargh, J.A., Gollwitzer, P.M., (2009) Oxford Handbook of Human Action OUP Seoul Accord, , http://www.seoulaccord.com, (eds) 2012; SFIA, , http://www.sfia.org; SWEBoK 2004, , http://www.computer.org/portal/web/swebok; TEQSA, , http://www.teqsa.gov.au",University of CanberraAustralia,,,,"23rd Australasian Conference on Information Systems, ACIS 2012",3 December 2012 through 5 December 2012,"Geelong, VIC",97167,,9781741561722,,,English,ACIS: Proc. Aus. Conf. Inf. Syst.,Conference Paper,Scopus,2-s2.0-84878322453,,
TRUE,v,v,"Li, W., Chen, G., Pan, J.",Research on detecting and validating design pattern instances from source code,2012,"Proceedings - 2012 International Conference on Computer Science and Service System, CSSS 2012",,,6394614,1499,1503,,1,10.1109/CSSS.2012.376,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873832641&partnerID=40&md5=c871cb84701caee0f07113dcd9a214dd,"College of Information Engineering, China Jiliang University, Hangzhou, China","Li, W., College of Information Engineering, China Jiliang University, Hangzhou, China; Chen, G., College of Information Engineering, China Jiliang University, Hangzhou, China; Pan, J., College of Information Engineering, China Jiliang University, Hangzhou, China","Identifying design patterns from source code is one of the most promising methods for improving software maintainability, reusing experience and facilitating software refactoring. In this paper, an approach that combines static and dynamic analysis on detecting design patterns from java source code is presented. Static structure analysis of identifying pattern instances is illustrated. Especially, to improve the detecting precision, multiplicity analysis of object creation is executed to validate creational pattern candidates and dynamic analysis which is the process of monitoring sequence of method calls in pattern candidates and judging if it is consistent to the expected pattern behavior is executed to validate behavior pattern candidates. After the validation of behavior candidates, those instances belong to patterns which have similar structure but different behavior are distinguished successfully. Finally, a tool of extracting design pattern from java source code is implemented and the feasibility of this approach is verified through the results of applying it on an open source software. © 2012 IEEE.",design pattern; dynamic analysis; multiplicity analysis; reverse engineering,Behavior patterns; Design Patterns; Java source codes; multiplicity analysis; Object creation; Open Source Software; Software maintainability; Software refactoring; Source codes; Static and dynamic analysis; Static structures; Computer science; Dynamic analysis; Reverse engineering; Java programming language,,,,,,"http://asm.ow2.org//, ASMTsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection using Similarity Scoring (2006) IEEE Trans. on Software Engineering, 32 (11), pp. 896-909; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) Proc. of International Conference on Automated Software Engineering, pp. 123-134; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison W-esley, Menlo Park, CA; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proc. of the ICSE 2003 Workshop on Dynamic Analysis, pp. 29-32. , Portland, OR, USA, May; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proc. of Workshop on Dynamic Systems Analysis, pp. 33-40; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) Proc. of Workshop on Dynamic Analysis, pp. 43-49; Ka-Yee Ng, J., Guéhéneuc, Y.-G., Identification of behavioral and creational design patterns through dynamic analysis (2007) Proc. of the Workshop on Program Compre-hension Through Dynamic Analysis, pp. 34-42; Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2010) Pro. of the 14th European Conference on Software Maintenance and Reengineering, pp. 176-185. , Madrid, Spain; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems & Software, 18 (7), pp. 1177-1193; Tie, F., Wenjin, L., Jiachen, Z., Design pattern detection from java software (2005) IASTED Conf. on Software Engineering, pp. 174-180; http://www.eclipse.org/aspectj//, Aspect J: a seamless aspect-oriented extension to the Javatm programming languagehttp://www.junit.org/homee, Junit","Li, W.; College of Information Engineering, China Jiliang University, Hangzhou, China",,IEEE Computer Cociety of Jiangsu Province;Zhejiang University;Nanjing University;Nanjing University of Science and Technology;Sichuan University,,"2012 International Conference on Computer Science and Service System, CSSS 2012",11 August 2012 through 13 August 2012,Nanjing,95196,,9780769547190,,,English,"Proc. - Int. Conf. Comput. Sci. Serv. Syst., CSSS",Conference Paper,Scopus,2-s2.0-84873832641,,
TRUE,4,4,"El Boussaidi, G., Mili, H.",Understanding design patterns - What is the problem?,2012,Software - Practice and Experience,42,12,,1495,1529,,2,10.1002/spe.1145,http://www.scopus.com/inward/record.url?eid=2-s2.0-84869887983&partnerID=40&md5=d12bbb854490887dc3dea45c9f73c8f8,"Ecole de Technologie Supérieure, Montréal, Canada; LATECE Laboratory, Université du Québec À Montréal, Montréal, Canada","El Boussaidi, G., Ecole de Technologie Supérieure, Montréal, Canada; Mili, H., LATECE Laboratory, Université du Québec À Montréal, Montréal, Canada","Design patterns codify proven solutions to recurring design problems. Their proper use within a development context requires that: (i) we understand them; (ii) we ascertain their applicability or relevance to the design problem at hand; and (iii) we apply them faithfully to the problem at hand. We argue that an explicit representation of the design problem solved by a design pattern is key to supporting the three tasks in an integrated fashion. We propose a model-driven representation of design patterns consisting of triples < MP, MS, T > where MP is a model of the problem solved by the pattern, MS is a model of the solution proposed by the pattern, and T is a model transformation of an instance of the problem into an instance of the solution. Given an object-oriented design model, we look for model fragments that match MP (call them instances of MP), and when one is found, we apply the transformation T yielding an instance of MS. Easier said than done. Experimentation with an Eclipse Modeling Framework-based implementation of our approach applied to a number of open-source software application's raised fundamental questions about: (i) the nature of design patterns in general, and the ones that lend themselves to our approach, and (ii) our understanding and codification of seemingly simple design patterns. In this paper, we present the principles behind our approach, report on the results of applying the approach to the Gang of Four (GoF) design patterns, and discuss the representability of design problems solved by these patterns. Copyright © 2011 John Wiley & Sons, Ltd. Copyright © 2011 John Wiley & Sons, Ltd.",design patterns; design problems; model-driven development; pattern detection,Design Patterns; Design problems; Explicit representation; Integrated fashion; Model driven development; Model transformation; Model-driven; Object-oriented design models; Open-source softwares; Pattern detection; Representability; Systems analysis; Design,,,,,,"Malone, T.W., Crowston, K., Lee, J., Pentland, B., Dellarocas, C., Wyner, G., Quimby, J., O'Donnell, E., Tools for inventing organizations: Toward a handbook of organizational processes (1999) Management Science, 45 (3), pp. 425-443; Fowler, M., (1996) Analysis Patterns: Reusable Object Models, , Addison-Wesley: Reading, Menlo Park, Calif; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley: Reading, MA; Coplien, J.O., C++ Idioms (1998) Proceedings of the 3rd European Conference on Pattern Languages of Programming and Computing, pp. 11-34. , Universitaetsverlag Konstanz; Fayad, M.E., Schmidt, D.C., Johnson, R.E., (1999) Building Application Frameworks: Object-oriented Foundations of Framework Design, , John Wiley & Sons, Inc.: NY; Partsch, H., Steinbrüggen, R., Program Transformation Systems (1983) Computing Surveys, 15 (3), pp. 199-236; Baxter, I.D., Design Maintenance Systems (1992) Communications of the ACM, 35 (4), pp. 73-89; Biggerstaff, T.J., A New Architecture for Transformation-Based Generators (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 1036-1054; (2011) MDA: Model Driven Architecture Specifications, , http://www.omg.org/mda/specs.htm, 4 April; Albin-Amiot, H., Guéhéneuc, Y.G., Meta-modeling Design Patterns: Application to pattern detection and code synthesis (2001) Proceedings of ECOOP Workshop on Automating Object-Oriented Software Development Methods, June; France, R., Kim, D.K., Ghosh, S., Song, E., A UML-Based Pattern Specification Technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206; Bottoni, P., Guerra, E., De Lara, J., A language-independent and formal approach to pattern-based modelling with support for composition and analysis (2010) Information and Software Technology, 52 (8), pp. 821-844; Debnath, N.C., Garis, A., Riesco, D., Montejano, G., Defining Patterns Using UML Profiles (2006) IEEE International Conference on Computer Systems and Applications, pp. 1147-1150; Pagel, B.U., Winter, M., Towards Pattern-Based Tools (1996) Proceedings of EuropLop; Sanada, Y., Adams, R., Representing Design Patterns and Frameworks in UML, Towards a Comprehensive Approach (2002) Journal of Object Technology, 1 (2), pp. 143-154; Elaasar, M., Briand, L., Labiche, Y., A Metamodeling Approach to Pattern Specification and Detection (2006) ACM/IEEE International Conference on Model Driven Engineering Languages and Systems (MoDELS); Eden, A.H., Gil, J., Hirshfeld, Y., Yehudai, A., (1999) Towards A Mathematical Foundation for Design Patterns, , Technical report, dep. of information technology, Uppsala University; Maplesden, D., Hosking, J., Grundy, J., Design Pattern Modelling and Instantiation using DPML (2002) Proceedings of 14th Int. Conference on Technology of OO Languages and Systems; Sterritt, A., Clarke, S., Cahill, V., Precise Specification of Design Pattern Structure and Behaviour (2010) Modeling Foundations and Applications, pp. 277-292. , LNCS 6138. Springer: Berlin/Heidelberg; Kaczor, O., Guéhéneuc, Y.G., Hamel, S., Identification of design motifs with pattern matching algorithms (2010) Information and Software Technology, 52 (2), pp. 152-168; Alencar, P.S.C., Cowan, D.D., Dong, J., Lucena, C.J.P., A transformational Process-Based Formal Approach to Object-Oriented Design (1997) Formal Methods Europe FME'97; Sunyé, G., Le Guennec, A., Jézéquel, J.M., Design pattern application in UML (2000) Proceedings of the 14th Object-Oriented Programming European Conference, pp. 44-62; Cinnéide, O.M., (2000) Automated Application of Design Patterns: A Refactoring Approach, , PhD dissertation, University of Dublin, Trinity College; Tahvildari, L., Kontogiannis, K., Improving Design Quality Using Meta-Pattern Transformations: A Metric-Based Approach (2004) The Journal of Software Maintenance and Evolution: Research and Practice, 16 (45), pp. 331-361; Mili, H., El-Boussaidi, G., Representing and Applying Design Patterns: What Is the Problem? (2005) ACM/IEEE 8th International Conference on Model Driven Engineering Languages and Systems (MODELS), 3713, pp. 186-200. , Montego Bay, Jamaica, LNCS. Springer: Berlin/Heidelberg; El-Boussaidi, G., Mili, H., A model-driven framework for representing and applying design patterns (2007) Proceedings of 31st IEEE International Computer Software and Applications Conference, 1, pp. 97-100. , Beijing; El-Boussaidi, G., Mili, H., ACM/IEEE 11th International Conference on Model Driven Engineering Languages and Systems (MODELS) (2008) Detecting Patterns of Poor Design Solutions Using Constraint Propagation. In, LNCS, 5301, pp. 189-203. , Springer: Berlin/Heidelberg; Van Gurp, J., Bosch, J., Svahnberg, J., On the notion of variability in software product lines (2001) Proceedings of the Working IEEE/IFIP Conference on Software Architecture, pp. 45-54; Keepence, B., Mannion, M., Using Patterns to Model Variability in Product Families (1999) IEEE Software, 16 (4), pp. 102-108; Agrawal, A., Karsai, G., Kalmar, Z., Neema, S., Shi, F., Vizhanyo, A., The design of a simple language for graph transformations (2005) Journal in Software and System Modeling, , in review; Grunske, L., Geiger, L., Zündorf, A., Van Eetvelde, N., Van Gorp, P., Varro, D., Using Graph Transformation for Practical Model Driven Software Engineering (2005) The Journal of Model-driven Software Development, pp. 91-118. , Beydeda S. Book M. Gruhn V. (eds). Springer; Balogh, A., Varro, D., Advanced model transformation language constructs in the VIATRA2 framework (2006) Proceedings of the ACM Symp, pp. 1280-1287. , on Applied computing; Zündorf, A., Graph Pattern Matching in PROGRES (1994) 5th Int. Workshop on Graph Grammars and Their Application to Computer Science, 1073, pp. 454-468. , LNCS; Rudolf, M., Utilizing Constraint Satisfaction Techniques for Efficient Graph Pattern Matching (1998) 6th Int. Workshop on Theory and Application of Graph Transformations, 1764, pp. 238-251. , LNCS; Bacchus, F., Van Beek, P., On the Conversion between Non-Binary and Binary Constraint Satisfaction Problems (1998) The 15th Conference on Artificial Intelligence, pp. 311-318; Sahraoui, H., Boukadoum, M., Lounis, H., Ethève, F., Predicting Class Libraries Interface Evolution: An investigation into machine learning approaches (2000) Proceedings of the Seventh Asia-Pacific Software Engineering Conference, pp. 456-464. , IEEE Computer Society: Washington, DC, USA; El-Boussaidi, G., (2009) Développement Logiciel Par Transformation de Modèles- Conception Par Application de Patrons, , PhD Thesis, Université de Montréal, July; (2011) Eclipse Modeling Framework, , http://www.eclipse.org/modeling/emf/, 4 April; (2011) ILOG Products, , http://www-01.ibm.com/software/websphere/ilog/, 4 April; (2011) XMI (XML Metadata Interchange) Specification, , http://www.omg.org/spec/XMI/, 4 April; (2011) MOF (Meta Object Facility) Specification, , http://www.omg.org/mof/, 4 April; Bass, L., Clements, P., Kazman, R., (2003) Software Architecture in Practice, , 2nd ed. Addison Wesley: Reading; Clements, P., Bachmann, F., Bass, L., Garlan, D., Ivers, J., Little, R., Nord, R., Stafford, J., (2003) Documenting Software Architectures: Views and beyond, , Addison-Wesley SEI series in software engineering; (2011) ReMoDD: The Repository for Model Driven Development, , http://www.cs.colostate.edu/remodd/, 4 April; Milanova, A., Precise Identification of Composition Relationships for UML Class Diagrams (2005) Proc. of the 20th IEEE/ACM Int. Conference on Automated Software Engineering, pp. 76-85; Corradini, A., Montanari, U., Rossi, F., Ehrig, H., Heckel, R., Loewe, M., (1996) Algebraic Approaches to Graph Transformation, Part I: Basic Concepts and Double Pushout Approach, , Technical Report, TR-96-17, University of Pisa, March; Florijn, G., Meijers, M., Van-Winsen, P., Tool support for object-oriented patterns (1997) 11th European Conference on Object-Oriented Programming, 1241, pp. 472-495. , LNCS; Guéhéneuc, Y.G., Sahraoui, H., Des signatures numériques pour améliorer la recherche structurelle de patrons (2005) Proceedings of Langages et Modèles À Objets, , Berne, Suisse; Budinsky, F.J., Finnie, M.A., Vlissides, J.M., Yu, P.S., Automatic Code Generation from Design Patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171; Gross, D., Yu, E., From Non-Functional Requirements to Design through Patterns (2001) Requirements Engineering Journal, 6 (1), pp. 18-36; Hsueh, N.L., Kuo, J.Y., Lin, C.C., Object-oriented design: A goal-driven and pattern-based approach (2009) Journal of Software and System Modeling, 8, pp. 67-84; Kampffmeyer, H., Zschaler, S., Finding the Pattern You Need: The Design Pattern Intent Ontology (2007) MODELS, 4735, pp. 211-225. , LNCS; Van Lamsweerde, A., From System Goals to Software Architecture (2003) Formal Methods for Software Architectures, Third International SFM, 2804, pp. 25-43. , Bertinoro, Italy, LNCS. Springer; Chung, L., Nixon, B.A., Yu, E., Mylopoulos, J., (2000) Non-functional Requirements in Software Engineering, , Kluwer Academic Publishing: Boston; Alikacem, E., Sahraoui, H.A., Détection d'anomalies utilisant un langage de description de règle de qualité (2006) Proceedings of Langages et Modèles À Objets, pp. 185-200; Ciupke, O., Automatic Detection of Design Problems in Object-Oriented Reengineering (1999) Proceedings of the Technology of Object-Oriented Languages and Systems, pp. 18-32; Arcelli, A., Masiero, S., Raibulet, C., Elemental Design Patterns Recognition in Java (2005) 13th IEEE Int. Workshop on Software Technology and Engineering Practice, pp. 196-205; Fontana, F.A., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Information Sciences, 181, pp. 1306-1324; Gil, J., Maman, I., Micro Patterns in Java Code (2005) Proc. of the 20th Conference on Object-oriented Programming Systems Languages and Applications (OOPSLA), pp. 97-116; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection Using Similarity Scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Guéhéneuc, Y.G., Jussien, N., Using Explanations for Design Patterns Identification (2001) IJCAI'01 Workshop on Modeling and Solving Problems with Constraints, pp. 57-64; Varro, G., Friedl, K., Varro, D., Adaptive Graph Pattern Matching for Model Transformations using Model-sensitive Search Plans (2005) International Workshop on Graph and Model Transformations, 152, pp. 191-205. , ENTCS; Horvath, A., Varro, G., Varro, D., Generic search plans for matching advanced graph patterns (2007) The 6th International GT-VMT Workshop; (2011) MARTE (Modeling and Analysis of Real-Time and Embedded Systems) Profile, , http://www.omg.org/omgmarte/, 4 April; Zimmer, W., Relationships between design patterns (1994) Pattern Languages of Program Design, pp. 345-364. , Monticello, Illinois. Addison-Wesley","El Boussaidi, G.; Ecole de Technologie Supérieure, Montréal, Canada; email: ghizlane.elboussaidi@etsmtl.ca",,,,,,,,380644,,SPEXB,,English,Software Pract Exper,Article,Scopus,2-s2.0-84869887983,,
TRUE,4,4,"Meiappane, A., Venkatesan, V.P., Vikneshraj, A., Prasanna, N.A., Vittal Devanathan, V.",An approach for identification and implementation of design patterns in online banking,2012,"2012 International Conference on Radar, Communication and Computing, ICRCC 2012",,,6450574,190,192,,,10.1109/ICRCC.2012.6450574,http://www.scopus.com/inward/record.url?eid=2-s2.0-84874471392&partnerID=40&md5=c71e997c73ccb121f2175aa438cdc49a,"Pondicherry University, Pondicherry, India; Department of IT, Sri Manakula Vinayagar Engineering College, Pondicherry, India","Meiappane, A., Pondicherry University, Pondicherry, India; Venkatesan, V.P., Pondicherry University, Pondicherry, India; Vikneshraj, A., Department of IT, Sri Manakula Vinayagar Engineering College, Pondicherry, India; Prasanna, N.A., Department of IT, Sri Manakula Vinayagar Engineering College, Pondicherry, India; Vittal Devanathan, V., Department of IT, Sri Manakula Vinayagar Engineering College, Pondicherry, India","In this paper we discuss the way to identify various design patterns, their types and about the methods involved in the re-designing process. We also propose to evaluate the identified patterns considering various quality attributes (e.g, maintainability, security, availability, reliability) beside the quantitative character. Our proposal is to identify the design patterns with respect to the internet banking applications. The process of pattern identification is an iterative and interactive process. Based on a literature search and review of several articles, we make use of the existing tools and methods available for identification of patterns Various tools for proposed for design pattern identification such as Maisa, Columbus etc. We make use of some of these tools for identifying the patterns and evaluate the patterns using the existing methods. Although there are several patterns available for various software systems, there are no patterns identified so far in the online banking applications. Hence we are going to find the patterns according to the services involved in internet banking. © 2012 IEEE.",availability; Identification; maintainability; Re-engineering; reliability; Reusability; security,Columbus; Design Patterns; Interactive process; Internet banking; Literature search; On-line banking; Pattern identification; Quality attributes; Re-designing; security; Software systems; Tools and methods; Availability; Communication; Electronic commerce; Identification (control systems); Iterative methods; Maintainability; Radar; Reliability; Reusability; World Wide Web; Quality control,,,,,,"Meiappane, A., Prabavadhi, J., Prasanaven-Katesan, R.V., Startegy pattern: Payment pattern for internet banking (2012) International Journal of Information Technology and Engineering (IJITE), , ISSN 2229-7367, March; Prabavadhi, J., Meiappane, A., Prasanavenkatesan, V., Visitor pattern: Implementation of enquiry pattern for internet banking (2012) International Journal of Engineering Research and Technology (IJERT), 1 (3). , ISSN: 2278-0181, May; Meiappane, A., Gideon, K., Venkatesan, V.P., Adaptive framework of the internet banking services based on customer classification International Conference on Advances in Engg and Tech, (ICAET-2011); Fundamental Banking Patterns Lubor Sesera SOFTEC & FIIT STU SlovakiaIdentifying, Relating, and Evaluating Design Patterns for the Design of Software for Synchronous Collaboration Claudia, , Iacob University of Milan Via Comelico, 39/41Milan, Italy","Meiappane, A.; Pondicherry University, Pondicherry, India; email: auromei@yahoo.com",,CSIR-INDIA;Computer Society of India;DRDO - Govt. of India,,"2012 International Conference on Radar, Communication and Computing, ICRCC 2012",21 December 2012 through 22 December 2012,"Tiruvannamalai, Tamilnadu",95810,,9781467327589,,,English,"Int. Conf. Radar, Commun. Comput., ICRCC",Conference Paper,Scopus,2-s2.0-84874471392,,
TRUE,4,4,"Selmeci, R., Rozinajova, V.",One approach to partial formalization of SOA design patterns using production rules,2012,"2012 Federated Conference on Computer Science and Information Systems, FedCSIS 2012",,,6354355,1381,1384,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84872541734&partnerID=40&md5=e1c2621c62371b6aee9f27932a09b6dc,"Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia","Selmeci, R., Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia; Rozinajova, V., Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia","Service oriented architecture (SOA) is nowadays one of the dominant styles in developing new information systems. These information systems often have complex models, which can contain mistakes, or are described by informally. In order to minimize mistakes and to create formal models, patterns as components of software development could be used-according to Model driven development (MDD) principles. Design patterns in SOA have been identified by T. Erl [1]. However, they are represented in form which is suitable for humans, but not for computers. In context of machine processing formal representation of patterns would be advantageous. In this paper we present our approach to partial formal representation of SOA design patterns using production rules. This partial formal representation is useful in searching for mistakes (antipatterns) in models and will enable creating formal models (with patterns) from informal documents. © 2012 Polish Info Processing Socit.",,Anti-patterns; Complex model; Design Patterns; Formal model; Formal representations; Machine processing; Model-driven development; Production rules; Computer science; Information services; Service oriented architecture (SOA); Information systems,,,,,,"Erl, T., (2009) SOA Design Patterns, , Prentice Hall; Erl, T., (2007) SOA Principles of Service Design, , Prentice Hall; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison-Wesley; Ackerman, L., Gonzalez, C., (2010) Patterns-Based Engineering: Success-Fully Delivering Solutions Via Patterns, , Addison-Wesley Professional; Hohpe, G., Woolf, B., (2003) Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, , Addison-Wesley Professional; Frantz, R.Z., Corchuelo, R., Gonzáles, J., Advances in a dsl for application integration (2008) Web Application Integration (ZOCO) in JISBD, 2, pp. 54-66; Scheibler, T., Leymann, F., From modelling to execution of enterprise integration scenarios: The genius tool (2009) Kommunikation in Verteilten Systemen (KiVS), pp. 241-252. , ser. Informatik aktuell, K. David, K. Geihs, and W. Brauer, Eds. Springer Berlin Heidelberg; Hentrich, C., Zdun, U., A pattern language for process execution and integration design in service-oriented architectures (2009) Transac-Tions on Pattern Languages of Programming i, pp. 136-191. , Springer; Zdun, U., Dustdar, S., Model-driven and pattern-based integration of process-driven soa models (2007) International Journal of Business Process Integration and Management, 2 (2), pp. 109-119; Zimmermann, O., Koehler, J., Leymann, F., Managing architectural decision models with dependency relations, integrity constraints, and production rules (2009) Journal of Systems and Software, 82 (8), pp. 1249-1267. , Aug; Soundarajan, N., Hallstrom, J.O., Precision, flexibility, and tool support: Essential elements of pattern formalization (2007) Design Pattern Formalization Techniques, pp. 280-301. , T. Taibi, Ed. IGI Publishing; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) IEEE Trans. Softw. Eng., 33 (7), pp. 433-453. , http://dx.doi.org/10.1109/TSE.2007.1012, Jul; Tang, L., Dong, J., Peng, T., Tsai, W.-T., Modeling enterprise service-oriented architectural styles (2010) Service Oriented Computing and Applications, 4 (2), pp. 81-107","Selmeci, R.; Slovak University of Technology in Bratislava, Faculty of Informatics and Information Technologies, Ilkovičova 3, 842 16 Bratislava, Slovakia; email: selmeci@fiit.stuba.sk",,,,"2012 Federated Conference on Computer Science and Information Systems, FedCSIS 2012",9 September 2012 through 12 September 2012,Wroclaw,95035,,9781467307086,,,English,"Fed. Conf. Comput. Sci. Inf. Syst., FedCSIS",Conference Paper,Scopus,2-s2.0-84872541734,,
FALSE,3,1,"Shete, P.P., Kondapi, V.P.P., Sarode, D.M., Laghate, M.A., Bose, S.K.",TiledRenderer - An object oriented framework for MPI based parallel Rendering,2012,"Proceedings of 2012 2nd IEEE International Conference on Parallel, Distributed and Grid Computing, PDGC 2012",,,6449802,120,125,,,10.1109/PDGC.2012.6449802,http://www.scopus.com/inward/record.url?eid=2-s2.0-84874399903&partnerID=40&md5=e2d9e4f84ca0b4e064759ff8d4a76074,"Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India","Shete, P.P., Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India; Kondapi, V.P.P., Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India; Sarode, D.M., Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India; Laghate, M.A., Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India; Bose, S.K., Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India","A visualization of large datasets requires ultra high resolution. Data wall systems provide large number of pixels by combining a power of multiple graphics cards. In this paper, we propose and realize an object oriented framework for the Message Passing Interface based parallel rendering. We introduce a GUI based viewer called the TiledRenderer, which is used for viewing pre-recorded high resolution animations as well as images on data walls. We identify a set of design patterns in a development of the TiledRenderer. We talk about benefits of using design patterns for extending our framework for adding the Real Time Streaming Protocol based IP camera support. We demonstrate that use of design patterns facilitates reusing the existing functionality and adding new functionality by providing new classes, rather than modifying the existing classes or functionality. We also discuss about a visualization of tsunami simulation data by using 6×6 data wall and the TiledRenderer. © 2012 IEEE.",computer simulations; Data wall; design patterns; Message Passing Interface; object oriented programming; parallel rendering; Real Time Streaming Protocol,Data wall; Design Patterns; Message passing interface; Parallel rendering; Real time streaming protocol; Computer simulation; Grid computing; Internet protocols; Object oriented programming; Real time systems; Visualization; Data visualization,,,,,,"Bose, S.K., Sarode, D.M., Venkat, P.P.K., Shete, P.P., Apte, A.G., High end scientific visualization with scalable display system (2010) Proceedings of the International Conference on Advances in Computer Engineering (ACE); Tiled IMage Viewer-timv, , http://n3mO.org/-cdonner/timv; MPI: Message Passing Interface Forum, , http://www.mpi-forum.org; Blockbuster and Sidecar, , http://blockbuster.sourceforge.net/screensteps/Blockbuster-and-Sidecar. html; Streaming Movie Format, , https://computing.itnl.gov/vis/smtools.shtml; Distributed Multihead X Project, , http://dmx.sourceforge.net; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Qt: A Cross-platform Application and UI Framework, , http://qt.nokia.com; Shete, P.P., Venkat, P.P.K., Sarode, D.M., Laghate, M., Bose, S.K., Mundada, R.S., Object oriented framework for CUDA based image processing International Conference on Communication, , Information and Computing Technology, ICClCT-2012, in press; Molnar, S., Cox, M., Ellsworth, D., Fuchs, H., A sorting classification of parallel rendering (1994) IEEE Computer Graphics and Applications, 14 (4). , July; Schulzrinne, H., Rao, A., Lamphier, R., Real-time streaming protocol (RTSP) Internet Engineering Task Force, , RFC 2326, April 1998; Schulzrinne, H., Casner, S., Frederick, R., Jacobson, V., Real-time transport protocol (RTP) (1889) Internet Engineering Task Force, , RFC January 1996; Taymans, W., Baker, S., Wingo, A., Bultje, R.S., Kost, S., GStreamer Application Development Manual; Sharma, P.K., Singh, R.K., Ghosh, A.K., Kushwaha, H.S., Evaluation and numerical simulation of tsunami for coastal nuclear power plants of India (2006) Proceedings of 14 International Conference on Nuclear Engineering, , ICONE 14, July Florida, USA","Shete, P.P.; Computer Division, Bhabha Atomic Research Centre, Trombay, Mumbai, Maharashtra, 400085, India; email: ppshete@barc.gov.in",,Jaypee Group;Jaypee University of Information Technology (JUIT);Defence Research and Development Organization (DRDO);Council of Scientific and Industrial Research (CSIR);CSISIGCF;Ministry of Communications and Information Technology,,"2012 2nd IEEE International Conference on Parallel, Distributed and Grid Computing, PDGC 2012",6 December 2012 through 8 December 2012,"Waknaghat, Solan, Himachal Pradesh",95807,,9781467329255,,,English,"Proc. IEEE Int. Conf. Parallel, Distrib. Grid Comput., PDGC",Conference Paper,Scopus,2-s2.0-84874399903,,
TRUE,3,3,"Klimek, R.",Proposal to improve the requirements process through formal verification using deductive approach,2012,ENASE 2012 - Proceedings of the 7th International Conference on Evaluation of Novel Approaches to Software Engineering,,,,105,114,,4,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878026590&partnerID=40&md5=cf3c0741e1ef0dbcfbee8ee03d5b3be9,"AGH University of Science and Technology, al. A. Mickiewicza 30, 30-059 Krakow, Poland","Klimek, R., AGH University of Science and Technology, al. A. Mickiewicza 30, 30-059 Krakow, Poland","The work concerns gathering requirements and their formal verification using deductive approach. This approach is based on the semantic tableaux reasoning method and temporal logic. The semantic tableaux method is quite intuitive and has some advantages over traditional deduction strategies. System requirements are gathered using some UML diagrams. Requirements engineering based on formal analysis and verification might play an essential role in producing the correct software since this approach increases reliability and trust in software. Deductive inference is always the most natural for human beings and is used intuitively in everyday life. A use case, its scenario and its activity diagram may be linked to each other during the process of gathering requirements. When activities and actions are identified in the use case scenario then their workflows are modeled using the activity diagram. Organizing the activity diagram workflows into design patterns enables the automation of the process of generating logical specifications. The automation of this process is crucial and constitutes a challenge in the whole deductive approach. Temporal logic properties and formulas may be difficult to specify by inexperienced users and this fact can be a significant obstacle to the practical use of deduction-based verification tools. The approach presented in this paper attempts to overcome this problem. Automatic transformation of workflow patterns to temporal logic formulas is proposed. These formulas constitute logical specifications of requirements models. The architecture of an automatic and deduction-based verification system is proposed. Applying this innovative concept results in the reduction of software development costs as some errors might be addressed in the software requirements phase and not in the implementation or testing phases.",Activity diagram; Deductive reasoning; Design patterns; Formal verification; Generating formulas; Requirements engineering; Semantic tableaux method; Temporal logic; Use case diagram; Use case scenario; Workflows,Activity diagram; Deductive reasoning; Design Patterns; Formal verifications; Generating formulas; Semantic tableau; Use case diagram; Use case scenario; Work-flows; Requirements engineering; Semantics; Software reliability; Specifications; Telecommunication services; Temporal logic; Verification,,,,,,"Barrett, S., Sinnig, D., Chalin, P., Butler, G., Merging of use case models: Semanticfoundations (2009) 3rd IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE'09), pp. 182-189; Cabral, G., Sampaio, A., Automated formal specification generation and refinement from requirement documents (2008) Journal of the Brazilian Computer Society, 14 (1), pp. 87-106; Chellas, B.F., (1980) Modal Logic, , Cambridge University Press; Clarke, E., Grumberg, O., Peled, D., (1999) Model Checking, , MIT Press; Clarke, E., Wing, J., Formal methods: State of the art and future directions (1996) ACM Computing Surveys, 28 (4), pp. 626-643; Cockburn, A., (2001) Writing Effective use Cases, , Addison-Wesley; D'Agostino, M., Gabbay, D.M., Hähnle, R., Posegga, J., (1999) Handbook of Tableau Methods, , Kluwer Academic Publishers; Emerson, E., (1990) Handbook of Theoretical Computer Science, B, pp. 995-1072. , chapter Temporal and Modal Logic Elsevier, MIT Press; Eshuis, R., Wieringa, R., Tool support for verifying uml activity diagrams (2004) IEEE Transactions on Software Engineering, 30 (7), pp. 437-447; Fowler, M., (2004) UML Distilled. Third Edition, , Addison-Wesley; Hähnle, R., (1998) Tableau-based Theorem Proving, , ESSLLI Course; Hurlbut, R.R., A survey of approaches for describing and formalizing use cases (1997) Technical Report XPT-TR-97-03, Expertech, Ltd.; Kazhamiakin, R., Pistore, M., Roveri, M., Formal verification of requirements using spin: A case study on web services (2004) (SEFM 2004) Proceedings of the Second International Conference on Software Engineering and Formal Methods, pp. 406-415. , 28-30 September 2004, Beijing, China; Klimek, R., (1999) Introduction to Temporal Logic, , [in Polish]. AGH University of Science and Technology Press; Klimek, R., Towards formal and deduction-based analysis of business models for soa processes (2012) Proceedings of 4th International Conference on Agents and Artificial Intelligence (ICAART 2012), 2, pp. 325-330. , Filipe, J. and Fred, A., editors 6-8 February, 2012, Vilamoura, Algarve, Portugal SciTePress; Klimek, R., Szwed, P., Formal analysis of use case diagrams (2010) Computer Science, 11, pp. 115-131; Pelletier, F., Semantic tableau methods for modal logics that include the b and g axioms (1993) Technical Report Technical Report FS-93-01, AAAI, , (Association for the Advancement of Artificial Intelligence); Pender, T., (2003) UML Bible, , John Wiley & Sons; Rumbaugh, J., Jacobson, I., Booch, G., (1999) The Unified Modeling Language Reference Manual, , Addison Wesley; Van Benthem, J., (1993) Handbook of Logic in Artificial Intelligence and Logic Programming, pp. 241-350. , chapter Temporal Logic 4. Clarendon Press; Zhao, J., Duan, Z., Verification of use case with petri nets in requirement analysis (2009) Proceedings of the International Conference on Computational Science and its Applications: Part II, pp. 29-42. , ICCSA '09 Berlin, Heidelberg. Springer-Verlag","Klimek, R.; AGH University of Science and Technology, al. A. Mickiewicza 30, 30-059 Krakow, Poland; email: rklimek@agh.edu.pl",,"Inst. Syst. Technol. Inf., Control Commun. (INSTICC)",,"7th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2012",29 June 2012 through 30 June 2012,Wroclaw,97845,,9789898565136,,,English,ENASE - Proc. Int. Conf. Eval. Novel Approaches Softw. Eng.,Conference Paper,Scopus,2-s2.0-84878026590,,
TRUE,4,4,"Sousa, T.B., Ferreira, H.S.",Object-functional patterns: Re-thinking development in a post-functional world,2012,"Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012",,,6511841,348,352,,,10.1109/QUATIC.2012.43,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878879751&partnerID=40&md5=343fa90c67ede137a6475f7de73e23e1,"Department of Informatics Engineering, University of Porto, Faculty of Engineering, Rua Dr. Roberto Frias, s/n, 4200-465 Porto, Portugal","Sousa, T.B., Department of Informatics Engineering, University of Porto, Faculty of Engineering, Rua Dr. Roberto Frias, s/n, 4200-465 Porto, Portugal; Ferreira, H.S., Department of Informatics Engineering, University of Porto, Faculty of Engineering, Rua Dr. Roberto Frias, s/n, 4200-465 Porto, Portugal","Programing paradigms define how to think and design while creating software. Object-Oriented and Functional paradigms are two of the most adopted for synthesizing it. Modern languages, attempting to provide higher abstractions, are increasingly supporting native multi-paradigm programming styles. The Object-functional approach still uses classes for information and high-level structure, but allows algorithms to be implemented functionally. New challenges now exist and there is a general lack of knowledge on best practices for adopting this paradigm. This research proposes the systematic usage of software patterns to capture these new recurring problems and their solutions, though not discarding the identification of new algorithms and designs. We will use Scala as a base language, and will attempt to validate our hypothesis through multiple methodologies, including quasi-experiments and case studies. We expect to provide a basis for improvement for programming languages (through pattern absorption) and for software engineering professionals. © 2012 IEEE.",Design Patterns; Programing Paradigms; Software Engineering,Design Patterns; Engineering professionals; High-level structure; Modern languages; Multi-paradigm programming; Programing Paradigms; Quasi-experiments; Software patterns; Software engineering; Algorithms,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns (1995) Addison Wesley Professional Computing Series, 47. , http://www.amazon.co.uk/exec/obidos/ASIN/0201633612/citeulike-21, ser. A.-W. P. Co, Ed. Addison Wesley, no. February. [Online]. Available; Sutherland, I.E., Sketch pad a man-machine graphical communication system Proceedings of the SHARE Design Automation..., 1964. [Online], , http://dl.acm.org/citation.cfm?id=810742papers2://publication/uuid/ C4EB193D-8F79-419A-B6E6-143A0D547CD8, Available; Holmevik, J.R., Compiling SIMULA: A Historical Study of Technological Genesis (1994) Ieee Annals of the History of Computing, 16 (4), pp. 25-37. , http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=329756, [Online]. Available; Mitchell, J.C., (2003) Concepts in Programming Languages, 45 (2007). , http://www.holtsoft.com/books/java_concepts.html, Cambridge University Press, [Online]. Available; McCarthy, J., History of LISP (1978) Sigplan Notices, 13 (8), pp. 173-185. , http://portal.acm.org/citation.cfm?id=1198360, [Online]. Available; Damas, L., (1985) Type Assignment in Programming Languages, , Ph.D. dissertation, University of Edinburgh; Wadler, P., (1998) The Expression Problem, pp. 1-4. , http://homepages.inf.ed.ac.uk/wadler/papers/expression/expression.txt, [Online]. Available; Torgersen, M., The Expression Problem Revisited (2004) ECOOP 2004-ObjectOriented Programming, 3086, pp. 1-44. , http://www.springerlink.com/index/H73P577R36J8QHMM.pdf, [Online]. Available; Larsen, K.A., Types in Object-Oriented Languages The Expression Problem in Scala (2005) Knowledge Creation Diffusion Utilization; Alexander, C., A pattern language (1977) Center for Environmental Structure Series, 21 (2). , http://books.google.co.uk/books?id=hwAHmktpk5IC, ser. 2, S. Ishikawa and M. Silverstein, Eds. Oxford University Press, [Online]. Available; Meszaros, G., A pattern language for pattern writing (1998) Pattern Languages of Program Design, , http://xunitpatterns.com/~gerard/plopd3-pattern-writing-patterns-paper. pdfpapers2://publication/uuid/420266E9-5BD8-41A3-AA9B-F03763E9E78E, [Online]. Available; Kuhne, T., (1999) A Functional Pattern System for Object-Oriented Design, , http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.92.1134&rep= rep1&type=pdf, Ph.D. dissertation, [Online]. Available; Kke, F.S.L.Ø., (2009) Scala & Design Patterns; Suereth, J.D., (2012) Scala in Depth, , Manning Publications; Gibbons, J., Design patterns as higher-order datatype-generic programs (2006) Proceedings of the 2006 ACM SIGPLAN Workshop on Generic Programming WGP 06, p. 1. , http://portal.acm.org/citation.cfm?doid=1159861.1159863, no. December, [Online]. Available","Department of Informatics Engineering, University of Porto, Faculty of Engineering, Rua Dr. Roberto Frias, s/n, 4200-465 Porto, Portugal",,Critical;Agile21;Sinfic;Microsoft;StrongStep,,"2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012",2 September 2012 through 6 September 2012,Lisbon,97333,,9780769547770,,,English,"Proc. - Int. Conf. Qual. Inf. Commun. Technol., QUATIC",Conference Paper,Scopus,2-s2.0-84878879751,,
TRUE,3,3,"Destefanis, G., Tonelli, R., Tempero, E., Concas, G., Marchesi, M.",Micro pattern fault-proneness,2012,"Proceedings - 38th EUROMICRO Conference on Software Engineering and Advanced Applications, SEAA 2012",,,6328166,302,306,,1,10.1109/SEAA.2012.63,http://www.scopus.com/inward/record.url?eid=2-s2.0-84869756034&partnerID=40&md5=4610aed5261b1c667fbd02f54495c6b1,"Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy; Department of Computer Science, University of Auckland, Auckland, New Zealand","Destefanis, G., Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy; Tonelli, R., Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy; Tempero, E., Department of Computer Science, University of Auckland, Auckland, New Zealand; Concas, G., Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy; Marchesi, M., Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy","One of the goals of Software Engineering is to reduce, or at least to try to control, the defectiveness of software systems during the development phase. The aim of our study is to analyze the relationship between micro patterns (introduced by Gil and Maman) and faults in a software system. Micro patterns are similar to design patterns, but their characteristic is that they can be identified automatically, and are at a lower level of abstraction with respect to design patterns. Our study aims to show, through empirical studies of open source software systems, which categories of micro patterns are more correlated to faults. Gil and Maman demonstrated, and subsequent studies confirmed, that 75% of the classes of a software system are covered by micro patterns. In our study we also analyze the relationship between faults and the remaining 25% of classes that do not match with any micro pattern. We found that these classes are more likely to be fault-prone than the others. We also studied the correlation among all the micro patterns of the catalog, in order to verify the existence of relationships between them. © 2012 IEEE.",,Design Patterns; Development phase; Empirical studies; Fault-prone; Fault-proneness; Level of abstraction; Micro pattern; Open source software systems; Software systems; Engineering; Industrial engineering; Computer software,,,,,,"Gil, J.Y., Maman, I., Micro Patterns in Java Code (2005) Proceedings of the 20th Object Oriented Programming Systems Languages and Applications, San Diego, CA, USA, p. 97116; Arcelli, F., Maggioni, S., Metrics-based Detection of Micro Patterns to improve the Assesment of Software Quality Proceedings of 1st Symposium on Emerging Trends in Software Metrics (ETSM 2009), Italy, May 2009; Gamma, E., Helm, R., Jhonson, R., Vlissides, J., (1995) Design Pattern: Elements of Reusable Object-Oriented Software, , Addison Wesley; Kim, S., Pan, K., Whitehead, J., Micro Pattern Evolution MSR 06, May 22-23, 2006, Shanghai, China; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic Design Pattern Detection IWPC '03 Proceedings of the 11th IEEE International Workshop on Program Comprehension; Aversano, L., Cerulo, L., Di Penta, M., Relationship between design patterns defects and crosscutting concern scattering degree: An empirical study (2009) IET Softw., 3 (5), p. 395409. , October; Boetticher, G., Menzies, T., Ostrand, T., (2007) PROMISE Repository of Empirical Software Engineering Data, , http://promisedata.org/repository, West Virginia University, Department of Computer Science; Tonelli, R., Concas, G., Marchesi, M., Murgia, A., An analysis of SNA metrics on the Java Qualitas Corpus ISEC '11 Proceedings of the 4th India Software Engineering Conference; Concas, G., Marchesi, M., Murgia, A., Pinna, S., Tonelli, R., Assessing traditional and new metrics for object-oriented systems Proceedings of the WETsOM'10, Cape Town, South Africa; Turnu, I., Concas, G., Marchesi, M., Pinna, S., Tonelli, R., A modified Yule process to model the evolution of some object-oriented system properties (2011) Information Sciences, 181 (4), p. 883902. , 15 February; Bloch, J., (2011) Effective Java Programming Language Guide, , Addison-Wesley, June; http://www.bugzilla.org/http://www.nongnu.org/cvs/, Cvs","Destefanis, G.; Department of Electrical and Electronic Engineering, University of Cagliari, Cagliari, Italy; email: giuseppe.destefanis@diee.unica.it",,"ASELSAN A.S.;Turkish Aerospace Industries, Inc. (TAI);Sci. Technol. Res. Counc. Turkey (TUBITAK)",,"38th EUROMICRO Conference on Software Engineering and Advanced Applications, SEAA 2012",5 September 2012 through 8 September 2012,"Cesme, Izmir",94000,,9780769547909,,,English,"Proc. - EUROMICRO Conf. Softw. Eng. Adv. Appl., SEAA",Conference Paper,Scopus,2-s2.0-84869756034,,
FALSE,4,1,"Seo, D.",Personalized preference metrics for image pattern design,2012,International Journal of Multimedia and Ubiquitous Engineering,7,4,,217,224,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84868700165&partnerID=40&md5=c4b90529773fdc6b8ee4b6bdc22ee6e0,"School of Information Technology, Sungshin Women's University, South Korea","Seo, D., School of Information Technology, Sungshin Women's University, South Korea","Artistic perception has been regarded as a subject of personal preference, although there are well established mechanisms explaining characteristics of design artifacts. In this paper we have identified problems relating to specification for image pattern designs. Specification scheme has been suggested that can utilize design elements such as forms, shapes, colors, and nine design principles for automatically generated patterns. Personal preference on design is represented by personalized preference metrics supported by scoring systems. Scoring systems have been constructed to demonstrate ideas and effectiveness of suggested scheme.",CGI. Personal preference metrics; Design patterns; Pattern specification,Automatically generated; Design artifacts; Design elements; Design Patterns; Design Principles; Image patterns; Pattern specifications; Personal preferences; Scoring systems; Specifications; Design,,,,,,"http://www.ffffound.comhttp://www.visualpattern.comhttp://openprocesing.orgArnheim, R., (2004) Art and Visual Perception, , University of California Press; Zunsne, L., (1970) Visual Perception of Form, , Academic Press; Cushman, W.H., (1991) Human Factors in Product Design, , Elsevier; (2005) Pattern Palette Sourcebook, , Anvil Graphic design Inc., Rockport; Cole, D., (2007) Patterns, , Laurence King Publishing","Seo, D.; School of Information Technology, Sungshin Women's UniversitySouth Korea; email: dseo@sungshin.ac.kr",,,,,,,,19750080,,,,English,Int. J. Multimedia Ubiquitous Eng.,Article,Scopus,2-s2.0-84868700165,,
TRUE,4,4,"Christopoulou, A., Giakoumakis, E.A., Zafeiris, V.E., Soukara, V.",Automated refactoring to the Strategy design pattern,2012,Information and Software Technology,54,11,,1202,1214,,4,10.1016/j.infsof.2012.05.004,http://www.scopus.com/inward/record.url?eid=2-s2.0-84864774893&partnerID=40&md5=d30dfde6af5f3ba50a1d10821705fcee,"Department of Informatics, Athens University of Economics and Business, 76 Patission Str., Athens 104 34, Greece; Information Society S.A., 2-4 Ilioupoleos Str., Ymittos 172 37, Greece","Christopoulou, A., Department of Informatics, Athens University of Economics and Business, 76 Patission Str., Athens 104 34, Greece; Giakoumakis, E.A., Department of Informatics, Athens University of Economics and Business, 76 Patission Str., Athens 104 34, Greece; Zafeiris, V.E., Department of Informatics, Athens University of Economics and Business, 76 Patission Str., Athens 104 34, Greece; Soukara, V., Information Society S.A., 2-4 Ilioupoleos Str., Ymittos 172 37, Greece","Context: The automated identification of code fragments characterized by common design flaws (or ""code smells"") that can be handled through refactoring, fosters refactoring activities, especially in large code bases where multiple developers are engaged without a detailed view on the whole system. Automated refactoring to design patterns enables significant contributions to design quality even from developers with little experience on the use of the required patterns. Objective: This work targets the automated identification of refactoring opportunities to the Strategy design pattern and the elimination through polymorphism of respective ""code smells"" that are related to extensive use of complex conditional statements. Method: An algorithm is introduced for the automated identification of refactoring opportunities to the Strategy design pattern. Suggested refactorings comprise conditional statements that are characterized by analogies to the Strategy design pattern, in terms of the purpose and selection mode of strategies. Moreover, this work specifies the procedure for refactoring to Strategy the identified conditional statements. For special cases of these statements, a technique is proposed for total replacement of conditional logic with method calls of appropriate concrete Strategy instances. The identification algorithm and the refactoring procedure are implemented and integrated in the JDeodorant Eclipse plug-in. The method is evaluated on a set of Java projects, in terms of quality of the suggested refactorings and run-time efficiency. The relevance of the identified refactoring opportunities is verified by expert software engineers. Results: The identification algorithm recalled, from the projects used during evaluation, many of the refactoring candidates that were identified by the expert software engineers. Its execution time on projects of varying size confirmed the run-time efficiency of this method. Conclusion: The proposed method for automated refactoring to Strategy contributes to simplification of conditional statements. Moreover, it enhances system extensibility through the Strategy design pattern. © 2012 Elsevier B.V. All rights reserved.",Design patterns; Polymorphism; Refactoring; Strategy pattern; Total replacement of conditional logic,Automated identification; Code fragments; Code smell; Design Patterns; Design Quality; Execution time; Identification algorithms; Large code basis; Plug-ins; Refactorings; Run-time efficiency; Software engineers; Strategy designs; Strategy pattern; System extensibility; Total replacement of conditional logic; Algorithms; Automation; Engineers; Java programming language; Odors; Polymorphism; Quality control,,,,,,"Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley Longman Publishing Co., Inc. Boston, MA, USA; Shore, J., Warden, S., (2007) The Art of Agile Development, , first ed. O'Reilly; Demeyer, S., Object-oriented reengineering (2008) Software Evolution, pp. 91-104. , T. Mens, S. Demeyer, Springer; Mens, T., Tourwe, T., A survey of software refactoring (2004) IEEE Transactions on Software Engineering, 30, pp. 126-139; Kerievsky, J., (2004) Refactoring to Patterns, , Pearson Higher Education; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Longman Publishing Co., Inc. Boston, MA, USA; Chatzigeorgiou, A., Tsantalis, N., Chaikalis, T., Fokaefs, M., (2011) Jdeodorant Eclipse Plug-in, , http://java.uom.gr/jdeodorant/; Tokuda, L., Batory, D., Automated software evolution via design pattern transformations International Symposium on Applied Corporate Computing; Cinneide, M., Nixon, P., A methodology for the automated introduction of design patterns Proceedings of the IEEE International Conference on Software Maintenance, 1999 (ICSM '99), pp. 463-472; Jeon, S.-U., Lee, J.-S., Bae, D.-H., An automated refactoring approach to design pattern-based program transformations in java programs (2002) Proc. of Ninth Asia-Pacific Software Engineering Conference (APSEC'02), pp. 337-345. , IEEE Computer Society; Jebelean, C., Chirila, C.-B., Cretu, V., A logic based approach to locate composite refactoring opportunities in object-oriented code IEEE International Conference on Automation Quality and Testing Robotics (AQTR'10), 3, pp. 1-6; (2011) JTransformer Query and Transformation Engine for Java Source Code, , ROOTS research group Computer Science Department III, University of Bonn; Juillerat, N., Hirsbrunner, B., Toward an implementation of the ""form template method"" refactoring Seventh IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM'07), pp. 81-90; Juillerat, N., (2009) Models and Algorithms for Refactoring Statements, , Ph.D. Thesis, Faculty of Science of the University of Fribourg, Switzerland; Tsantalis, N., Chatzigeorgiou, A., Identification of refactoring opportunities introducing polymorphism (2010) Journal of Systems and Software, 83, pp. 391-404; Freeman, E., Freeman, E., Bates, B., Sierra, K., (2004) Head First Design Patterns, , O' Reilly & Associates, Inc; Ferrante, J., Ottenstein, K.J., Warren, J.D., The program dependence graph and its use in optimization (1987) ACM Transactions on Programming Languages and Systems, 9 (3), pp. 319-349. , DOI 10.1145/24039.24041; Tsantalis, N., Chatzigeorgiou, A., Identification of extract method refactoring opportunities for the decomposition of methods (2011) Journal of Systems and Software, 84, pp. 1757-1782; Vassis, D.E., Zafeiris, V.E., (2012) IEEE 802.11 WLAN Simulator Pamvotis v.1.1, , http://www.pamvotis.org; Zafeiris, V., Doulkeridis, C., Stavrakas, Y., Gergatsoulis, M., An infrastructure for manipulating multidimensional semistructured data Proceedings of the Hellenic Data Management Symposium (HDMS'02); Stavrakas, Y., Gergatsoulis, M., Doulkeridis, C., Zafeiris, V., Representing and querying histories of semistructured databases using multidimensional OEM (2004) Elsevier Information Systems, 29, pp. 461-482; (2012) Apache Software Foundation, Nutch Web-search Software v.1.1, , http://nutch.apache.org/; Horstmann, C.S., De Pellegrin, A., (2012) Violet Open Source UML Editor v.0.21.2, , http://violet.sourceforge.net/; Zafeiris, V.E., Giakoumakis, E., Optimized traffic flow assignment in multi-homed, multi-radio mobile hosts (2011) Computer Networks, 55, pp. 1114-1131; (2012) Ice Hockey Manager Game v.0.4, , http://ihm.sourceforge.net, IceHockeyManager; (2012) Ant Tool for Software Build Automation, , http://ant.apache.org, Apache Software Foundation; (2012) JADE (Java Agent DEvelopment Framework) Framework for Development of Agent-based Applications, , http://jade.tilab.com, Telecom Italia Lab; McCabe, T., A complexity measure (1976) IEEE Transactions on Software Engineering, 2 SE-, pp. 308-320","Giakoumakis, E.A.; Department of Informatics, Athens University of Economics and Business, 76 Patission Str., Athens 104 34, Greece; email: mgia@aueb.gr",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Article,Scopus,2-s2.0-84864774893,,
TRUE,4,4,"Zhang, C., Budgen, D., Drummond, S.","Using a follow-on survey to investigate why use of the visitor, singleton & facade patterns is controversial",2012,International Symposium on Empirical Software Engineering and Measurement,,,,79,88,,4,10.1145/2372251.2372264,http://www.scopus.com/inward/record.url?eid=2-s2.0-84867492179&partnerID=40&md5=36d26303e1b96bb8f9cec1520eb73a55,"School of Engineering and Computing Sciences, Durham University, Durham DH1 3LE, United Kingdom","Zhang, C., School of Engineering and Computing Sciences, Durham University, Durham DH1 3LE, United Kingdom; Budgen, D., School of Engineering and Computing Sciences, Durham University, Durham DH1 3LE, United Kingdom; Drummond, S., School of Engineering and Computing Sciences, Durham University, Durham DH1 3LE, United Kingdom","Context: A previous study has shown that software developers who are experienced with using design patterns hold some conicting opinions about three of the more popular design patterns: Facade, Singleton and Visitor. Aim: To identify the characteristics of these three patterns that have caused them to generate such differing views. Method: We employed a qualitative follow-on survey of those developers who had taken part in the earlier survey about design patterns. Results: We received 46 usable responses from a possible total of 188, with nearly 85% of respondents having six or more years of experience with design patterns. Of these, 27 also provided comments and descriptions of experiences about the patterns, which we categorised. Conclusions: All three patterns can easily be misused and in each case, the consequences of misuse are regarded as being particularly significant. Copyright 2012 ACM.",Design pattern; Empirical; Survey,Design Patterns; Empirical; Software developer; Software engineering; Surveys,,,,,,"Baudry, B., Traon, Y.L., Sunyé, G., Jézéquel, J.-M., Measuring and improving design patterns testability (2003) Proceedings of 9th International Software Metrics Symposium (METRICS'03), pp. 50-59; Détienne, F., (2002) Software Design - Cognitive Aspects, , Springer Practitioner Series; Freeman, E., Freeman, E., (2004) Head First Design Patterns, , O'Reilly; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of CSMR 2008, pp. 274-278; Kitchenham, B.A., Budgen, D., Brereton, O.P., Using mapping studies as the basis for further research|a participant-observer case study (2011) Information & Software Technology, 53 (4), pp. 638-651. , Special section from EASE 2010; Kitchenham, B.A., Peeger, S.L., Principles of survey research part 4: Questionnaire evaluation (2002) ACM Software Engineering Notes, 27 (3), pp. 20-23. , May; Mingers, J., The paucity of multimethod research: A review of the information systems literature (2003) Information Systems Journal, 13 (3), pp. 233-249; Oates, B., (2006) Researching Information Systems and Computing, , SAGE; Seaman, C.B., Qualitative methods in empirical studies of software engineering (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 557-572; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proceedings of 5th European Conference on Software Maintenance and Reengineering (CSMR'01), pp. 77-84. , IEEE Computer Society Press; Williams, L., What agile teams think of agile principles (2012) Communications of the ACM, 55 (4), pp. 71-76; Zhang, C., Budgen, D., (2011) A Survey of Experienced User Perceptions about Design Patterns, , Submitted for publication; Zhang, C., Budgen, D., What do we know about the effectiveness of software design patterns? (2011) IEEE Transactions on Software Engineering, , Accepted for publication","Zhang, C.; School of Engineering and Computing Sciences, Durham University, Durham DH1 3LE, United Kingdom; email: cheng.zhang2@durham.ac.uk",,ACM Special Interest Group on Software Engineering (SIGSOFT);IEEE Computer Society (CS),,"6th ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM 2012",19 September 2012 through 20 September 2012,Lund,93327,19493770,,,,English,Int. Symp. Empir. Softw. Eng. Meas.,Conference Paper,Scopus,2-s2.0-84867492179,,
TRUE,v,v,"Ren, W., Zhao, W.",An observer design-pattern detection technique,2012,"CSAE 2012 - Proceedings, 2012 IEEE International Conference on Computer Science and Automation Engineering",3,,6273011,544,547,,2,10.1109/CSAE.2012.6273011,http://www.scopus.com/inward/record.url?eid=2-s2.0-84867089264&partnerID=40&md5=3a9b14c337d4a0721f84bc639f157cbf,"School of Computer Science, Fudan University, Shanghai 201203, Shanghai, China","Ren, W., School of Computer Science, Fudan University, Shanghai 201203, Shanghai, China; Zhao, W., School of Computer Science, Fudan University, Shanghai 201203, Shanghai, China","The paper presents an approach for design patterns recognition in legacy code by the combination of static and dynamic analysis techniques. The implement process has three steps: static parser, SWRL rules and dynamic validation. The static parser translates the input source code into the AST. The protéǵ tool defines programming concepts with ontology model and design pattern into SWRL rules, and these SWRL rules are defined in OWL format, and then the code instances are constructed as OWL individuals and map to the individuals of the program ontology model. Finally, subsequent dynamic analysis is employed to confirm or weaken the results from static analysis. We discuss our approach for the Observer design pattern on a Java system. © 2012 IEEE.",design pattern; dynamic analysis; ontology-based system; static analysis,Design Patterns; Detection technique; Java system; Legacy code; Observer design; Ontology model; Ontology-based systems; Program ontology model; Programming concepts; Source codes; Static and dynamic analysis; Computer science; Dynamic analysis; Java programming language; Static analysis,,,,,,"Balanyi, Z., Ferenc, R., Mining Design Patterns from C++ Source Code The International Conference on Software Maintenance (ICSM'03), 2003, pp. 305-314; Beyer, D., Lewerentz, C., CrocoPat: Efficient Pattern Analysis in Object-Oriented Programs The IEEE International Workshop on Program Comprehension (IWPC'03), 2003, pp. 294-295; Pettersson, N., Measuring Precision for Static and Dynamic Design Pattern Recognition as a Function of Coverage Workshop on Dynamic Analysis (WODA'05), 2005, pp. 43-49; Dietrich, J., Elgar, C., A Formal Description of Design Patterns Using OWL Australian Software Engineering Conference 2005; Dong, J., Zhao, Y., Peng, T., Architecture and Design Pattern Discovery Techniques - A Review Proceedings of the 2007 International Conference on Software Engineering Research & Practice, SERP 2007,Las Vegas Nevada, June 25-28, 2007, 2, pp. 621-627; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral Pattern Identification through Visual Language Parsing and Code Instrumentation The European Conference on Software Maintenance and Reengineering (CSMR'09), 2009, pp. 99-108; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design Pattern Recovery through Visual Language Parsing and Source Code Analysis (2009) Journal of Systems & Software, 18 (7), pp. 1177-1193; http://www.antlr.org/Yu, L., Zhou, J., Yi, Y., Li, P., Wang, Q., Ontology Model-Based Static Analysis on Java Programs COMPSAC 2008, pp. 92-99; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Menlo Park, CA; http://www.jhotdraw.orgKirasic, D., Basch, D., (2008) Ontology-Based Design Pattern Recognition, (1), pp. 384-393. , KES; Alnusair, A., Zhao, T., Using Ontology Reasoning for Reverse Engineering Design Patterns (2010) LNCS, 6002, pp. 344-358. , Models in Software Engineering (MoDELS Workshops); Kirasi-c, D., Basch, D., Ontology-Based Design Pattern Recognition 12th International Conference on Knowledge-Based and Intelligent Information and Engineering Systems (KES'08), 2008, pp. 384-393.1","Ren, W.; School of Computer Science, Fudan University, Shanghai 201203, Shanghai, China; email: 081024014@fudan.edu.cn",,"IEEE Beijing Section;Hunan University of Humanities, Science and Technology;Tongji University;Xiamen University;Central South University",,"2012 IEEE International Conference on Computer Science and Automation Engineering, CSAE 2012",25 May 2012 through 27 May 2012,Zhangjiajie,93011,,9781467300865,,,English,"CSAE - Proc., IEEE Int. Conf. Comput. Sci. Autom. Eng.",Conference Paper,Scopus,2-s2.0-84867089264,,
TRUE,3,3,"Moreno, L., Marcus, A.",JStereoCode: Automatically identifying method and class stereotypes in java code,2012,"2012 27th IEEE/ACM International Conference on Automated Software Engineering, ASE 2012 - Proceedings",,,,358,361,,4,10.1145/2351676.2351747,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866933107&partnerID=40&md5=2fc77ff23b5132820cf0d1ab0bc70616,"Wayne State University, Detroit, MI, United States","Moreno, L., Wayne State University, Detroit, MI, United States; Marcus, A., Wayne State University, Detroit, MI, United States","Object-Oriented (OO) code stereotypes are low-level patterns that reveal the design intent of a source code artifact, such as, a method or a class. They are orthogonal to the problem domain of the software and they reflect the role of a method or class from the OO problem solving point of view. However, the research community in automated reverse engineering has focused more on higher-level design information, such as design patterns. Existing work on reverse engineering code stereotypes is scarce and focused on C++ code, while no tools are freely available as of today. We present JStereoCode, a tool that automatically identifies the stereotypes of methods and classes in Java systems. The tool is integrated with Eclipse and for a given Java project will classify each method and class in the system based on their stereotypes. Applications of JStereoCode include: program comprehension, defect prediction, etc. Copyright 2012 ACM.",Code stereotypes; Java; Program comprehension,C++ codes; Code stereotypes; Defect prediction; Design information; Design intent; Design Patterns; Java; Java codes; Java system; Object oriented; Problem domain; Program comprehension; Research communities; Source codes; Identifying methods; Automation; Computer programming; Java programming language; Reverse engineering; Software engineering,,,,,,"Clarke, P., Babich, D., King, T., Golam Kibria, B.M., Analyzing clusters of class characteristics in OO applications (2008) Journal of Systems and Software, 81 (12), pp. 2269-2286; Clarke, P., Malloy, B., Using a taxonomy tool to identify changes in OO software (2003) Proceedings of Seventh European Conference on Software Maintenance and Reengineering (CSMR'03), pp. 213-222; Dragan, N., Emergent laws of method and class stereotypes in object oriented software (2011) 27th IEEE International Conference on Software Maintenance (ICSM'11), pp. 550-555. , Williamsburg, VA; Dragan, N., Collard, M., Maletic, J., Automatic identification of class stereotypes (2010) 26th IEEE International Conference on Software Maintenance (ICSM'10), pp. 1-10. , Timisoara, Romania; Dragan, N., Collard, M.L., Hammad, M., Maletic, J.I., Using stereotypes to help characterize commits (2011) Proceedings of 27th IEEE International Conference on Software Maintenance (ICSM'11), pp. 520-523. , Williamsburg, VA; Dragan, N., Collard, M.L., Maletic, J.I., Reverse engineering method stereotypes (2006) Proceedings of 22nd IEEE International Conference on Software Maintenance (ICSM'06), pp. 24-34; Dragan, N., Collard, M.L., Maletic, J.I., Using method stereotype distribution as a signature descriptor for software systems (2009) 25th IEEE International Conference on Software Maintenance (ICSM'09), pp. 567-570; Gil, J., Maman, I., Micro patterns in Java code (2005) 20th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 97-116. , San Diego, CA, USA; Greevy, O., Ducasse, S., Girba, T., Analyzing feature traces to incorporate the semantics of change in software evolution analysis (2005) Proceedings of 21st IEEE International Conference on Software Maintenance (ICSM'05), pp. 347-356","Moreno, L.; Wayne State University, Detroit, MI, United States; email: lmorenoc@wayne.edu",,"IEEE;IEEE Computer Society;Assoc. Comput. Mach., Spec. Interest Group Softw.;Eng. (ACM SIGSOFT);University of Zurich, Department of Informatics",,"2012 27th IEEE/ACM International Conference on Automated Software Engineering, ASE 2012",3 September 2012 through 7 September 2012,Essen,92925,,9781450312042,,,English,"IEEE/ACM Int. Conf. Autom. Softw. Eng., ASE - Proc.",Conference Paper,Scopus,2-s2.0-84866933107,,
TRUE,3,3,"Steimann, F., Von Pilgrim, J.",Refactorings without names,2012,"2012 27th IEEE/ACM International Conference on Automated Software Engineering, ASE 2012 - Proceedings",,,,290,293,,4,10.1145/2351676.2351726,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866951927&partnerID=40&md5=d54354071bb3504372333b7cf208fec7,"Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, 58084 Hagen, Germany","Steimann, F., Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, 58084 Hagen, Germany; Von Pilgrim, J., Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, 58084 Hagen, Germany","As with design patterns before, the naming and cataloguing of refactorings has contributed significantly to the recognition of the discipline. However, in practice concrete refactoring needs may deviate from what has been distilled as a named refactoring, and mapping these needs to a series of such refactorings - if at all possible - can be difficult. To address this, we propose a framework of specifying refactorings in an ad hoc fashion, and demonstrate its feasibility by presenting an implementation. Evaluation is done by simulating application through a user on a set of given sample programs. Results suggest that our proposal of ad hoc refactoring is, for the investigated scenarios at least, viable. Copyright 2012 ACM.",Program restructuring; Refactoring,Design Patterns; Program restructuring; Refactorings; program restructuring; Software engineering; Application programs,,,,,,"(1999) M Fowler Refactoring: Improving the Design of Existing Code, , Addison-Wesley; Gosling, J., Joy, B., Steele, G., Bracha, G., Java Language Specification, , http://java.sun.com/docs/books/jls/; Gottlob, G., Greco, G., Mancini, T., Conditional constraint satisfaction: Logical foundations and complexity (2007) Proc. of IJCAI, pp. 88-93; Steimann, F., Thies, A., From public to private to absent: Refactoring Java programs under constrained accessibility (2009) Proc. of ECOOP, pp. 419-443; Steimann, F., Kollee, C., Pilgrim, J.V., A refactoring constraint language and its application to Eiffel (2011) Proc. of ECOOP, pp. 255-280; Steimann, F., Pilgrim, J.V., Constraint-based refactoring with foresight (2012) Proc. of ECOOP, pp. 535-559; Tip, F., Fuhrer, R.M., Kiezun, A., Ernst, M.D., Balaban, I., Sutter, B.D., Refactoring using type constraints (2011) ACM Trans. Program. Lang. Syst., 33 (3), p. 9","Steimann, F.; Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, 58084 Hagen, Germany; email: steimann@acm.org",,"IEEE;IEEE Computer Society;Assoc. Comput. Mach., Spec. Interest Group Softw.;Eng. (ACM SIGSOFT);University of Zurich, Department of Informatics",,"2012 27th IEEE/ACM International Conference on Automated Software Engineering, ASE 2012",3 September 2012 through 7 September 2012,Essen,92925,,9781450312042,,,English,"IEEE/ACM Int. Conf. Autom. Softw. Eng., ASE - Proc.",Conference Paper,Scopus,2-s2.0-84866951927,,
FALSE,3,1,"Chouiten, M., Didier, J.-Y., Mallem, M.",Distributed augmented reality systems: How much performance is enough?,2012,"Proceedings of the 2012 IEEE International Conference on Multimedia and Expo Workshops, ICMEW 2012",,,6266278,337,342,,,10.1109/ICMEW.2012.64,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866877379&partnerID=40&md5=38fe4a437fd47f1b621632ec0d29112a,"IBISC Laboratory, University of Evry, France","Chouiten, M., IBISC Laboratory, University of Evry, France; Didier, J.-Y., IBISC Laboratory, University of Evry, France; Mallem, M., IBISC Laboratory, University of Evry, France","This paper presents architectural performance requirements for a framework dedicated to Augmented Reality (AR) applications. This work has been made as a starting point to evaluation of a framework named ARCS (Augmented Reality Component Systems) allowing rapid-prototyping, development, debugging and monitoring of AR applications. The article first introduces the need of such a dedicated framework and the importance of distribution for AR. It also identifies main features that should be offered by an AR framework and key performance criteria to be satisfied. These are partially inspired by the SPE (Software Performance Engineering) distributed architecture evaluation approach. These criteria are application specific. Thus, we first classify different distributed AR applications in scenarios and extract relevant criteria for each. We also provide a custom assessment protocol inspired by SPE evaluation methodology and based on previously identified criteria. This assessment is application independent as it is based on generic design patterns and most likely scenarios of distribution. Keeping in mind identified criteria and handling existing framework's constraints, a reliable generic AR framework should satisfy all criteria for each application class. Assessment protocol results for each criterion are compared to the typical features and performance that should be offered by an AR system. © 2012 IEEE.",Augmented Reality; Design Patterns; Distributed architecture; Evaluation; Software Performance,Application specific; AR application; AR framework; AR system; Assessment protocols; Augmented reality systems; Component systems; Design Patterns; Distributed architecture; Evaluation; Evaluation methodologies; Generic design; Performance criterion; Performance requirements; Software performance; Software performance engineerings; Exhibitions; Java programming language; Augmented reality,,,,,,"Didier, J., Otmane, S., Mallem, M., A component model for augmented/mixed reality applications with reconfigurable data-flow (2006) 8th VRIC (VRIC 2006), pp. 243-252. , April 26-28; Didier, J., Otmane, S., Mallem, M., ARCS: Une Architecture Logicielle Reconfigurable pour la conception des Applications de Réalité Augmentée (2009) Technique et Science Informatiques (TSI), Réalité Virtuelle - Réalité Augmentée, 28 (6-7), pp. 891-919. , Jun-sep, 2009; Chouiten, M., Didier, J.-Y., Mallem, M., Component-based middleware for distributed augmented reality applications Proceedings of COMSWARE '11. July, 2011; Bauer, M., Bruegge, B., Klinker, G., MacWilliams, A., Reicher, T., Riss, S., Sandor, C., Wagner, M., Design of a component-based augmented reality framework Proceedings of the International Symposium on Augmented Reality (ISAR), Oct. 2001; Ohlenburg, J., Herbst, I., Lindt, I., Fröhlich, T., Broll, W., The MORGAN framework: Enabling dynamic multi-user AR and VR projects VRST '04: Proceedings of the ACM Symposium on Virtual Reality Software and Technology, pp. 166-169; Fuhrmann, A., Hesina, G., Szalavari, Z., Encarnacao, L.M., Gervautz, M., Purgathofer, W., The studierstube augmented reality project (2002) Presence: Teleoperators and Virtual Environments, 11. , Feb; Piekarski, W., Thomas, B.H., Tinmith-evo5 - An architecture for supporting mobile augmented reality environments International Symposium on Augmented Reality, Oct. 2001; Szyperski, C., (2002) Component Software - Beyond Object-Oriented Programming, , second edn, Addison-Wesley, Harlow, England; Macwilliams, A., Reicher, T., Klinker, G., Bruegge, B., Design Patterns for Augmented Reality Systems Proc. International Workshop Exploring the Design and Engineering of Mixed Reality Systems - MIXER 2004; (1996) ITU Criteria for the Use and Applicability of Formal Description Techniques Message Sequence Chart (MSC), , International Telecommnication Union; Smith, C.U., (1990) Performance Engineering of Software Systems, , Reading, MA, Addison-Wesley; Tokunaga, E., Van Der Zee, A., Kurahashi, M., Nemoto, M., Nakajima, T., Object-Oriented Middleware Infrastructure for Distributed Augmented Reality Proceedings of ISORC '03. May, 2003; Bauer, M., Hilliges, O., MacWilliams, A., Sandor, C., Wagner, M., Newman, J., Reitmayr, G., Schmalstieg, D., Integrating Studierstube and DWARF International Workshop on STARS, Oct. 2003; Smith, C.U., Williams, L.G., Performance and Scalability of Distributed Software Architectures: An SPE Approach (2002) Journal Parallel and Distributed Computing Practices; Wang, X., Wu, F.C., Wang, Z., Harris feature vector descriptor (HFVD) Proc. ICPR, 2008, pp. 1-4; Bay, H., Ess, A., Tuytelaars, T., Gool, L.J.V., Speeded-Up Robust Features (SURF) (2008) Computer Vision and Image Understanding, pp. 346-359. , presented at; Lowe, D.G., Object recognition from local scale-invariant features (1999) ICCV'99, 2, p. 1150. , IEEE Computer Society. (pp. 5, 6, 9, 11, 16); Foster, C.K., (1999) The Grid: Blueprint for A New Computing Infrastructure, , Chapter 6 of Morgan-Kaufman; Ta, D.-N., Gelfand, N., Chen, W.-C., Pulli, K., SURFTrac: Efficient Tracking and Continuous Object Recognition using Local Feature IEEE CVPR'09, Miami, Florida, June 20-25, 2009","Chouiten, M.; IBISC Laboratory, University of EvryFrance; email: mehdi.chouiten@ibisc.fr",,,,"2012 IEEE International Conference on Multimedia and Expo Workshops, ICMEW 2012",9 July 2012 through 13 July 2012,"Melbourne, VIC",92948,,9780769547299,,,English,"Proc. IEEE Int. Conf. Multimedia Expo Workshops, ICMEW",Conference Paper,Scopus,2-s2.0-84866877379,,
TRUE,3,3,"Polášek, I., Líška, P., Kelemen, J., Lang, J.",On extended similarity scoring and bit-vector algorithms for design smell detection,2012,"INES 2012 - IEEE 16th International Conference on Intelligent Engineering Systems, Proceedings",,,6249814,115,120,,1,10.1109/INES.2012.6249814,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866692279&partnerID=40&md5=c8d111f93f6dd00420bf84655f7d5ded,"Faculty of Informatics and Information Technology, Slovak University of Technology in Bratislava, Ilkovičova 3, 842 16 Bratislava, Slovakia; Institute of Informatics and IT4I Center of Excellence, Silesian University, Bezruc Sq. 13, 746 01 Opava, Czech Republic; School of Management, Panonska str. 17, 851 04 Bratislava, Slovakia","Polášek, I., Faculty of Informatics and Information Technology, Slovak University of Technology in Bratislava, Ilkovičova 3, 842 16 Bratislava, Slovakia; Líška, P., Faculty of Informatics and Information Technology, Slovak University of Technology in Bratislava, Ilkovičova 3, 842 16 Bratislava, Slovakia; Kelemen, J., Institute of Informatics and IT4I Center of Excellence, Silesian University, Bezruc Sq. 13, 746 01 Opava, Czech Republic, School of Management, Panonska str. 17, 851 04 Bratislava, Slovakia; Lang, J., Faculty of Informatics and Information Technology, Slovak University of Technology in Bratislava, Ilkovičova 3, 842 16 Bratislava, Slovakia","The occurrence of design smells or anti-patterns in software models complicate development process and reduce the software quality. The contribution proposes an extension to Similarity Scoring Algorithm and Bit-vector Algorithm, originally used for design patterns detection. This paper summarizes both original approaches, important differences between design patterns and anti-patterns structures, modifications and extensions of algorithms and their application to detect selected design smells. © 2012 IEEE.",anti-pattern; bit-vector algorithm; design smell; refactoring; similarity scoring,anti-pattern; Anti-patterns; Bit-vector algorithms; Design Patterns; Development process; Refactorings; Scoring algorithms; similarity scoring; Software model; Software Quality; Computer software selection and evaluation; Design for testability; Odors; Algorithms,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, ISBN 0201633612; Koenig, A., Patterns and Antipatterns (1995) Journal of Object-Oriented Programming, 8, pp. 46-48; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley, ISBN 0201485672; (2006) Object Constraint Language (OMG OCL), , OMG. V2.0; Kaczor, O., Gueheneuc, Y.G., Hamel, S., Efficient identification of design patterns with bit - Vector algorithm (2006) Proceedings of the 10th European Conference on Software Maintenance and Reengineering, pp. 175-184. , March ISBN 0-7695-2536-9; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Ramaswamy, R., Kencl, L., Iannaccone, G., Approximate fingerprinting to accelerate pattern matching Proceedings of the 6th ACM SIGCOMM Conference on Internet Measurement, Rio de Janeriro, Brazil, October 25-27, 2006; Gueheneuc, Y.G., Sahraoui, H., Zaidi, F., Fingerprinting Design Patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181. , November 08-12; Dong, J., Lad, D., Zhao, Y., DP-Miner: Design Pattern Discovery Using Matrix (2007) Proceedings of the 14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, pp. 371-380. , March 26-29; Blondel, V., Gajardo, A., Heymans, M., Senellart, P., VanDooren, P., A Measure of Similarity between Graph Vertices: Applications to Synonym Extraction and Web Searching (2004) SIAM Rev., 46 (4), pp. 647-666; Jakubík, J., Extension for Design Pattern Identification Using Similarity Scoring Algorithm (2009) Information Sciences and Technologies Bulletin of the ACM Slovakia, 1 (1), pp. 25-32; Moha, N., Gueheneuc, Y., Duchien, L., Le Meur, A., DECOR: A Method for the Specification and Detection of Code and Design Smells (2010) IEEE Transactions on Software Engineering, pp. 20-36. , January/February; Marinescu, C., Marinescu, R., Mihancea, P., Ratiu, D., Wettel, R., iPlasma: An Integrated Platform for Quality Assessment of Object-Oriented Design (2005) Proceedings of the 21st IEEE International Conference on Software Maintenance - Industrial and Tool Volume, ICSM 2005, pp. 77-80. , 25-30 September; Fokaefs, M., Tsantalis, N., Chatzigeorgiou, A., JDeodorant: Identification and Removal of Feature Envy Bad Smells (2007) Proceedings ICSM, pp. 519-520; Majtás, L., Contribution to the Creation and Recognition of the Design Patterns Instances (2011) Information Sciences and Technologies Bulletin of the ACM Slovakia, 3 (1), pp. 84-92","Polášek, I.; Faculty of Informatics and Information Technology, Slovak University of Technology in Bratislava, Ilkovičova 3, 842 16 Bratislava, Slovakia; email: polasek@fiit.stuba.sk",,IEEE Industrial Electronics Society;IEEE Hungary Section;IEEE Joint Chapter of IES and RAS;IEEE Computational Intelligence Chapter;IEEE SMC Chapter,,"IEEE 16th International Conference on Intelligent Engineering Systems, INES 2012",13 June 2012 through 15 June 2012,Lisbon,92843,,9781467326957,,,English,"INES - IEEE Int. Conf. Intelligent Eng. Syst., Proc.",Conference Paper,Scopus,2-s2.0-84866692279,,
FALSE,3,4,"Hoffmann, H., Agarwal, A., Devadas, S.",Selecting spatiotemporal patterns for development of parallel applications,2012,IEEE Transactions on Parallel and Distributed Systems,23,10,6095539,1970,1982,,1,10.1109/TPDS.2011.298,http://www.scopus.com/inward/record.url?eid=2-s2.0-84865688943&partnerID=40&md5=9cb266d29061e8c8269c4a6a0aca45ae,"Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 32 Vassar Street, Cambridge, MA 02139, United States","Hoffmann, H., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 32 Vassar Street, Cambridge, MA 02139, United States; Agarwal, A., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 32 Vassar Street, Cambridge, MA 02139, United States; Devadas, S., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 32 Vassar Street, Cambridge, MA 02139, United States","Design patterns for parallel computing attempt to make the field accessible to nonexperts by generalizing the common techniques experts use to develop parallel software. Existing parallel patterns have tremendous descriptive power, but it is often unclear to nonexperts how to choose a pattern based on the specific performance goals of a given application. This paper addresses the need for a pattern selection methodology by presenting four patterns and an accompanying decision framework for choosing from these patterns given an application's throughput and latency goals. The patterns are based on recognizing that one can partition an application's data or instructions and that these partitionings can be done in time or space, hence we refer to them as spatiotemporal partitioning strategies. This paper introduces a taxonomy that describes each of the resulting four partitioning strategies and presents a three-step methodology for selecting one or more given a throughput and latency goal. Several case studies are presented to illustrate the use of this methodology. These case studies cover several simple examples as well as more complicated applications including a radar processing application and an H.264 video encoder. © 2012 IEEE.",Design patterns; parallel computing; parallel programming,Decision framework; Design Patterns; H.264 video encoder; Parallel application; Parallel patterns; Parallel software; Partitioning strategies; Pattern selection; Radar processing; Spatiotemporal patterns; Parallel processing systems; Parallel programming; Parallel architectures,,,,,,"Mattson, T., Sanders, B., Massingill, B., (2004) Patterns for Parallel Programming., , Addison-Wesley Professional; Siu, S., Simone, M.D., Goswami, D., Singh, A., Design patterns for parallel programming (1996) Proc. Int'l Conf. Parallel and Distributed Processing Techniques and Applications; Lea, D., (1996) Concurrent Programming In Java: Design Principles And Patterns, , Addison-Wesley Longman Publishing Co., Inc; Keutzer, K., Mattson, T., (2011) Our Pattern Language (OPL): A Design Pattern Language for Engineering (Parallel) Software; Snir, M., (2012) Parallel Programming Patterns, , http://www.cs.uiuc.edu/homes/snir/PPP; Hoffmann, H., Agarwal, A., Devadas, S., Partitioning strategies: Spatiotemporal patterns of program decomposition (2009) Proc. 21st Int'l Conf. Parallel and Distributed Computing and Systems; Liu, L.-K., Kesavarapu, S., Connell, J., Jagmohan, A., Leem, L.-H., Paulovicks, B., Sheinin, V., Yeo, H., Video analysis and compression on the sti cell broadband engine processor (2006) 2006 IEEE International Conference on Multimedia and Expo, ICME 2006 - Proceedings, 2006, pp. 29-32. , DOI 10.1109/ICME.2006.262506, 4036528, 2006 IEEE International Conference on Multimedia and Expo, ICME 2006 - Proceedings; Blackford, L.S., Choi, J., Cleary, A., Petitet, A., Whaley, R.C., Demmel, J., Dhillon, I., Walker, D., ScaLAPACK: A portable linear algebra library for distributed memory computers-design issues and performance (1996) Proc. Int'l Conf. Supercomputing; Van De Geijn, R., (1997) Using PLAPACK-Parallel Linear Algebra Package, , MIT Press; (1993) High Performance Fortran Language Specification, , High Performance Fortran Forum Version 1.0 Technical Report CRPCTR92225; Flynn, M.J., Very high-speed computing systems (1966) Proc. IEEE, 54 (12), pp. 1901-1909. , Dec; (2006) Supra-Linear Packet Processing Performance with Intel Multi- Core Processors, , technical report, Intel; Gordon, M., Thies, W., Amarasinghe, S., Exploiting coarse- grained task data, and pipeline parallelism in stream programs (2006) Proc. Int'l Conf. Architectural Support for Programming Languages and Operating Systems; Jerger, N.E., Peh, L.-S., Lipasti, M., Virtual circuit tree multicasting: A case for hardware multicast support (2008) Proc. Int'l Symp. Computer Architecture, , June; Theobald, K., Gao, G.R., Hendren, L.J., Speculative execution and branch prediction on parallel machines (1993) Int'l Conf. Supercomputing, pp. 77-86; Gordon, M., Thies, W., Karczmarek, M., Lin, J., Meli, A.S., Leger, C., Lamb, A.A., Amarasinghe, S., A stream compiler for communication-exposed architectures (2002) Proc. Int'l Conf. Architectural Support for Programming Languages and Operating Systems; Buck, I., Foley, T., Horn, D., Sugerman, J., Fatahalian, K., Houston, M., Hanrahan, P., Brook for GPUs: Stream computing on graphics hardware (2004) ACM Trans. Graphics, 23, pp. 777-786; (2012) Intel Threading Building Blocks 2.1 for Open Source, , http://threadingbuildingblocks.org; Bienia, C., Kumar, S., Singh, J.P., Li, K., The parsec benchmark suite: Characterization and architectural implications (2008) Proc. 17th Int'l Conf. Parallel Architectures and Compilation Techniques (PACT '08); Lebak, J., Kepner, J., Hoffmann, H., Rutledge, E., Parallel VSIPL++: An open standard software library for high-performance parallel signal processing (2005) Proc. IEEE, 93 (2), pp. 313-330. , Feb; (2011), http://www.videolan.org/x264.html, x264Meyer, U., Sanders, P., Cap delta-Stepping: A Parallel Single Source Shortest Path Algorithm (1998) Lecture Notes In Computer Science, (1461), pp. 393-404","Hoffmann, H.; Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, 32 Vassar Street, Cambridge, MA 02139, United States; email: hank@csail.mit.edu",,,,,,,,10459219,,ITDSE,,English,IEEE Trans Parallel Distrib Syst,Article,Scopus,2-s2.0-84865688943,,
FALSE,4,v,"Noguera, C., De Roover, C., Kellens, A., Jonckers, V.",Code querying by UML,2012,IEEE International Conference on Program Comprehension,,,6240492,229,238,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84865004426&partnerID=40&md5=385854959659c0680fb8b38cf29eb96b,"Software Languages Lab., Vrije Universiteit Brussel, Belgium","Noguera, C., Software Languages Lab., Vrije Universiteit Brussel, Belgium; De Roover, C., Software Languages Lab., Vrije Universiteit Brussel, Belgium; Kellens, A., Software Languages Lab., Vrije Universiteit Brussel, Belgium; Jonckers, V., Software Languages Lab., Vrije Universiteit Brussel, Belgium","The need to identify source code that exhibits particular characteristics is essential to program comprehension. In this paper we introduce Arabica, a tool for querying Java code using UML class and sequence diagrams. Our use of UML diagrams avoids the need for developers to familiarize themselves with yet another language. In contrast to tools that rely on dedicated query languages, Arabica encodes querying semantics in a dedicated, minimal UML profile. Stereotyped class and sequence diagrams, characterizing structural and behavioral properties respectively, are translated into logic program queries. Using examples from the JHotDraw framework, we illustrate the utility of Arabica in validating design invariants, finding design pattern implementations and exploring extension points. We present a pre/post-test quasi experiment as a preliminary assessment of our approach. © 2012 IEEE.",,Behavioral properties; Design Patterns; Java codes; JHotDraw; Logic programs; Preliminary assessment; Program comprehension; Quasi-experiments; Querying semantics; Sequence diagrams; Source codes; UML diagrams; Uml profiles; Query languages; Semantics; Logic programming,,,,,,"Appeltauer, M., Kniesel, G., Towards concrete syntax patterns for logic-based transformation rules Proceedings of the Eighth International Workshop on Rule-Based Programming (RULE07), 2007; Cohen, T., Gil, J.Y., Maman, I., JTL: The Java Tools Language Proceedings of the 21st Annual ACM SIGPLAN Conference on Object Oriented Programming, Systems, Languages, and Applications (OOPSLA06), 2006; Crew, R.F., ASTLOG: A language for examining abstract syntax trees Proceedings of the 1997 USENIX Conference on Domain-Specific Languages (DSL'97), 1997; Cruz, I., DOODLE: A visual language for object-oriented databases (1992) International Conference on Management of Data, pp. 71-80; De Roover, C., A logic meta-programming foundation for example-driven pattern detection in object-oriented programs Proceedings of the 27th IEEE International Conference on Software Maintenance, Post-doctoral Symposium (ICSM11), 2011; De Roover, C., Noguera, C., Kellens, A., Jonckers, V., The soul tool suite for querying programs in symbiosis with eclipse (2011) International Conference on the Principles and Practices of Programming in Java (PPPJ), pp. 71-80; De Volder, K., JQuery: A generic code browser with a declarative configuration language Proceedings of the 8th International Symposium on Practical Aspects of Declarative Languages (PADL06), 2006; Drape, S., De Moor, O., Sittampalam, G., Transforming the.NET intermediate language using path logic programming Proceedings of the 4th ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming (PPDP'02), 2002; Eden, A., (2011) Codecharts: Roadmaps and Blueprints for Object-Oriented Programs, , Wiley; Emden, M.H.V., Kowalski, R.A., The semantics of predicate logic as a programming language (1976) Journal of the ACM (JACM), 23 (4). , October; Engler, D., Chelf, B., Chou, A., Hallem, S., Checking system rules using system-specific, programmer-written compiler extensions Proceedings of the Fourth Symposium on Operating Systems Design and Implementation (OSDI00), 2000; Falconer, H., Kelly, P.H.J., Ingram, D.M., Mellor, M.R., Field, T., Beckmann, O., A declarative framework for analysis and optimization Proceedings of the 16th International Conference on Compiler Construction (CC07), 2007; Guéhéneuc, Y.-G., (2003) Un Cadre Pour la Tracabilite des Motifs de Conception, , PhD thesis, Ecole des Mines de Nantes, June; Hajiyev, E., Verbaere, M., De Moor, O., CodeQuest: Scalable source code queries with Datalog (2006) Lecture Notes in Computer Science, 4067. , Proceedings of the 20th European Conference on Object-Oriented Programming (ECOOP06); Lacey, D., (2003) Program Transformation Using Temporal Logic Specifications, , PhD thesis, University of Oxford, August; Martin, M., Livshits, B., Lam, M., Finding application errors and security flaws using PQL: A program query language Proceedings of the 20th Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages and Applications (OOPSLA05), 2005; Matthijssen, N., Zaidman, A., Storey, M.-A., Bull, I., Van Deursen, A., Connecting traces: Understanding client-server interactions in ajax applications (2010) International Conference on Program Comprehension, pp. 216-225; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery Proceedings of the 22nd International Conference on Software Engineering (ICSE02), 2002; Reiss, S., A visual query language for software visualization (2002) Symposium on Human Centric Computing Languages and Environments, pp. 80-82; Rho, T., Kniesel, G., Appeltauer, M., Fine-grained generic aspects Proceedings of the AOSD Workshop on Foundations of Aspect-Oriented Languages (FOAL06), 2006; Roussopoulos, N., Leifker, D., An introduction to PSQL: A pictorial structured query language (1984) IEEE Workshop on Visual Languages, (77-87); Stein, D., Hanenberg, S., Unland, R., A graphical notation to specify model queries for mda transformations on uml models (2004) Model-Driven Architecture: Foundations and Applications, pp. 60-74; Vallée-Rai, R., Co, P., Gagnon, E., Hendren, L., Lam, P., Sundaresan, V., Soot - A Java bytecode optimization framework Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research (CASCON99), 1999; Verbaere, M., Ettinger, R., De Moor, O., JunGL: A scripting language for refactoring Proceedings of the 28th International Conference on Software Engineering (ICSE06), 2006; Volanschi, N., Condate: A proto-language at the confluence between checking and compiling Proceedings of the 8th ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming (PPDP06), 2006; Wuyts, R., (2001) A Logic Meta-Programming Approach to Support the Co-Evolution of Object-Oriented Design and Implementation, , PhD thesis, Vrije Universiteit Brussel, Belgium, January; Zloof, M., Query by example: A data base language (1977) IBM Systems Journal, 16 (4), pp. 324-343","Noguera, C.; Software Languages Lab., Vrije Universiteit BrusselBelgium; email: cnoguera@vub.ac.be",,IEEE;IEEE Computer Society;Technical Council on Software Engineering (TCSE),,"2012 20th IEEE International Conference on Program Comprehension, ICPC 2012",11 June 2012 through 13 June 2012,Passau,91930,,9781467312165,,,English,IEEE Int. Conf. Program Comprehension,Conference Paper,Scopus,2-s2.0-84865004426,,
FALSE,3,1,"Cho, H., Gray, J., Syriani, E.",Creating visual domain-specific modeling languages from end-user demonstration,2012,"2012 4th International Workshop on Modeling in Software Engineering, MiSE 2012 - Proceedings",,,6226010,22,28,,5,10.1109/MISE.2012.6226010,http://www.scopus.com/inward/record.url?eid=2-s2.0-84864969491&partnerID=40&md5=abd251be242e9f42a9b1711189aca28a,"Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States","Cho, H., Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; Gray, J., Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; Syriani, E., Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States","Domain-Specific Modeling Languages (DSMLs) have received recent interest due to their conciseness and rich expressiveness for modeling a specific domain. However, DSML adoption has several challenges because development of a new DSML requires both domain knowledge and language development expertise (e.g., defining abstract/concrete syntax and specifying semantics). Abstract syntax is generally defined in the form of a metamodel, with semantics associated to the metamodel. Thus, designing a metamodel is a core DSML development activity. Furthermore, DSMLs are often developed incrementally by iterating across complex language development tasks. An iterative and incremental approach is often preferred because the approach encourages end-user involvement to assist with verifying the DSML correctness and feedback on new requirements. However, if there is no tool support, iterative and incremental DSML development can be mundane and error-prone work. To resolve issues related to DSML development, we introduce a new approach to create DSMLs from a set of domain model examples provided by an end-user. The approach focuses on (1) the identification of concrete syntax, (2) inducing abstract syntax in the form of a metamodel, and (3) inferring static semantics from a set of domain model examples. In order to generate a DSML from user-supplied examples, our approach uses graph theory and metamodel design patterns. © 2012 IEEE.",Domain-Specific Modeling Languages; Graph Theory; Metamodel; Metamodel Design Patterns; Metamodel Inference; Semantic Inference,Abstract syntax; Concrete syntax; Design Patterns; Development activity; Domain knowledge; Domain model; Domain-specific modeling language; End users; End-user involvements; Error prones; Incremental approach; Language development; Meta model; Semantic inference; Static semantics; Tool support; Graph theory; Semantics; Software engineering; Specification languages; Syntactics; Visual languages,,,,,,"Bentley, J.L., Jelinski, L.W., Kernighan, B.W., Chem-a program for phototypesetting chemical structure diagrams Computers & Chemistry, 11 (4), pp. 281-297; Blostein, D., Schürr, A., Computing with Graphs and Graph Transformations (1999) Software Practice and Experience, 29 (3), pp. 197-217; Cho, H., Sun, Y., Gray, J., White, J., Key Challenges for Modeling Language Creation by Demonstration ICSE 2011 Workshop on Flexible Modeling Tools, Honolulu HI, May 2011; Cho, H., Gray, J., Design Patterns in Metamodels The 11th Workshop on Domain-Specific Modeling, Portland OR, Oct. 2011; Favre, J.-M., CacOphoNy: Metamodel driven architecture reconstruction (2004) Proceedings of the 11th Working Conference on Reverse Engineering (WCRE2004), pp. 204-213. , IEEE Computer Society, Delft, The Netherlands; Hagenbuchner, M., Sperduti, A., Tsoi, A.C., Graph self-organizing maps for cyclic and unbounded graphs (2009) Neurocomputing, 72 (7-9), pp. 1419-1430. , Mar; De La Higuera, C., A bibliographical study of grammatical inference (2005) Pattern Recognition, 38 (9), pp. 1332-1348. , Sep; Hudak, P., Building domain-specific embedded languages (1996) ACM Comput. Surv., 28 (4 ES). , Dec; Javed, F., Mernik, M., Gray, J., Bryant, B.R., MARS: A metamodel recovery system using grammar inference (2008) Information and Software Technology, 50 (9-10), pp. 948-968. , Aug; Kelly, S., Tolvanen, J.-P., (2008) Domain-Specific Modeling: Enabling Full Code Generation, , Wiley-IEEE Computer Society Press; Mens, T., Gorp, P.V., A Taxonomy of Model Transformation (2006) Electronic Notes in Theoretical Computer Science, 152, pp. 125-142. , Mar; Messmer, B.T., Bunke, H., A decision tree approach to graph and subgraph isomorphism detection (1999) Pattern Recognition, 32 (12), pp. 1979-1998. , Dec; Michalski, R.S., A theory and methodology of inductive learning (1983) Artificial Intelligence, 20 (2), pp. 111-161. , Feb; Rozenberg, G., (1997) Handbook on Graph Grammars and Computing by Graph Transformation: Foundations, 1-2. , World Scientific, Singapore; Qattous, H., Gray, P., Welland, R., An empirical study of specification by example in a software engineering tool Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM '10), Sep. 2010, Bolzano-Bozen, Italy; http://www.isis.vanderbilt.edu/Projects/gme/, GMEhttp://www.metacase.com/","Cho, H.; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; email: hcho7@crimson.ua.edu",,,,"2012 4th International Workshop on Modeling in Software Engineering, MiSE 2012",2 June 2012 through 3 June 2012,Zurich,91839,,9781467317573,,,English,"Int. Workshop Model. Softw. Eng., MiSE - Proc.",Conference Paper,Scopus,2-s2.0-84864969491,,
TRUE,3,3,"Jaafar, F.",On the analysis of evolution of software artefacts and programs,2012,Proceedings - International Conference on Software Engineering,,,6227036,1563,1566,,,10.1109/ICSE.2012.6227036,http://www.scopus.com/inward/record.url?eid=2-s2.0-84864270532&partnerID=40&md5=6c531ce41d15a5fde598850098d99fa4,"Ptidej Team - LBIT Lab., DIRO, University of Montreal, QC, Canada","Jaafar, F., Ptidej Team - LBIT Lab., DIRO, University of Montreal, QC, Canada","The literature describes several approaches to identify the artefacts of programs that evolve together to reveal the (hidden) dependencies among these artefacts and to infer and describe their evolution trends. We propose the use of biological methods to group artefacts, to detect co-evolution among them, and to construct their phylogenic trees to express their evolution trends. First, we introduced the novel concepts of macro co-changes (MCCs), i.e., of artefacts that co-change within a large time interval and of dephase macro co-changes (DMCCs), i.e., macro co-changes that always happen with the same shifts in time. We developped an approach, Macocha, to identify these new patterns of artefacts co-evolution in large programs. Now, we are analysing the evolution of classes playing roles in design patterns and - or antipatterns. In parallel to previous work, we are detecting what classes are in macro co-change or in dephase macro co-change with the design motifs. Results try to show that classes playing roles in design motifs have specifics evolution trends. Finally, we are implementing an approach, Profilo, to achieve the analysis of the evolution of artefacts and versions of large object-oriented programs. Profilo creates a phylogenic tree of different versions of program that describes versions evolution and the relation among versions and programs. We will, also, evaluate the usefulness of our tools using lab and field studies. © 2012 IEEE.",change impact; co-change; phylogenic tree; Software evolution; stability,Anti-patterns; Biological methods; change impact; co-change; Co-evolution; Design motifs; Design Patterns; Evolution trend; Field studies; Large programs; Novel concept; Object-oriented program; Phylogenic trees; Software artefacts; Software Evolution; Time interval; Convergence of numerical methods; Forestry; Macros; Object oriented programming; Software engineering; Two dimensional; Biology; Analysis; Computer Programs; Engineering; Patterns; Programing Languages; Stability,,,,,,"Xing, Z., Stroulia, E., Analyzing the evolutionary history of the logical design of object-oriented software (2005) Transactions on Software Engineering, 31, pp. 850-868; Hammad, M., Collard, M.L., Maletic, J.I., Measuring class importance in the context of design evolution (2010) Proceedings of the IEEE 18th International Conference on Program Comprehension, pp. 148-151. , IEEE Computer Society; Lanza, M., Ducasse, S., (2002) Understanding Software Evolution Using A Combination of Software Visualization and Software Metrics; Kpodjedo, S., Ricca, F., Galinier, P., Antoniol, G., Recovering the evolution stable part using an ecgm algorithm: Is there a tunnel in mozilla? (2009) CSMR, pp. 179-188; Begel, A., Khoo, Y.P., Zimmermann, T., Codebook: Discovering and exploiting relationships in software repositories (2010) ICSE '10, 1, pp. 125-134. , Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - ACM; Kawrykow, D., Robillard, M.P., Non-essential changes in version histories (2011) ICSE '11, pp. 351-360. , Proceeding of the 33rd International Conference on Software Engineering, ser. New York, NY, USA: ACM; Ying, A.T.T., Murphy, G.C., Ng, R., Chu-Carroll, M.C., Predicting source code changes by mining change history (2004) Transactions on Software Engineering, 30 (9), pp. 574-586; Zimmermann, T., Weisgerber, P., Diehl, S., Zeller, A., Mining version histories to guide software changes (2004) Proceedings of the 26th International Conference on Software Engineering, pp. 563-572. , Washington, DC, USA: IEEE Computer Society; Gall, H., Hajek, K., Jazayeri, M., Detection of logical coupling based on product release history (1998) Proceedings of the International Conference on Software Maintenance, pp. 190-. , Washington, DC, USA: IEEE Computer Society; Jaafar, F., Guéhéneuc, Y., Hamel, S., Antoniol, G., An exploratory study of macro co-changes (2011) Reverse Engineering (WCRE), 2011 18th Working Conference on, pp. 325-334. , IEEE; German, D.M., An empirical study of fine-grained software modifications (2006) Empirical Softw. Engg., 11. , September; Barry, E.J., Kemerer, C.F., Slaughter, S.A., On the uniformity of software evolution patterns (2003) ICSE '03, , Proceedings of the 25th International Conference on Software Engineering, ser. IEEE Computer Society; Fraser, C., (2005) Difftree: Inferring Phylogenies for Evolving Software, , Tech. Rep","Jaafar, F.; Ptidej Team - LBIT Lab., DIRO, University of Montreal, QC, Canada; email: jaafarfe@iro.umontreal.ca",,"IEEE Computer Society;ACM;University of Zurich (UZH), Department of Informatics;Technical Council on Software Engineering (TCSE);Special Interest Group on Software Engineering (SIGSOFT);SI-SE",,"34th International Conference on Software Engineering, ICSE 2012",2 June 2012 through 9 June 2012,Zurich,91326,2705257,9781467310673,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-84864270532,,
FALSE,4,3,"Durdik, Z., Reussner, R.",Position paper: Approach for architectural design and modelling with documented design decisions (ADMD3),2012,QoSA'12 - Proceedings of the 8th International ACM SIGSOFT Conference on the Quality of Software Architectures,,,,49,54,,1,10.1145/2304696.2304706,http://www.scopus.com/inward/record.url?eid=2-s2.0-84864037463&partnerID=40&md5=17af18a037ba04905b31a1ab0406d11a,"Software Engineering (SE), Research Center for Information Technology, FZI 76131 Karlsruhe, Germany; Software Design and Quality (SDQ), Karlsruhe Institute of Technology, KIT 76131 Karlsruhe, Germany","Durdik, Z., Software Engineering (SE), Research Center for Information Technology, FZI 76131 Karlsruhe, Germany; Reussner, R., Software Design and Quality (SDQ), Karlsruhe Institute of Technology, KIT 76131 Karlsruhe, Germany","Documented design decisions simplify the evolution of software systems. However, currently design decisions are often either badly documented or are not documented at all. Relations between requirements, decisions, and architectural elements are missing, and architecture alternatives are not preserved. As a consequence it is hard to identify deprecated design solutions when requirements change In this position paper, we present an approach to document software architecture design decisions, together with related requirements and related architectural elements, through the goal-driven elicitation of those requirements needed to make a design decision. Therefore, we propose a process model and supporting meta-models, including a meta-model for a pattern catalogue. The speciality of this pattern catalogue is the inclusion of questions to drive requirements engineering to validate pattern selections, and to guide choosing the most appropriate pattern variant. The paper concludes with a discussion on the assumptions of the approach and possible approaches to empirical validation. Copyright © 2012 ACM.",Architectural modelling; Component selection; Design patterns; Development process; Software architecture,Architectural element; Component selection; Design decisions; Design Patterns; Design solutions; Development process; Empirical validation; Meta model; Pattern selection; Position papers; Process model; Requirements change; Software architecture design; Software systems; Architectural design; Software architecture,,,,,,"Albin-Amiot, H., Gueheneuc, Y.-G., Kastler, R.A., Meta-modeling design patterns: Application to pattern detection and code synthesis (2001) Proc. 1st ECOOP W. Automating Object-or. SW Dev. Methods, pp. 01-35; Babar, M.A., Tang, A., Gorton, I., Han, J., Industrial perspective on the usefulness of design rationale for software maintenance: A survey (2006) Proceedings - International Conference on Quality Software, pp. 201-208. , DOI 10.1109/QSIC.2006.35, 4032286, Proceedings - Sixth International Conference on Quality Software, QSIC 2006; Becker, S., Koziolek, H., Reussner, R., The palladio component model for model-driven performance prediction (2009) Journal of Sys. and Soft., 82, pp. 3-22; Capilla, R., Nava, F., Pérez, S., Duenãs, J.C., A web-based tool for managing architectural design decisions SIGSOFT Softw. Eng. Notes, 31, p. 2006; De Boer, R.C., Van Vliet, H., On the similarity between requirements and architecture J. Sys. Soft., 82, p. 2009; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) IEEE Transactions on Software Engineering, 33 (7), pp. 433-453. , DOI 10.1109/TSE.2007.1012; Durdik, Z., Towards a process for architectural modelling in agile methods (2011) 7th Int. Conf. on the Quality of Software Architectures (QoSA'11); Durdik, Z., Krogmann, K., Schad, F., Towards a generic approach for meta-model- and domainindependent model variability (2012) Karlsruhe Rep. in Inf. 2012, 5. , ISSN: 2190-4782, Karlsruhe, Germany; Elaasar, M., Briand, L.C., Labiche, Y., A metamodeling approach to pattern specification (2006) Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), 4199, pp. 484-498. , Model Driven Engineering Languages and Systems - 9th International Conference, MoDELS 2006, Proceedings; Ferrari, R., Sudmann, O., Henke, C., Geisler, J., Schafer, W., Madhavji, N.H., Requirements and systems architecture interaction in a prototypical project: Emerging results (2010) 16th Int. W. Conf. on Req. Eng.: Foundation for SW Quality, 6182 (2010), pp. 23-29; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design patterns (1995) Elements of Reusable Object-oriented Software, (1). , Addison-Wesley Longman, Amsterdam; Garbe, H., Janssen, C., Moebus, C., Seebold, H., De Vries, H., KARaCAs: Knowledge acquisition with repertory grids and formal concept analysis for dialog system construction (2006) Managing Knowledge in a World of Networks, , Springer; Goknil, A., Kurtev, I., Berg, K., A metamodeling approach for reasoning about requirements (2008) 4th Eu. Conf. on Model Driven Arch.: Foundations and Applications, ECMDA-FA '08, pp. 310-325; Henninger, S., Ashokkumar, P., An ontology-based metamodel for software patterns (2006) 18th Int. Conf. on SW Eng. and Knowl. Eng. (Seke2006); Krutchen, P., An ontology of architectural design decisions in software intensive systems (2004) 2nd Groningen W. Software Variability, pp. 54-61; Lee, L., Kruchten, P., Customizing the capture of software architectural design decisions (2008) Canadian Conf. on Electrical and Computer Engineering; Miller, J., Ferrari, R., Madhavji, N., Architectural effects on requirements decisions: An exploratory study (2008) Seventh Working IEEE/IFIP Conf. on Software Architecture, 2008, pp. 231-240; Nuseibeh, B., Weaving together requirements and architectures (2001) Computer, 34 (3), pp. 115-119; Pavlic, L., Hericko, M., Podgorelec, V., Improving design pattern adoption with ontology-based design pattern repository (2008) 30th Int. Conf. on Inf. Tech. Interfaces (ITI 2008); Prechelt, L., Unger, B., Philippsen, M., Tichy, W., Two controlled experiments assessing the usefulness of design pattern information during program maintenance IEEE Trans. on SW Eng., 28, p. 1998; Schwaber, K., Beedle, M., (2008) Agile Software Development with Scrum, , Pearson Studium; Tang, A., Babar, M.A., Gorton, I., Han, J., A survey of architecture design rationale J. Syst. Softw., 79, p. 2006; Tang, A., Jin, Y., Han, J., A rationale-based architecture model for design traceability and reasoning (2007) Journal of Systems and Software, 80 (6), pp. 918-934. , DOI 10.1016/j.jss.2006.08.040, PII S0164121206002287; Vicente-Chicote, C., Moros, B., Álvarez, J.A.T., Remm-studio: An integrated model-driven environment for requirements specification, validation and formatting (2007) J. of Object Techn., 6 (9); Wang, W., Burge, J.E., Using rationale to support pattern-based architectural design (2010) ICSE W. on Sharing and Reusing Arch. Knowledge; Zdun, U., Systematic pattern selection using pattern language grammars and design space analysis (2007) Software - Practice and Experience, 37 (9), pp. 983-1016. , DOI 10.1002/spe.799; Zhu, L., Babar, M.A., Jeffery, R., Mining patterns to support software architecture evaluation (2004) 4th Working IEEE/IFIP Conf. on SW Arch., WICSA 2004, pp. 25-34; Zimmermann, O., Architectural decisions as reusable design assets (2010) Software, IEEE, 28 (1), pp. 64-69","Durdik, Z.; Software Engineering (SE), Research Center for Information Technology, FZI 76131 Karlsruhe, Germany; email: durdik@fzi.de",,Special Interest Group on Software Engineering (ACM SIGSOFT),,"8th International ACM SIGSOFT Conference on the Quality of Software Architectures, QoSA'12",25 June 2012 through 28 June 2012,Bertinoro,91293,,9781450313469,,,English,QoSA - Proc. Int. ACM SIGSOFT Conf. Qual. Softw. Archit.,Conference Paper,Scopus,2-s2.0-84864037463,,
FALSE,4,3,"Syriani, E., Gray, J.",Challenges for addressing quality factors in model transformation,2012,"Proceedings - IEEE 5th International Conference on Software Testing, Verification and Validation, ICST 2012",,,6200115,929,937,,5,10.1109/ICST.2012.198,http://www.scopus.com/inward/record.url?eid=2-s2.0-84862305035&partnerID=40&md5=53851b954cdc1061a2ce66e4992d752f,"Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States","Syriani, E., Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; Gray, J., Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States","Designing a high quality model transformation is critical, because it is the pivotal mechanism in many mission applications for evolving the intellectual design described by models. This paper proposes solution ideas to assist modelers in developing high quality transformation models. We propose to initiate a design pattern movement in the context of model transformation. The resulting catalog of patterns shall satisfy quality attributes identified beforehand. Verification and validation of these patterns allow us to assess whether the cataloged design patterns are sound and complete with respect to the quality criteria. This will lead to techniques and tools that can detect bad designs and propose alternatives based on well-thought design patterns during the development or maintenance of model transformation. © 2012 IEEE.",design patterns; model transformation; software quality; validation and verification,Design Patterns; High quality; Model transformation; Quality attributes; Quality criteria; Quality factors; Software Quality; Transformation model; Validation and verification; Verification and validation; Computer software selection and evaluation; Software testing,,,,,,"Czarnecki, K., Helsen, S., Feature-based survey of model transformation approaches (2006) IBM Systems Journal, 45 (3), pp. 621-645. , http://www.research.ibm.com/journal/sj/453/czarnecki.pdf; Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S., Empirical assessment of MDE in industry (2011) ICSE, pp. 471-480. , Waikiki HI: ACM, May; Guerra, E., De Lara, J., Kolovos, D., Paige, R., Dos Santos, O., Engineering model transformations with transML (2011) Software and Systems Modeling, pp. 1-23. , vol. in press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley Professional, November; (2012) ATL Transformation Zoo, , http://www.eclipse.org/m2m/atl/atlTransformations/; France, R., Bieman, J., Cheng, B.H., Repository for Model-Driven Development (ReMoDD) (2007) LNCS, 4364, pp. 311-317. , www.cs.colostate.edu/remodd/, Models in Software Engineering, ser. Springer, Online. Available; Bézivin, J., Rumpe, B., Tratt, L., (2005) Model Transformation in Practice Workshop Announcement; Agrawal, A., Reusable Idioms and Patterns in Graph Transformation Languages (2005) ENTCS, 127, pp. 181-192. , Workshop on Graph-Based Tools, ser. Elsevier; (2008) Meta Object Facility 2.0 Query/View/Transformation Specification, , Object Management Group, April; Iacob, M.-E., Steen, M.W.A., Heerink, L., Reusable Model Transformation Patterns (2008) EDOC Workshops, pp. 1-10. , Munich: IEEE Computer Society, Setpember; Syriani, E., Vangheluwe, H., De-/Re-constructing Model Transformation Languages (2010) ECEASST, 29. , March; Agerbo, E., Cornils, A., How to preserve the benefits of Design Patterns (1998) ACM SIGPLAN Notices, pp. 134-143. , OOPSLA, ser. Vancouver: ACM, October; Mens, T., Van Gorp, P., A Taxonomy of Model Transformation (2006) ENTCS, 152, pp. 125-142. , International Workshop on Graph and Model Transformation, ser; Von Pilgrim, J., Vanhooff, B., Schulz Gerlach, I., Berbers, Y., Constructing and Visualizing Transformation Chains (2008) LNCS, 5095, pp. 17-32. , ECMDA-FA, ser. Springer; Tisi, M., Jouault, F., Fraternali, P., Ceri, S., Bézivin, J., On the Use of Higher-Order Model Transformations (2009) LNCS, 5562, pp. 18-33. , ECMDA-FA, ser. Enschede: Springer-Verlag, June; Kühne, T., Mezei, G., Syriani, E., Vangheluwe, H., Wimmer, M., Explicit Transformation Modeling (2010) LNCS, 6002, pp. 240-255. , MODELS Workshops, ser. Springer; Levendovszky, T., Karsai, G., An Active Pattern Infrastructure for Domain-Specific Languages (2010) ECEASST, 25; Quality Attribute Scenarios Catalog, , http://www.firebrandarchitect.com/quality-attribute-scenarios.html, Firebrand Architect; Jouault, F., Allilaire, F., Bézivin, J., Kurtev, I., ATL: A model transformation tool (2008) Science of Computer Programming, 72 (1-2), pp. 31-39. , June; Syriani, E., Vangheluwe, H., A Modular Timed Model Transformation Language (2011) Journal on Software and Systems Modeling, 11, pp. 1-28. , June; Varró, D., Balogh, A., The model transformation language of the VIATRA2 framework (2007) Science of Computer Programming, 68 (3), pp. 214-234; Van Gorp, P., Schippers, H., Janssens, D., Copying Subgraphs Within Model Repositories (2008) ENTCS, 211, pp. 133-145. , GT-VMT, ser; Varró, G., Schürr, A., Varró, D., Benchmarking for Graph Transformation (2005) IEEE Symposium on VLHCC, pp. 79-88. , Dallas: IEEE Press, September; Zündorf, A., (2008) The AntWorld Simulation Tool Case, , www.se.eecs.uni-kassel.de/~fujabawiki/index.php/AntWorld, May; Syriani, E., Kienzle, J., Vangheluwe, H., Exceptional Transformations (2010) LNCS, 6142, pp. 199-214. , ICMT, ser. Springer, July; Cicchetti, A., Di Ruscio, D., Eramo, R., Pierantonio, A., (2008) Automating Co-evolution in Model-driven Engineering, pp. 222-231. , EDOC. IEEE Computer Society; Sarkar, M.S., Blostein, D., Cordy, J.R., GXL - A Graph Transformation Language with Scoping and Graph Parameters (1998) Workshop on Theory and Application of Graph Transformations, , Springer; Heidenreich, F., Kopcsek, J., Assmann, U., Safe Composition of Transformation (2010) LNCS, 6142, pp. 108-122. , ICMT, ser. Springer, July; Asztalos, M., Syriani, E., Wimmer, M., Kessentini, M., Towards Rule Composition (2010) ECEASST, 42. , October; Mohagheghi, P., Dehlen, V., Developing a Quality Framework for Model-Driven Engineering (2008) LNCS, 5002, pp. 275-286. , MoDELS Workshops, ser. Springer; Van Amstel, M., Lange, C., Van Den Brand, M., Metrics for Analyzing the Quality of Model Transformations Workshop on Quantitative Approaches on Object Oriented Software Engineering, Paphos, July 2008; Rensink, A., The GROOVE Simulator: A Tool for State Space Generation (2004) LNCS, 3062, pp. 479-485. , AGTIVE, ser. Springer; Schmidt, Á., Varró, D., CheckVML: A Tool for Model Checking Visual Modeling Languages (2003) LNCS, 2863, pp. 92-95. , UML Conference series, ser. Springer; Holzmann, G.J., The model checker SPIN (1997) IEEE Transactions on Software Engineering, 23 (5), pp. 279-295. , May; Hostettler, S.P., Marechal Marin, A.A., Linard, A., Risoldi, M., Buchs, D., High-Level Petri Net Model Checking with AlPiNA (2011) Fundamenta Informaticae, 113 (3-4), pp. 229-264. , February; Jackson, D., (2006) Software Abstractions: Logic, Language, and Analysis, , The MIT Press; Mens, T., Taentzer, G., Runge, O., Detecting Structural Refactoring Conflicts Using Critical Pair Analysis (2005) ENTCS, 127, pp. 113-128. , Software Evolution through Transformations: Model-based vs. Implementation-level Solutions, ser. Elsevier; Hegedüs, Á., Horváth, Á., Ráth, I., Varró, D., A Model-driven Framework for Guided Design Space Exploration (2011) Automated Software Engineering. IEEE Computer; Rech, J., Bunse, C., (2009) Model-Driven Software Development: Integrating Quality Assurance, , IGI Global, December; Cetinkaya, D., Verbraeck, A., Metamodeling and Model Transformations in Modeling and Simulation Winter Simulation Conference, Phoenix AZ, December 2011; Narayanan, A., Karsai, G., Towards Verifying Model Transformations (2008) Electronic Notes in Theoretical Computuer Science, 211, pp. 191-200. , April; Varró, D., Varró Gyapay, S., Ehrig, H., Prange, U., Taentzer, G., Termination Analysis of Model Transformations by Petri Nets (2006) LNCS, 4178, pp. 260-274. , Graph Transformations, ser. Springer; Asztalos, M., Madari, I., Lengyel, L., Towards Formal Analysis of Multi-paradigm Model Transformations (2010) Simulation, 86 (7), pp. 429-452. , July; Meyers, B., Vangheluwe, H., A Framework for Evolution of Modelling Languages (2011) Science of Computer Programming, 76 (12), pp. 1223-1246; Antoniol, G., Fiutem, R., Cristoforetti, L., Design Pattern Recovery in Object-Oriented Software Proc. of the Int'l Wksp. on Program Comprehension, 1998; De Lara, J., Vangheluwe, H., AToM 3: A Tool for Multi-formalism and Meta-Modellingin Fundamental Approaches to Software Engineering (2002) LNCS, 2306, pp. 174-188. , ser. Springer; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley; Kessentini, M., Sahraoui, H., Boukadoum, M., Wimmer, M., Search-Based Design Defects Detection by Example (2011) LNCS, 6603, pp. 401-415. , Fundamental Approaches to Software Engineering, ser. Springer; Shull, F., Carver, J.C., Travassos, G., An Empirical Methodology for Introducing Software Processes Symposium on the Foundations of Software Engineering, 2001, pp. 288-296; Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Software and Systems Modeling, 4 (1), pp. 55-70. , DOI 10.1007/s10270-004-0059-9; Gueheneuc, Y., Guyomarc'H, J., Sahraoui, H., Improving design pattern identification: A new approach and an exploratory study (2010) Software Quality Journal, 18 (1), pp. 145-174; Eden, A.H., Yehudai, A., Gil, J., Precise specification and automatic application of design patterns (1997) Automated Software Engineering, pp. 143-152. , Lake Tahoe: IEEE Computer Society, November; Dong, J., Zhao, Y., Sun, Y., Design Pattern Evolutions in QVT (2010) Software Quality Journal, 18 (2), pp. 269-297. , June; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection Using Similarity Scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 869-909. , November; Sen, S., Baudry, B., Vandheluwe, H., Towards Domain-specific Model Editors with Automatic Model Completion (2010) Simulation, 86 (2), pp. 109-126; Mazanek, S., Minas, M., Business Process Models as a Showcase for Syntax-Based Assistance in Diagram Editors (2009) LNCS, 5795, pp. 322-336. , MODELS, ser. Springer; Sun, Y., White, J., Gray, J., Model Transformation by Demonstration (2009) LNCS, 5795, pp. 712-726. , Model Driven Engineering Languages and Systems, ser. A. Schürr and B. Selic, Eds., Denver: Springer, October","Syriani, E.; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States; email: esyriani@cs.ua.edu",,,,"5th IEEE International Conference on Software Testing, Verification and Validation, ICST 2012",17 April 2012 through 21 April 2012,"Montreal, QC",90301,,9780769546704,,,English,"Proc. - IEEE Int. Conf. Softw. Test., Verif. Validation, ICST",Conference Paper,Scopus,2-s2.0-84862305035,,
TRUE,1,1,"Detweiler, C., Hindriks, K.",Value-sensitive design patterns for pervasive health care,2012,"2012 IEEE International Conference on Pervasive Computing and Communications Workshops, PERCOM Workshops 2012",,,6197643,908,913,,2,10.1109/PerComW.2012.6197643,http://www.scopus.com/inward/record.url?eid=2-s2.0-84861533871&partnerID=40&md5=25864cc4902dd588b73a4e70a8f26eac,"Almende B.V., Rotterdam, Netherlands; Interactive Intelligence Group, Delft University of Technology, Delft, Netherlands","Detweiler, C., Almende B.V., Rotterdam, Netherlands; Hindriks, K., Interactive Intelligence Group, Delft University of Technology, Delft, Netherlands","Pervasive computing technologies offer solutions to many of the problems people face in aging. In doing so, they have the potential to support certain values such as human welfare. However, these solutions also have the potential to diminish human values such as trust, privacy and autonomy. Many of such value issues are recurrent, general problems that play out in specific application contexts. By accounting for values during the design of technology, designers would be in a better position to create technology that supports rather than hinders the values of its stakeholders. Yet, there are few methodical approaches to dealing with values in design. Moreover, knowledge on how specific value problems can be tackled is not captured systematically in a reusable way. We propose using Value Sensitive Design to analyze recurrent problems and identify affected stakeholders and their values. We use these analyses as a starting point for generating design patterns, or reusable solutions to recurrent problems, that explicitly include value considerations. We provide an initial set of value-sensitive design patterns as a proof-of-concept. © 2012 IEEE.",design for values; design patterns; ethical issues; pervasive healthcare; value-sensitive design,Application contexts; Design Patterns; Ethical issues; Human values; Human welfare; Methodical approach; Pervasive computing technology; Pervasive healthcare; Proof of concept; Specific values; Value sensitive design; Computer software reusability; Health care; Ubiquitous computing; Design,,,,,,"Bern-Klug, M., Forbes-Thompson, S., Family Members' Responsibilities to Nursing Home Residents: ""She is the only mother I got"" (2008) Journal of Gerontological Nursing, 34 (2), pp. 43-52; Boos, D., Grote, G., Lehtonen, M., Investigating Accountability Relations with Narrative Networks European Conference on Cognitive Ergonomics: Designing Beyond the Product - Understanding Activity and User Experience in Ubiquitous Environments, 2009, pp. 1-5; Borchers, J.O., A Pattern Approach to Interaction Design (2001) AI and Society, 15, pp. 359-376; Consolvo, S., Roessler, P., Shelton, B., The CareNet Display: Lessons learned from an in home evaluation of an ambient display UbiComp 2004: Ubiquitous Computing, 2004, pp. 1-17; Consolvo, S., Roessler, P., Shelton, B.E., LaMarca, A., Schilit, B., Bly, S., Technology for care networks of elders (2004) Pervasive Computing, 3, pp. 22-29; Davies, S., Nolan, M., Making it better: Self-perceived roles of family caregivers of older people living in care homes: A qualitative study (2006) International Journal of Nursing Studies, 43, pp. 281-291; Dearden, A., Finlay, J., Pattern Languages in HCI: A critical review (2006) Human-Computer Interaction, 21, pp. 49-102; Friedman, B., Kahn, P., Borning, A., (2002) Value Sensitive Design: Theory and Methods, , University of Washington Technical Report; Friedman, B., Kahn Jr., P.H., Human values, ethics, and design (2003) The Humancomputer Interaction Handbook, pp. 1177-1201. , J. A. Jacko and A. Sears (Eds.), Mahwah, NJ: Lawrence Erlbaum Associates; Friedman, B., Kahn, P., Borning, A., (2006) Value Sensitive Design and Information Systems, pp. 348-372. , Human-Computer Interaction and Management Information Systems: Foundations. ME Sharpe, New York; Gamma, H., Johnson, V., (1995) Design Patterns Elements of Reusable Object-Oriented Software, , Addison Wesley; Hawthorne, G., Measuring social isolation in older adults: Development and initial validation of the Friendship Scale (2006) Social Indicators Research, 77, pp. 521-548; Kang, H.G., Mahoney, D.F., Hoenig, H., Hirth, V.A., Bonato, P., Hajjar, I., Lipsitz, L.A., In Situ Monitoring of Health in Older Adults: Technologies and Issues (2010) Journal of the American Geriatrics Society, 58, pp. 1579-1586; Miller, J., Friedman, B., Jancke, G., Value tensions in design: The value sensitive design, development, and appropriation of a corporations groupware system Proceedings of the 2007 International ACM Conference on Supporting Group Work, 2007, pp. 281-290; Mynatt, E.D., Rowan, J., Craighill, S., Jacobs, A., Digital family portraits: Supporting peace of mind for extended family members Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, 2001, pp. 333-340; Pruitt, J., Grudin, J., Personas: Practice and theory (2003) Proceedings of DUX, , ACM Press; Romero, N., Sturm, J., Bekker, M., De Valk, L., Kruitwagen, S., Playful persuasion to support older adults social and physical activities (2010) Interacting with Computers, 22, pp. 485-495; Rowan Jr., J.T., (2005) Digital Family Portraits: Support for Aging in Place, , PhD Thesis; Rowan, J., Mynatt, E.D., Digital family portrait field trial: Support for aging in place Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, 2005, pp. 521-530; Sengers, P., Boehner, K., David, S., Kaye, J.J., Reflective Design Proceedings of the 4th Decennial Conference on Critical Computing: between Sense and Sensibility, 2005, pp. 49-58","Detweiler, C.; Almende B.V., Rotterdam, Netherlands; email: c.a.detweiler@tudelft.nl",,,,"2012 IEEE International Conference on Pervasive Computing and Communications Workshops, PERCOM Workshops 2012",19 March 2012 through 23 March 2012,Lugano,89907,,9781467309073,,,English,"IEEE Int. Conf. Pervasive Comput. Commun. Workshops, PERCOM Workshops",Conference Paper,Scopus,2-s2.0-84861533871,,
FALSE,3,1,"Furche, T., Gottlob, G., Grasso, G., Guo, X., Orsi, G., Schallhart, C.",OPAL: Automated form understanding for the deep web,2012,WWW'12 - Proceedings of the 21st Annual Conference on World Wide Web,,,,829,838,,9,10.1145/2187836.2187948,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860872211&partnerID=40&md5=eeef62e7465f9c44ce52b0494f67ed33,"Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom","Furche, T., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; Gottlob, G., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; Grasso, G., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; Guo, X., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; Orsi, G., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; Schallhart, C., Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom","Forms are our gates to the web. They enable us to access the deep content of web sites. Automatic form understanding unlocks this content for applications ranging from crawlers to meta-search engines and is essential for improving usability and accessibility of the web. Form understanding has received surprisingly little attention other than as component in specific applications such as crawlers. No comprehensive approach to form understanding exists and previous works disagree even in the definition of the problem. In this paper, we present OPAL, the first comprehensive approach to form understanding. We identify form labeling and form interpretation as the two main tasks involved in form understanding. On both problems OPAL pushes the state of the art: For form labeling, it combines signals from the text, structure, and visual rendering of a web page, yielding robust characterisations of common design patterns. In extensive experiments on the ICQ and TEL-8 benchmarks and a set of 200 modern web forms OPAL outperforms previous approaches by a significant margin. For form interpretation, we introduce a template language to describe frequent form patterns. These two parts of OPAL combined yield form understanding with near perfect accuracy (> 98%).",Deep web; Form understanding; Web interfaces,Deep web; Design Patterns; Form understanding; Main tasks; Meta search engines; State of the art; Web forms; Web interface; Search engines; Websites,,,,,,"Bar-Yossef, Z., Gurevich, M., Random sampling from a search engine's index (2008) J. ACM, 55 (5); Barbosa, L., Freire, J., Combining classifiers to identify online databases (2007) WWW; Benedikt, M., Koch, C., XPath leashed (2007) CSUR; Bilke, A., Naumann, F., Schema matching using duplicates (2005) ICDE; Cafarella, M.J., Chang, E.Y., Fikes, A., Halevy, A.Y., Hsieh, W.C., Lerner, A., Madhavan, J., Muthukrishnan, S., Data management projects at google (2008) SIGMOD Rec, 37 (1); Dragut, E.C., Kabisch, T., Yu, C., Leser, U., A hierarchical approach to model web query interfaces for web source integration (2009) VLDB; Kalijuvee, O., Buyukkokten, O., Garcia-Molina, H., Paepcke, A., Efficient web form entry on PDAs (2001) WWW; Khare, R., An, Y., An empirical study on using hidden markov model for search interface segmentation (2009) CIKM; Khare, R., An, Y., Song, I.-Y., Understanding deep web search interfaces: A survey (2010) SIGMOD Rec, 39 (1); Madhavan, J., Ko, D., Kot, L., Ganapathy, V., Rasmussen, A., Halevy, A., Google's deep web crawl (2008) VLDB; Maiti, A., Dasgupta, A., Zhang, N., Das, G., HDSampler: Revealing data behind web form interfaces (2009) SIGMOD; Navarrete, I., Sciavicco, G., Spatial reasoning with rectangular cardinal direction relations (2006) ECAI; Nguyen, H., Nguyen, T., Freire, J., Learning to extract from labels (2008) VLDB; Raghavan, S., Garcia-Molina, H., Crawling the hidden web (2001) VLDB; Wu, W., Doan, A., Yu, C., Meng, W., Modeling and extracting deep-web query interfaces (2009) Adv. in Inf. & Intelligent S; Chang, K., Zhang, Z., He, B., Understanding web query interfaces: Best-effort parsing with hidden syntax (2004) SIGMOD; Furche, T., Gottlob, G., Grasso, G., Guo, X., Orsi, G., Schallhart, C., Real understanding of real estate forms (2011) WIMS'11","Furche, T.; Department of Computer Science, Wolfson Building, Oxford University, Parks Road, Oxford OX1 3QD, United Kingdom; email: Tim.Furche@cs.ox.ac.uk",,ACM SIGWEB;3DS EXALEAD;Microsoft Research;YAHOO;Google,,"21st Annual Conference on World Wide Web, WWW'12",16 April 2012 through 20 April 2012,Lyon,89729,,9781450312295,,,English,WWW - Proc. Annu. Conf. World Wide Web,Conference Paper,Scopus,2-s2.0-84860872211,,
TRUE,1,1,"Barchetti, U., Capodieci, A., Guido, A.L., Mainetti, L.",Collaborative process management for the networked enterprise: A case study,2012,"Proceedings - 26th IEEE International Conference on Advanced Information Networking and Applications Workshops, WAINA 2012",,,6185351,1343,1348,,3,10.1109/WAINA.2012.57,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860725429&partnerID=40&md5=0256c29e41ff0621564fc37a54d2bb97,"Department of Innovation Engineering, University of Salento, Lecce, Italy","Barchetti, U., Department of Innovation Engineering, University of Salento, Lecce, Italy; Capodieci, A., Department of Innovation Engineering, University of Salento, Lecce, Italy; Guido, A.L., Department of Innovation Engineering, University of Salento, Lecce, Italy; Mainetti, L., Department of Innovation Engineering, University of Salento, Lecce, Italy","The ability to quickly identify and rapidly apply effective business practices makes the difference between companies that manage to remain competitive even in crisis situations and companies that suffer from short-term market changes. To seize the opportunity to adapt their business practices according to emerging organizational forms (Extended Enterprise, Virtual Enterprise) and to improve the workspace of knowledge workers who are central to an organization's success, however, companies are required to face several challenges. This paper presents a case study to support the activities of knowledge workers, increasing their productivity and their ability to find the information they need, and enabling collaboration with colleagues without changing their habits. The paper presents a set of design patterns useful in resolving emerging organizational issues. Also it briefly describes a software prototype that enables companies to introduce the business patterns in the networked workplace, integrating existing information management tools in an overall Enterprise 2.0 environment. © 2012 IEEE.",Business practices; business process patterns; collaboration; coordination; Enterprise 2.0,Business practices; Business Process; collaboration; Collaborative process; coordination; Design Patterns; Extended enterprise; Knowledge workers; Market changes; Organizational forms; Organizational issues; Software prototypes; Virtual enterprise; Software prototyping; Virtual corporation; Knowledge management,,,,,,"Sarkis, J., Nehman, G., Priest, J., A systemic evaluation model for environmentally conscious business practices and strategy (1996) Electronics and the Environment. Proc. of ISEE, pp. 281-286; Davenport, T.H., (2005) Thinking for A Living: How to Get Better Performances and Results from Knowledge Workers, , Harvard Business Press; Simperl, E., Thurlow, I., Warren, P., Dengler, F., Davies, J., Grobelnik, M., Mladenic, D., Ruiz Moreno, C., Overcoming information overload in the enterprise: The active approach (2010) IEEE Internet Computing, 14, pp. 39-46; Maule, R., Gallup, S., Enterprise 2.0 collaboration for collective knowledge and intelligence applications (2010) Innovations and Advances in Computer Sciences and Engineering, , Springer; Jung, J.J., Boosting social collaborations based on contextual synchronization: An empirical study (2011) Expert Syst. Appl., 38 (5), pp. 4809-4815. , May; Wu, H., Ying, J., How can process help CSCW? (2004) Proceedings of the 8th IEEE International Conference on Computer Supported Cooperative Work in Design, , Xiamen, China; Meihua, Z., Aiping, L., Liyun, X., Integrated modeling and information interaction mechanism of collaborative production information (2008) Proceedings of the IEEE International Conference on Information Management, Innovation Management and Industrial Engineering, , Taipei, Taiwan; Indulska, M., Chong, S., Bandara, W., Sadiq, S., Rosemann, M., Major issues in business process management: An australian perspective (2006) Proceedings of the 17th Australian Conference on Information Systems, ACIS 2006, pp. 2-11. , Australasian Association for Information Systems; Drucker, P.F., (1959) Landmarks of Tomorrow, , Harper, New York; Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison Wesley, Reading, MA, US; (2010) Workflow Patterns Initiative, , http://workflowpatterns.com/; Ambler, S., Reuse patterns and antipatterns (2000) Software Development Magazine; Russel, N., Ter Hofstede, A.H.M., Van Der Aalst, W.M.P., Mulyar, N., (2006) Workflow Control-Flow Patterns; Reza, H., Nezhad, M., Graupner, S., Bartolini, C., Framework for modeling and enabling reuse of best practice IT (2010) The 1st International Workshop on Reuse in Business Process Management (rBPM'10), , USA; Andriole, S.J., Business impact of Web 2.0 technologies (2010) Commun. ACM, 53 (12), pp. 67-79; Dollmann, T., Fettke, P., Loos, P., Vanderhaeghen, D., Web 2.0 Enhanced automation of collaborative business process model management in cooperation environments (2009) ACIS 2009 Proceedings, pp. 653-663. , Melbourne, Australia; Keith, H.-B., (2005) Human Interactions the Hearth and Soul of Business Process Management, , ISBN 0-929652-44-4; Smirnov, S., Weidlich, M., Mendling, J., Weske, M., Object-sensitive action patterns in process model repositories (2010) BPM Workshop Proceedings (RBPM 2010), , Hoboken NJ USA; Gschwind, T., Koehler, J., Wong, J., Applying patterns during business process modeling (2008) Proceedings of the 6th International Conference on Business Process Management, , Milan Italy; Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison Wesley, Reading, Massachusetts, U.S; Mitra, A., Gupta, A., Agile systems with reusable patterns of business knowledge (2006) A Component-Based Approach, p. 381. , Artech House; Barchetti, U., Capodieci, A., Guido, A., Mainetti, L., Modelling collaboration processes through design patterns (2011) Computing and Informatics, 30, pp. 113-135; Activiti BPM Platform, , http://www.activiti.org/","Barchetti, U.; Department of Innovation Engineering, University of Salento, Lecce, Italy; email: ugo.barchetti@unisalento.it",,IEEE Comput. Soc. Tech. Comm. Distrib. Process.,,"26th IEEE International Conference on Advanced Information Networking and Applications Workshops, WAINA 2012",26 March 2012 through 29 March 2012,Fukuoka,89680,,9780769546520,,,English,"Proc. - IEEE Int. Conf. Adv. Inf. Networking Appl. Workshops, WAINA",Conference Paper,Scopus,2-s2.0-84860725429,,
FALSE,4,1,"Javed, W., Elmqvist, N.",Exploring the design space of composite visualization,2012,"IEEE Pacific Visualization Symposium 2012, PacificVis 2012 - Proceedings",,,6183556,1,8,,16,10.1109/PacificVis.2012.6183556,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860666663&partnerID=40&md5=480333c2708e22e29b9f63c7f05c3ef9,"Purdue University, United States","Javed, W., Purdue University, United States; Elmqvist, N., Purdue University, United States",We propose the notion of composite visualization views (CVVs) as a theoretical model that unifies the existing coordinated multiple views (CMV) paradigm with other strategies for combining visual representations in the same geometrical space. We identify five such strategiescalled CVV design patternsbased on an extensive review of the literature in composite visualization. We go on to show how these design patterns can all be expressed in terms of a design space describing the correlation between two visualizations in terms of spatial mapping as well as the data relationships between items in the visualizations. We also discuss how to use this design space to suggest potential directions for future research. © 2012 IEEE.,,Data relationships; Design Patterns; Design spaces; Geometrical space; Multiple views; Spatial mapping; Theoretical models; Visual representations; Design; Visualization,,,,,,"Ahlberg, C., Shneiderman, B., Visual information seeking: Tight coupling of dynamic query filters with starfield displays (1994) Proceed-ings of the ACM Conference on Human Factors in Computing Systems, pp. 313-317; Alexander, C., Ishakawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press New York; Andrienko, G., Andrienko, N.V., Making a GIS intelligent: Common GIS project view (1999) AISB Quarterly, pp. 15-17; Baldonado, M.Q.W., Woodruff, A., Kuchinsky, A., Guidelines for using multiple views in information visualization (2000) Proceedings of the ACM Conference on Advanced Visual Interfaces, pp. 110-119; Becker, R.A., Cleveland, W.S., Brushing scatterplots (1987) Technometrics, 29 (2), pp. 127-142; Bederson, B.B., Hollan, J.D., Pad++: A zooming graphical interface for exploring alternate interface physics (1994) Proceedings of the ACM Symposium on User Interface Software and Technology, pp. 17-26; Boukhelifa, N., Roberts, J.C., Rodgers, P., A coordination model for exploratory multi-view visualization (2003) Proceedings of the International Conference on Coordinated and Multiple Views in Exploratory Visualization, pp. 76-85; Brooks, S., Whalley, J.L., Multilayer hybrid visualizations to support 3D GIS. Computers (2008) Environment and Urban Systems, 32 (4), pp. 278-292; Card, S.K., MacKinlay, J.D., Shneiderman, B., (1999) Readings in Information Visualization-Using Vision to Think, , Morgan Kaufmann; Cleveland, W.S., (1994) Visualizing Data, , Hobart Press; Collins, C., Carpendale, M.S.T., VisLink: Revealing relationships amongst visualizations (2007) IEEE Transactions on Visualization and Computer Graphics, 13 (6), pp. 1192-1199; Collins, C., Penn, G., Carpendale, M.S.T., Bubble Sets: Revealing set relations with isocontours over existing visualizations (2009) IEEE Transactions on Visualization and Computer Graphics, 15 (6), pp. 1009-1016; Elmqvist, N., Do, T.-N., Goodell, H., Henry, N., Fekete, J.-D., ZAME: Interactive large-scale graph visualization (2008) Proceedings of the IEEE Pacific Symposium on Visualization, pp. 215-222; Fekete, J.-D., Wang, D., Dang, N., Aris, A., Plaisant, C., Overlaying graph links on treemaps (2003) Poster Compendium of the IEEE Symposium on Information Visualization; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Heer, J., Agrawala, M., Software design patterns for information visualization (2006) IEEE Transactions on Visualization and Computer Graphics, 12 (5), pp. 853-860; Henry, N., Fekete, J.-D., McGuffin, M.J., NodeTrix: A hybrid visualization of social networks (2007) IEEE Transactions on Visualization and Computer Graphics, 13 (6), pp. 1302-1309; Inselberg, A., The plane with parallel coordinates (1985) Visual Computing, 1, pp. 69-91; Javed, W., McDonnel, B., Elmqvist, N., Graphical perception of multiple time series (2010) IEEE Transactions on Visualization and Computer Graphics, 16 (6), pp. 927-934; Johnson, B., Shneiderman, B., Tree-maps: A space-filling approach to the visualization of hierarchical information structures (1991) Proceedings of the IEEE Conference on Visualization, pp. 284-291; Lee, B., Riche, N.H., Karlson, A.K., Carpendale, M.S.T., Spark-Clouds: Visualizing trends in tag clouds (2010) IEEE Transactions on Visualization and Computer Graphics, 16 (6), pp. 1182-1189; Lokuge, I., Ishizaki, S., GeoSpace: An interactive visualization system for exploring complex information spaces (1995) Proceedings of the ACM Conference on Human Factors in Computing Systems, pp. 409-414; Lucas, P., Roth, S.F., Gomberg, C.C., Visage: Dynamic information exploration (1996) Proceedings of the ACM Conference on Human Factors in Computing Systems, pp. 19-20; Matkovic, K., Freiler, W., Gracanin, D., Hauser, H., ComVis: A coordinated multiple views system for prototyping new visualization technology (2008) Proceedings of the International Conference on Information Visualization, pp. 215-220; McDonnel, B., Elmqvist, N., Towards utilizing gpus in information visualization: A model and implementation of image-space operations (2009) IEEE Transactions on Visualization and Computer Graphics, 15 (6), pp. 1105-1112; Neumann, P., Schlechtweg, D.S., Carpendale, S., ArcTrees: Visualizing relations in hierarchical data (2005) Proceedings of the IEEE European Symposium on Visualization, pp. 53-60; Norman, K.L., Weldon, L.J., Shneiderman, B., Cognitive layouts of windows and multiple screens for user interfaces (1986) International Journal of Man-Machine Studies, 25 (2), pp. 229-248; North, C., Robust end-user programmable, multiple-window coordination (1998) Proceedings of the ACM Conference on Human Factors in Computing Systems, pp. 60-61; North, C., Shneiderman, B., (1997) A Taxonomy of Multiple Window Coordination, , Technical report University of Maryland; North, C., Shneiderman, B., Snap-together visualization: A user interface for coodinating visualizations via relational schemata (2000) Proceedings of the ACM Conference on Advanced Visual Interfaces, pp. 128-135; Roberts, J.C., On encouraging multiple views for visualization (1998) Proceedings of the International Conference on Information Visualization, pp. 8-15; Roberts, J.C., State of the art: Coordinated and multiple views in exploratory visualization (2007) Proceedings of the International Conference on Coordinated and Multiple Views in Exploratory Visualization, pp. 67-71; Shneiderman, B., (1992) Designing the User Interface: Strategies for Effective Human-Computer Interaction, , Addison-Wesley; Shneiderman, B., Aris, A., Network visualization by semantic substrates (2006) IEEE Transactions on Visualization and Computer Graphics, 12 (5), pp. 733-740; Stasko, J., Catrambone, R., Guzdial, M., McDonald, K., An evaluation of space-filling information visualizations for depicting hierarchical structures (2000) International Journal of Human-Computer Studies, 53 (5), pp. 663-694; Stasko, J.T., G̈org, C., Liu, Z., Jigsaw: Supporting investigative analysis through interactive visualization (2008) Information Visualization, 7 (2), pp. 118-132; Tufte, E.R., (1983) The Visual Display of Quantitative Information, , Graphics Press; Voisard, A., Mapgets: A tool for visualizing and querying geographic information (1995) Journal of Visual Languages and Computing, 6 (4), pp. 367-384; Weaver, C., Building highly-coordinated visualizations in improvise (2004) Proceedings of the IEEE Symposium on Information Visualization, pp. 159-166; Weaver, C., Patterns of coordination in improvise visualizations (2007) Proceedings of the SPIE Conference on Visualization and Data Analysis; Weaver, C., Cross-filtered views for multidimensional visual analysis (2010) IEEE Transactions on Visualization and Computer Graphics, 16 (2), pp. 192-204; Wong, P.C., Bergeron, R.D., Multivariate visualization using metric scaling (1997) Proceedings of the IEEE Conference on Visualization, pp. 111-118; Woodruff, A., Wisnovsky, P., Taylor, C., Stonebraker, M., Paxson, C., Chen, J., Aiken, A., Zooming and tunneling in tioga: Supporting navigation in multidimensional space (1994) Proceedings of the Symposium on Visual Languages, pp. 191-195; Yi, J.S., Elmqvist, N., Lee, S., Timematrix: Visualizing temporal social networks using interactive matrix-based visualizations (2010) International Journal of Human-Computer Interaction, 26 (11-12), pp. 1031-1051; Yuan, X., Guo, P., Xiao, H., Zhou, H., Qu, H., Scattering points in parallel coordinates (2009) IEEE Transactions on Visualization and Computer Graphics, 15 (6), pp. 1001-1008","Javed, W.; Purdue UniversityUnited States; email: wjaved@purdue.edu",,IEEE Comput. Soc. Vis. Graph. Tech. Comm. (VGTC),,"5th IEEE Pacific Visualization Symposium 2012, PacificVis 2012",28 February 2012 through 2 March 2012,Songdo,89646,,9781467308649,,,English,"IEEE Pac. Vis. Symp., PacificVis - Proc.",Conference Paper,Scopus,2-s2.0-84860666663,,
TRUE,v,v,"Fontana, F.A., Caracciolo, A., Zanoni, M.",DPB: A benchmark for design pattern detection tools,2012,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,6178890,235,244,,4,10.1109/CSMR.2012.32,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860501636&partnerID=40&md5=8444c4ef8f5c1e7ec49b22fac6eea7fe,"Dipartimento di Informatica, Sistemistica e Comunicazione, University of Milano Bicocca, Milano, Italy","Fontana, F.A., Dipartimento di Informatica, Sistemistica e Comunicazione, University of Milano Bicocca, Milano, Italy; Caracciolo, A., Dipartimento di Informatica, Sistemistica e Comunicazione, University of Milano Bicocca, Milano, Italy; Zanoni, M., Dipartimento di Informatica, Sistemistica e Comunicazione, University of Milano Bicocca, Milano, Italy","Many activities can be done to support software evolution and reverse engineering of a system. Design pattern detection is one of these activities. It is useful to gain knowledge on the design issues of an existing system, on its architecture and design quality, improving the comprehension of the system and hence its maintainability and evolution. Several tools for design pattern detection have been developed in the literature, but they usually provide different results when analyzing the same systems. Some works have been proposed in the literature to compare these results, but a standard and widely-accepted benchmark is not yet available. In this work we propose our benchmark web application for design pattern detection, based on a community driven evaluation. © 2012 IEEE.",Benchmark; Design pattern detection; Meta-model,Benchmark; Design issues; Design Patterns; Design Quality; Existing systems; ITS architecture; Meta model; Software Evolution; WEB application; Intelligent vehicle highway systems; Maintainability; Reengineering; Reverse engineering; Computer software maintenance,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Professional; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; Huang, H., Zhang, S., Cao, J., Duan, Y., A practical pattern recovery approach based on both structural and behavioral analysis (2005) Journal of Systems and Software, 75 (1-2), pp. 69-87; Von Detten, M., Meyer, M., Travkin, D., Reverse engineering with the reclipse tool suite (2010) ICSE '10: Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, pp. 299-300. , New York, NY, USA: ACM; Olsson, R.A., Shi, N., Reverse engineering of design patterns from java source code (2006) ASE '06: Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134. , Washington, DC, USA: IEEE Computer Society; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng., 32 (11), pp. 896-909; Guéhéneuc, Y.-G., Ptidej: Promoting patterns with patterns (2005) Proceedings of the 1st ECOOP Workshop on Building A System Using Patterns, p. 9. , M. E. Fayad, Ed. Springer Verlag, July; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE '02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA: ACM; Dietrich, J., Elgar, C., Towards a web of patterns (2007) Web Semantics: Science, Services and Agents on the World Wide Web, 5 (2), pp. 108-116. , software Engineering and the Semantic Web; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Trans. Softw. Eng., 34, pp. 667-684; Arcelli Fontana, F., Zanoni, M., A tool for design pattern detection and software architecture reconstruction (2011) Information Sciences, 181 (7), pp. 1306-1324. , April; Arcelli Fontana, F., Zanoni, M., Caracciolo, A., A benchmark platform for design pattern detection (2010) Proceedings of the Second International Conferences on Pervasive Patterns and Applications PATTERNS 2010, pp. 42-47. , IARIA. Lisbon, Portugal: Think Mind, November; Fulop, L., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Proceeding of the 12th European Conference on Software Maintenance and Reengineering (CSMR 2008), 1-4, pp. 143-152; Guéhéneuc, Y.-G., Pmart: Pattern-like micro architecture repository (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories, , M. Weiss, A. Birukou, and P. Giorgini, Eds., July; Kniesel, G., Binun, A., Standing on the shoulders of giants - A data fusion approach to design pattern detection (2009) Proceedings of IEEE 17th International Conference on Program Comprehension (ICPC '09.), pp. 208-217. , IEEE Computer Society; Kniesel, G., Binun, A., Hegedus, P., Fülöp, L.J., Tsantalis, N., Chatzigeorgiou, A., Guéhéneuc, Y.-G., DPDX-towards a common result exchange format for design pattern detection tools (2010) Proceedings of 14th European Conference on Software Maintenance and Reengineering (CSMR 2010), pp. 232-235. , March; (2010) Browse Section, , http://essere.disco.unimib.it:8080/DPBWeb/faces/Browse.jsp, Web Site; (2010) Design Pattern Benchmark Platform, , http://essere.disco.unimib.it/DPB/, Web Site; Arcelli, F., Tosi, C., Zanoni, M., A benchmark proposal for design pattern detection (2008) Proceedings of 2nd Workshop on FAMIX and Moose in Reengineering (FAMOOSr 2008), pp. 24-27. , Antwerp, Belgium; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Reverse Engineering, 2004. Proceedings. 11th Working Conference on, pp. 172-181. , nov; (2010) Design Pattern Analysis Schema Definition, , http://essere.disco.unimib.it:8080/DPBWeb/faces/resources/DpAnalysis.xsd, Web Site; (2010) Design Pattern Definitions Documentation, , http://essere.disco.unimib.it:8080/DPBWeb/faces/DocDpDef.jsp, Web Site; Binun, A., Kniesel, G., Joining forces for improving precision and recall of design pattern detection (2011) Proceedings of the 16th European Conference on Software Maintenance and Reengineering (CSMR2012), , Szeged, Hungary, March; Sim, S., Easterbrook, S., Holt, R., Using benchmarking to advance research: A challenge to software engineering (2003) Software Engineering, 2003. Proceedings. 25th International Conference on, pp. 74-83. , may","Fontana, F.A.; Dipartimento di Informatica, Sistemistica e Comunicazione, University of Milano Bicocca, Milano, Italy; email: arcelli@disco.unimib.it",,Reengineering Forum (REF);University of Szeged;FrontEndART Software Ltd.,,"2012 16th European Conference on Software Maintenance and Reengineering, CSMR 2012",27 March 2012 through 30 March 2012,Szeged,89560,15345351,9780769546667,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-84860501636,,
TRUE,v,v,"Binun, A., Kniesel, G.",DPJF - Design pattern detection with high accuracy,2012,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,6178891,245,254,,5,10.1109/CSMR.2012.82,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860503159&partnerID=40&md5=afcd937a909c6b9eb5adf7782c6d02ca,"University of Bonn, Bonn, Germany","Binun, A., University of Bonn, Bonn, Germany; Kniesel, G., University of Bonn, Bonn, Germany","Automated design pattern detection (DPD) is a challenging reengineering task. The detection quality (precision and recall) of DPD tools has so far been insufficient to make DPD integral part of current IDEs and development practices. In this paper, we present a novel approach and a related tool, DPJF. For all implemented pattern detectors and all projects used for evaluation, DPJF achieves 100% precision and the best recall of all evaluated tools. Still, its analysis speed competes with the fastest existing tools. The high detection quality is achieved by a well-balanced combination of structural and behavioural analysis techniques whereas the good performance is achieved by emprically validated simplifications of the individual techniques. Our results lay the basis for routine application of DPD in program comprehension and let DPJF pioneer novel uses of DPD for software quality assesment and improvement. © 2012 IEEE.",,Analysis techniques; Assesment; Automated design; Design Patterns; Development practices; Integral part; Pattern detectors; Precision and recall; Program comprehension; Software Quality; Computer software maintenance; Computer software selection and evaluation; Detectors; Reengineering; Quality control,,,,,,"Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2008) IJSEKE; Kniesel, G., Binun, A., Standing on the shoulders of giants - A data fusion approach to design pattern detection (2009) ICPC 2009, , A. Marcus and R. Koschke, Eds. IEEE; Von Detten, M., Platenius, M., Improving dynamic design pattern detection in reclipse with set objects (2009) Proceedings of the 7th International Fujaba Days; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE'06, pp. 123-134. , Washington, USA: IEEE Computer Society; Guéhéneuc, Y.-G., A reverse engineering tool for precise class diagrams (2004) CASCON'04, pp. 28-41. , IBM Press; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE TSE, 32 (11), pp. 896-909; Albin-Amiot, H., Guéhéneuc, Y.-G., Meta-modeling design patterns: Application to pattern detection and code synthesis (2001) Proceedings of First ECOOP Workshop on Automating Object-Oriented Software Development Methods; Zhu, H., Zhou, M., Role-based collaboration and its kernel mechanisms (2006) IEEE Trans. on Systems, Man and Cybernetics, 36, pp. 578-589; Neal, S., Linington, P.F., Tool support for development using patterns (2001) EDOC '01: Proceedings of the 5th IEEE International Conference on Enterprise Distributed Object Computing, p. 237. , Washington, DC, USA: IEEE Computer Society; Kim, D.-K., France, R., Ghosh, S., Song, E., A role-based metamodeling approach to specifying design patterns (2003) COMPSAC '03: Proceedings of the 27th Annual International Conference on Computer Software and Applications, p. 452. , Washington, DC, USA: IEEE Computer Society; Riehle, D., Describing and composing patterns using role diagrams (1996) Proceedings of the Ubilab Conference, 1996, pp. 137-152. , Zuerich, Switzerland: Universitaetsverlag Konstanz, p. 452; Kniesel, G., Binun, A., Hegedus, P., Fülöp, L.J., Tsantalis, N., Chatzigeorgiou, A., Guéhéneuc, Y.-G., A common exchange format for design pattern detection tools (2009) CS Department III, Uni.Bonn, Germany, Technical Report IAI-TR-2009-03, , https://sewiki.iai.uni-bonn.de/research/dpd/dpdx/, ISSN 0944-8535, Oct. [Online]; Croft, B., Metzler, D., Strohman, T., (2009) Search Engines: Information Retrieval in Practice, , Addison Wesley; Kniesel, G., Binun, A., Hegedus, P., Fülöp, L.J., Chatzigeorgiou, A., Guéhéneuc, Y.-G., Tsantalis, N., DPDX-towards a common result exchange format for design pattern detection tools (2010) CSMR, pp. 232-235. , R. Capilla, R. Ferenc, and J. C. Dueñas, Eds. IEEE; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns, , Addison Wesley; Ng, J.K.-Y., Guéhéneuc, Y.-G., Antoniol, G., Identification of behavioral and creational design patterns through dynamic analysis (2010) JSME, 22 (8). , submitted; Wendehals, L., (2007) Struktur- Und Verhaltensbasierte Entwurfsmustererkennung, , PhD thesis, Universität Paderborn, Institut für Informatik, September; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) WODA'06, pp. 33-40. , New York, USA: ACM; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) WODA'03, , Portland, USA: IEEE Computer Society; Tip, F., Palsberg, J., Scalable propagation-based call graph construction algorithms (2000) OOPSLA '00: Proceedings of the 15th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, pp. 281-293. , New York, NY, USA: ACM; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) CSMR '08: Proceedings of the 2008 12th European Conference on Software Maintenance and Reengineering, pp. 143-152. , Washington, DC, USA: IEEE Computer Society; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design pattern discovery using matrix (2007) ECBS'07, pp. 371-380. , Washington, USA: IEEE Computer Society; Stencel, K., Wegrzynowicz, P., Detection of diverse design pattern variants (2008) APSEC '08: Proceedings of the 2008 15th Asia-Pacific Software Engineering Conference, pp. 25-32. , Washington, DC, USA: IEEE Computer Society; Wegrzynowicz, P., Stencel, K., Towards a comprehensive test suite for detectors of design patterns (2009) Proceedings of the ASE 2009, , Auckland, New Zealand, Nov; Smith, J., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) ASE'03, , IEEE; Smith, J., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) The University of North Carolina, CS Department, Technical Report TR03-016, , May; Smith, J., Stotts, D., Elemental design patterns and the rho-calculus: Foundations for automated design pattern detection in SPQR (2003) The University of North Carolina, CS Department, Technical Report TR03-032, , Sep; Fontana, F.A., Maggioni, S., Raibulet, C., Design patterns: A survey on their micro-structures (2011) Journal of Software Maintenance and Evolution: Research and Practice, , http://dx.doi.org/10.1002/smr.547, [Online]; Sridharan, M., Bodík, R., Refinement-based context-sensitive pointsto analysis for java (2006) SIGPLAN Not., 41 (6), pp. 387-400; Kniesel, G., Hannemann, J., Rho, T., A comparison of logic-based infrastructures for concern detection and extraction (2007) Proceedings of LATE '07, , New York, USA: ACM, 12th March; Binun, A., Kniesel, G., Joining forces for higher precision and recall of design pattern detection (2012) CS Department III, Uni.Bonn, Germany, Technical Report IAI-TR-2012-01, , http://sewiki.iai.uni-bonn.de/research/dpd/dpjf/, Jan. [Online]; Kniesel, G., Binun, A., Witnessing Patterns: A data fusion approach to design pattern detection (2009) CS Department III, Uni.Bonn, Germany, Technical Report IAI-TR-2009-02, , https://sewiki.iai.uni-bonn.de/research/dpd/fusion/, ISSN 0944-8535, Jan. [Online]","Binun, A.; University of Bonn, Bonn, Germany; email: binun@iai.uni-bonn.de",,Reengineering Forum (REF);University of Szeged;FrontEndART Software Ltd.,,"2012 16th European Conference on Software Maintenance and Reengineering, CSMR 2012",27 March 2012 through 30 March 2012,Szeged,89560,15345351,9780769546667,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-84860503159,,
TRUE,4,4,"Ampatzoglou, A., Frantzeskou, G., Stamelos, I.",A methodology to assess the impact of design patterns on software quality,2012,Information and Software Technology,54,4,,331,346,,7,10.1016/j.infsof.2011.10.006,http://www.scopus.com/inward/record.url?eid=2-s2.0-84856066225&partnerID=40&md5=0ffa9659d3790cba8bac38155eaae010,"Department of Informatics, Aristotle University, Thessaloniki, Greece; Information and Communication Systems Engineering Department, University of the Aegean, Samos, Greece","Ampatzoglou, A., Department of Informatics, Aristotle University, Thessaloniki, Greece; Frantzeskou, G., Information and Communication Systems Engineering Department, University of the Aegean, Samos, Greece; Stamelos, I., Department of Informatics, Aristotle University, Thessaloniki, Greece","Context: Software quality is considered to be one of the most important concerns of software production teams. Additionally, design patterns are documented solutions to common design problems that are expected to enhance software quality. Until now, the results on the effect of design patterns on software quality are controversial. Aims: This study aims to propose a methodology for comparing design patterns to alternative designs with an analytical method. Additionally, the study illustrates the methodology by comparing three design patterns with two alternative solutions, with respect to several quality attributes. Method: The paper introduces a theoretical/ analytical methodology to compare sets of ""canonical"" solutions to design problems. The study is theoretical in the sense that the solutions are disconnected from real systems, even though they stem from concrete problems. The study is analytical in the sense that the solutions are compared based on their possible numbers of classes and on equations representing the values of the various structural quality attributes in function of these numbers of classes. The exploratory designs have been produced by studying the literature, by investigating open-source projects and by using design patterns. In addition to that, we have created a tool that helps practitioners in choosing the optimal design solution, according to their special needs. Results: The results of our research suggest that the decision of applying a design pattern is usually a trade-off, because patterns are not universally good or bad. Patterns typically improve certain aspects of software quality, while they might weaken some other. Conclusions: Concluding the proposed methodology is applicable for comparing patterns and alternative designs, and highlights existing threshold that when surpassed the design pattern is getting more or less beneficial than the alternative design. More specifically, the identification of such thresholds can become very useful for decision making during system design and refactoring. © 2011 Elsevier B.V. All rights reserved.",Design patterns; Object-oriented metrics; Quality; Structural quality,Alternative designs; Analytical method; Analytical methodology; Design Patterns; Design problems; Object oriented metrics; Open source projects; Optimal design; Quality attributes; Real systems; Refactorings; Software production; Software Quality; Structural qualities; Structural quality; Decision making; Design; Image quality; Systems analysis; Computer software selection and evaluation,,,,,,"Alencar, P.S.C., Cowan, D.D., Dong, J., De Lucena, C.J.P., A pattern-based approach to structural design composition 23rd International Computer Software and Applications Conference (COMPSAC'99), pp. 160-165. , IEEE, Phoenix, Arizona, 25-26 October 1999; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language - Town, Buildings, Construction, , Oxford University Press New York; Albin-Amiot, H., Cointe, P., Gueheneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together International Conference on Automated Software Engineering (ASE' 01), ACM, pp. 166-173. , 26-29 November 2001, San Diego, USA; Ampatzoglou, A., Chatzigeorgiou, A., Evaluation of object-oriented design patterns in game development (2007) Information and Software Technology, 49 (5), pp. 445-454. , DOI 10.1016/j.infsof.2006.07.003, PII S0950584906000929; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics toidentify design patterns in object-oriented software IEEE Proceedings of the 5th International Symposium on Software Metrics (METRICS 1998), pp. 23-34. , IEEE Computer Society, 20-21 March 1998, Maryland, USA; Arcelli, F., Spinelli, S., Impact of refactoring on quality code evaluation Proceeding of the 4th Workshop on Refactoring Tools (WRT '11), , ACM, 21-28 May 2011, Honolulu, Hawaii; Baniassad, E.L.A., Murphy, G.C., Schwanninger, C., Design pattern rationale graphs: Linking design to source (2003) Proceedings of the 25th International Conference on Software Engineering, IEEE, pp. 352-362. , Portland, Oregon, 03-10 May; Bansiya, J., Davis, C.G., A hierarchical model for object-oriented design quality assessment (2002) IEEE Transactions on Software Engineering, 28 (1), pp. 4-17. , DOI 10.1109/32.979986; Bayley, I., Zhu, H., Formal specification of the variants and behavioural features of design patterns (2010) Journal of Systems and Software, 83 (2), pp. 209-221; Bayley, I., Zhu, H., Specifying behavioural features of design patterns in first order logic (2008) Proceedings of the 32nd Annual IEEE International Computer Software and Applications Conference (COMPSAC '08), pp. 203-210. , IEEE, Turku, Finland, 28 July-01 August; Bieman, J.M., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) IEEE Proceedings of the 9th International Software Metrics Symposium (METRICS 2003), pp. 40-49. , IEEE Computer Society, 3-5 September Sydney, Australia; Bieman, J.M., Jain, D., Yang, H.J., OO design patterns, design structure, and program changes: An industrial case study (2001) IEEE Proceedings of the 17th International Conference on Software Maintenance (ICSM 2001), pp. 580-589. , 7-9 November Florence, Italy; Birukou, A., A survey of existing approaches for pattern search and selection Proceedings of the 2010 European Conference on Pattern Languages of Patterns (EuroPLoP' 10), , ACM, 7-11 July 2010, Bavaria, Germany; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in Java (2005) Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, pp. 224-232. , ACM, Long Beach, CA, 07-11 November; Brito, F., Abreu, E., The MOOD metrics set (1995) Proceedings of the 9th European Conference on Object-Oriented Programming (ECOOP '95) - Workshop Metrics, , August; El Boussaidi, G., Mili, H., A model-driven framework for representing and applying design patterns (2007) Proceedings - International Computer Software and Applications Conference, 1, pp. 97-100. , DOI 10.1109/COMPSAC.2007.31, 4290989, Proceedings - 31st Annual International Computer Software and Applications Conference, COMPSAC 2007; Cartwright, M., Sheppard, M., An empirical investigation of an object-oriented software system (2000) IEEE Transaction on Software Engineering, 26 (8), pp. 786-796; Chatzigeorgiou, A., (2005) Object-Oriented Design: UML, Principles, Patterns and Heuristics, , Klidarithmos Greece; Chidamber, S.R., Kemmerer, C.F., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; Chidamber, S.R., Darcy, D.P., Kemerer, C.F., Managerial use of metrics for object-oriented software: An exploratory analysis (1998) IEEE Transactions on Software Engineering, 24 (8), pp. 629-639; Dagpinar, M., Jahnke, J.H., Predicting maintainability with object-oriented metrics - An empirical comparison (2003) IEEE Proceedings of the 10th Working Conference on Reverse Engineering (WCRE'03), pp. 155-164. , 13-17 November Victoria, Canada; Darcy, D.P., Kemerer, C.F., Slaughter, S.A., Tomayko, J.E., The structural complexity of software: An experimental test (2005) IEEE Transactions on Software Engineering, 31 (11), pp. 982-994. , DOI 10.1109/TSE.2005.130; Di Penta, M., Cerulo, L., Gueheneuc, Y.G., Antoniol, G., An empirical study of relationships between design pattern roles and class change proneness (2008) IEEE Proceedings of the 24th International Conference on Software Maintenance (ICSM 2008), pp. 217-226. , 28 September-4 October Beijing, China; Dong, J., Adding pattern related information in structural and behavioural diagrams (2004) Information and Software Technology, 46 (5), pp. 293-300; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) IEEE Transactions on Software Engineering, 33 (7), pp. 433-453. , DOI 10.1109/TSE.2007.1012; Deng, J., Kemp, E., Todd, E.G., Managing UI pattern collections Proceedings of the 6th ACM SIGCHI New Zealand Chapter's International Conference on Computer-Human Interaction: Making CHI Natural (CHINZ '05), pp. 31-38. , ACM, Auckland, New Zealand; Eden, A.H., Yehudai, A., Gil, J., Precise specification on automatic application of design patterns (1997) Proceedings of the 12th International Conference on Automated Software Engineering, p. 143. , ACM, Lake Tahoe, CA, 02-05 November; Eide, E., Reid, A., Regehr, J., Lepreau, J., Static and dynamic structure in design patterns (2002) Proceedings - International Conference on Software Engineering, pp. 208-218; Fowler, M., (2002) Patterns of Enterprise Application Architecture, Addison-Wesley Professional; France, R.B., Kim, D.K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206; Gamma, E., Helms, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional Reading, MA; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings - Working Conference on Reverse Engineering, WCRE, pp. 172-181. , Proceedings - 11th Working Conference on Reverse Engineering, WCRE 2004; Gueheneuc, Y.G., Guyomar'H, J.Y., Saharaoui, H., Improving design pattern identification: A new approach and an exploratory study (2010) Software Quality Journal, 18 (1), pp. 145-174; Gomes, P., Pereira, F.C., Paiva, P., Seco, N., Carreiro, P., Ferreira, J.L., Bento, C., Using CBR for automation of software design patterns 6th European Conference on Advances in Case-Based Reasoning, pp. 534-548. , Springer, Aberdeen, Scotland; Shu-Hang, G., Yu-Qing, L., Mao-Zhong, J., Jing, G., Hong-Juan, L., A requirement analysis pattern selection method for e-business project situation (2007) IEEE International Conference on E-Business Engineering (ICEBE'07), IEEE, pp. 347-350. , 24-26 October; Henderson-Sellers, B., Constantine, L., Graham, I., Coupling, cohesion: Towards a valid metrics suite for object-oriented analysis and design (2002) Object-Oriented Systems, 3 (3), pp. 143-158; Hsueh, N.L., Kuo, J.Y., Lin, C.C., Object-oriented design: A goal driven and pattern based approach (2009) Software and Systems Modeling, 8 (1), pp. 67-84; Hsueh, N.L., Chu, P.H., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) Journal of Systems and Software, 81 (8), pp. 1430-1439; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269. , PII S0164121201000437; Kataoka, Y., Imai, T., Andou, H., Fukaya, T., A quantitative evaluation of maintainability enhancement by refactoring (2002) Conference on Software Maintenance, pp. 576-585; Khomh, F., Gueheneuc, Y.G., Do design patterns impact software quality positively? (2008) IEEE Proceedings of the 12th European Conference on Software Maintenance and Reengineering (CSMR 2008), pp. 274-278. , 1-4 April Athens, Greece; Khomh, F., Gueheneuc, Y.G., Antoniol, G., Playing roles in design patterns: An empirical descriptive and analytic study (2009) IEEE Proceedings of the 25th International Conference on Software Maintenance (ICSM 2009), pp. 83-92. , 20-26 September Edmonton, Alberta, Canada; Kim, D.K., France, R., Ghosh, S., Song, E., A role-based metamodeling approach to specifying design patterns (2003) Proceedings of the 27th Annual International Conference on Computer Software and Applications, p. 452. , IEEE, Dallas, Texas, 03-06 November; Kouskouras, K., Chatzigeorgiou, A., Stephanides, G., Facilitating software extension with design patterns and Aspect-Oriented Programming (2008) Journal of Systems and Software, 81 (10), pp. 1725-1737; Kung, D.C., Bhambhani, H., Shah, R., Pancholi, G., An expert system for suggesting design patterns: A methodology and a prototype (2003) Series in Engineering and Computer Science: Software Engineering with Computational Intelligence, , Kluwer International; Lanza, M., Marinescu, R., (2006) Object-Oriented Metrics in Practice, , Springer-Verlag Berlin, Germany; Li, W., Henry, S., Object-oriented metrics that predict maintainability (1993) Journal of Systems and Software, 23 (2), pp. 111-122; Lorenz, M., Kidd, J., (2004) Object-Oriented Software Metrics, , Prentice Hall New Jersey, USA; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in UML (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE'04), pp. 252-261. , IEEE, Edinburgh, Scotland, 23-28 May; Martin, R.C., (2003) Agile Software Development: Principles, Patterns and Practices, , Prentice Hall Upper Saddle River, NJ; Mens, T., Tourwe, T., A declarative evolution framework for object-oriented design patterns (2003) Proceedings of the IEEE International Conference on Software Maintenance (ICSM'01), p. 570. , IEEE, Florence, Italy, 07-09 November; Mikkonen, T., Formalizing design patterns (1998) Proceedings of the 20th International Conference on Software Engineering (ICSE'98), pp. 115-124. , IEEE, Kyoto, Japan, 19-25 April; Muraki, T., Saeki, M., Metrics for applying GOF design patterns in refactoring processes ACM Proceedings of the 4th International Workshop on Principles of Software Evolution (IWPSE' 2001), pp. 27-36. , 10-11 September 2001, Vienna, Austria; McCabe, T., A complexity measure (1976) IEEE Transactions on Software Engineering, 2 (4), pp. 308-320; McNatt, W.B., Bieman, J.M., Coupling of design patterns: Common practices and their benefits (2001) Proceedings - IEEE Computer Society's International Computer Software and Applications Conference, pp. 574-579; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Do maintainers utilize deployed design patterns effectively? (2007) Proceedings - International Conference on Software Engineering, pp. 168-177. , DOI 10.1109/ICSE.2007.33, 4222579, Proceedings - 29th International Conference on Software Engineering, ICSE 2007; Oliveira B C, D.S., Wang, M., Gibbons, J., The visitor pattern as a reusable, generic, type-safe component (2008) Proceedings of the 23rd ACM SIGPLAN Conference on Object-oriented Programming Systems Languages and Applications (OOPSLA 2008), pp. 439-456. , ACM, Nashville, Tennessee, 19-23 October; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) Proceedings of the Third International Workshop on Dynamic Analysis (ICSE'05), pp. 1-7. , IEEE, St. Louis, Missouri, 17 May; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), pp. 1134-1144. , DOI 10.1109/32.988711; Riaz, M., Mendes, E., Tempero, E., A systematic review on software maintainability prediction and metrics 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM'09), pp. 367-377. , 15-16 Octomber 2009, Lake Buena Vista, Florida, USA; Rising, L., (2000) The Pattern Almanac, , Addison-Wesley Longman Publishing; Samoladas, I., Stamelos, I., Angelis, L., Oikonomou, A., Open source software development should strive for even greater code maintainability (2004) Communications of the ACM, 47 (10), pp. 83-87. , DOI 10.1145/1022594.1022598; Shalloway, A., Trott, J.R., (2005) Design Patterns Explained: A New Perspective on Object-oriented Design, , Addison-Wesley Professional Reading, MA; Soundarajan, N., Hallstrom, J.O., Responsibilities and rewards: Specifying design patterns (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE'04), pp. 666-675. , IEEE, Edinburgh, UK, 23-28 May; Taibi, T., Ngo, D.C.L., Formal specification of design pattern combination using BPSL (2003) Information and Software Technology, 45 (3), pp. 157-170; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Deligiannis, I., Probabilistic evaluation of object-oriented systems (2004) Proceedings - International Software Metrics Symposium, pp. 26-33. , Proceedings - 10th International Symposium on Software Metrics, METRICS 2004; Tsantalis, N., Chatzigeorgiou, A., Identification of move method refactoring opportunities (2009) Transactions on Software Engineering, 35 (3), pp. 347-367; Van Koten, C., Gray, A.R., An application of Bayesian network for predicting object-oriented software maintainability (2006) Information and Software Technology, 48 (1), pp. 59-67. , DOI 10.1016/j.infsof.2005.03.002, PII S0950584905000339; Vokác, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns - A replication in a real programming environment (2003) Empirical Software Engineering, 9, pp. 149-195; Weiss, M., Birukou, A., Building a pattern repository: Benefitting from the open, lightweight, and participative nature of wikis (2007) International Symposium on Wikis (WikiSym), , ACM, 21-23 October Montreal, Canada; Weiss, M., Mouratidis, H., Selecting security patterns that fulfill security requirements (2008) 16th International Conference on Requirements Engineering (RE'08), pp. 169-172. , IEEE, 8-12 September Barcelona, Spain; Welicki, L., Lovelle, J.M.C., Aguilar, L.J., Patterns meta-specification and cataloging: Towards a more dynamic patterns life cycle (2007) International Workshop on Software Patterns, IEEE, , 23-27 July Beijing, China; Winn, T., Calder, P., Is this a pattern? (2002) IEEE Software, 19 (1), pp. 59-66. , DOI 10.1109/52.976942; (2010) Wolfram Mathematica, Reduce-Wolfram Mathematica 7 Documentation, , http://reference.wolfram.com/mathematica/ref/Reduce.html; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large professional project (2001) IEEE Proceedings of the 5th European Conference on Software Maintenance and Reengineering (CSMR 2001), pp. 77-84. , 14-16 March Lisbon, Portugal; Zdun, U., Alexiou, P., Hentrich, C., Dustdar, S., Architecting as decision making with patterns and primitives (2008) Proceedings of the 3rd International Workshop on Sharing and Reusing Architectural Knowledge (ICSE'08), pp. 11-18. , IEEE, Leipzig, Germany, 10-18 May; Zdun, U., Systematic pattern selection using pattern language grammars and design space analysis (2007) Software - Practice and Experience, 37 (9), pp. 983-1016. , DOI 10.1002/spe.799; Zhou, Y., Leung, H., Predicting object-oriented software maintainability using multivariate adaptive regression splines (2007) Journal of Systems and Software, 80 (8), pp. 1349-1361. , DOI 10.1016/j.jss.2006.10.049, PII S0164121206003372, The Impact of Barry Boehm's Work on Software Engineering Education and Training; Ziane, M., A transformational viewpoint on design patterns (2000) Proceedings of the 15th IEEE International Conference on Automated Software Engineering, p. 273. , ACM, Grenoble, France, 11-15 September; Zimmermann, O., Zdun, U., Gschwind, T., Leymann, F., Combining pattern languages and reusable architectural decision models into a comprehensive and comprehensible design method (2008) Proceedings of the 7th Working IEEE/IFIP Conference on Software Architecture (WICSA 2008), , IEEE, 18-22 February Vancouver, Canada","Ampatzoglou, A.; Department of Informatics, Aristotle University, Thessaloniki, Greece; email: apamp@csd.auth.gr",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Article,Scopus,2-s2.0-84856066225,,
TRUE,4,4,"Juristo, N., Vegas, S.",Design patterns in software maintenace: An experiment replication at UPM: Experiences with the RESER'11 joint replication project,2012,"Proceedings - 2011 2nd International Workshop on Replication in Empirical Software Engineering Research, RESER 2011",,,6148332,7,14,,,10.1109/RESER.2011.8,http://www.scopus.com/inward/record.url?eid=2-s2.0-84858016014&partnerID=40&md5=131c8680c962708f3df03106efe93fe2,"Facultad de Informática, DLSIIS, Universidad Politécnica de Madrid, Spain","Juristo, N., Facultad de Informática, DLSIIS, Universidad Politécnica de Madrid, Spain; Vegas, S., Facultad de Informática, DLSIIS, Universidad Politécnica de Madrid, Spain","Replication of software engineering experiments is crucial for dealing with validity threats to experiments in this area. Even though the empirical software engineering community is aware of the importance of replication, the replication rate is still very low. The RESER'11 Joint Replication Project aims to tackle this problem by simultaneously running a series of several replications of the same experiment. In this article, we report the results of the replication run at the Universidad Politécnica de Madrid. Our results are inconsistent with the original experiment. However, we have identified possible causes for them. We also discuss our experiences (in terms of pros and cons) during the replication. © 2012 IEEE.",Empirical studies; Experimentation; Replication,Design Patterns; Empirical Software Engineering; Empirical studies; Experimentation; Replication; Software engineering experiments; Software engineering; Experiments,,,,,,"Basili, V.R., Selby, R.W., Comparing the effectiveness of software testing strategies (1987) IEEE Transactions on Software Engineering, SE-13 (12), pp. 1278-1296; Basili Victor, R., Shull Forrest, Lanubile Filippo, Building knowledge through families of experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473; Carver, J., Towards reporting guidelines for experimental replications: A proposal (2010) 1 stInternational Workshop on Replication in Empirical Software Engineering Research (RESER'10), , May 4, Cape Town, South Africa; Dieste, O., Fernández, E., García, R., Juristo, N., Hidden evidence behind useless replications (2010) 1 st International Workshop on Replication in Empirical Software Engineering Research (RESER'10), , May 4. Cape Town, South Africa; Gómez, O.S., Juristo, N., Vegas, S., Replication types in experimental disciplines International Symposium on Empirical Software Engineering and Measurement (ESEM'10), , September 16-17, Bolzano, Italy; Gómez, O., Juristo, N., Vegas, S., Replication, reproduction and reanalysis: Three ways for verifying experimental findings in Software Engineering (2010) 1st International Workshop on Replication in Empirical Software Engineering Research (RESER'10), , May 4. Cape Town, South Africa; Juristo, N., Vegas, S., Using differences among replications of software engineering experiments to gain knowledge (2009) 3 rd International Symposium on Empirical Software Engineering and Measurement (ESEM'09), , Orlando, USA; Juristo, N., Vegas, S., The role of non-exact replications in software engineering experiments (2011) Empirical Software Engineering, 16 (3), pp. 295-324; Kamsties, E., Lott, C.M., An empirical evaluation of three defect-detection techniques (1995) Proceedings of the Fifth European Software Engineering Conference (ESE'95), , Sitges, Spain; Mendonça, M.G., Maldonado, J.C., De Oñoveroa, M.C.F., Fabbri, K.C.S., Shull, F., Travassos, G.H., Höhn, E.N., Basili, V.R., A framework for software engineering experimental replications (2008) Proceedings of the 13th International Conference on Engineering of Complex Computer Systems, , Belfast, Northern Ireland; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), pp. 1134-1144. , DOI 10.1109/32.988711; Roper, M., Wood, M., Miller, J., An empirical evaluation of defect detection techniques (1997) Information and Software Technology, 39 (11), pp. 763-775. , PII S0950584997000281; Shull, F., Mendoncça, M.G., Basili, V., Carver, J., Maldonado, J.C., Knowledge-Sharing issues in experimental software engineering (2004) Empirical Software Engineering, 9 (1-2), pp. 111-137; Vegas, S., Juristo, N., Moreno, A., Solari, M., Letelier, P., Analysis of the influence of communication between researchers on experiment replication (2006) ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering, 2006, pp. 28-37. , DOI 10.1145/1159733.1159741, ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering; Vokáč, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns-A replication in a real programming environment (2004) Empirical Software Engineering, 9 (3), pp. 149-195; https://www.inf.fu-berlin.de/w/SE/PatmainReplicationInfohttp://replication.inf.fu-berlin.de/replication/exploginhttp://replication.inf.fu-berlin.de/replication/userlogin","Juristo, N.; Facultad de Informática, DLSIIS, Universidad Politécnica de MadridSpain; email: natalia@fi.upm.es",,,,"2011 2nd International Workshop on Replication in Empirical Software Engineering Research, RESER 2011",21 September 2011 through 21 September 2011,"Banff, AB",88858,,9780769546742,,,English,"Proc. - Int. Workshop Replication Empir. Softw. Eng. Res., RESER",Conference Paper,Scopus,2-s2.0-84858016014,,
FALSE,3,1,"Zuo, W., Li, W., Xu, T., Xuan, S., Na, J.",A complete development process of finite element software for body-in-white structure with semi-rigid beams in.NET framework,2012,Advances in Engineering Software,45,1,,261,271,,15,10.1016/j.advengsoft.2011.10.005,http://www.scopus.com/inward/record.url?eid=2-s2.0-83555166063&partnerID=40&md5=f6ed58084910303b0bbb7b7822fb9fbf,"College of Mechanical Science and Engineering, Jilin University, Changchun 130025, China; College of Automobile Engineering, Jilin University, Changchun 130025, China","Zuo, W., College of Mechanical Science and Engineering, Jilin University, Changchun 130025, China, College of Automobile Engineering, Jilin University, Changchun 130025, China; Li, W., College of Mechanical Science and Engineering, Jilin University, Changchun 130025, China; Xu, T., College of Mechanical Science and Engineering, Jilin University, Changchun 130025, China; Xuan, S., College of Automobile Engineering, Jilin University, Changchun 130025, China; Na, J., College of Automobile Engineering, Jilin University, Changchun 130025, China","At the conceptual design stage, simplified finite element (FE) model of body-in-white (BIW) structure focuses on its specific merit to provide early-stage predictions for detailed FE model of that. This paper exploits a semi-rigid beam element (SRBE) that consists of a beam element with two semi-rigid connections at the ends to simulate the flexibility of joint. Guyan reduction method condenses the SRBE as a super element. A special finite element software for structural modeling and analysis of BIW (SMAB) is developed in.NET framework. The Unified Modeling Language is employed to depict the classes and their relationship. The design patterns are identified and applied in the framework design to facilitate communication and system expansion. Microsoft DirectX and GDI+ implement graphics display of spatial BIW frame and planar thin-walled cross section. Based on multi-threaded technology in.NET, subspace iteration method is paralleled to speed up the mode analysis. As a result, the efficiency of the SRBE is demonstrated by a benchmarking automotive body. Multi-threaded parallel is effective and useful, especially for frequency optimization. © 2011 Elsevier Ltd. All rights reserved.",.NET framework; BIW structure; Finite element analysis; Multi-threaded parallel; Object-oriented programming; Semi-rigid beam,Automotive body; Beam elements; Body in whites; Cross section; Design Patterns; Development process; DirectX; FE model; Finite element models; Finite element software; Frequency optimization; Graphics display; Guyan reduction; MicroSoft; Mode analysis; Multithreaded; NET framework; Semi-rigid; Semirigid connections; Structural modeling; Subspace iteration method; Super elements; System expansion; Thin-walled; Computer software; Conceptual design; Object oriented programming; Plates (structural components); Unified Modeling Language; Finite element method,,,,,,"Nishigaki, H., Nishiwaki, S., Amago, T., Kojima, Y., Kikuchi, N., First order analysis - New CAE tools for automotive body designers (2001) Proceedings, SAE World Congress, , Detroit, USA; Torstenfelt, B., Klarbring, A., Structural optimization of modular product families with application to car space frame structures (2006) Structural and Multidisciplinary Optimization, 32 (2), pp. 133-140. , DOI 10.1007/s00158-005-0568-3; Kuo, E.Y., Mehta, P.R., Prater Jr., G., Shahhosseini, A.M., Reliability and quality of body concept CAE models for design direction studies (2006) Proceedings, SAE World Congress, , Detroit, Michigan; Donders, S., Takahashi, Y., Hadjit, R., Vanlangenhove, T., Brughmans, M., A reduced beam and joint concept modeling approach to optimize global vehicle body dynamics (2009) Finite Elem Anal des, 45, pp. 439-455; Yoshimura, M., Nishiwaki, S., Izui, K., A multiple cross-sectional shape optimization method for automotive body frames (2005) Journal of Mechanical Design, Transactions of the ASME, 127 (1), pp. 49-57. , DOI 10.1115/1.1814391; (2008) SFE CONCEPT Powerful Tool for Fast Parametric Engineering Design, , http://sfe1.extern.tu-berlin.de/concept/concept.html; Zienkiewicz, O.C., Taylor, R.L., (2005) The Finite Element Method for Solid and Structural Mechanics, , 6th ed. Butterworth Oxford; Panayirci, H.M., Pradlwarter, H.J., Schuëller, G.I., Efficient stochastic structural analysis using Guyan reduction (2011) Adv Eng Softw, 42, pp. 187-196; Booch, G., Rumbaugh, J., Jacobson, I., (1998) The Unified Modeling Language User Guide, , Addison-Wesley MA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Element of Reusable Object-oriented Software, , Addison-Wesley MA; (2002) Doubly-linked List Implementation, , http://www.codeproject.com/KB/recipes/doubly-linkedlist.aspx; Forde, B., Foschi, R.O., Stiemer, S.F., Object-oriented finite element analysis (1990) Comput Struct, 34, pp. 355-374; Pidaparti, A.V., Hudli, R.V.M., Dynamic analysis of structures using object-oriented techniques (1993) Comput Struct, 49, pp. 149-156; Murthy, A.R.C., Palani, G.S., Iyer, N.R., Object-oriented programming paradigm for damage tolerant evaluation of engineering structural components (2011) Adv Eng Softw, 42, pp. 12-24; Lin, B.Z., Chuang, M.C., Tsai, K.C., Object-oriented development and application of a nonlinear structural analysis framework (2009) Adv Eng Softw, 40, pp. 66-82; Thai, H.T., Kim, S.E., Practical advanced analysis software for nonlinear inelastic analysis of space steel structures (2009) Adv Eng Softw, 40, pp. 786-797; Yu, L.C., Kumar, V., An object-oriented modular framework for implementing the finite element method (2001) Comput Struct, 79 (9), pp. 919-928; Nie, J.H., Hopkins, D.A., Chen, Y.T., Hsieh, H.T., Development of an object-oriented finite element program with adaptive mesh refinement for multi-physics applications (2010) Adv Eng Softw, 41, pp. 569-579; MacKie, R.I., Object oriented implementation of distributed finite element analysis in.NET (2007) Adv Eng Softw, 38 (1112), pp. 726-737; Chen, H.M., Lin, Y.C., Web-FEM: An internet-based finite-element analysis framework with 3D graphics and parallel computing environment (2008) Adv Eng Softw, 39, pp. 55-68; Wang, W., Rivard, H., Zmeureanu, R., An object-oriented framework for simulation-based green building design optimization with genetic algorithms (2005) Advanced Engineering Informatics, 19 (1), pp. 5-23. , DOI 10.1016/j.aei.2005.03.002, PII S1474034605000200; Fialko, S., PARFES: A method for solving finite element linear equations on multi-core computers (2010) Adv Eng Softw, 41, pp. 1256-1265; Mineter, M., Hulton, N., Parallel processing for finite-difference modelling of ice sheets (2001) Computers and Geosciences, 27 (7), pp. 829-838. , DOI 10.1016/S0098-3004(01)00004-8, PII S0098300401000048; Zuo, W.J., Xu, T., Zhang, H., Xu, T.S., Fast structural optimization with frequency constraints by genetic algorithm using adaptive eigenvalue reanalysis methods (2011) Struct Multidisc Optim, 63, pp. 799-810","Zuo, W.; College of Mechanical Science and Engineering, Jilin University, Changchun 130025, China; email: zuowenjie@jlu.edu.cn",,,,,,,,9659978,,AESOD,,English,Adv Eng Software,Article,Scopus,2-s2.0-83555166063,,
TRUE,3,3,"Braga, C., Menezes, R., Comicio, T., Santos, C., Landim, E.",Transformation contracts in practice,2012,IET Software,6,1,,16,32,,5,10.1049/iet-sen.2011.0013,http://www.scopus.com/inward/record.url?eid=2-s2.0-84857312159&partnerID=40&md5=36fca61edff6bf3f6e1918b14ad4e73a,"Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil","Braga, C., Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil; Menezes, R., Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil; Comicio, T., Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil; Santos, C., Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil; Landim, E., Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil","Model-driven development (MDD) is a software engineering discipline which suggests that software development should be done at the modelling level and that applications should be generated from models. A key concept of MDD is a model transformation that generates software artifacts, such as code, from models. Since models are 'first-class' citizens in MDD, their verification and validation are important tasks and so are the model transformations. A transformation contract, which is also a model, is a specification of what a particular model transformation must implement and essentially specifies a relation between metamodels and properties that must hold on such a relation. The authors have defined a design pattern that enforces transformation contract correctness over model transformations implementations. This study reports on (i) the proposed design pattern, (ii) the design of the UMLtoEJB model transformation that generates application code, following the Enterprise Java Beans standard, from class diagrams described in the Unified Modelling Language, and (iii) a discussion on how the transformation contracts approach may help different actors, in an MDD software development process with transformation contracts, to identify erroneous situations. © 2012 The Institution of Engineering and Technology.",,Application codes; Class diagrams; Design Patterns; Engineering disciplines; Enterprise Java Beans; Meta model; Model transformation; Model-driven development; Software artifacts; Software development process; Verification and validation; Computer graphics; Computer software; Software engineering,,,,,,"Kleppe, A., Warmer, J., Bast, W., (2003) MDA Explained - The Model Driven Architecture: Practice and Promise, , (Addison-Wesley); Booch, G., Rumbaugh, J., Jacobson, I., (2005) UML - User's Guide, , (Addison-Wesley); Czarnecki, K., Helsen, S., Classification of model transformation approaches (2003) OOPSLA'03 Workshop on Generative Techniques in the Context of Model-Driven Architecture, pp. 1-17; Braga, C., Hæusler, E.H., Lightweight analysis of access control models with description logic (2010) Innovat. Syst. Softw. Eng., 6, pp. 115-123. , 10.1007/s11334-009-0107-2; Grumberg, O., Peled, D.A., (1999) Model Checking, , (The MIT Press); Warmer, J., Kleppe, A., (2003) The Object Constraint Language, , 2nd (Addison-Wesley Longman Publishing Co., Inc.); Bezivin, J., Buttner, F., Gogolla, M., Jouault, F., Kurtev, I., Lindow, A., Model transformations? Transformation models! (2006) Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), LNCS 4199, pp. 440-453. , Model Driven Engineering Languages and Systems - 9th International Conference, MoDELS 2006, Proceedings; Braga, C., A transformation contract to generate aspects from access control policies (2010) J. Softw. Syst. Model, 10 (3), pp. 395-409; Cariou, E., Marvie, R., Seinturier, L., Duchien, L., OCL for the Specification of Model Transformation Contracts, pp. 69-83. , Patrascoiu, O. OCL and Model Driven Engineering, UML 2004 Conference Workshop, Lisbon, Portugal, 12 October 2004; (2007) XML Metadata Interchange, , Object Management Group; (2006) OMG.: 'Object Constraint Language Specification, v2.0 [Type], , http://www.omg.org/spec/OCL/2.0/, [cited 04/27/2010]; Clavel, M., Egea, M., De Dios, M.A.G., Building an efficient component for OCL evaluation (1996) ECEASST, p. 15; Goguen, J.A., Malcom, G., (1996) Algebraic Semantics of Imperative Programs, , (MIT Press); Meyer, B., (1997) Object-oriented Software Construction, , 2nd (Prentice-Hall); (2005) OMG Adopted Specification ptc/05-11-01, , (Object Management Group); Anastasakis, K., Bordbar, B., Küster, J., Analysis of Model Transformations Via Alloy, pp. 47-56. , Baudry, A.B., Faivre, S., Ghosh, A.P., Proc. Workshoon Model-Driven Engineering, Verification and Validation (MoDeVVA 2007), 2007, Nashville, TN, USA; Cabot, J., Clarisó, R., Riera, D., (2009) Verifying UML/OCL Operation Contracts, IFM, 2009', (LNCS, 5423), pp. 40-55. , Leuschel, M., Wehrheim, H., (Springer); Cabot, J., Clarisó, R., Riera, D., Verification of UML/OCL class diagrams using constraint programming (2008) Proc. 2008 IEEE Int. Conf. Software Testing Verification and Validation Workshop, ICSTW '08, pp. 73-80; Baudry, B., Dinh-Trong, T., Mottu, J.M., Model transformation testing challenges (2006) ECMDA Workshop on Integration of Model Driven Development and Model Driven Testing, , et al. ' ', July","Braga, C.; Universidade Federal Fluminense, Instituto de Computação, Niterói, Brazil; email: cbraga@ic.uff.br",,,,,,,,17518806,,,,English,IET Software,Article,Scopus,2-s2.0-84857312159,,
TRUE,4,4,"Ng, T.H., Yu, Y.T., Cheung, S.C., Chan, W.K.",Human and program factors affecting the maintenance of programs with deployed design patterns,2012,Information and Software Technology,54,1,,99,118,,1,10.1016/j.infsof.2011.08.002,http://www.scopus.com/inward/record.url?eid=2-s2.0-80055091289&partnerID=40&md5=f1c27d8ac3256370b1d57c0dc528b5a8,"Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong; Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Clear Water Bay, Hong Kong, Hong Kong","Ng, T.H., Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong; Yu, Y.T., Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong; Cheung, S.C., Department of Computer Science and Engineering, Hong Kong University of Science and Technology, Clear Water Bay, Hong Kong, Hong Kong; Chan, W.K., Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong","Context: Practitioners may use design patterns to organize program code. Various empirical studies have investigated the effects of pattern deployment and work experience on the effectiveness and efficiency of program maintenance. However, results from these studies are not all consistent. Moreover, these studies have not considered some interesting factors, such as a maintainer's prior exposure to the program under maintenance. Objective: This paper aims at identifying what factors may contribute to the productivity of maintainers in the context of making correct software changes when they work on programs with deployed design patterns. Method: We performed an empirical study involving 118 human subjects with three change tasks on a medium-sized program to explore the possible effects of a suite of six human and program factors on the productivity of maintainers, measured by the time taken to produce a correctly revised program in a course-based setting. The factors we studied include the deployment of design patterns and the presence of pattern-unaware solutions, as well as the maintainer's prior exposure to design patterns, the subject program and the programming language, and prior work experience. Results: Among the factors under examination, we find that the deployment of design patterns, prior exposure to the program and the presence of pattern-unaware solutions are strongly correlated with the time taken to correctly complete maintenance tasks. We also report some interesting observations from the experiment. Conclusion: A new factor, namely, the presence of pattern-unaware solutions, contributes to the efficient completion of maintenance tasks of programs with deployed design patterns. Moreover, we conclude from the study that neither prior exposure to design patterns nor prior exposure to the programming language is supported by sufficient evidences to be significant factors, whereas the subjects' exposure to the program under maintenance is notably more important. © 2011 Elsevier B.V. All rights reserved.",Design patterns; Empirical study; Human factors; Pattern-deployed software; Program factors; Software maintenance,Change tasks; Design Patterns; Empirical studies; Human subjects; Maintenance tasks; Pattern-deployed software; Program code; Program factors; Program maintenances; Programming language; Software change; Work experience; Computer programming languages; Computer software maintenance; Human engineering; Maintainability; Productivity; Design,,,,,,"Ahmed, S., Ashraf, G., Model-based user interface engineering with design patterns (2007) Journal of Systems and Software, 80 (8), pp. 1408-1422. , DOI 10.1016/j.jss.2006.10.037, PII S016412120600286X, The Impact of Barry Boehm's Work on Software Engineering Education and Training; Aversano, L., Canfora, G., Cerulo, L., Grosso, C.D., Di Penta, M., An empirical study on the evolution of design patterns (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC-FSE'07), pp. 385-394. , ACM Press; Balanyi, Z., Ferenc, R., Mining design patterns from C++ Source Code (2003) Proceedings of the 19th International Conference on Software Maintenance (ICSM 2003), pp. 305-314. , IEEE Computer Society Press; Baniassad, E.L.A., Murphy, G.C., Schwanninger, C., Design pattern rational graphs: Linking design to source (2003) Proceedings of the 25th International Conference on Software Engineering (ICSE 2003), pp. 352-362. , IEEE Computer Society Press; Bass, L., Clements, P., Kazman, R., (1997) Software Architecture in Practice, , Addison-Wesley; Bennett, K.H., Software evolution: Past, present and future (1996) Information and Software Technology, 39 (11), pp. 673-680; Bieman, J.M., Jain, D., Yang, H.J., OO design patterns, design structure, and program changes: An industrial case study (2001) Proceedings of the International Conference on Software Maintenance (ICSM 2001), pp. 580-589. , IEEE Computer Society Press; Bieman, J.M., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) Proceedings of the 9th International Software Metrics Symposium (METRIC 2003), pp. 40-49. , IEEE Computer Society Press; http://cppunit.sourceforge.net/, CPPUnit accessed: 16.02.11Di Penta, M., Cerulo, L., Guéhéneuc, Y., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) Proceedings of the 24th IEEE International Conference on Software Maintenance (ICSM 2008), pp. 217-226. , IEEE Computer Society Press; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral pattern identification through visual language parsing and code instrumentation (2009) Proceedings of European Conference on Software Maintenance and Reengineering (CSMR 2009), pp. 99-108. , IEEE Computer Society Press; De Lucia, A., Pompella, E., Stefanucci, S., Assessing the maintenance processes of a software organization: An empirical analysis of a large industrial project (2003) Journal of Systems and Software, 65 (2), pp. 87-103; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design patterns: Abstraction and reuse of object-oriented design (1993) Proceedings of the 7th European Conference on Object-Oriented Programming (ECOOP 1993), pp. 406-431. , Springer-Verlag; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gestwicki, P., Sun, F.S., Teaching design patterns through computer game development (2008) ACM Journal of Educational Resources in Computing, 8 (1), pp. 1-22; Géhéneuc, Y.-G., Antoniol, G., DeMIMA: A multi-layered framework for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Hennipman, E., Oppelaar, E., Veer, G., Pattern languages as tool for discount usability engineering (2008) Interactive Systems. Design, Specification, and Verification: 15th International Workshop, pp. 108-120. , Springer-Verlag; Hsueh, N.L., Chu, P.H., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) Journal of Systems and Software, 81 (8), pp. 1430-1439; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269. , PII S0164121201000437; http://java.sun.com/developer/JDCTechTips/2006/tt0113.html#2, JavaBeans with Observers; accessed 16.02.11http://www.sourceforge.net/projects/jhotdraw/, JHotDraw. < > (accessed 16.02.11)Kerievsky, J., (2005) Refactoring to Patterns, , Addison-Wesley; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th Conference on Software Maintenance and Reengineering (CSMR 2008), pp. 274-278. , IEEE Computer Society Press; Khomh, F., Guéhéneuc, Y.-G., Antoniol, G., Playing roles in design patterns: An empirical descriptive and analytic study (2009) Proceedings of the 25th IEEE International Conference on Software Maintenance (ICSM), pp. 83-92. , IEEE Computer Society Press; Kouskouras, K.G., Chatzigeorgiou, A., Stephanides, G., Facilitating software extension with design patterns and aspect-oriented programming (2008) Journal of Systems and Software, 81 (10), pp. 1725-1737; Li, G., Lu, M., Liu, B., SFTA based safety analysis for bridge pattern (2009) Proceedings of the 8th International Conference on Reliability, Maintainability and Safety (ICRMS 2009), pp. 522-525. , IEEE Computer Society Press; Moore, D.S., McCabe, G.P., (1999) Introduction to the Practice of Statistics, , third ed. W.H. Freeman New York; Ng, T.H., Cheung, S.C., Enhancing class commutability in the deployment of design patterns (2005) Information and Software Technology, 47 (12), pp. 797-804. , DOI 10.1016/j.infsof.2005.01.004, PII S0950584905000133; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Do maintainers utilize deployed design patterns effectively? (2007) Proceedings - International Conference on Software Engineering, pp. 168-177. , DOI 10.1109/ICSE.2007.33, 4222579, Proceedings - 29th International Conference on Software Engineering, ICSE 2007; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Toward effective deployment of design patterns for software extension: A case study (2006) Proceedings of the 4th Workshop on Software Quality (WoSQ 2006), in Conjunction with the 28th International Conference on Software Engineering (ICSE 2006), pp. 51-56. , ACM Press; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Work experience versus refactoring to design patterns: A controlled experiment (2006) Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 12-22. , DOI 10.1145/1181775.1181778, 1181778, Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering; Ng, T.H., Yu, Y.T., Cheung, S.C., Factors for effective use of deployed design patterns (2010) Proceedings of the 10th International Conference on Quality Software (QSIC 2010), , IEEE Computer Society Press; http://www.microsoft.com/com/, Microsoft COM. < > (accessed 16.02.11)Porras, G.C., Guéhéneuc, Y.-G., An empirical study on the efficiency of different design pattern representations in UML class diagrams (2010) Empirical Software Engineering, 15 (5), p. 493. , 522; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , DOI 10.1109/TSE.2002.1010061; Prechelt, L., Unger, B., Tichy, W.F., Brössler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), p. 1134. , 1144; Renze, J., Outlier MathWorld - A Wolfram Web Resource, , http://www.mathworld.wolfram.com/Outlier.html, created by Eric W. Weisstein. < > (accessed 16.02.11); Robillard, M.P., Coelho, W., Murphy, G.C., How effective developers investigate source code: An exploratory study (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 889-903. , DOI 10.1109/TSE.2004.101; http://www.spss.com/, SPSS. < > (accessed 16.02.11)Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; http://www.cs.cityu.edu.hk/~cssam/IST2011/workshop.html, Tutorial WebsiteVokac, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 904-917. , DOI 10.1109/TSE.2004.99; Vokáč, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns: A replication in a real programming environment (2004) Empirical Software Engineering, 9 (3), pp. 149-195; Wohlin, C., Runeson, P., Höst, M., Ohlson, M., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Publishers","Chan, W.K.; Department of Computer Science, City University of Hong Kong, Kowloon Tong, Hong Kong; email: wkchan@cs.cityu.edu.hk",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Article,Scopus,2-s2.0-80055091289,,
TRUE,4,4,"Asadullah, A., Raju, M.B., Stern, I., Bhat, V.D.",Design patterns based pre-processing of source code for plagiarism detection,2012,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC",2,,6462791,128,135,,,10.1109/APSEC.2012.141,http://www.scopus.com/inward/record.url?eid=2-s2.0-84874640040&partnerID=40&md5=9e4f6807ba7b3349dc7ccfc8a50a585e,"Infosys Labs, Bangalore, India; Ponitificia Universidad Catlica de Chile, Santiago, RM, Chile","Asadullah, A., Infosys Labs, Bangalore, India; Raju, M.B., Infosys Labs, Bangalore, India; Stern, I., Ponitificia Universidad Catlica de Chile, Santiago, RM, Chile; Bhat, V.D., Infosys Labs, Bangalore, India","Plagiarism detection in software programs is very important in both academia and industry. There are many tools available today to aid in detecting plagiarism in text and source documents. Most of the plagiarism detection tools for source code do some sort of pre-processing, like removing comments &amp; blank spaces and using uniform tokens for primitive types &amp; variables, before actually applying intelligent matching techniques so that the tool can detect the copied code even if it is changed in format and variable names etc. In this paper, we propose a novel preprocessing approach based on design patterns such that any code that is intelligently plagiarized can also be easily located. © 2012 IEEE.",Design Patterns; Plagiarism Detection; Preprocessing; Source Code Plagiarism Detection,Java programming language; Software engineering; Design Patterns; Detecting plagiarism; Matching techniques; Plagiarism detection; Preprocessing; Preprocessing approaches; Primitive types; Software program; Source code plagiarisms; Source codes; Intellectual property,,,,,,"Copy Paste Detector, , http://pmd.sourceforge.net/cpd.html; Moss, , http://theory.stanford.edu/aiken/moss/; Plagiarism-britannica Online Encyclopedia, , http://www.britannica.com/EBchecked/; Sim, , http://www.cs.vu.nl/dick/sim.html; (2006) Design Pattern Detection, , http://java.uom.gr/nikos/patterndetection.html; Baker, B., A program for identifying duplicated code (1992) Proceedings of Computing Science and Statistics:24th Symposium on the Interface, 24, pp. 49-57; Baker, B.S., On finding duplication and near duplication in large software systems (1995) 2nd Working Conf. on Reverse Engineering; Baxter, I.D., Yahin, A., Moura, L., Anna, M.S., Clone, B.L., Detection using abstract syntax trees (1998) Intl. Conference on Software Maintenance, pp. 368-377; Chen, X., Francia, B., Li, M., McKinnon, B., Seker, A., Shared information and program plagiarism detection (2004) IEEE Transactions on Information Theory, 50 (7), pp. 1545-1551; Chilowicz, M., Duris, E., Roussel, G., (2011) Syntax Tree Fingerprinting: A Foundation for Source Code Similarity Detection, , Sept; Erich Gamma, R.J., Helm, R., Vlissides, J., (2011) Design Patterns: Elements of Reusable Object-oriented Software, , 39, March; Gitchell, D., Tran, N., Sim: A Utility for Detecting Similarity in Computer Programs; Heckel, P., A technique for isolating differences between files (1978) Communications of the ACM, 21 (4), pp. 264-268. , April; Jiang, L., Misherghi, G., Su, Z., Glondu, S., DECKARD: Scalable and accurate tree-based detection of code clones (2007) Proceedings - International Conference on Software Engineering, pp. 96-105. , DOI 10.1109/ICSE.2007.30, 4222572, Proceedings - 29th International Conference on Software Engineering, ICSE 2007; Kerievsky, J., (2004) Refactoring to Patterns, , Addision Wesley Signature Series; Koschke, R., Falke, R., Frenzel, P., Clone detection using abstract syntax suffix trees (2006) Proceedings - Working Conference on Reverse Engineering, WCRE, pp. 253-262. , DOI 10.1109/WCRE.2006.18, 4023995, Proceedings - 13th Working Conference on Reverse Engineering, WCRE 2006; Krinke, J., Identifying similar code with program dependence graphs (2001) Reverse Engineering - Working Conference Proceedings, pp. 301-309; Liu, C., Chen, C., Han, J., Yu, P.S., GPLAG: Detection of software plagiarism by program dependence graph analysis (2006) Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 2006, pp. 872-881. , KDD 2006: Proceedings of the Twelfth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining; Lukcsy, G., Szeredi, P., Plagiarism Detection in Source Programs Using Structural Similarities; Zechner, R.K.M., Muhr, M., Granitzer, M., (2009) External and Intrinsic Plagiarism Detection Using Vector Space Models; Marcus, A., Maletic, J.I., Identification of high-level concept clones in source code (2001) 16th IEEE International Conference on Automated Software Engineering, p. 107; Michael, J.W., Running karp rabin matching and greedy string tiling (1993) Basser Department of Computer Science Technical Report, , March; Chilowicz, E.D.M., Roussel, G., Finding similarities in source code through factorization (2011) Electronic Notes in Theoretical Computer Science, , September; Myles, G., Collberg, C., Detecting software theft via whole program path birthmarks (2004) Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), 3225, pp. 404-415; Ohno, A., Murao, H., Work in progress - A novel methodology to reduce instructors and students psychological burdens in source code plagiarism detection (2010) 40th ASEE/IEEE Frontiers in Education Conference; Parker, A., Hamblen, J., Computer algorithms for plagiarism detection (1989) IEEE Transactions on Education, 32 (2), pp. 94-99; Prechelt, L., Malpohl, G., Philippsen, M., Jplag: Finding plagiarisms among a set of programs (2000) Technical Report University of Karlsruhe Department of Informatics; Schleimer, S., Wilkerson, D.S., Aiken, A., Winnowing: Local algorithms for document fingerprinting (2003) ACM SIGMOD International Conference on Management of Data, pp. 76-85; Shams, K., Plagiarism detection using semantic analysis (2010) Thesis Report, , April; Wise, M., Yap3: Improved detection of similarities in computer program and other texts (1996) SIGCSEB: SIGCSE Bulletin ACM Special Interest Group on Computer Science Education","Asadullah, A.; Infosys Labs, Bangalore, India; email: allahbaksh.asadullah@infosys.com",,ACM Hong Kong Chapter;IEEE Hong Kong Section Computer Society Chapter,IEEE Computer Society,"19th Asia-Pacific Software Engineering Conference, APSEC 2012",4 December 2012 through 7 December 2012,Hong Kong,95873,15301362,9780769549224,,,English,Proc. Asia Pac. Softw. Eng. Conf. APSEC,Conference Paper,Scopus,2-s2.0-84874640040,,
FALSE,3,v,"Heckmann, P., Speicher, D.",Assisted software exploration using formal concept analysis,2012,"Proceedings of the 3rd International Workshop on Software Knowledge, SKY 2012 - In Conjunction with IC3K 2012",,,,11,21,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84918772947&partnerID=40&md5=65ec34cde16c8f79c779eff9ec8e6753,"Institute of Computer Science III, University of Bonn, Bonn, Germany","Heckmann, P., Institute of Computer Science III, University of Bonn, Bonn, Germany; Speicher, D., Institute of Computer Science III, University of Bonn, Bonn, Germany","Program comprehension requires understanding the structures within the program. Some of these structures are created intentionally and well known (design pattern), others arise implicitly but are still meaningful, and finally some structures emerge accidentally without any meaning. We build on a previously suggested approach to mine structures in software using Formal Concept Analysis. In contrast to previous work, we found the performance of our tool to be still acceptable for projects of interesting size (~600 classes). A prominence index for classes based on the formal concepts proved to be helpful for the identification of core structures (high prominence) as well for focusing on specific structures (low prominence). We report about two experiments. In the first the tool guided the experimenter to central structures of JUnit as documented before but unknown by the experimenter. In the second the tool led us to the core structures of our own software.",,Information analysis; Knowledge management; Core structure; Design Patterns; Formal concepts; Mine structure; Program comprehension; Formal concept analysis,,,,,,"Aŕevalo, G., (2004) High Level Views in Object-Oriented Systems Using Formal Concept Analysis, , PhD thesis University of Bern; Belderrar, A., Kpodjedo, S., Gúehéneuc, Y.-G., Antoniol, G., Galinier, P., Sub-graph mining: Identifying micro-architextures in evolving object-oriented software (2011) Europ. Conference on Software Maintenance and Reengineering; Carpineto, C., Romano, G., (2004) Concept Data Analysis Theory and Applications, , Wiley & Sons; Cordella, L.P., Foggia, P., Sansone, C., Vento, M., An improved algorithm for matching large graphs (2001) 3rd IAPR-TC15 Workshop on Graph-based Representations in Pattern Recognition Cuen, pp. 149-159. , Cuen; Eden, A.H., Hirshfeld, Y., Yehudai, A., LePUS-A declarative pattern specification language (1998) Technical Report; Gamma, E., Helm, R., Johnson, R., Design patterns (1994) Elements of Reusable Object- Oriented Software, , Addison-Wesley-Longman; Ganter, B., Wille, R., (1998) Formal Concept Analysis: Mathematical Foundations, , Springer; Gupta, M., Pande, A., Design patterns mining using subgraph isomorphism: Relational view (2011) International Journal of Software Engineering and Its Applications (IJSEIA); Krajca, P., Outrata, J., Vychodil, V., Parallel recursive algorithm for FCA (2008) Concept Lattices and Their Applications (CLA), pp. 71-82; Smith, J.M., Stotts, D., Elemental design patterns: A formal semantics for composition of oo software architecture (2002) IEEE/NASA Software Engineering Workshop, pp. 183-190; Tonella, P., Antoniol, G., Object oriented design pattern inference (1999) Proceedings of ICSM, 230p. , IEEE Computer Society Press; Zhang, Z.-X., Li, Q.-H., Ke-Rongben, A new method for design pattern mining (2004) International Conference on Machine Learning and Cybernetics",,Llorens J.Fraga A.Exman I.,,INSTICC Press,"3rd International Workshop on Software Knowledge, SKY 2012, In Conjunction with the International Joint Conference on Knowledge Discovery, Knowledge Engineering and Knowledge Management, IC3K 2012",4 October 2012,,109442,,9789898565327,,,English,"Proc. Int. Workshop Softw. Knowl., SKY - Conjunction ICK",Conference Paper,Scopus,2-s2.0-84918772947,,
TRUE,v,v,"Romano, S., Scanniello, G., Risi, M., Gravino, C.",Clustering and lexical information support for the recovery of design pattern in source code,2011,"IEEE International Conference on Software Maintenance, ICSM",,,6080818,500,503,,3,10.1109/ICSM.2011.6080818,http://www.scopus.com/inward/record.url?eid=2-s2.0-83455200851&partnerID=40&md5=5a4e8daecebfed548018ee9fed05584d,"Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy; Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy","Romano, S., Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy; Scanniello, G., Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy; Risi, M., Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy; Gravino, C., Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy","We propose an approach that leverages lexical information and fuzzy clustering to reduce the number of the design pattern instances that existing approaches based on structural information (i.e., navigating the dependencies among software elements) erroneously recover in source code. To assess the effectiveness of the techniques, we present the results of a case study conducted on four open source software systems implemented in java. The data analysis indicates that the use of lexical information and fuzzy clustering improves the correctness of the results achieved by existing design pattern recovery approaches based on structural information, while preserving the number of design pattern instances correctly identified. © 2011 IEEE.",Design Patterns; Fuzzy clustering; Maintenance,Design pattern recovery; Design Patterns; Lexical information; Open source software systems; Software elements; Source codes; Structural information; Cluster analysis; Codes (symbols); Computer software; Computer software maintenance; Design; Fuzzy clustering; Information dissemination; Maintainability; Maintenance; Recovery; Open systems,,,,,,"De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design Pattern Recovery through Visual Language Parsing and Source Code Analysis (2009) Jour. of Syst. & Softw., 18 (7), pp. 1177-1193; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional, 1 edition, November; Guéhéneuc, Y.-G., P-MARt: Pattern-like Micro Architecture Repository (2007) Proc. of EuroPLoP Focus Group on Pattern Repositories; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A Multilayered Approach for Design Pattern Identification (2008) IEEE Trans. on Softw. Engineer, 34 (5), pp. 667-684; Ng, J.K.-Y., Guéhéneuc, Y.-G., Antoniol, G., Identification of behavioural and creational design motifs through dynamic analysis (2010) Jour. of Softw. Mainten., 22 (8), pp. 597-627; Kaufman, L., Rousseeuw, P.J., Finding Groups in Data - An Introduction to Cluster Analysis, , Wiley; Manning, C.D., Raghavan, P., Schütze, H., (2008) Introduction to Information Retrieval, , http://nlp.stanford.edu/IR-book/information-retrieval-book.html, Cambridge University Press; McMillan, C., Grechanik, M., Poshyvanyk, D., Xie, Q., Fu, C., Portfolio: A search engine for finding functions and their usages (2011) Proc. of Intl Conf. on Softw. Eng., pp. 1043-1045; Berkhin, P., Survey of Clustering Data Mining Techniques Techniques, 10, pp. 1-56. , http://www.springerlink.com/index/x321256p66512121.pdf, Springer. Retrieved from; P-MARt, , http://ptidej.dyndns.org/downloads/pmart/; Salton, G., McGill, M., (1983) Introduction to Modern Information Retrieval, , McGraw Hill; Scanniello, G., D'Amico, A., D'Amico, C., D'Amico, T., Using the Kleinberg Algorithm and Vector Space Model for Software System Clustering (2010) Proc. of Intl. Conf. on Prog. Compr., pp. 180-189; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112","Romano, S.; Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy",,,,"27th IEEE International Conference on Software Maintenance, ICSM 2011",25 September 2011 through 30 September 2011,"Williamsburg, VA",87662,,9781457706646,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-83455200851,,
FALSE,v,3,"Gaudel, V., Singhoff, F., Plantec, A., Rubini, S., Dissaux, P., Legrand, J.",An Ada design pattern recognition tool for AADL performance analysis,2011,Proceedings of the ACM SIGAda Annual International Conference; SIGAda,,,,61,68,,4,10.1145/2070337.2070359,http://www.scopus.com/inward/record.url?eid=2-s2.0-83455258111&partnerID=40&md5=21286d884e984a2876fe4515e843ba7a,"LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; Ellidiss Technologies, 24, quai de la douane, 29200 Brest, France","Gaudel, V., LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; Singhoff, F., LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; Plantec, A., LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; Rubini, S., LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; Dissaux, P., Ellidiss Technologies, 24, quai de la douane, 29200 Brest, France; Legrand, J., Ellidiss Technologies, 24, quai de la douane, 29200 Brest, France","This article deals with performance verification of architecture models of real-time embedded systems. Although real-time scheduling theory provides numerous analytical methods called feasibility tests for scheduling analysis, their use is a complicated task. In order to assist an architecture model designer in early verification, we provide an approach, based on real-time specific design patterns, enabling an automatic schedulability analysis. This analysis is based on existing feasibility tests, whose selection is deduced from the compliance of the system to a design pattern and other system's properties. Those conformity verifications are integrated into a schedulability tool called Cheddar. We show how to model the relationships between design patterns and feasibility tests and design patterns themselves. Based on these models, we apply a model-based engineering process to generate, in Ada, a feasibility test selection tool. The tool is able to detect from an architecture model which are the feasibility tests that the designer can apply. We explain a method for a designer willing to use this approach. We also describe the design patterns defined and the selection algorithm. © 2011 ACM.",aadl; ada framework; cheddar; design patterns; platypus; real-time schedulability analysis,aadl; ada framework; cheddar; design patterns; platypus; Real-time schedulability analysis; Embedded systems; Machine design; Machinery; Models; Pattern recognition systems; Real time systems; Scheduling algorithms; Testing; Ada (programming language),,,,,,"(1997) Avionics Application Software Standard Interface, , Arinc. The Arinc Committee, January; Burns, A., Dobbing, B., Romanski, G., The ravenscar tasking profile for high integrity real-time programs (1998) Lecture Notes in Computer Science, 1411, pp. 263-275. , Lars Asplund, editor, Reliable Software Technologies Ada-Europe, Springer Netherlands; Burns, A., Wellings, A.J., (1995) HRT-HOOD: A Structured Design Method for Hard Real-time Ada Systems, 3. , Elsevier Science; Cottet, F., Delacroix, J., Kaiser, C., Mammeri, Z., (2002) Scheduling in Real-time Systems, , Wiley Online Library; Dissaux, P., Singhoff, F., Stood and Cheddar: AADL as a Pivot Language for Analysing Performances of Real Time Architectures (2008) Proceedings of the European Real Time System Conference. Toulouse, France, , January; Fernández Sánchez, J., Mármol Acitores, G., Modelling and Evaluating Real-Time Software Architectures (2009) LNCS, 5570, pp. 164-176. , Reliable Software Technologies-Ada-Europe 2009, Springer; George, L., Rivierre, N., Spuri, M., Preemptive and Non-Preemptive Real-time Uni-processor Scheduling (1996) INRIA Technical Report Number 2966; Gilles, O., Hugues, J., Expressing and enforcing user-defined constraints of AADL models (2010) 2010 15th IEEE International Conference on Engineering of Complex Computer Systems, pp. 337-342. , IEEE; Harbour, G., Garcia, G., Gutierrez, P., Moyano, D., MAST: Modeling and analysis suite for real time applications (2002) Real-Time Systems, 13th Euromicro Conference on, 2001, pp. 125-134. , IEEE; Liu, C.L., Layland, J.W., Scheduling algorithms for multiprogramming in a hard-real-time environment (1973) Journal of the ACM (JACM), 20 (1), pp. 46-61; Panunzio, M., Vardanega, T., A metamodel-driven process featuring advanced model-based timing analysis (2007) LNCS, 4498, pp. 128-141. , Reliable software technologies: Ada-Europe 2007: 12th Ada-Europe International Conference on Reliable Software Technologies, Geneva, Switzerland, June 25-29, 2007: proceedings, Springer-Verlag New York Inc; Plantec, A., Singhoff, F., Refactoring of an Ada 95 Library with a Meta CASE Tool (2006) ACM SIGAda Ada Letters, 26 (3), pp. 61-70. , ACM Press, New York, USA, November; Plantec, A., Singhoff, F., Dissaux, P., Legrand, J., Enforcing applicability of real-time scheduling theory feasibility tests with the use of design-patterns (2010) Lecture Notes in Computer Science, 6415, pp. 4-17. , Tiziana Margaria and Bernhard Steffen, editors, Leveraging Applications of Formal Methods, Verification, and Validation, Springer Berlin / Heidelberg; (2007) Platypus Technical Summary and Download, , http://cassoulet.univ-brest.fr/mme/; Architecture Analysis and Design Language (AADL) AS-5506A (2009) Aerospace Information Report, , SAE. Technical report, The Engineering Society For Advancing Mobility Land Sea Air and Space, Version 2.0, January; Singhoff, F., A taxonomy of real-time scheduling theory feasibility tests (2010) LISyC Technical Report, , http://beru.univ-brest.fr/~singhoff/cheddar, number singhoff-01-2010, Available at February; Singhoff, F., Plantec, A., Towards User-Level extensibility of an Ada library: An experiment with Cheddar (2007) LNCS, 4498, pp. 180-191. , Proceedings of the 12th International Conference on Reliable Software Technologies, Ada-Europe. Springer-Verlag, Geneva, June; Singhoff, F., Plantec, A., Dissaux, P., Legrand, J., Investigating the usability of real-time scheduling theory with the Cheddar project (2009) Real-Time Systems, 43 (3), pp. 259-295; Spiby, P., (1992) ISO 10303 Industrial Automation Systems-product Data Representation and Exchange-part 11: Description Methods: The Express Language Reference Manual, pp. 10303-10311. , ISO DIS; Vestal, S., (1998) Meta-H User's Manual, , http://www.htc.honeywell.com/metah/uguide.pdf, Version 1.27. Technical report, download at; Warmer, J., Kleppe, A., (2003) The Object Constraint Language: Getting Your Models Ready for MDA, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA, 2 edition","Gaudel, V.; LISyC/EA 3883, University of Brest, 20, av Le Gorgeu CS 93837, 29238 Brest Cedex 3, France; email: gaudel@univ-brest.fr",,"Assoc. Comput. Mach., Spec. Interest Group;Ada Program. Lang. (ACM SIGAda);AdaCore;Ellidiss Software;LDRA;Rapita Systems",,"2011 Annual International Conference of the Association for Computing Machinery's Special Interest Group on the Ada Programming Language, SIGAda 2011",6 November 2011 through 10 November 2011,"Denver, CO",87681,,9781450310284,,,English,Proc. ACM SIGAda Annu. Int. Conf.,Conference Paper,Scopus,2-s2.0-83455258111,,
TRUE,4,4,"Gravino, C., Risi, M., Scanniello, G., Tortora, G.",Does the documentation of design pattern instances impact on source code comprehension? results from two controlled experiments,2011,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,6079776,67,76,,4,10.1109/WCRE.2011.18,http://www.scopus.com/inward/record.url?eid=2-s2.0-83455213308&partnerID=40&md5=62a35e308cea55c9187b7069b6ceae8f,"Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy; Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy","Gravino, C., Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy; Risi, M., Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy; Scanniello, G., Dipartimento di Matematica e Informatica, University of Basilicata, Viale dell'Ateneo, I-85100, Potenza, Italy; Tortora, G., Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy","We present the results of a controlled experiment and a differentiated replication that have been carried out to assess the effect of the documentation of design patterns on the comprehension of source code. The two experiments involved Master Students in Computer Science at the University of Basilicas a and at University of Salerno, respectively. The participants to the original experiment performed a comprehension task with and without graphically- documented design patterns. Textually documented design patterns were provided or not to the participants to perform a comprehension task within the replication. The data analysis revealed that participants employing graphically documented design patterns achieved significantly better performances than the participants provided with source code alone. Conversely, the effect of textually documented design patterns was not statistically significant. A further analysis revealed that the documentation type (textual and graphical) does not significantly affect the performance, when participants correctly recognize design pattern instances. © 2011 IEEE.",Controlled Experiment; Design Patterns; Maintenance,Comprehension tasks; Controlled experiment; Design Patterns; Source codes; Codes (symbols); Computer programming languages; Experiments; Maintenance; Reverse engineering; Design,,,,,,"Agresti, A., (2007) An Introduction to Categorical Data Analysis, , Wiley-Interscience; Basili, V.R., Shull, F., Lanubile, F., Building Knowledge through Families of Experiments (1999) IEEE Transactions on Software Engineering, 25 (4), pp. 456-473. , IEEE Press; Bennett, K.H., Rajlich, V.T., Software maintenance and evolution: A roadmap (2000) Procs of the Conference on the Future of Software Engineering, pp. 73-87. , ACM Press; Bieman, J., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) Procs of International Software Metrics Symposium, pp. 40-49. , IEEE CS Press; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , 2nd Edition, Lawrence Earlbaum Associates; Conover, W.J., (1998) Practical Nonparametric Statistics, , Wiley, 3rd Edition; Di Penta, M., Cerulo, L., Guéhéneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) Procs of the International Conference on Software Maintenance, pp. 217-226. , IEEE CS Press; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional, 1st Edition, November; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A Multilayered Approach for Design Pattern Identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684. , IEEE Press; Jeanmart, S., Guéhéneuc, Y.-G., Sahraoui, H., Habra, N., Impact of the Visitor pattern on program comprehension and maintenance (2009) Procs. of the Intl. Symposium on Empirical Software Engineering and Measurement, pp. 69-78. , IEEE CS Press; http://www.jhotdraw.org, last access, 2011Kampenes, V., Dybå, T., Hannay, J., Sjøberg, I., A systematic review of effect size in software engineering experiments (2007) Information and Software Technology, 49 (11-12), pp. 1073-1086. , Elsevier; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? Procs of the Conference on Software Maintenance and Reengineering, 2008, pp. 274-278. , IEEE CS Press; Porras, G., Guéhéneuc, Y.-G., An empirical study on the efficiency of different design pattern representations in UML class diagrams (2010) Empirical Software Engineering, 15, pp. 493-522. , Springer; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W., Two Controlled Experiments Assessing the Usefulness of Design Pattern Documentation in Program Maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , IEEE Press; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How Developers' Experience and Ability Influence Web Application Comprehension Tasks Supported by UML Stereotypes: A Series of Four Experiments (2010) IEEE Transactions on Software Engineering, 36 (1), pp. 96-118. , IEEE Press; Ricca, F., Scanniello, G., Torchiano, M., Reggio, G., Astesiano, E., On the effectiveness of screen mockups in requirements engineering: Results from an internal replication (2010) Procs. of Symp. on Empirical Software Engineering and Measurement, , ACM Press; Scanniello, G., Gravino, C., Risi, M., Tortora, G., A controlled experiment for assessing the contribution of design pattern documentation on software maintenance (2010) Procs. of Symp. on Empirical Software Engineering and Measurement, , ACM Press; Swanson, E.B., The dimensions of maintenance (1976) Procs. of the Intl. Conference on Software Engineering, pp. 492-497. , IEEE CS Press; Vokac, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 904-917. , IEEE Press; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering - An Introduction, , Kluwer Academic Publishers","Gravino, C.; Facoltà di Scienze MM. FF. NN, University of Salerno, Via Ponte Don Melillo, I-84084, Fisciano (SA), Italy; email: gravino@unisa.it",,Reengineering Forum,,"18th Working Conference on Reverse Engineering, WCRE 2011",17 October 2011 through 20 October 2011,Limerick,87657,10951350,9780769545820,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-83455213308,,
FALSE,4,1,"Barik, L.B., Patel, B., Chandrakar, O., Barik, A.",HKDA - Design pattern system architecture,2011,"2011 2nd International Conference on Computer and Communication Technology, ICCCT-2011",,,6075124,118,123,,,10.1109/ICCCT.2011.6075124,http://www.scopus.com/inward/record.url?eid=2-s2.0-82955202664&partnerID=40&md5=588b245d1bec4947907dc097eb61d78e,"Shrimad Rajandra Inst of Mgmt and Computer Application, Uka Tarsadia University, Bardoli, Surat, Gujarat, India; Vidyabharti Trust College, BBA, BCA, Umrakh, Bardoli, Surat, Gujarat, India","Barik, L.B., Shrimad Rajandra Inst of Mgmt and Computer Application, Uka Tarsadia University, Bardoli, Surat, Gujarat, India; Patel, B., Shrimad Rajandra Inst of Mgmt and Computer Application, Uka Tarsadia University, Bardoli, Surat, Gujarat, India; Chandrakar, O., Shrimad Rajandra Inst of Mgmt and Computer Application, Uka Tarsadia University, Bardoli, Surat, Gujarat, India; Barik, A., Vidyabharti Trust College, BBA, BCA, Umrakh, Bardoli, Surat, Gujarat, India","Software Design Patterns (DPs) have been recognized as very important and useful in real software development since they provide an elegant way of getting around problems that often occur. Researcher has built an ITS known as Human Knowledge Discovery Agent System-HKDA, which provides adaptive learning environment for the students by providing personalized instructions. The HKDA System makes inferences about student knowledge and interacts intelligently with students based upon individual representations of their knowledge. The design pattern system architecture of HKDA consists of eight main components. In this research, researchers are going to discuss about Student Modeller and Pedagogical Module. However, to provide a clear idea about design patterns, a small description about other components such as Domain Knowledge/Domain Model, Knowledge Management, Student Knowledge-base, Presentation Planner, Pedagogical Experts and Communication Knowledge are also given. © 2011 IEEE.",Design Pattern; Knowledge Component; Multi-agent HKDA System,Adaptive learning environment; Design Patterns; Domain knowledge; Human knowledge; Knowledge base; Knowledge components; Main component; Multi-agent HKDA System; Pedagogical experts; Pedagogical module; Personalized instruction; Real softwares; Software design patterns; Student knowledge; Communication; Computer architecture; Knowledge management; Research; Students; Software design,,,,,,"Harrer, A., Devedzic, V., Design and analysis pattern in ITS architecture (2002) Proceedings of the ICCE 2002 Conference, pp. 523-527. , CA: IEEE Computer Society; Skinner, B.F., The technology of teaching (1968) Appleton Century Crofts, , New York; Wenger, E., (1987) Artificial Intelligence and Tutoring Systems, , Los Altos, CA: Morgan Kaufmann; Beaumont, I., User modeling in the interactive anatomy tutoring system Anatomtutor (1994) User Models and User Adapted Interaction, 4 (1), pp. 21-45; Kay, J., Kummerfeld, R., An Individualized Course for the C Programming Language, , http://www.cs.su.oz.au/~bob/kay-kummerfeld.html, [Site Visited: 10 Jan. 20, 2009]; Conlan, O., Novel components for supporting adaptivity in education systems - Model-based integration approach (2000) Proc. of the 8th ACM Int. Conf. on Mult., pp. 519-520; Jeremic, Z., Jovanovic, J., Gasevic, D., Evaluating an intelligent tutoring system for design patterns: The DEPTHS experience Educational Technology & Society, 2009, 12 (2), pp. 111-130","Barik, L.B.; Shrimad Rajandra Inst of Mgmt and Computer Application, Uka Tarsadia University, Bardoli, Surat, Gujarat, India; email: lalbihari@hotmail.com",,,,"2011 2nd International Conference on Computer and Communication Technology, ICCCT-2011",15 September 2011 through 17 September 2011,Allahabad,87640,,9781457713866,,,English,"Int. Conf. Comput. Commun. Technol., ICCCT",Conference Paper,Scopus,2-s2.0-82955202664,,
TRUE,1,1,"Li, J., Jobes, C., Carr, J.",Comparison of magnetic field distribution models for a magnetic proximity detection system,2011,Conference Record - IAS Annual Meeting (IEEE Industry Applications Society),,,6074391,,,,,10.1109/IAS.2011.6074391,http://www.scopus.com/inward/record.url?eid=2-s2.0-82955246254&partnerID=40&md5=453be7ec2f49941e3a84bba1662b1755,"National Institute for Occupational Safety and Health, Pittsburgh, PA 15236, United States","Li, J., National Institute for Occupational Safety and Health, Pittsburgh, PA 15236, United States; Jobes, C., National Institute for Occupational Safety and Health, Pittsburgh, PA 15236, United States; Carr, J., National Institute for Occupational Safety and Health, Pittsburgh, PA 15236, United States","Magnetic proximity detection technology is rapidly advancing as a promising method of protecting underground mine workers from striking and pinning hazards associated with mobile mining machines. A magnetic proximity detection system requires a magnetic distribution model to estimate the proximity of the sensor to the generators. This paper presents a comparative analysis of magnetic flux density distribution models in three different field distribution design patterns. The accuracy of these models is determined with a laboratory magnetic proximity detection system. These field distribution design patterns are spherical, ellipsoidal, and sphere-cosine, respectively. The analyses show that the sphere-cosine model is the most accurate model for the proximity system followed by the ellipsoidal and spherical models. © 2011 IEEE.",Collision avoidance; electromagnetic modeling; error analysis; ferrite device; magnetic fields; magnetic flux density; magnetic sensors; mining equipment; optimization,Comparative analysis; Design Patterns; Electromagnetic modeling; Field distribution; Magnetic distributions; Magnetic field distribution; Magnetic flux densities; Magnetic flux density distribution; Magnetic proximity; Mobile mining; Spherical models; Underground mine; Collision avoidance; Earthmoving machinery; Error analysis; Ferrite devices; Industrial applications; Magnetic fields; Magnetic flux; Magnetic sensors; Mining equipment; Optimization; Sensors; Spheres,,,,,,"Li, J., Carr, J., Jobes, C., A Shell-Based Magnetic Field Model for Magnetic Detection Systems Safety Science, , Currently under revision process; Li, J., Carr, J., Bartels, J., Modeling of the Magnetic Field around a Ferrite-Cored Generator in a Proximity Detection System 14th Conference on Electromagnetic Field Computation, May 9-12, 2010, Chicago, IL, USA, , Presentation; Carr, J., Jobes, C., Li, J., Development of a Method to Determine Operator Location Using Electromagnetic Proximity Detection International Workshop on Robotic Sensors Environments, Oct. 15-16, 2010, Phoenix, AZ, USA; Schiffbauer, W., Active Proximity Warning System for Surface and Underground Mining Applications (2002) Mining Engineering; Bartels, J., Gallagher, S., Ambrose, D., Continuous Mining: A Pilot Study of the Role of Visual Attention Locations and Work Position in Underground Coal Mines (2009) Professional Safety, 54 (8), pp. 28-35. , August; Bartels, J., Ambrose, D., Gallagher, S., Analyzing Factors Influencing Struck-by Accidents of a Moving Mining Machine by Using Motion Capture and DHM Simulations Digital Human Modeling for Design and Engineering Conference and Exhibition, June 17-19, 2008, Pittsburgh, P A, USA","Li, J.; National Institute for Occupational Safety and Health, Pittsburgh, PA 15236, United States; email: Jingcheng.Li@cdc.hhs.gov",,,,"2011 46th IEEE Industry Applications Society Annual Meeting, IAS 2011",9 October 2011 through 13 October 2011,"Orlando, FL",87551,1972618,9781424494989,CIASD,,English,Conf Rec IAS Annu Meet,Conference Paper,Scopus,2-s2.0-82955246254,,
TRUE,v,v,"Arcelli Fontana, F., Maggioni, S., Raibulet, C.",Understanding the relevance of micro-structures for design patterns detection,2011,Journal of Systems and Software,84,12,,2334,2347,,8,10.1016/j.jss.2011.07.006,http://www.scopus.com/inward/record.url?eid=2-s2.0-80053563844&partnerID=40&md5=3680cfb5758c77db3878c85617e47b3c,"University of Milano-Bicocca, Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, 20126 Milan, Italy","Arcelli Fontana, F., University of Milano-Bicocca, Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, 20126 Milan, Italy; Maggioni, S., University of Milano-Bicocca, Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, 20126 Milan, Italy; Raibulet, C., University of Milano-Bicocca, Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, 20126 Milan, Italy","One important issue concerning design patterns in reverse engineering is their detection to support program comprehension, design recovery, system (re-)documentation, and software evolution. The objectives of this paper are to identify and analyze different types of building blocks of design patterns and to evaluate if the detection of these building blocks (called micro-structures) is relevant for the detection of occurrences of the design patterns. This analysis is useful to understand how the different types of micro-structures can be combined to better comprehend design patterns and to improve their detection. To achieve the objectives, the paper provides a description of different micro-structures, an analysis of their relevance in different design motifs, and a statistical analysis on the number and types of micro-structures present in different design patterns. Finally, we investigate if the detection of some design patterns can be performed only through the detection of a combined set of micro-structures, or other techniques should be exploited. © 2011 Elsevier Inc. All rights reserved.",Design motif detection; Design patterns; Micro-structures,Building blockes; Design motif detection; Design motifs; Design Patterns; Design recovery; Program comprehension; Software Evolution; Reverse engineering; System program documentation; Design,,,,,,"Arcelli, F., Cristina, L., Enhancing software evolution through design pattern detection (2007) ERCIM Proceedings of the 3rd IEEE International Workshop on Software Evolvability, pp. 7-14; Arcelli, Maggioni, S., Raibulet, C., Design pattern: A survey on their micro-structures (2011) Journal of Software Maintenance and Evolution: Research and Practice, , p. 2011; Arcelli, F., Masiero, S., Raibulet, C., Tisato, F., A comparison of reverse engineering tools based on design pattern decomposition (2005) Proceedings of the Australian Software Engineering Conference, ASWEC, 2005, pp. 262-269. , DOI 10.1109/ASWEC.2005.5, 1402021, Proceedings - 2005 Australian Software Engineering Conference ASWEC 2005; Arcelli, F., Zanoni, M., Caracciolo, A., A benchmark platform for design patterns detection (2010) Proceedings of the PATTERNS 2010 Conference, November, , Lisboa, Portugal; Arcelli, F., Zanoni, M., Maggioni, S., Using design patterns clues to improve the precision of the design pattern detection tools (2011) Journal of Object Technology, 10 (4), pp. 1-31. , doi:10.5381/jot.2011.10.1.a4; Arcelli, F., Zanoni, Tool for design pattern detection and software architecture reconstruction (2011) Journal of Information Sciences, , Elsevier. doi:10.1016/j.ins.2011.12.0022010; Brawn, K., (1997) Design Reverse Engineering and Automated Design Pattern Detection in Smalltalk, , M.Sc.; Thesis. University of Illinois, Urbana-Champaign; Chikofsky, E.J., Cross, J.H., Reverse engineering and design recovery (1990) IEEE Software, 7 (1), pp. 13-17; De Lucia, A., Deufemia, V., Gravino, C., Rissi, M., Design pattern through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; Dietrich, J., Elgar, C., Towards a web of patterns (2007) Web Semantics, 5 (2), pp. 108-116. , DOI 10.1016/j.websem.2006.11.007, PII S1570826807000030, Software Engineering and the Semantic Web; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2008) International Journal on Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley Reading MA, USA; Gil, J., Maman, I., Micro patterns in Java code (2005) Proceedings of the 20th Conference on Object-Oriented Programming Systems Languages and Applications (OOPSLA), pp. 97-116. , San Diego, USA; Guéhéneuc, Y.G., PTIDEJ: Promoting patterns with patterns (2005) Proceedings of the 1st ECOOP Workshop on Building Systems with Patterns, , Glasgow, UK; Guéhéneuc, Y.G., PMARt: Pattern-like micro architecture repository (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories, pp. 1-3. , Bavaria, Germany; Guéhéneuc Y., .G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) Transaction on Software Engineering, 34 (5), pp. 667-684. , IEEE Press; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proceedings of the 11th International Workshop on Program Comprehension, pp. 84-103; Kaczor, O., Guéhéneuc Y., .G., Hamel, S., Identification of design motifs with pattern matching algorithms (2010) Information and Software Technology Journal, 52 (2), pp. 152-168. , Elsevier; Lee, H., Youn, H., Lee, E., Automatic detection of design patternfor reverse engineering (2007) Proceedings - SERA 2007: Fifth ACIS International Conference on Software Engineering Research, Management, and Applications, pp. 577-583. , DOI 10.1109/SERA.2007.58, 4296988, Proceedings - SERA 2007: Fifth ACIS International Conference on Software Engineering Research, Management, and Applications; McC Smith, J., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Proceedings of the 18th IEEE International Conference on Automated Software Engineering, pp. 215-224. , Montreal, Canada; McC Smith, J., An Elemental Design Pattern Catalog (2002) Technical Report TR 02-040, University of North Carolina, , Chapel Hill; (2010) Micro-Structures Detector, , http://essere.disco.unimib.it/reverse/files/Micro, MSD; Müller, H.A., Jahnke, J.H., Smith, D.B., Storey, A.-A., Tilley, S.R., Wong, K., Reverse engineering: A roadmap (2000) Proceedings of the 22nd IEEE International Conference on Software Engineering (ICSE), pp. 47-60. , Limerick, Ireland; Nickel, U., Niere, J., Zndorf, A., The FUJABA environment (2000) Proceedings of the 22nd IEEE International Conference on Software Engineering (ICSE), pp. 742-745. , Limerick, Ireland; Niere, J., Schafer, W., Wadsack, J.P., Wendenhals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings - International Conference on Software Engineering, pp. 338-348; Cinnéide, Ó., (2001) Automated Application of Design Patterns: A Refactoring Approach, , Ph.D. Thesis. University of Dublin, Trinity College; Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Software and Systems Modeling, 4 (1), pp. 55-70. , DOI 10.1007/s10270-004-0059-9; Shi, N., Olsson, R.A., Reverse engineering of design patterns from Java source code (2006) Proceedings - 21st IEEE/ACM International Conference on Automated Software Engineering, ASE 2006, pp. 123-132. , DOI 10.1109/ASE.2006.57, 4019568, Proceedings - 21st IEEE/ACM International Conference on Automated Software Engineering, ASE 2006; Shonle, M., Griswold, W.G., Lerner, S., Beyond refactoring: A framework for modular maintenance of crosscutting design idioms (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIFSOFT Symposium on the Foundations of Software Engineering, pp. 175-184. , Dubrovnik, Croatia; Stencel, K., Wegrzynowicz, P., Implementation variants of the singleton design pattern (2008) Proceedings of the on the Move to Meaningful Internet Systems: OTM Workshops, LNCS, 5333, pp. 396-406; Taibi, T., (2007) Design Pattern Formalization Techniques, , IGI Publishing New York, USA; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; (2009), http://www.cs.waikato.ac.nz/ml/weka, Weka Web Site, University of Waikato","Raibulet, C.; University of Milano-Bicocca, Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, 20126 Milan, Italy; email: raibulet@disco.unimib.it",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-80053563844,,
FALSE,3,1,"Pfister, F., Chapurlat, V., Huchard, M., Nebut, C.",A design pattern meta model for systems engineering,2011,IFAC Proceedings Volumes (IFAC-PapersOnline),18,PART 1,,11967,11972,,,10.3182/20110828-6-IT-1002.03005,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866760861&partnerID=40&md5=c161b4b933297ac25a9ab4a24e457832,"LGI2P, Ecole des Mines d'Alès, Site de Nîmes, Parc Scientifique Georges Besse, 30000 Nîmes, France; LIRMM, CNRS, Université Montpellier 2, 161 rue Ada, 34095 Montpellier Cedex 5, France","Pfister, F., LGI2P, Ecole des Mines d'Alès, Site de Nîmes, Parc Scientifique Georges Besse, 30000 Nîmes, France; Chapurlat, V., LGI2P, Ecole des Mines d'Alès, Site de Nîmes, Parc Scientifique Georges Besse, 30000 Nîmes, France; Huchard, M., LIRMM, CNRS, Université Montpellier 2, 161 rue Ada, 34095 Montpellier Cedex 5, France; Nebut, C., LIRMM, CNRS, Université Montpellier 2, 161 rue Ada, 34095 Montpellier Cedex 5, France","Design patterns are widely used in software engineering. Building on lessons learned in this domain, this article proposes a suitable design pattern meta model for systems engineering with two goals. The first one is to help designers to leverage and reuse knowledge required in various engineering domains during design phases. The second one is to propose and formalize an approach that allows designers and systems architects to identify relevant design patterns and apply them in a semi-automatic manner. This approach consists to improve model alignment techniques based on model interoperability hypothesis. © 2011 IFAC.",Design-pattern; Model alignment; Model driven engineering; Systems engineering,Alignment technique; Design Patterns; Design phasis; Design-pattern; Engineering domains; Meta model; Model interoperability; Model-driven Engineering; Semi-automatics; Alignment; Design; Knowledge management; Software engineering; Systems engineering,,,,,,"Alexander, C., (1977) A Pattern Language : Towns, Buildings, Construction, , Oxford University Press; Arevalo, G., Buchli, F., Nierstrasz, O., Detecting implicit collaboration patterns (2004) 11th Working Conference on Reverse Engineering, , Delft, Netherlands; (2003) Advanced Technologies for Interoperability of Heterogeneous Enterprise Networks and Their Applications, , ATHENA; Bézivin, J., Gerbé, O., Towards a precise definition of the OMG/MDA framework (2001) 16th IEEE International Conference on Automated Software Engineering, , San Diego, U.S.A; Barcia, R., Gerken, C., Get started with model-driven development using the Design Pattern Toolkit (2006) IBM WebSphere Developer Technical Journal; Baudry, B., (2003) Assemblage Testable et Validation de Composants, , Rennes, France: Rennes 1; Brandl, D., (2006) Design Patterns for Flexible Manufacturing, , ISA; Cloutier, R.J., Verma, D., Applying the concepts of patterns to systems architecture (2007) Systems Engineering, pp. 138-154. , Wiley; Conte, A., A tool and a formalism to design and apply patterns (2002) International Conference on Object-oriented Information Systems, pp. 135-146. , Conference on Object-Oriented Information Systems OOIS. Montpellier, France; Diep, D., Alexakos, C., Wagner, T., An ontologybased interoperability framework for distributed manufacturing control (2007) 12th IEEE International Conference on EmergingTechnologies and Factory Automation, , Patras, Greece; Estefan, J.A., (2008) Survey of Model-Based Systems Engineering (MBSE) Methodologies, , Seattle, WA - U.S.A.: INCOSE; Euzenat, J., Valtchev, P., Similarity-based ontology alignment in OWL-Lite (2004) European Conference on Artificial Intelligence, , Valencia, Spain; Falleri, J.R., Metamodel matching for automatic model transformation generation (2010) Model Driven Engineering Languages and Systems, 5301, pp. 326-340; Fenves, S.J., Product information exchange: Practices and standards (2005) Transactions of the ASME Journal of Computing and Information Science in Engineering; Friendenthal, S., Moore, A., Steiner, R., (2008) A Practical Guide to SysML: The Systems Modeling Language, , Morgan Kaufmann; Gamma, E., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison- Wesley; Gueheneuc, Y.G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering; Gzara, L., Rieu, D., Tollenaere, M., An approach for building product models by reuse of patterns (2000) 7th ISPE International Conference on Concurrent Engineering CE2000, , http://www.springerlink.com/content/uw9ld0wt5v6t8vh0, Lyon, France/ [Consulté octobre 13, 2010]; Hafedh, M., (2003) Business Process ModelingLanguages: SortingThrough the Alphabet Soup, , Université du Quebec Montreal; (2008) ISO/IEC 15288:2008 - Systems Engineering - System Life Cycle Processes', , ISO; Jézéquel, J.M., Plouzeau, N., Le Traon, Y., (2005) Développement de Logiciel À Objets Avec UML, , Université de Rennes 1 [in French]; Jacobson, I., Griss, M., Jonsson, P., (1997) Software Reuse: Architecture, Process and Organization for Business Success, , Addison-Wesley Professional; Kemmerer, S.J., (2009) Manufacturing Interoperability Program, A Synopsis, , N.I.S.T; Larman, C., (2001) Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, , Prentice Hall PTR; Melnik, S., Garcia-Molina, H., Rahm, E., Similarity flooding: A versatile graph matching algorithm (2002) 18th International Conference on Data Engineering, , San Jose, CA, U.S.A; Pingaud, H., (2009) Rationalité du Développement de L'interopé rabilité dans les Organisations, , Management des Techniques Organisationnelles. Nîmes, France [in French]; Pont, M.J., (2001) Patterns for Time-Triggered Embedded Systems, , Addison-Wesley; Sanz, R., Zalewski, J., Pattern-based control systems engineering (2003) Control Systems Magazine, 23 (3), pp. 43-60; Schenk, D.A., Wilson, R., (1994) Information Modeling the EXPRESS Way, , Oxford University Press; Soley, R., (2000) Model Driven Architecture; Sunyé, G., Le Guennec, A., Jézéquel, J.M., Design patterns application in UML (2000) ECOOP, , Sophia Antipolis, France: Springer; Tonella, P., Antoniol, G., Object oriented design pattern inference (1999) IEEE International Conference on Software Maintenance, , Oxford, England, UK","Pfister, F.; LGI2P, Ecole des Mines d'Alès, Site de Nîmes, Parc Scientifique Georges Besse, 30000 Nîmes, France; email: francois.pfister@mines-ales.fr",,,,18th IFAC World Congress,28 August 2011 through 2 September 2011,Milano,86642,14746670,9783902661937,,,English,IFAC Proc. Vol. (IFAC-PapersOnline),Conference Paper,Scopus,2-s2.0-84866760861,,
TRUE,1,1,"Ranganathan, P., Nygard, K.E., Magel, K.",UML design patterns in a smart grid,2011,"Proceedings of the ISCA 26th International Conference on Computers and Their Applications, CATA 2011",,,,114,119,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871982551&partnerID=40&md5=60d20fa3d945b31f7999d2b8308216ff,"Department of Electrical Engineering, University of North Dakota, Grand Forks, ND, 58201, United States; Department of Computer Science, North Dakota State University, Fargo, ND 58102, United States","Ranganathan, P., Department of Electrical Engineering, University of North Dakota, Grand Forks, ND, 58201, United States; Nygard, K.E., Department of Electrical Engineering, University of North Dakota, Grand Forks, ND, 58201, United States; Magel, K., Department of Computer Science, North Dakota State University, Fargo, ND 58102, United States","The work is focused on modeling Smart Grid functional requirements using use case descriptors and UML class diagrams. The design patterns help identify appropriate agents in the event of any outage in a microgrid. The paper presents selective UML diagrams for different layers in a multi agent design for a power system called UML-MAPS. The architecture is cost effective, easy to track, manage and document, and is highly beneficial in modeling grid management. Copyright © 2011 by the International Society for Computers and Their Applications (ISCA).",Design patterns; Smart grid; Use cases and classe,Class E; Descriptors; Design Patterns; Functional requirement; Grid management; IS costs; Micro grid; Multi agent; Smart grid; UML class diagrams; UML design; UML diagrams; Copyrights; Smart power grids; Computer applications,,,,,,"Amin, M., Today's self healing energy and infrastructure systems (2001) IEEE Computer Apps in Power; Hossack, J., McAnhur, S.D.J., McDonald, J.R., Stokoe, J., Cumming, T., A multi-agent approach to power system disturbance diagnosis (2002) Proc. Int. Conf. on Power System Management and Control, 488, pp. 317-322; Amin, M., Powering the 21st Century: We Can -and must- Modernize the Grid (2005) IEEE Power and Energy Magazine, pp. 93-95; Jacobson, I., (2004) Object-Oriented Software Engineering: A Use Case Driven Approach, , Addison Wesley Longman Publishing Co. Inc. Redwood City, CA; Marick, B., (1994) The Craft of Software Testing: Subsystem Testing including Object-based and Object-oriented Testing, , Prentice-Hall, Inc; Bertolino, A., Gnesi, S., Use case-based testing of product lines (2003) ESEC/FSE-11: Proc.9th European Software Engineering Conference; Gilmore, S., Kloul, L., A unified approach to performance modeling and verification (2003) Dagstuhl Seminar on Probabilistic Methods in Verification and Planning; Genero, M., Piattini, M., Calero, C., Early measures for UML class diagrams (2000) L'Objet, 6 (4), pp. 489-515. , Hermes Science Publications; Zhou, Y., Measuring structure complexity of UML class diagrams (2003) J. of Electronics, 20 (3), pp. 227-231; Franklin, S., Graesser, A., Is it an agent, or just a program?: A taxonomy for autonomous agents Proc. 1996 the 3rd International Workshop on Agent Theories, Architectures and Languages, pp. 21-35. , Springer-Verlag; Pipattanasomporn, M., Feroze, H., Rahman, S., A multi-agent systems in a distributed smart grid: Design and implementation (2009) Proc. IEEE PES 2009 Power Systems Conf. and Exposition (PSCE'09), , Mar, Seattle, Washington; Wiegers, K., Software Requirements, , Second edition, Microsoft Press, ISBN-10-0-7356-1879-8; http://intelligrid.epri.com/IntelliGrid_Project_Set_Calls/2009/ Webcast_12.10.09/SG_Webcast_2009-12-16.pdfAntón, A., (1997) Goal Identification and Refinement in the Specification of Software-Based Information Systems, , Ph.D. Thesis, Georgia Institute of Technology, Atlanta, GA; O'Neill, M., Burton, F.W., Smarter garbage collection with simplifiers (2006) Proc. 2006 Workshop on Memory System Performance and Correctness (MSPC)","Ranganathan, P.; Department of Electrical Engineering, University of North Dakota, Grand Forks, ND, 58201, United States; email: prakashranganathan@mail.und.edu",,Int. Soc. Comput. Their Appl. (ISCA),,"26th International Conference on Computers and Their Applications, CATA 2011",23 March 2011 through 25 March 2011,"New Orleans, LA",94796,,9781880843802,,,English,"Proc. ISCA Int. Conf. Comput. Their Appl., CATA",Article,Scopus,2-s2.0-84871982551,,
TRUE,v,v,"Iacob, C.",Scenario-based design in design pattern mining,2011,ICED 11 - 18th International Conference on Engineering Design - Impacting Society Through Engineering Design,6,,,1,10,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84858858092&partnerID=40&md5=7a4a53561d8fa9ef5d3d33726e922870,"University of Milan, Department of Computer Science, Via Comelico, 39-41, 20135, Milan, Italy","Iacob, C., University of Milan, Department of Computer Science, Via Comelico, 39-41, 20135, Milan, Italy","Design patterns are tools to support social creativity in that they allow communities of designers to make available knowledge related to design experiences, such as problems, solutions and design decisions. Identifying design patterns is a process known as design pattern mining. This paper describes one of the techniques used throughout a series of design workshops held for identifying design patterns in the design of software applications for synchronous collaboration. The paper describes the way the technique was applied in concrete design cases, and its influence on the results obtained throughout the workshops. Results indicate that the use of scenario-base design supports the exploration of the design space of the application under design. This allows the generation of a larger number of scenario ideas to support the design pattern mining process. Copyright © 2002-2012 The Design Society. All rights reserved.",Design patterns; Design workshops; Scenarios,Concrete design; Design decisions; Design experience; Design of softwares; Design Patterns; Design spaces; Design support; Design workshops; Scenario-based design; Scenarios; Social creativity; Synchronous collaboration; Techniques used; Engineering; Industrial engineering; Design,,,,,,"Borchers, J., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons, Inc; Turner, S.G., (1998) A Case Study Using Scenario-Based Design Tools and Techniques in the Formative Evaluation Stage of Instructional Design: Prototype Evaluation and Redesign of A Web-Enhanced Course Interface, , Ph.D. Thesis; Carroll, J.M., Five reasons for scenario-based design Proceedings of the Hawaii International Conference on System Sciences (HICSS '99, 3, p. 3051. , IEEE Computer Society, Washington, DC, USA; Fischer, G., Social creativity: Turning barriers into opportunities for collaborative design (2004) PDC 2004 - Proceedings of the Eight Participatory Design Conference 2004 - Artful Integration: Interweaving Media, Materials and Practices, pp. 152-161. , PDC 2004 - Proceedings of the Eight Participatory Design Conference 2004 - Artful Integration: Interweaving Media, Matrials and Practices; Fischer, G., Ostwald, J., Knowledge communication in design communities (2005) Barriers and Biases in Computer-Mediated Knowledge Communication, pp. 213-242. , R. Bromme, F. Hesse, & H. Spada (Eds.), Springer, New York, NY; Díaz, P., Rosson, M.B., Aedo, I., Carroll, J.M., Web design patterns: Investigating user goals and browsing strategies (2009) Proc.Of the Symposium on End-User Development, pp. 186-204. , Siegen, Germany, March 02-04; Alexander, C.A., (1977) Pattern Language: Towns, Buildings, Construction, , New York: Oxford University Press; Tidwell, J., (2005) Designing Interfaces: Patterns for Effective Interaction Design, , O'Reilly Media; Welie, M., (2010) Patterns in Interaction Design, , http://www.welie.com, Retrieved: June, 20th; Crumlish, C., Malone, E., (2009) Designing Social Interfaces, , O'Reilly Media, Inc; Lukosch, S., Schümmer, T., Communicating design knowledge with groupware technology patterns: The case of shared object management (2004) CRIWG, pp. 223-237; Schadewitz, N., Design patterns for cross-cultural collaboration (2009) International Journal of Design, 3, p. 3; Amershi, S., Morris, M.R., CoSearch: A system for co-located collaborative web search Proceeding of CHI '08. ACM, pp. 1647-1656. , New York, NY, USA; Margaritis, M., Avouris, N., Kahrimanis, G., On supporting users' reflection during small groups synchronous collaboration (2006) 12th International Workshop on Groupware, CRIWG, , LNCS 4154. Springer; Wenger, R.E., (2002) Cultivating Communities of Practice, , Harvard Business School Press, Boston; Murray, K.S., (1995) Learning As Knowledge Integration, , Doctoral Thesis. UMI Order Number: UMI Order No. GAX95-34902., University of Texas at Austin; Fischer, G., Ostwald, J., Knowledge management: Problems, promises, realities, and challenges (2001) IEEE Intelligent Systems and Their Applications, 16 (1), pp. 60-72. , DOI 10.1109/5254.912386; Musen, M.A., Dimensions of knowledge sharing and reuse (1992) Comput. Biomed. Res, 25 (5), pp. 435-467; Shah, C., Marchionini, G., Kelly, D., Learning design principles for a collaborative information seeking system Proceedings of CHI '09. ACM, pp. 3419-3424. , New York, NY, USA; Adler, A., Nash, J.C., Noel, S., Evaluating and implementing a collaborative office document system (2006) Interacting with Computers, 18 (4), pp. 665-682. , DOI 10.1016/j.intcom.2005.10.001, PII S0953543805000810; GoogleDocs, , http://www.docs.google.com/; Klopfer, E., Perry, J., Squire, K., Jan, M.F., Steinkuehler, C., Mystery at the museum: A collaborative game for museum education Proceedings of the 2005 Conference on Computer Support for Collaborative Learning: Learning 2005: The Next 10 Years! (CSCL '05), pp. 316-320. , International Society of the Learning Sciences; Battocchi, A., Pianesi, F., Tomasini, D., Zancanaro, M., Esposito, G., Venuti, P., Ben Sasson, A., Weiss, P.L., Collaborative puzzle game: A tabletop interactive game for fostering collaboration in children with autism spectrum disorders (ASD) Proceedings of the International Conference on Interactive Tabletops and Surfaces (ITS ' 09). ACM, pp. 197-204. , New York, NY, USA; Iacob, C., A design pattern mining method for interaction design (2011) ACM SIGCHI Symposium on Engineering Interactive Computing Systems (EICS2011), , Pisa, Italy, June 13-16, 2011","Iacob, C.; University of Milan, Department of Computer Science, Via Comelico, 39-41, 20135, Milan, Italy; email: iacob@dico.unimi.it",,,,"18th International Conference on Engineering Design, ICED 11",15 August 2011 through 18 August 2011,Copenhagen,89092,,9781904670261,,,English,ICED - Int. Conf. Eng. Des. - Impacting Soc. Through Eng. Des.,Conference Paper,Scopus,2-s2.0-84858858092,,
TRUE,v,v,"Uchiyama, S., Washizaki, H., Fukazawa, Y., Kubo, A.",Design pattern detection using software metrics and machine learning,2011,CEUR Workshop Proceedings,708,,,38,47,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891920848&partnerID=40&md5=1d86d521657922426942e5da1bc41a1b,"Dept. Computer Science and Engineering, Waseda University, Tokyo, Japan; Aoyama Media Laboratory, Tokyo, Japan","Uchiyama, S., Dept. Computer Science and Engineering, Waseda University, Tokyo, Japan; Washizaki, H., Dept. Computer Science and Engineering, Waseda University, Tokyo, Japan; Fukazawa, Y., Dept. Computer Science and Engineering, Waseda University, Tokyo, Japan; Kubo, A., Aoyama Media Laboratory, Tokyo, Japan","The understandability, maintainability, and reusability of object-oriented programs could be improved by automatically detecting well-known design patterns in programs. Many existing detection techniques are based on static analysis and use strict conditions composed of class structure data. Hence, it is difficult for them to detect design patterns in which the class structures are similar. Moreover, it is difficult for them to deal with diversity in design pattern applications. We propose a design pattern detection technique using metrics and machine learning. Our technique judges candidates for the roles that compose the design patterns by using machine learning and measurements of metrics, and it detects design patterns by analyzing the relations between candidates. It suppresses false negatives and distinguishes patterns in which the class structures are similar. We conducted experiments that showed that our technique was more accurate than two previous techniques.",Component; Design pattern; Machine learning; Object-oriented software; Software metrics,Class structures; Component; Design pattern detections; Design Patterns; Object oriented software; Object-oriented program; Software metrics; Understandability; Computer software reusability; Computer software selection and evaluation; Learning systems; Reusability; Software architecture; Static analysis,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Lorenz, M., Kidd, J., (1994) Object-Oriented Software Metrics, , Prentice Hall; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; Blewitt, A., Bundy, A., Stark, L., Automatic verification of design patterns in java (2005) Proceedings of the 20th International Conference on Automated Software Engineering, pp. 224-232; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000) Proceedings of the 6th International Conference on Software Reuse: Advances in Software Reusability, pp. 318-335; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) IEEE International Conference on Software Maintenance, ICSM, 2005, pp. 295-304. , DOI 10.1109/ICSM.2005.40, 1510125, Proceedings of the 21st IEEE International Conference on Software Maintenance, ICSM 2005; Washizaki, H., Fukaya, K., Kubo, A., Fukazawa, Y., Detecting design patterns using source code of before applying design patterns (2009) 8th IEEE/ACIS International Conference on Computer and Information Science, pp. 933-938; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134; Lee, H., Youn, H., Lee, E., Automatic detection of design patternfor reverse engineering (2007) Proceedings - SERA 2007: Fifth ACIS International Conference on Software Engineering Research, Management, and Applications, pp. 577-583. , DOI 10.1109/SERA.2007.58, 4296988, Proceedings - SERA 2007: Fifth ACIS International Conference on Software Engineering Research, Management, and Applications; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) 4th ICSE 2006 Workshop on Dynamic Analysis, pp. 33-40; Hayashi, S., Katada, J., Sakamoto, R., Kobayashi, T., Saeki, M., Design pattern detection by using meta patterns (2008) IEICE Transactions, 91 D (4), pp. 933-944; Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; Guéhéneuc, Y., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Software Engineering, 34 (5), pp. 667-684; Dietrich, J., Elgar, C., Towards a web of patterns (2005) Proceedings of First International Workshop Semantic Web Enabled Software Engineering, pp. 117-132; Basili, V.R., Weiss, D.M., A methodology for collecting valid software engineering data (1984) IEEE Transactions on Software Engineering, 10 (6), pp. 728-738; Segaran, T., (2007) Programming Collective Intelligence, , O'Reilly; Hirano, H., (2008) Neural Network Implemented with C++ and Java, , Personal Media; Yuki, H., An Introduction to Design Pattern to Study by Java, , http://www.hyuki.com/dp/; Tanaka, H., Hello World with Java!, , http://www.hellohiro.com/pattern/; Oracle Technology Network for Java Developers, , http://www.oracle.com/technetwork/java/index.html; Resources for Test Driven Development, , http://www.junit.org/; Spring Source, , http://www.springsource.org/","Dept. Computer Science and Engineering, Waseda University, Tokyo, Japan",,Software Improvement Group (SIG),,"Joint 1st Int. Workshop on Model-Driven Software Migration, MDSM 2011 and the 5th International Workshop on Software Quality and Maintainability, SQM 2011 - Workshops at the 15th European Conf. on Software Maintenance and Reengineering, CSMR 2011",1 March 2011 through 1 March 2011,Oldenburg,101922,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84891920848,,
TRUE,4,4,"Cruz Torres, M.H., Van Beers, T., Holvoet, T.",(No) more design patterns for multi-agent systems,2011,"SPLASH'11 Workshops - Compilation Proceedings of the Co-Located Workshops: DSM'11, TMC'11, AGERE'11, AOOPES'11, NEAT'11, and VMIL'11",,,,213,219,,4,10.1145/2095050.2095083,http://www.scopus.com/inward/record.url?eid=2-s2.0-84856497034&partnerID=40&md5=8a1d3b629facd6f77b63bfce8b1b8736,"Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium","Cruz Torres, M.H., Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium; Van Beers, T., Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium; Holvoet, T., Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium","A multi-agent systems (MAS) can be used to solve several problems that permeate current complex software systems design, specially distributed systems. The MAS research community has extensively studied protocols, algorithms, methodologies, and architectures to create autonomous, adaptable, robust, and scalable systems. Despite the MAS research achievements, mainstream software developers do not leverage from this knowledge. Design patterns provide a simple, although effective, mechanism to disseminate knowledge about well proven solutions for recurrent software design problems. The widespread acceptance, by the software development industry, of design patterns shows their effectiveness. Some researchers attempted to identify MAS design patterns, what is a first step towards broader acceptance of MAS solutions. However, we believe that the MAS research community needs to embrace the identification of MAS design patterns in order to spread MAS solutions to the software industry. © 2011 ACM.",coordination mechanisms; design patterns; distributed systems; multi-agent system; service allocation,Complex software systems; Coordination mechanisms; design patterns; Distributed systems; Research communities; Scalable systems; Service allocations; Software developer; Software industry; Cobalt compounds; Computer systems programming; Coordination reactions; Distributed computer systems; Knowledge management; Multi agent systems; Network architecture; Research; Software agents; Systems analysis; Software design,,,,,,"Aridor, Y., Lange, D., Agent design patterns: Elements of agent application design (1998) Proceedings of the Second International Conference on Autonomous Agents, pp. 108-115. , ACM; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) A System of Patterns: Pattern-oriented Software Architecture; Claes, R., Holvoet, T., Van Gompel, J., Coordination in hierarchical pickup and delivery problems using delegate multi-agent systems (2010) Proceedings of the 4th Workshop on Artificial Transportation Systems and Simulation, pp. 1-7. , https://lirias.kuleuven.be/handle/123456789/276845, September; Claes, R., Holvoet, T., Weyns, D., A decentralized approach for anticipatory vehicle routing using delegate multiagent systems (2011) IEEE Transactions on Intelligent Transportation Systems, (99). , http://dx.doi.org/10.1109/TITS.2011.2105867, March URL https://lirias.kuleuven.be/handle/123456789/309776; Cline, M.P., The Pros and Cons of Adopting and Applying Design Patterns in the Real World (1996) Communications of the ACM, 39 (10), pp. 47-49; Cossentino, M., Burrafato, P., Lombardo, S., Sabatucci, L., Introducing pattern reuse in the design of multi-agent systems (2003) Agent Technologies, Infrastructures, Tools, and Applications for E-Services, pp. 107-120; De Wolf, T., Holvoet, T., Design patterns for decentralised coordination in self-organising emergent systems (2007) Engineering Self-Organising Systems: Fourth International Workshop, ESOA 2006, 4335, pp. 28-49. , https://lirias.kuleuven.be/handle/123456789/146105; Deugo, D., Weiss, M., Kendall, E., Reusable patterns for agent coordination Coordination of Internet Agents, pp. 347-368. , Omicini, A., Springer; Fernandez-Marquez, J.L., Arcos, J.L., Serugendo, G.D.M., Viroli, M., Montagna, S., Description and composition of bio-inspired design patterns: The gradient case (2011) Proceedings of the 3rd Workshop on Biologically Inspired Algorithms for Distributed Systems, BADS '11, pp. 25-32. , http://doi.acm.org/10.1145/1998570.1998575, New York, NY, USA, ACM. ISBN 978-1-4503-0733-8. doi: URL http://doi.acm.org/10.1145/1998570.1998575; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Professional; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (2002) Design Patterns, 1. , Addison-Wesley Reading, MA; Hassas, S., Marzo-Serugendo, G.D., Karageorgos, A., Castelfranchi, C., On self-organising mechanisms from social, business and economic domains (2006) Informatica (Ljubljana), 30 (1), pp. 63-71; Heyman, T., Yskout, K., Scandariato, R., Joosen, W., An analysis of the security patterns landscape (2007) Proceedings of the Third International Workshop on Software Engineering for Secure Systems, p. 3. , IEEE Computer Society; Holvoet, T., Weyns, D., Valckenaers, P., Patterns of delegate mas (2009) Self-Adaptive and Self-Organizing Systems, International Conference on, pp. 1-9. , http://doi.ieeecomputersociety.org/10.1109/SASO.2009.31, 0; Holvoet, T., Weyns, D., Valckenaers, P., Delegate mas patterns for large-scale distributed coordination and control applications Proceedings of EuroPlop, 2010; Kircher, M., Jain, P., Patterns for resource management (2004) Pattern-oriented Software Architecture, 3; Klügl, F., Karlsson, L., Towards pattern-oriented design of agent-based simulation models (2009) Proceedings of the 7th German Conference on Multiagent System Technologies, pp. 41-53. , Springer-Verlag; Kostiadis, K., Hunter, M., Hu, H., The use of design patterns for the development of multi-agent systems (2000) Systems, Man, and Cybernetics, 2000 IEEE International Conference on, 1, pp. 280-285. , IEEE; Lind, J., Patterns in agent-oriented software engineering (2003) Agent-Oriented Software Engineering III, pp. 47-58; Mouratidis, H., Weiss, M., Patterns for modelling agent systems with tropos (2006) Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), 3914 LNCS, pp. 207-223. , Software Engineering for Multi-Agent Systems IV: Research Issues and Practical Applications; Oluyomi, A., (2006) Patterns and Protocols for Agent-Oriented Software Development, , PhD thesis, The University of Melbourne; Raman, R., Livny, M., Solomon, M., Matchmaking: Distributed resource management for high throughput computing (1998) High Performance Distributed Computing, 1998. Proceedings. The Seventh International Symposium on, pp. 140-146. , IEEE; Schmidt, D.C., Fayad, M., Johnson, R.E., Software Patterns (1996) Communications of the ACM, 39 (10), pp. 37-39; Singh, A., Sankar, R., Jamval, V., Design patterns for mobile agent applications Workshop on Ubiquitous Agents on Embedded, Wearable, and Mobile Devices, Italy, 2002; Torres, M.H.C., Holvoet, T., Towards robust service workflows: A decentralized approach Proceedings of the 19th International Conference on Cooperative Information Systems (CoopIS), 2011; Van Brussel, H., Wyns, J., Valckenaers, P., Bongaerts, L., Peeters, P., Reference architecture for holonic manufacturing systems: PROSA (1998) Computers in Industry, 37 (3), pp. 255-274. , PII S016636159800102X; Verstraete, P., Saint, G.B., Valckenaers, P., Van Brussel, H., Van Belle, J., Karuna, H., Van Belle, J., Karuna, H., Engineering manufacturing control systems using PROSA and delegate MAS (2008) International Journal of Agent-Oriented Software Engineering, 2 (1), pp. 62-89. , DOI 10.1504/IJAOSE.2008.016800; Weiss, M., Pattern-driven design of agent systems: Approach and case study (2003) Advanced Information Systems Engineering, pp. 1029-1029. , Springer; Weyns, D., A pattern language for multi-agent systems (2009) Proceedings of the 2009 Joint Working IEEE/IFIP Conference on Software Architecture & European Conference on Software Architecture (WICSA/ECSA 2009), , https://lirias.kuleuven.be/handle/123456789/252306, IEEE Computer Society, September; Zambonelli, F., Jennings, N., Wooldridge, M., Organisational abstractions for the analysis and design of multi-agent systems (2001) Agent-Oriented Software Engineering, pp. 407-422. , Springer","Cruz Torres, M.H.; Department of Computer Science, Katholieke Universiteit Leuven, Leuven, Belgium; email: MarioHenrique.CruzTorres@cs.kuleuven.be",,ACM SIGPLAN,,"ACM International Conference on Systems, Programming, Languages, and Applications: Software for Humanity, SPLASH'11 and the Co-Located Workshops: DSM'11, TMC'11, AGERE'11, AOOPES'11, NEAT'11, and VMIL'11",23 October 2011 through 24 October 2011,"Portland, OR",88278,,9781450311830,,,English,"SPLASH Workshops - Compil. Proc. Co-Located Workshops: DSM, TMC, AGERE, AOOPES, NEAT, VMIL",Conference Paper,Scopus,2-s2.0-84856497034,,
TRUE,4,4,"Ampatzoglou, A., Kritikos, A., Kakarontzas, G., Stamelos, I.",An empirical investigation on the reusability of design patterns and software packages,2011,Journal of Systems and Software,84,12,,2265,2283,,7,10.1016/j.jss.2011.06.047,http://www.scopus.com/inward/record.url?eid=2-s2.0-80053563848&partnerID=40&md5=736f42187a132d6275e692babd705f66,"Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece","Ampatzoglou, A., Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece; Kritikos, A., Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece; Kakarontzas, G., Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece; Stamelos, I., Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece","Nowadays open-source software communities are thriving. Successful open-source projects are competitive and the amount of source code that is freely available offers great reuse opportunities to software developers. Thus, it is expected that several requirements can be implemented based on open source software reuse. Additionally, design patterns, i.e. well-known solution to common design problems, are introduced as elements of reuse. This study attempts to empirically investigate the reusability of design patterns, classes and software packages. Thus, the results can help developers to identify the most beneficial starting points for white box reuse, which is quite popular among open source communities. In order to achieve this goal we conducted a case study on one hundred (100) open source projects. More specifically, we identified 27,461 classes that participate in design patterns and compared the reusability of each of these classes with the reusability of the pattern and the package that this class belongs to. In more than 40% of the cases investigated, design pattern based class selection, offers the most reusable starting point for white-box reuse. However there are several cases when package based selection might be preferable. The results suggest that each pattern has different level of reusability. © 2011 Elsevier Inc. All rights reserved.",Design; Design patterns; Empirical approach; Quality; Reusability,Design patterns; Design problems; Empirical approach; Empirical investigation; Open source communities; Open source projects; Open Source Software; Open-source softwares; Software developer; Source codes; White box; Design; Image quality; Open systems; Reusability; Software packages; Computer software reusability,,,,,,"Ajila, S.A., Wu, D., Empirical study of the effects of open source adoption on software development economics (2007) Journal of Systems and Software, 80 (9), pp. 1517-1529. , DOI 10.1016/j.jss.2007.01.011, PII S0164121207000076, Evaluation and Assessment in Software Engineering EASE06; Ampatzoglou, A., Chatzigeorgiou, A., Evaluation of object-oriented design patterns in game development (2007) Information and Software Technology, 49 (5), pp. 445-454. , DOI 10.1016/j.infsof.2006.07.003, PII S0950584906000929; Andreou, A.S., Tziakouris, M., A quality framework for developing and evaluating original software components (2007) Information and Software Technology, 49 (2), pp. 122-141. , DOI 10.1016/j.infsof.2006.03.007, PII S0950584906000437; Arnout, K., Meyer, B., Pattern componentization: The factory example (2006) Innovations in Systems and Software Engineering, 2 (2), pp. 65-79. , DOI 10.1007/s11334-006-0001-0; Basili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in software engineering, transactions on software engineering (1986) IEEE Computer Society, 12 (7), pp. 733-743. , July; Bansiya, J., Davis, C.G., A hierarchical model for object-oriented design quality assessment (2002) IEEE Transactions on Software Engineering, 28 (1), pp. 4-17. , DOI 10.1109/32.979986; Barnard, J., A new reusability metric for object-oriented software (1998) Software Quality Journal, 7 (1), pp. 35-50; Bosch, J., Superimposition: A component adaptation technique (1999) Information & Software Technology, 41 (5), pp. 257-273; Brown, A., Wallnau, K., The current state of CBSE, software (1998) IEEE Computer Society, 15 (SEPTEMBER-OCTOBER 5), pp. 37-46; Chang, H.F., Mockus, A., Evaluation of source code copy detection methods on FreeBSD (2008) 2008 International Working Conference on Mining Software Repositories (MSR'08), Association of Computing Machinery, pp. 61-66. , Leipzig, Germany, May 10-11; Cho, E.S., Kim, M.S., Kim, S.D., Component metrics to measure component quality (2001) Proceedings of the Asia-Pacific Software Engineering Conference and International Computer Science Conference, APSEC and ICSC, pp. 419-426; Clements, P., (2002) Documenting Software Architectures: Views and beyond, , Addison- Wesley Professional, 2nd ed.; October; Conway, M.E., How do committees invent? (1968) Datamation Magazine, 14 (APRIL 5), pp. 28-31; Counsell, S., Swift, S., Crampton, J., The interpretation and utility of three cohesion metrics for object-oriented design (2006) ACM Transactions on Software Engineering and Methodology, 15 (2), pp. 123-149. , http://delivery.acm.org/10.1145/1140000/1131422/p123-counsell.pdf?key1= 1131422&key2=2843690511&coll=portal&dl=ACM&CFID= 42424&CFTOKEN=38947858, DOI 10.1145/1131421.1131422; Crnkovic, I., Chaudron, M., Larsson, S., Component-based development process and component lifecycle (2006) Proceedings of the 2006 International Conference on Software Engineering Advances (ICSEA' 06), pp. 44-53. , IEEE Computer Society, Tahiti, French Polynesia, 29 October-03 November 2006; Crnkovic, I., Larsson, M., Challenges of component-based development (2002) Journal of Systems and Software, 61 (3), pp. 201-212. , PII S0164121201001480; Crnkovic, I., Sentilles, S., Vulgarakis, A., Chaudron M. .R., .V., A Classification Framework for Software Component Models Transactions on Software Engineering, , http://doi.ieeecomputersociety.org/10.1109/TSE.2010.83, IEEE Computer Society, in press; Crnkovic, I., Hnich, B., Johnson, T., Kiziltan, Z., Specification, implementation, and deployment of components (2002) Communications, Association of Computing Machinery, 45 (OCTOBER 10), pp. 35-40; Etzkorn, L.H., Gholston, S.E., Fortune, J.L., Stein, C.E., Utley, D., Farrington, P.A., Cox, G.W., A comparison of cohesion metrics for object-oriented systems (2004) Information and Software Technology, 46 (AUGUST 10), pp. 677-687; Fahmi, S.A., Choi, H.J., Life cycles for component based software development (2008) Proceedings of the 8th Conference on Computer and Information Technology, pp. 637-642. , IEEE Computer Society, Sydney, Australia, July 8-11; Franch, X., Carvallo, J.P., Using quality models in software package selection (2003) Software, IEEE Computer Society, 20 (JANUARY-FEBRUARY 1), pp. 34-41; Gamma, E., Helms, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional Reading, MA; Genero, M., Manso, E., Visaggio, A., Canfora, G., Piattini, M., Building measure-based prediction models for UML class diagram maintainability (2007) Empirical Software Engineering, 12 (5), pp. 517-549. , DOI 10.1007/s10664-007-9038-4; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings - Working Conference on Reverse Engineering, WCRE, pp. 172-181. , Proceedings - 11th Working Conference on Reverse Engineering, WCRE 2004; Gui, G., Scott, P.D., Ranking reusability of software components using coupling metrics (2007) Journal of Systems and Software, 80 (9), pp. 1450-1459. , DOI 10.1016/j.jss.2006.09.048, PII S0164121206002998, Evaluation and Assessment in Software Engineering EASE06; Harrison, N.B., Avgeriou, P., How do architecture patterns and tactics interact? A model and annotation (2010) Journal of Systems and Software, 83 (OCTOBER 10), pp. 1735-1758. , Elsevier; Hsueh, N.L., Chu, P.H., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) Journal of Systems and Software, 81 (AUGUST 8), pp. 1430-1439. , Elsevier; Henry, E., Faller, B., Large-scale industrial reuse to reduce cost and cycle time (1995) Software, IEEE Computer Society, 12 (SEPTEMBER 5), pp. 47-53; Hölzle, U., Integrating Independently-Developed Components in Object-Oriented Languages (1993) Proceedings of the 7th European Conference on Object-Oriented Programming, pp. 36-56. , LNCS 707 Springer; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269. , PII S0164121201000437; Jansen, S., Brinkkemper, S., Hununk, I., Demir, C., Pragmatic and opportunistic reuse in innovative start-up companies (2008) Software, IEEE Computer Society, 25 (NOVEMBER-DECEMBER 6), pp. 2-9; Khomh, F., Gueheneuc, Y.G., Do design patterns impact software quality positively (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering, pp. 274-278. , IEEE Computer Society, Athens, Greece, April 01-04; Kitchenham, B., Pickard, L., Pfleeger, S.L., Case studies for method and tool evaluation (1995) Software, IEEE Computer Society, 12 (JULY 4), pp. 52-62; Kontio, J., A case study in applying a systematic method for COTS selection (2006) Proceedings of the 28th International Conference on Software Engineering (ICSE'06), pp. 201-209. , Association of Computing Machinery, Shanghai, China, May 20-28; Kouskouras, K., Chatzigeorgiou, A., Stephanides, G., Facilitating software extension with design patterns and Aspect-Oriented Programming (2008) Journal of Systems and Software, 81 (OCTOBER 10), pp. 1725-1737. , Elsevier; Lau, K.-K., Wang, Z., A taxonomy of software component models (2005) Software Engineering and Advanced Applications, 2005. 31st EUROMICRO Conference, 2005, pp. 88-95. , DOI 10.1109/EUROMICRO.2005.8, 1517731, Proceedings - 31st EUROMICRO Conference on Software Engineering and Advanced Applications, EUROMICRO-SEAA 2005; Li, J., Conradi, R., Slyngstad, O.P.N., Bunse, C., Torchiano, M., Morisio, M., Development with off-the self components: 10 facts (2009) Software, IEEE Computer Society, 26 (MARCH-APRIL 2), pp. 807-887; Marcus, A., Poshyvanyk, D., Ferenc, R., Using the conceptual cohesion of classes for fault prediction in object-oriented systems (2008) IEEE Transactions on Software Engineering, 34 (2), pp. 287-300. , DOI 10.1109/TSE.2007.70768; Meyer, B., Arnout, K., Componentization: The visitor example (2006) Computer, 39 (7), pp. 23-30. , DOI 10.1109/MC.2006.227; McConnell, S., (1996) Rapid Development: Taming Wild Software Schedules, , Microsoft Press Redmond, Washington, USA; McCormack, A.D., Rusnak, J., Baldwin, C.Y., Exploring the Duality between Product and Organizational Architectures: A Test of the Mirroring Hypothesis (2008) Working Paper 08-039, Harvard Business School; Mockus, A., Large-scale code reuse in open-source software (2007) 1st International Workshop on Emerging Trends in FLOSS Research and Development (FLOSS'07), pp. 7-12. , IEEE Computer Society, Minesota, USA, May 20-26; Morad, S., Kuflik, T., Conventional and open source software reuse at orbotech - An industrial experience (2005) Proceedings - IEEE International Conference on Software - Science, Technology and Engineering 2005, SwSTE '05, 2005, pp. 110-117. , DOI 10.1109/SWSTE.2005.11, 1421071, Proceedings - IEEE International Conference on Software - Science, Technology and Engineering 2005, SwSTE '05; Morison, M., Tully, C., Ezra, M., Diversity in reuse processes (2000) Software, IEEE Computer Society, 17 (JULY-AUGUST 4), pp. 56-63; Agape, N., Murphy, B., Basili, V., The influence of organizational structure on software quality: An empirical case study (2008) Proceedings of the 30th International Conference on Software Engineering (ICSE '08), pp. 521-530. , Association of Computing Machinery, Leipzig, Germany, May 10-18; Olague, H.M., Etzkorn, L.H., Gholston, S., Quattlebaum, S., Empirical validation of three software metrics suites to predict fault-proneness of object-oriented classes developed using highly Iterative or agile software development processes (2007) IEEE Transactions on Software Engineering, 33 (6), pp. 402-419. , DOI 10.1109/TSE.2007.1015; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , DOI 10.1109/TSE.2002.1010061; Robillard, M., Walker, R., Zimmermann, T., Recommendation systems for software engineering (2010) IEEE Software, 27 (JULY-AUGUST 4), pp. 80-86; Sandlhu, P.S., Kaur, H., Singh, A., Modeling reusability of object-oriented software systems (2009) World Academy of Sciences Engineering and Technology, 56 (AUGUST), pp. 162-165. , Academic Science Research; Scanniello, G., Gravino, C., Risi, M., Tortora, G., A controlled experiment for assessing the contribution of design pattern documentation on software maintenance (2010) Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM '10), , ACM; Szyperski, C., (1997) Component Software: Beyond Object-Oriented Programming, , Addison-Wesley International Massachusetts, USA; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; Washizaki, H., Yamamoto, H., Fukazawa, Y., A metric suite for measuring reusability of software components (2003) Proceedings of the 9th International Software Metrics Symposium (METRICS'03), pp. 211-223. , IEEE Computer Society, Sydney, Australia, September 03-05; Wydaeghe, B., Verschaeve, K., Michiels, B., Damme, B.V., Arckens, E., Jonckers, V., Building an OMT-editor using design patterns: An experience report (1998) Proceedings of the Technology of Object-Oriented Languages and Systems (TOOLS'98), pp. 20-33. , IEEE Computer Society, Santa Barbara, California August 3-7; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering, , 1st ed. Kluwer Academic Publishers Boston/Dordrecht/London; Yu, L., Chen, K., Ramaswamy, S., Multiple-parameter coupling metrics for layered component based software (2009) Software Quality Journal, 17 (MARCH 1), pp. 5-24. , Springer","Ampatzoglou, A.; Department of Informatics, Aristotle University, Aristotle University Campus, 54124 Thessaloniki, Greece; email: apamp@csd.auth.gr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-80053563848,,
TRUE,4,4,"Ampatzoglou, A., Kritikos, A., Arvanitou, E.-M., Gortzis, A., Chatziasimidis, F., Stamelos, I.",An empirical investigation on the impact of design pattern application on computer game defects,2011,"Proceedings of the 15th International Academic MindTrek Conference: Envisioning Future Media Environments, MindTrek 2011",,,,214,221,,1,10.1145/2181037.2181074,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860692634&partnerID=40&md5=f3521404e23bf03282961dd330f2d197,"Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece; Technological Education Institute, Department of Informatics, Thessaloniki, Greece","Ampatzoglou, A., Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece; Kritikos, A., Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece; Arvanitou, E.-M., Technological Education Institute, Department of Informatics, Thessaloniki, Greece; Gortzis, A., Technological Education Institute, Department of Informatics, Thessaloniki, Greece; Chatziasimidis, F., Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece; Stamelos, I., Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece","In this paper, we investigate the correlation between design pattern application and software defects. In order to achieve this goal we conducted an empirical study on java open source games. More specifically, we examined several successful open source games, identified the number of defects, the debugging rate and performed design pattern related measurements. The results of the study suggest that the overall number of design pattern instances is not correlated to defect frequency and debugging effectiveness. However, specific design patterns appear to have a significant impact on the number of reported bugs and debugging rate. © 2011 ACM.",computer games; design patterns; empirical study; software defects,Computer game; Defect frequency; Design Patterns; Empirical investigation; Empirical studies; Open sources; Significant impacts; Software defects; Specific design; Computer software; Human computer interaction; Defects,,,,,,"Ampatzoglou, A., Chatzigeorgiou, A., Evaluation of object-oriented design patterns in game development (2007) Information and Software Technology, 49 (5), pp. 445-454. , Elsevier, May; Ampatzoglou, A., Stamelos, I., Software engineering research for computer games: A systematic review (2010) Information and Software Technology, 52 (9), pp. 888-901; Basili, V.R., Selby, R.W., Hutchens, D.H., Experimentation in Software Engineering (1986) IEEE Transactions on Software Engineering, , IEEE Computer Society; Baudry, B., Le Traon, Y., Sunye, G., Jezequel, J.M., Measuring and Improving Design Patterns Testability (2003) Proceedings of the 9th International Symposium on Software Metrics, p. 50. , IEEE, Sydney, Australia, 03-05 September; Bjork, S., Holopainen, J., Patterns in game design (2004) Game Development Series, , Charles River Media; Gamma, E., Helms, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional, Reading, MA; Gatrell, M., Counsell, S., Hall, T., Design Patterns and Change Proneness: A Replication Using Proprietary C# Software (2009) Proceedings of the 2009 16th Working Conference on Reverse Engineering, pp. 160-164. , Lille, France, 13-16 October; Elish, M., Do Structural Design Patterns Promote Design Stability? (2006) Proceedings of the 30th Annual International Computer Software and Applications Conference - Volume 01 (COMPSAC'06), pp. 215-220. , IEEE Chicago, Illinois, 17-21 September; Ellis, B., Stylos, J., Myers, B., The Factory Pattern in API Design: A Usability Evaluation (2007) Proceedings of the 29th International Conference on Software Engineering, pp. 302-312. , IEEE Minneapolis, Minnesota, 20-26 May; Jeanmart, S., Gueheneuc, Y.G., Sahraoui, H., Habra, N., A Study of the Impact of the Visitor Design Pattern on Program Comprehension and Maintenance Tasks (2009) Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM '09), pp. 69-78. , IEEE, Lake Buena Vista, Florida, 15-16 October; Khomh, F., Gueheneuc, Y.G., Do design patterns impact software quality positively? IEEE Proceedings of the 12th European Conference on SoftwareMaintenance and Reengineering (CSMR 2008), pp. 274-278. , 1-4 April 2008, Athens, Greece; Kitchenham, B., Pickard, L., Pfleeger, S.L., Case Studies for Method and Tool Evaluation (1995) IEEE Software; Kouskouras, K., Chatzigeorgiou, A., Stephanides, G., Facilitating software extension with design patterns and Aspect-Oriented Programming (2008) Journal of Systems and Software, 81 (10), pp. 1725-1737. , Elsevier, October; McWilliams, A., Reicher, T., Klinker, G., Bruegge, B., Design Patterns for Augmented Reality Systems (2004) Proceedings of the 2004 International Workshop Exploring the Design and Engineering of Mixed Reality Systems (MIXER' 04), pp. 1-8. , Funchal, Madeira, 13 January; Nguyen, D.Z., Wong, S.B., Design Patterns for Games (2002) Special Interest Group on Computer Science Education (SIGCSE'02), pp. 126-130. , Association of Computing Machinery, Cincinnati, Kentucky, 27 February - 2 March; Prechelt, L., Unger-Lamprecht, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (3), pp. 1134-1144. , IEEE, December; Rajan, H., Kautz, S.M., Rowcliffe, W., Concurrency by Modularity: Design Patterns, a Case in Point Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications (OOPSLA '10), ACM, pp. 790-805. , Reno, Nevada, 17-21 October 2010; Rhyne, T.M., Doenges, P., Hibbard, B., Pfister, H., Robins, N., The impact of Computer Games on scientific & information visualization: ""if you can't beat them, join them"" (panel) IEEE Visualization, Proceedings of the Conference on Visualization '00, Salt Lake City, Utah, USA, pp. 519-521; Rollings, A., Morris, D., Game Architecture and Design: A New Edition, , New Riders, Indianapolis, 2003; Rucker, R., (2003) Software Engineering and Computer Games, , Addison Wesley, Essex, United Kingdom; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection using Similarity Scoring (2006) IEEE Transaction on Software Engineering, , IEEE Computer Society; Valente, L., Conci, A., Guff: A Game Development Tool Digital Version of the Proceedings of XVIII Brazilian Symposium on Computer Graphics and Image Processing (SIBGRAPI), Natal, Brazil, 2005; Vokáč, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A Controlled Experiment Comparing the Maintainability of Programs Designed with and without Design Patterns - A Replication in a Real Programming Environment (2004) Empirical Software Engineering, 9 (3), pp. 149-195. , Springer, September; Vokáč, M., Defect Frequency and Design Patterns: An Empirical Study of Industrial Code (2004) IEEE Transactions on Software Engineering, 30 (12), pp. 904-917. , IEEE, December; Wendorff, P., Assessment of Design Patterns during Software Reengineering: Lessons Learned from a Large Commercial Project (2001) Proceedings of the Fifth European Conference on Software Maintenance and Reengineering, p. 77. , IEEE, Lisbon, Portugal, 14-16 March; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering, , Kluwer Academic Publishers, Boston/Dordrecht/ London, 1 st edition","Ampatzoglou, A.; Aristotle University of Thessaloniki, Department of Informatics, Thessaloniki, Greece; email: apamp@csd.auth.gr",,ACM Special Interest Group on Computer-Human Interaction (SIGCHI);ACM Special Interest Group on Multimedia (SIGMULTIMEDIA),,"15th International Academic MindTrek Conference: Envisioning Future Media Environments, MindTrek 2011",28 September 2011 through 30 September 2011,Tampere,89536,,9781450308168,,,English,"Proc. Int. Acad. MindTrek Conf.: Envisioning Future Media Environ., MindTrek",Conference Paper,Scopus,2-s2.0-84860692634,,
FALSE,4,1,"Lankoski, P., Björk, S.",Theory lenses: Deriving gameplay design patterns from theories,2011,"Proceedings of the 15th International Academic MindTrek Conference: Envisioning Future Media Environments, MindTrek 2011",,,,16,21,,,10.1145/2181037.2181041,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860696023&partnerID=40&md5=3c912a7281ebbd22f1f87b36fdd7d9aa,"Södertörn University, Alfred Nobels allé 7, 141 89 Huddinge, Sweden; Göteborg University, Dept. of Applied Information Technology, 412 96 Göteborg, Sweden","Lankoski, P., Södertörn University, Alfred Nobels allé 7, 141 89 Huddinge, Sweden; Björk, S., Göteborg University, Dept. of Applied Information Technology, 412 96 Göteborg, Sweden","Gameplay design patterns are semiformal interconnected descriptions features of gameplay. While most previous patterns have been identified through analyzing existing games, this paper proposed how patterns can be identified using theories as starting points. More specifically, we propose three different approaches to harvesting gameplay design patterns: 1) using theories as analysis foci, 2) distilling patterns from theories, and 3) using theories to understand the consequences of having or not having patterns present in a game design. The three approaches are presented together with examples of their use, and based upon this the concept of Theory Lenses as an analytical tool is introduced as a way of allowing theories independent of their research field to be applied to research on gameplay design. © 2011 ACM.",design patterns; game research; gameplay design; gameplay design patterns; theory lenses,Analytical tool; Design Patterns; Game design; Game research; Gameplay; Research fields; Research; Game theory,,,,,,"Alexander, C., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press, Oxford; Bergström, K., Lundgren, S., Björk, S., Exploring aesthetical gameplay patterns - Camaraderie in four games (2010) Proceedings of the 14th International Academic MindTrek Conference: Envisioning Future Media Environments (Tampere, Finland, October 6-8, 2010), pp. 17-24. , ACM Press, New York, NY; Brusk, J., Björk, S., Gameplay design patterns for game dialogues (2009) Proceedings of Breaking New Ground: Innovation in Games, Play, Practice and Theory: Proceedings of the 2009 Digital Games Research Association Conference. (London, UK, September, 2009); Björk, S., Holopainen, J., (2005) Patterns in Game Design, , Charles River Media, Hingham; Björk, S., Games, gamers, & gaming - Understanding game research (2008) Proceedings of the 12th International Conference on Entertainment and Media in the Ubiquitous Era (Tampere, Finland, October 8-10, 2008), pp. 64-68. , ACM Press, New York, NY; Church, D., (1999) Formal Abstract Design Tools. Gamasutra: The Art and Business of Making Games, , http://www.gamasutra.com/view/feature/3357/formal_abstract_design_tools. php; Costikyan, G., I have no words & I must design (2002) Conference Proceedings of Computer Games and Digital Cultures, pp. 9-33. , Mäyrä, F (ed.) Tampere University Press, Tampere; Currie, G., (1995) Image and Mind: Film, Philosophy, and Cognitive Science, , Cambridge University Press, Cambridge; Damasio, A., (2005) Descartes' Error: Emotion, Reason, and the Human Brain, , Penguin Books, New York, NY; Dennett, C., (1989) The Intentional Stance, , MIT Press, Cambridge, MA; Denscombe, M., (2007) The Good Research Guide: For Small-scale Social Research Projects, , McGraw-Hill International; Falstein, N., Better by design: The 400 project (2002) Game Developer Magazine, 9 (3). , March 2002; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (2001) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading; Garfunkel, H., (2002) Ethnomethodology's Program: Working out Durkheim's Aphorism, , Rowman & Littlefield Publishers; Glover, J., (1991) The Philosophy and Psychology of Personal Identity, , Wipf & Stock Publishers, Eugene; Kunda, Z., (1999) Social Cognition: Making Sense of People, , The MIT Press, Cambridge MA; Lankoski, P., (2010) Character-driven Game Design: A Design Approach and Its Doundations in Character Engagement, , Aalto University, Helsinki; Lankoski, P., Goals, affects, and empathy (2007) The Philosophy of Computer Games Conference (Reggio Emilia, Italy, January, 2007); Lankoski, P., Björk, S., Gameplay design patterns for believable non-player characters (2007) Situated Play: Proceedings of the 2007 Digital Games Research Association Conference. University of Tokyo, (Tokyo, Japan, September 24-28,2007), pp. 416-423. , http://www.digra.org/dl/db/07315.46085.pdf; Lankoski, P., Björk, S., Gameplay design patterns for social networks and conflicts (2007) GDTW 2007 Proceedings (Liverpool, UK, November 14-15, 2007), pp. 76-85. , Liverpool John Moores University, Liverpool; Latour, B., (2005) Reassembling the Social: An Introduction to Actor-network-theory, , Oxford University Press, Oxford, CA; LeBlanc, M., Tools for creating dramatic game dynamics (2006) The Game Design Eeader: A Rules of Play Anthology, pp. 438-459. , Salen, K. and Zimmerman, E. (eds.) The MIT Press, Cambridge MA; Maxis Software 2003, , Sims. Electronic Arts; Niiniluoto, I., The aim and structure of applied research (1993) Erkenntnis, 38 (1), pp. 1-21. , January; Noë, A., (2004) Action in Perception, , The MIT Press, Cambridge, MA; Oatley, K., (1992) Best Laid Schemes, , Cambridge University, Cambridge MA; Pajitnov, A., (1984) Tetris, , Pajitnov; Power, M., Dalgleish, T., (1997) Cognition and Emotion: From Order to Disorder, , Psychology Press Ltd, Hove; Spector, W., Remodeling RPGs for the new millennium (1999) Gamasutra: The Art and Business of Making Games, , http://www.gamasutra.com/view/feature/3309/remodeling_rpgs_for_the_new_. php; Wasserman, S., Faust, K., (1994) Social Network Analysis, , Cambridge, Cambridge University Press; Zagal, J., Mateas, M., Fernandez-Vara, C., Hochhalter, B., Lichti, N., Towards an ontological language for game analysis (2005) Changing Views: Worlds in Play: Proceedings of the 2005 Digital Games Research Association Conference. Vancouver, Canada","Lankoski, P.; Södertörn University, Alfred Nobels allé 7, 141 89 Huddinge, Sweden; email: petri.lankoski@iki.fi",,ACM Special Interest Group on Computer-Human Interaction (SIGCHI);ACM Special Interest Group on Multimedia (SIGMULTIMEDIA),,"15th International Academic MindTrek Conference: Envisioning Future Media Environments, MindTrek 2011",28 September 2011 through 30 September 2011,Tampere,89536,,9781450308168,,,English,"Proc. Int. Acad. MindTrek Conf.: Envisioning Future Media Environ., MindTrek",Conference Paper,Scopus,2-s2.0-84860696023,,
TRUE,4,4,"Strasser, S., Frederickson, C., Fenger, K., Izurieta, C.",An automated software tool for validating design patterns,2011,"Proceedings of the ISCA 24th International Conference on Computer Applications in Industry and Engineering, CAINE 2011",,,,322,327,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871947216&partnerID=40&md5=02de829f673dbbd5ea4a93cc86a19309,"Department of Computer Science, Montana State University, Bozeman, MT 59717, United States","Strasser, S., Department of Computer Science, Montana State University, Bozeman, MT 59717, United States; Frederickson, C., Department of Computer Science, Montana State University, Bozeman, MT 59717, United States; Fenger, K., Department of Computer Science, Montana State University, Bozeman, MT 59717, United States; Izurieta, C., Department of Computer Science, Montana State University, Bozeman, MT 59717, United States","Design pattern languages have started to gain more attention by providing the ability to specify in- stances of patterns. The Role Based Metamodeling Language (RBML) is a visually oriented language de- fined in terms of a specialization of the UML meta- model that is used to verify and specify generic or domain specific design patterns. The evolution of in- creasingly complex computer applications is mandat- ing the development of technologies and tools that can validate the intended design and can alert developers of potential changes that were not intended by the original designers. Deviations from design patterns oc- cur as a result of a lack of understanding of intended designs or through evolutionary changes of the soft- ware; thus an automated tool is needed to inform de- velopers when design patterns no longer conform to their original intended design. Herein, we present an automated software tool that compares the UML class diagrams of instances of design patterns with their RBML representations and reports back if said UML diagram is compliant. The tool can identify which clas- sifiers (classes or associations) of the design pattern are in violation with their RBML description. Fur- thermore, the tool produces a score that is indicative of the level of compliance. We describe the algorithm that compares the UML representing a design pattern to its corresponding RBML and provide several sce- narios that demonstrate the capabilities of this tool.",,Automated tools; Design Patterns; Domain specific design; Evolutionary changes; Metamodeling; Potential change; Role-based; UML class diagrams; UML diagrams; Automation; Computer applications; Computer software; Design,,,,,,"Arango, G., Prieto-Diaz, R., (1991) Introduction and overview: Domain analysis concepts and research directions; Kim, D.-K., France, R., Ghosh, S., A uml-based language for specifying domain-specific patterns (2004) Journal of Visual Languages & Computing, 15 (3-4), pp. 265-289; OMG Unified Modeling Language 2.3, OMG, 2010Kim, D.-K., Evaluating conformance of uml mod-els to design patterns (2005) Proceedings of the 10th IEEE International Conference on Engineering of Complex Computer Systems, pp. 30-31. , Washington, DC: IEEE Computer Society; Kim, D.-K., Shen, W., Evaluating pattern con-formance of uml models: A divide-And-conquer ap-proach and case studies (2008) Software Quality Con-trol, 16, pp. 329-359. , sep; France, E.S.R., Kim, D.-K., Ghosh, S., (2002) Metarole-Based Modeling Lanugage (RBML), , Spec-ification V1.0; Gamma, R.E.J.E., Helm, R., Vlis-Sides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading MA: Addison-Wesley; Fenton, N.E., Peeger, S.L., (1998) Software Met-rics: A Rigorous and Practical Approach, , 2nd ed. Boston, MA, USA: PWS Publishing Co","Strasser, S.; Department of Computer Science, Montana State University, Bozeman, MT 59717, United States; email: strasserizurietag@cs.montana.edu",,Int. Soc. Comput. Their Appl. (ISCA),,"24th International Conference on Computer Applications in Industry and Engineering, CAINE 2011",16 November 2011 through 18 November 2011,"Honolulu, HI",94794,,9781880843833,,,English,"Proc. ISCA Int. Conf. Comput. Appl. Ind. Eng., CAINE",Conference Paper,Scopus,2-s2.0-84871947216,,
FALSE,3,4,"Parisi, M.",Managing scope creep with design patterns in formal specifications,2011,International Journal of Software Engineering and its Applications,5,1,,63,72,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84859149488&partnerID=40&md5=0ad1b181f6b3b91a44f44132cb264ec9,"Mississippi State University, United States","Parisi, M., Mississippi State University, United States","Scope creep can affect the timeliness of the software engineering process. Scope creep often occurs when features are changed or added. Software specification languages provide a formal method for extrapolating and expanding requirements. Several design patterns provide object oriented constructs whose goal are to mitigate changes in code. Applying these design patterns to formal specifications can help mitigate changes. Structural patterns realize communication between objects, thus identifying how these objects and communications can change. Using a combination of these pattern types, specifications can be redesigned with the focus of mitigating scope creep. This paper will focus on the patterns which fall into these two categories to design specifications, even if the requirements don't specify this behavior. This paper will identify a template of specifications which will aide developers in identifying how specifications can be designed with mitigating scope creep in mind.",Design patterns; Formal specifications; Requirements; Scope creep,,,,,,,"Shalloway, A., Trott, J., (2005) Design Patterns Explained: A New Perspective on Object-Oriented Design, , Addison Wesley, Boston, Massachusetts; Diller, S., (2004) Z: An Introduction to Formal Methods, , Wiley, New York, NY; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley, Boston, Massachusetts; Ewusi-Mensah, K., (2003) Software development failures: anatomy of abandoned projects, , MIT Press, Boston, Massachusetts; McConnell, S., (2004) Code Complete, , Microsoft Press, Redmond, Washington; Smith, G., (2009) Object-Z, , http://www.itee.uq.edu.au/~smith/objectz.html, Current: April 12","Parisi, M.; Mississippi State UniversityUnited States; email: parisi@gmail.com",,,,,,,,17389984,,,,English,Int. J. Softw. Eng. Appl.,Article,Scopus,2-s2.0-84859149488,,
TRUE,1,1,"Kobayashi, Y.",Irregular vertex editing and pattern design on mesh,2011,"Integration Through Computation - Proceedings of the 31st Annual Conference of the Association for Computer Aided Design in Architecture, ACADIA 2011",,,,278,283,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860780700&partnerID=40&md5=5017678a01abbe85c7e1347be0fc5728,"Arizona State University, United States","Kobayashi, Y., Arizona State University, United States","This paper introduces an innovative computational design tool used to edit architectural geometry by addressing the problem of irregular vertices. An irregular vertex is a special kind of vertex which is connected with fewer or greater less or more edges than regular vertices on a mesh object. Irregular vertices create problems with further surface rationalization, as well as structural analysis and constructability of the surface. Geometry created using other tools can also be remeshed upon import. Using the developed tool, the user is able to identify irregular vertices, interactively change the type, and then move or remove these irregular vertices. Additionally, a computational tool to make various design patterns on the mesh after the topology has been edited is also developed. The workflow is illustrated step by step in the pipeline. The advantages and disadvantages of editing mesh topology on architectural geometry design including the limitations are discussed at the end.",,Architectural geometry; Computational design tools; Computational tools; Constructability; Design Patterns; Mesh topologies; Pattern designs; Step-by-step; Computer aided design; Topology; Computational geometry,,,,,,"(2011), http://www.autodesk.com, Online 4.1.2011 at(2011), http://www.bentley.com, Online available on 4.1.2011 atBommes, D., Zimmer, H., Kobbelt, L., Mixed-integer quadrangulation (2009) ACM Transaction on Graphics (SIGGRAPH 2009); Eigensatz, M., Kilian, M., Schiftner, A., Mitra, N.J., Pottmann, H., Pauly, M., Paneling architectural free surface (2010) ACM Transaction on Graphics (SIGGRAPH 2010); (2011), http://www.forum8.co.jp, Online available on 4.1.2011 at(2011), http://www.grasshopper3d.com, Online available on 4.1.2011 atHoppe, H., Derose, T., Duchamp, T., McDonald, J., Stuetzle, W., Mesh optimization (1993) SIGGRAPH 1993, pp. 19-26. , ACM, NEW YORK, NY, USA; (2010), http://www.building-smart.jp, Online available on 4.1.2011 atKobayashi, Y., Wonka, P., Irregular vertex editing for architectural geometry design (2011) Proceeding of Simulation of Architecture and Urban Design (SIMAUD 2011); Li, Y., Bao, F., Zhang, E., Kobayashi, Y., Wonka, P., Geometry synthesis on surfaces using field guided shape grammar (2011) IEEE Transactions on Visualization and Computer Graphics, , Feb. 2011; Li, Y., Zhang, E., Kobayashi, Y., Wonka, P., Editing operation for irregular vertices in triangle mesh (2010) ACM Transaction on Graphics (SIGGRAPH ASIA 2010); Pottmann, H., Huang, Q., Deng, B., Schiftner, A., Kilian, M., Guibas, L., Wallner, J., Geodesic patterns (2010) ACM Transaction on Graphics, 29 (3). , 2010","Kobayashi, Y.; Arizona State UniversityUnited States",,Autodesk;Flatcut;Bentley;Alberta Cent. Excell. Build. Inf. Model. (ACE-BIM);Ice Edge Business Solutions,,"31st Annual Conference of the Association for Computer Aided Design in Architecture: Integration Through Computation, ACADIA 2011",11 October 2011 through 16 October 2011,"Calgary/Banff, AB",89525,,9781613645956,,,English,"Integr. Through Comput. - Proc. Annu. Conf. Assoc. Comput. Aided Des. Archit., ACADIA",Conference Paper,Scopus,2-s2.0-84860780700,,
FALSE,2,v,"Gupta, C., Menon, M., Debnath, N.",Optimization in dp detection using arg,2011,"Proceedings of the ISCA 24th International Conference on Computer Applications in Industry and Engineering, CAINE 2011",,,,205,209,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871999903&partnerID=40&md5=12425b78593bdc09e4734729679efd52,"CSED MNNIT, Allahabad, India; Winona State University, Winona State, United States","Gupta, C., CSED MNNIT, Allahabad, India; Menon, M., CSED MNNIT, Allahabad, India; Debnath, N., Winona State University, Winona State, United States","Design patterns form general repeatable solutions used in software design. Their recovery from software code caters towards better system understandability. In this paper we propose a novel approach, to detect design patterns from software code, that represents various class relationships and attributes in form of class weights and class matrix and then performs safe filtering to optimize the matrix followed by generation of Attributed Relational Graph (ARG) and then usage modified sub-graph isomorphism to match the ARGs. Our approach is based on the XMI standard.",Attributed relational graph; Detection algorithms; Graph-subgraph isomorphism; Pattern recognition,Attributed relational graph; Class relationship; Design Patterns; Detection algorithm; Graph-subgraph isomorphism; Software codes; Understandability; Computer software; Pattern recognition; Set theory; Optimization,,,,,,"Dong, J., Dushyant, S., Zhao, L.Y., Dp-miner: Design pattern discovery using matrix Proceedings of the 14th Annual IEEE International Conference and Workshops ECBS'07; Pettersson, N., Löwe, W., (2006) Efficient and Accurate Software Pattern Detection, 13th Asia Pacific Software Engineering Conference (APSEC), , December; Cordella, L.P., Foggia, P., Sansone, C., Ento, M., Subgraph transformations for the inexact matching of attributed relational graphs Computing Supplement, 2 (52); Cordella, L.P., Foggia, P., Sansone, C., Vento, M., A (sub)graph isomorphism algorithm for matching large graphs (2004) IEEE Transactions on Pattern Analysis and Machine Intelligence, 26 (10). , October; En.wikipedia.org/wiki/Design-pattern, Computer-science","Gupta, C.; CSED MNNIT, Allahabad, India; email: chunkygupta@gmail.com",,Int. Soc. Comput. Their Appl. (ISCA),,"24th International Conference on Computer Applications in Industry and Engineering, CAINE 2011",16 November 2011 through 18 November 2011,"Honolulu, HI",94794,,9781880843833,,,English,"Proc. ISCA Int. Conf. Comput. Appl. Ind. Eng., CAINE",Conference Paper,Scopus,2-s2.0-84871999903,,
TRUE,1,1,"Han, J., Sharma, S.",Angel blaze media player for children with client/server file sharing,2011,"Proceedings of the ISCA 20th International Conference on Software Engineering and Data Engineering, SEDE 2011",,,,60,64,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871970376&partnerID=40&md5=9092f163189e46b50df6b2c227cf46d5,"Department of Computer Science, Bowie State University, Bowie, MD 20715, United States","Han, J., Department of Computer Science, Bowie State University, Bowie, MD 20715, United States; Sharma, S., Department of Computer Science, Bowie State University, Bowie, MD 20715, United States","Cyberspace is a place of infinite wonders and unparalleled learning opportunities. This paper describes the design and the implementation of a child/parent media player for a windows environment. The parents can act as a filter for children's music choice. A server/client design pattern is applied on the application for sharing and management. The application aids in recognizing and avoiding the Internet's hidden dangers, spotting spam, scams, using filters, bookmarks, and other technologies to screen the content.",Child/parent; Media element; Server/client,Child/parent; Client/server; Cyberspaces; Design Patterns; File Sharing; Learning opportunity; Media element; Media players; Windows environment; Internet; Software engineering,,,,,,"Rowe, L.A., Smith, B.C., A continuous media player (1993) Network and Operating System Support for Digital Audio and Video, 712, pp. 376-386; Livingstone, S.M., Bovill, M., (2001) Children and their Changing Media Environment: A European Comparative Study, , Published by Lawrence Erlbaum Associates; Braude Eric, J., (2001) Software Engineering an Object-Oriented Perspective, , John Wiley & Sons, Inc., ISBN 0-471-32208-3; Bruegge, B., Dutoit, A., (2000) Object-Oriented Software Engineering Conquering Complex and Changing Systems, , Prentice-Hall, ISBN 0-13-489725-0; Bruegge, B., Dutoit, A.H., (2004) Object-Oriented Software Engineering: Using UML, Patterns and Java, , Second Edition, Prentice Hall, ISBN 0-13-0471100; Somerville, I., (2001) Software Engineering 9th Edition, , Massachusetts: Addison Wesley, ISBN-10: 0137035152, ISBN-13: 978-013703515; Singer Dorothy, G., Singer Jerome, L., (2001) Handbook of Children and the Media, p. 765. , Sage Publications, Inc; Leon, G.R., Kendall, P.C., Garber, J., Depression in children: Parent, teacher, and child perspectives (1980) Journal of a Abnormal Psychology, 8 (2), pp. 221-235; Demner, D., (2001) Children on the Internet, , http://otal.umd.edu/uupractice/children/, Universal usability in practice, Department of Computer Science, University of Maryland, College Park, MD 20742 USA; Chen, G., (1998) Fuzzy Logic in Data Modeling: Semantics Constraints and Database Design, pp. 150-200. , Kluwer Academic Pub; http://download.cnet.com/1770-20_4-0.html?query=player&searchtype= downloads&tag=rb_content;overviewHeadSmith, J., (2009) WPF Apps with the Model-ViewView-Model Design Pattern, , MSDN Magazine; MacDonald, M., (2008) Pro WPF in C# 2008 Windows Presentation Foundation with .NET 3.5, , Second Edition, Apress Publisher; Feldman, A., Daymon, M., (2008) WPF in Action with Visual Studio 2008, , MANNING Publisher; Petzold, C., (2001) Programming Windows with C# (Core Reference), , Microsoft Press Redmond, WA, USA, ISBN:0735613702; Batini, C., Ceri, S., Navathe, S.B., (1991) Conceptual Database Design: An Entity-relationship Approach, , Addison Wesley, US; Tsybakov, B.S., File transmission over wireless fast fading downlink (2002) Information Theory, IEEE Transactions, 48, pp. 2323-2337; http://www.apple.com/itunes/http://windows.microsoft.com/enUS/windows/products/windows-media-player","Han, J.; Department of Computer Science, Bowie State University, Bowie, MD 20715, United States; email: hanj1010@students.bowiestate.edu",,Int. Soc. Comput. Their Appl. (ISCA),,"20th International Conference on Software Engineering and Data Engineering, SEDE 2011",20 June 2011 through 22 June 2011,"Las Vegas, NV",94800,,9781880843826,,,English,"Proc. ISCA Int. Conf. Softw. Eng. Data Eng., SEDE",Conference Paper,Scopus,2-s2.0-84871970376,,
TRUE,1,1,"Alves, V., Roque, L.",An inspection on a deck for sound design in games,2011,ACM International Conference Proceeding Series,,,,15,22,,,10.1145/2095667.2095670,http://www.scopus.com/inward/record.url?eid=2-s2.0-84856897816&partnerID=40&md5=a0987903d8bfcc7cf929a17c5ac6e4ca,"Polytechnic Institute of Viseu, Portugal; Centre for Informatics and Systems, University of Coimbra, 3030-290 Coimbra, Portugal; Department of Informatics Engineering, University of Coimbra, 3030-290 Coimbra, Portugal","Alves, V., Polytechnic Institute of Viseu, Portugal, Centre for Informatics and Systems, University of Coimbra, 3030-290 Coimbra, Portugal; Roque, L., Department of Informatics Engineering, University of Coimbra, 3030-290 Coimbra, Portugal","In the context of an initiative to empower non-expert practitioners to perform sound design in games, assisted by a pattern language approach, it is helpful to hold an instrument that fosters the contact with the design patterns. With such purpose, we have been working on a deck of cards, which is also subject to an appreciation for sound explorations as an integral part of game design. We present the current rationale for the design of the deck, evidencing its suitability to maintain sound design opportunities at reach, in an expeditious and non-intrusive manner. We also report an exercise of inspection of the deck, aiming at a first refinement through the identification of foremost hindrances in terms of perception and content interpretation. Copyright © 2011 ACM.",Deck; Design cards; Design patterns; Game design; Pattern language; Sound design,Deck; Design patterns; Game design; Pattern languages; Sound design; Design; Ubiquitous computing; Audio acoustics,,,,,,"Alves, V., Roque, L., A pattern language for sound design in games (2010) Audio Mostly 2010, pp. 88-95; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press, NY; Borchers, J., (2001) A Pattern Approach to Interaction Design, , John Wiley Sons, NY; Erl, T., (2009) SOA Design Patterns, , Prentice Hall PTR, Upper Saddle River/US; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley, Reading, MA; Tidwell, J., (2005) Designing Interfaces: Patterns for Effective Interaction Design, , O'Reilly Media; Bjök, S., Holopainen, J., (2004) Patterns in Game Design, , Charles River Media, Inc., Rockland, MA, USA; Frauenberger, C., (2009) Auditory Display Design, , PhD thesis. Queen Mary University; Alves, V., Roque, L., A proposal of soundscape design guidelines for user experience enrichment (2009) Audio Mostly 2009, pp. 27-32; Alves, V., Roque, L., Guidelines for sound design in computer games (2011) Game Sound Technology and Player Interaction: Concepts and Developments, , M. Grimshaw, Ed. IGI Global; Holowka, A., (2009) Aquaria Piano Jam - Alec Holowka's Watershed Soundtrack Release, 'Sound Current', , interview by Jeriaska; Peck, N., Beyond the library: Applying film postproduction techniques to game sound design - Lecture (2001) GDC 2001, , San Jose, CA, 20-24 March; Halskov, K., Dalsgard, P., Inspiration card workshops (2006) Proceedings of the Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques, DIS, 2006, pp. 2-11. , Proceedings of the Conference on Designing Interactive Systems, DIS2006; Lucero, A., Arrasvuori, J., PLEX Cards: A source of inspiration when designing for playfulness (2010) Proc. of Fun and Games 2010, , ACM; Schell, J., (2008) The Art of Game Design: A Book of Lenses, , Morgan Kaufmann; Nielsen, J., (1994) Usability Inspection Methods, , New York, NY: John Wiley and Sons; Heylighen, F., Principles of systems and cybernetics: An evolutionary perspective (1992) Proceedings of CSR '92, pp. 3-10. , Singapore, World Scientific Pub","Alves, V.; Polytechnic Institute of ViseuPortugal; email: valter@estv.ipv.pt",,,,"6th Audio Mostly Conference on Interaction with Sound, AM'11 - In Cooperation with ACM SIGCHI",7 September 2011 through 9 September 2011,Coimbra,88488,,9781450310819,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84856897816,,
TRUE,3,3,"Waguespack, L.J., Schiano, W.T.",SCRUM project architecture and Thriving Systems Theory,2011,Proceedings of the Annual Hawaii International Conference on System Sciences,,,6149493,4943,4951,,,10.1109/HICSS.2012.513,http://www.scopus.com/inward/record.url?eid=2-s2.0-84857969807&partnerID=40&md5=af7791046cecca36811328a4fc5ea164,"Computer Information Systems Department, Bentley University, Waltham, MA 02154-4705, United States","Waguespack, L.J., Computer Information Systems Department, Bentley University, Waltham, MA 02154-4705, United States; Schiano, W.T., Computer Information Systems Department, Bentley University, Waltham, MA 02154-4705, United States","Agile project management continues to gain a widening and enthusiastic following. Agile methods can achieve a high level of satisfaction among all project stakeholders (users, customers, business managers, developers, and project managers) in terms of productivity, product quality, cost containment, time-tomarket, and overall morale. Success with agile requires focus on requirements and design as a continuous discovery process, posing challenges for practitioners of more traditional project management both in terms of method adoption and sustained commitment. Thriving Systems Theory clarifies the appeal of agile project structure and processes, helps project teams determine and achieve the optimal portfolio of quality characteristics, and better articulate their value to all stakeholders. Thriving Systems Theory is an emerging framework of systems design quality that translates the research of design pattern patriarch Christopher Alexander on physical architecture design quality into the domain of systems engineering. The satisfaction achieved through agile methods is explained by Thriving Systems Theory's fifteen choice properties of systems design quality. We demonstrate by identifying the manifestation of the choice properties in SCRUM, an exemplar of agile software project management. © 2012 IEEE.",,Agile methods; Agile project management; Agile softwares; Business managers; Christopher Alexander; Cost containment; Design Patterns; Level of satisfaction; Optimal portfolios; Physical architecture; Product quality; Project managers; Project stakeholders; Project structure; Project team; Quality characteristic; Managers; System theory; Systems analysis; Project management,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , Oxford University Press, New York, NY, USA; Alexander, C., (2002) The Nature of Order An Essay on the Art of Building and the Nature of the Universe: Book i - The Phenomenon of Life, , The Center for Environmental Structure: Berkeley, California, USA; Alexander, C., (2002) The Nature of Order An Essay on the Art of Building and the Nature of the Universe: Book II - The Process of Creating Life, , The Center for Environmental Structure: Berkeley, California, USA; Alexander, C., (2004) The Nature of Order An Essay on the Art of Building and the Nature of the Universe: Book IV - The Luminous Ground, , The Center for Environmental Structure: Berkeley, California, USA; Alexander, C., (2005) The Nature of Order An Essay on the Art of Building and the Nature of the Universe: Book III - A Vision of A Living World, , The Center for Environmental Structure: Berkeley, California, USA; Beck, K., Beedle, M., Van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M., Grenning, J., Thomas, D., (2010) Manifesto for Agile Software Development, , Retrieved May 16, 2011 from agilemanifesto.org; Brooks, F.P., No silver bullet: Essence and accidents of software engineering (1987) Computer, 20 (4), pp. 10-19; Brooks, F.P., (2010) The Design of Design: Essays from As Computer Scientist, , Addison-Wesley, Pearson Education, Inc., Boston, MA; Coplien, J., Introduction of keynote speech by Christopher Alexander (1996) At ACM Conference on Object-Oriented Programs, Systems, Languages and Applications (OOPSLA), , (San Jose, CA, USA), October; Rowland, D., Howe, T.N., (1990) Vitruvius, Ten Books on Architecture, , Cambridge University Press, Cambridge, UK; Sutherland, J., Schwaber, K., The Scrum Papers: Nuts, Bolts, and Origins of An Agile Process, , http://assets.SCRUMfoundation.com/downloads/2/SCRUMpapers.pdf?1285932052, Retrieved May 29, 2011; Waguespack, L.J., Schiano, W.T., Yates, D.J., Translating architectural design quality from the physical domain to information systems (2010) Design Principles and Practices: An International Journal, 4, pp. 179-194; Waguespack, L.J., (2010) Thriving Systems Theory and Metaphor- Driven Modeling, , Springer, London, U.K; West, D., Water-scrum-fall is the reality of agile for most organizations today (2011) Forrester, , July 26","Waguespack, L.J.; Computer Information Systems Department, Bentley University, Waltham, MA 02154-4705, United States; email: lwaguespack@bentley.edu",,Shidler College of Business;University of Hawai'i at Manoa,,"2012 45th Hawaii International Conference on System Sciences, HICSS 2012",4 January 2012 through 7 January 2012,"Maui, HI",88881,15301605,9780769545257,,,English,Proc. Annu. Hawaii Int. Conf. Syst. Sci.,Conference Paper,Scopus,2-s2.0-84857969807,,
FALSE,4,1,"Brusey, J., Gaura, E., Hazelden, R.",WSN deployments: Designing with patterns,2011,Proceedings of IEEE Sensors,,,6127129,71,76,,,10.1109/ICSENS.2011.6127129,http://www.scopus.com/inward/record.url?eid=2-s2.0-84856890212&partnerID=40&md5=aeccc80bb9abe516f24716d8d6d02940,"Cogent Computing, Coventry University, Priory Lane, Coventry, CV1 5FB, United Kingdom; TRW Conekt, Solihull, United Kingdom","Brusey, J., Cogent Computing, Coventry University, Priory Lane, Coventry, CV1 5FB, United Kingdom; Gaura, E., Cogent Computing, Coventry University, Priory Lane, Coventry, CV1 5FB, United Kingdom; Hazelden, R., TRW Conekt, Solihull, United Kingdom",Development of application-specific wireless monitoring systems can benefit from concept reuse and design patterns can form the enabling medium for such reuse. This paper proposes a set of five fundamental node-level patterns that resolve common problems when programming low-power embedded wireless sensing devices. The pattern set forms a framework that is aimed at ensuring simple and robust deployed systems. A qualitative evaluation is performed by identifying key design traits from several successfully deployed systems and linking these to elements of the framework. © 2011 IEEE.,Design patterns; Programming methodology; Wireless Sensor Networks,Common problems; Deployed systems; Design Patterns; Low Power; Pattern set; Programming methodology; Qualitative evaluations; Wireless monitoring system; Wireless sensing; Wireless sensor networks; Sensors,,,,,,"Allen, M., Girod, L., Newton, R., Madden, S., Blumstein, D.T., Estrin, D., Voxnet: An interactive, rapidly-deployable acoustic monitoring platform (2008) Information Processing in Sensor Networks, 2008. IPSN '08. International Conference on, pp. 371-382; Allen, M., VoxNet: Reducing Latency in High Data-rate Applications, , Gaura et al. [7]; Brusey, J., Gaura, E., Rednic, R., Classifying transition behaviour in postural activity monitoring (2009) Sensors & Transducers Journal, 7, pp. 213-223. , http://www.sensorsportal.com/HTML/DIGEST/P_SI_98.htm, October Online; Cassandras, C.G., Lafortune, S., (1999) Introduction to Discrete Event Systems, , Kluwer Academic Publishers; Challen, G., Welsh, M., Volcano Monitoring: Addressing Data Quality Through Iterative Development, , Gaura et al. [7]; Gaura, E.I., Brusey, J., Wilkins, R., Bare necessities - Knowledge-driven wsn design (2011) Proc. IEEE Sensors 2011, , IEEE, October; Gaura, E.I., Girod, L., Brusey, J., Allen, M., Challen, G.W., (2010) Wireless Sensor Networks: Deployments and Design Frameworks (Designing and Deploying Embedded Sensing Systems), , Springer; Goldsmith, D., Brusey, J., The Spanish Inquisition Protocol: Model-based transmission reduction for wireless sensor networks (2010) Proc. IEEE Sensors, , IEEE; Howden, N., Rönnquist, R., Hodgson, A., Lucas, A., JACK intelligent agents - Summary of an agent infrastructure Proceedings of the 5th International Conference on Autonomous Agents (Agents '01), 2001; Hu, W., Bulusu, N., Dang, T., Taylor, A., Chou, C.T., Jha, S., Van Tran, N., Cane Toad Monitoring: Data Reduction in A High Rate Application, , Gaura et al. [7]; Kemp, J., Gaura, E.I., Brusey, J., Thake, C.D., Using body sensor networks for increased safety in bomb disposal missions (2008) Proceedings of the IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (SUTC2008), pp. 81-89. , Taichung, Taiwan, June 11-13 IEEE Computer Society; Konolige, K., Colbert: A language for reactive control in sapphira (1997) Proc. 21st Annual German Conference on Artificial Intelligence: Advances in Artificial Intelligence, pp. 31-52. , London, UK, Springer-Verlag; Martinez, K., Hart, J.K., Glacier Monitoring: Deploying Custom Hardware in Harsh Environments, , Gaura et al. [7]; Moss, D., Hui, J., Klues, K., (2007) Low Power Listening, , Technical Report TEP 105, TinyOS Core Working Group; Pister, K.S.J., Doherty, L., TSMP: Time synchronized mesh protocol (2008) Proc. IASTED Intl. Symp. Distributed Sensor Networks (DSN 2008), pp. 391-398; Pont, M.J., (2001) Patterns for Time-triggered Embedded Systems: Building Reliable Applications with the 8051 Family of Microcontrollers, , ACM Press/Addison-Wesley Publishing Co., New York, NY, USA; Raman, B., Chebrolu, K., Censor networks: A critique of ""sensor networks"" from a systems perspective (2008) ACM SIGCOMM Computer Communication Review, 38 (3), pp. 75-78; Allen, G.W., Dawson-Haggerty, S., Welsh, M., Lance: Optimizing high-resolution signal collection in wireless sensor networks (2008) Proc. 6th ACM Conference on Embedded Network Sensor Systems (SenSys '08), pp. 169-182. , New York, NY, USA, ACM","Brusey, J.; Cogent Computing, Coventry University, Priory Lane, Coventry, CV1 5FB, United Kingdom; email: j.brusey@coventry.ac.uk",,IEEE SENSORS Council,,"10th IEEE SENSORS Conference 2011, SENSORS 2011",28 October 2011 through 31 October 2011,Limerick,88419,,9781424492886,,,English,Proc. IEEE Sens.,Conference Paper,Scopus,2-s2.0-84856890212,,
FALSE,4,3,"Zitouni, A., Boufaida, M., Seinturier, L.",A contract-based language to specify design components,2011,International Journal of Software Engineering and its Applications,5,3,,71,88,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84859818046&partnerID=40&md5=214d27fc5ab16ee8e5e416fce6c2305a,"Laboratory LIRE, Computer Science Department, Mentouri University of Constantine, 25000, Algeria; University of Lille LIFL-INRIA ADAM, 59655 Villeneuve d'Ascq, France","Zitouni, A., Laboratory LIRE, Computer Science Department, Mentouri University of Constantine, 25000, Algeria; Boufaida, M., Laboratory LIRE, Computer Science Department, Mentouri University of Constantine, 25000, Algeria; Seinturier, L., University of Lille LIFL-INRIA ADAM, 59655 Villeneuve d'Ascq, France","For component-based software development to be successful in organizations, the software developers must give close attention to the design of components as independent abstractions with well-specified behaviors. Without well-specified behaviors the possibility to distribute and acquire software components will be limited. In this article, we present a contract-based approach to analyze and model the properties of design components and their composition in order to detect and correct composition errors. This approach permits to characterize the structural, interface and behavioural aspects of design component. As a matter of fact, we give a specific form of their instantiation, evolution and integration. To enable this, we present a pattern contract language that captures the structural and behavioral requirements associated with a range of patterns, as well as the system properties that are guaranteed as a result. In addition, we propose the use of the LOTOS language as an ADL for formalizing these aspects. We illustrate the approach by applying it to a standard design pattern.",Architecture description language; Design by contract; Design components; Design patterns; LOTOS,,,,,,,"Aprille, L., Saqui-sannes, P., Lohr, C., (2001) ""A new UML profile for reel-time system formal design and validation"", , LNCS 2185; Bolognesi, T., Brinksma, E., (1989) ""Introduction to the ISO specification language LOTOS"", pp. 23-73. , Van EIJK; Dong, J., (2002) ""Design component contracts"", , Phd thesis. Computer Science department, university of Waterloo, June; Dong, J., Paulo Alencar, S.C., Cowan, D., ""Automating the analyse of design component contracts"" (2005) software Practice and Experience; Ehrig, H., Mahr, B., (1985) ""Fundamentals of Algebraic specification"", 1. , Springer-verlag, Berlin; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) ""Design Patterns, Elements of Reusable Object-Oriented Software"", , Addison-Wesley Longman; Keller, R.K., Schauer, R., (1998) ""Design Components: Towards Software Composition at the Design Level"", pp. 302-311. , Proceedings of the 20th International Conference on Software Engineering; Meyer, B., ""Applying design by contract"", pp. 40-51. , IEEE Computer, October 1992; Rosa, N.S., Cunha, P.R., (2004) ""A software architecture-based approach for formalising middleware behaviour"", , ENTCS; Taibi, T., Ngo, D.C.L., ""Modeling of distributed objects computing design patterns combination"" (2004) Journal AMCS, 13, pp. 239-253. , N°2; Zitouni, A., ""Un framework pour l'utilisation des design patterns par intégration du langage de spécification LOTOS"", , Congré International en Informatique Appliquée CIIA05, Novembre 2005, BBA, Algérie, ISBN: 9947-9940-1042-2; Zitouni, A., Seinturier, L., Boufaida, M., (2008) ""Contract-based approach to analyze software components"", p. 237. , International Conference on Engineering of Complex Computer Systems (ICECCS 2008/UML&AADL) workshop, Belfast, April 2008, 242; Zitouni, A., Boufaïda, M., Seinturier, L., (2010) ""Specifying Components With Compositional Patterns, pp. 190-195. , LOTOS and design by contract"". ISCA, 19 th International Conference on Software Engineering and Data Engineering (SEDE-2010), San Francisco, California, USA, June 16-18","Zitouni, A.; Laboratory LIRE, Computer Science Department, Mentouri University of Constantine, 25000, Algeria; email: ah_zitouni@yahoo.fr",,,,,,,,17389984,,,,English,Int. J. Softw. Eng. Appl.,Article,Scopus,2-s2.0-84859818046,,
FALSE,3,1,"Boeker, M., Hastings, J., Schober, D., Schulz, S.",A T-box generator for testing scalability of OWL mereotopological patterns,2011,CEUR Workshop Proceedings,796,,,,,9,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84893647847&partnerID=40&md5=c9576b8763f7faf7953873caf21a9a88,"Institute of Medical Biometry and Medical Informatics, University Medical Center Freiburg, Freiburg, Germany; Chemoinformatics and Metabolism, European Bioinformatics Institute, Hinxton, United Kingdom; Department of Medical Informatics, Medical University Graz, Graz, Austria","Boeker, M., Institute of Medical Biometry and Medical Informatics, University Medical Center Freiburg, Freiburg, Germany; Hastings, J., Chemoinformatics and Metabolism, European Bioinformatics Institute, Hinxton, United Kingdom; Schober, D., Institute of Medical Biometry and Medical Informatics, University Medical Center Freiburg, Freiburg, Germany; Schulz, S., Department of Medical Informatics, Medical University Graz, Graz, Austria","The representation of biomedical structure - from cellular components to organisms - in biomedical ontologies is of pivotal importance, as the internal structure of complex structured objects needs to be referenced in the definition of processes, disorders, phenotypes and many other entities. Yet, most of the existing biomedical ontologies do not contain logical axiomatizations for accurately representing the internal structure. We have identified the high importance of mereotopology (parthood, connectedness) for accurate representation in this domain, but the representation of mereotopological structure can provide challenges for rea-soners. To evaluate the scalability of accurate representation of biomedical structure, we have identified design patterns for (i) parthood, both one-sided, two-sided and cardinality restricted, (ii) class disjointness, and (iii) spatial disconnectedness. In order to evaluate the DL reasoning performance for these patterns, we have created a T-Box Generator to pro-grammatically generate small and large experimental T-Boxes with different reasoning complexities resulting from the relative proportions of the patterns (i) to (iii). Classification times have been measured for different reasoners in their most common application settings. We found that, as expected, reasoning times increased dramatically with the size and complexity of the generated ontology, and furthermore, even small numbers of cardinality restrictions were a major performance killer.",,Biomedical ontologies; Cardinalities; Cellular components; Design Patterns; Disjointness; Internal structure; Mereotopology; Reasoning performance; Scalability; Birds,,,,,,"Glimm, B., Horridge, M., Parsia, B., Patel-Schneider, P.F., A syntax for rules in OWL 2 (2009) Proc. of OWL Experiences and Directions 2009 (OWLED 2009); Hastings, J., Dumontier, M., Hull, D., Horridge, M., Steinbeck, C., Sattler, U., Stevens, R., Britz, K., Representing chemicals using OWL, description graphs and rules (2010) Proc. of OWL: Experiences and Directions (OWLED 2010); Jansen, L., Schulz, S., Grains, components and mixtures in biomedical ontologies (2011) Journal of Biomedical Semantics, , to appear; Ma, L., Yang, Y., Qiu, Z., Xie, G., Pan, Y., Liu, S., Towards a complete OWL ontology benchmark The Semantic Web: Research and Applications, pp. 125-139. , chap. 12 Lecture Notes in Computer Science; Motik, B., Cuenca Grau, B., Sattler, U., Structured objects in OWL: Representation and reasoning (2008) Proc. of the 17th International World Wide Web Conference (WWW 2008), , ACM, Beijing, China; Ongenae, F., Verstichel, S., De Turck, F., Dhaene, T., Dhoedt, B., Demeester, P., OTAGen: A tunable ontology generator for benchmarking ontology-based agent collaboration (2008) Computer Software and Applications COMPSAC 08; Rosse Jr., C.M.J., The foundational model of anatomy ontology (2007) Anatomy Ontologies for Bioinformatics: Principles and Practice, pp. 59-117. , Burger, A., Davidson, D., Baldock, R. (eds.) Springer, London; Shearer, R., Motik, B., Horrocks, I., HermiT: A highly-efficient OWL reasoner (2008) Proceedings of the 5th Workshop on OWL: Experiences and Directions, , Dolbear, C., Ruttenberg, A., Sattler, U. (eds.) Karlsruhe, Germany; Sirin, E., Parsia, B., Cuenca Grau, B., Kalyanpur, A., Katz, Y., Pellet: A practical OWL-DL reasoner (2007) Journal of Web Semantics, 5, pp. 51-53; The gene ontology consortium: Gene ontology: Tool for the unification of biology (2000) Nat. Genet., 25, pp. 25-29; Tsarkov, D., Horrocks, I., FaCT++ description logic reasoner: System description (2006) Proc. of the Int. Joint Conf. on Automated Reasoning (IJCAR 2006), pp. 292-297. , Springer","Boeker, M.; Institute of Medical Biometry and Medical Informatics, University Medical Center Freiburg, Freiburg, Germany; email: martin.boeker@uniklinik-freiburg.de",,,,"8th International Workshop on OWL: Experiences and Directions, OWLED 2011",5 June 2011 through 6 June 2011,"San Francisco, CA",102623,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84893647847,,
FALSE,3,1,"Alvi, A.K., Zulkernine, M.",A natural classification scheme for software security patterns,2011,"Proceedings - IEEE 9th International Conference on Dependable, Autonomic and Secure Computing, DASC 2011",,,6118361,113,120,,5,10.1109/DASC.2011.42,http://www.scopus.com/inward/record.url?eid=2-s2.0-84856107683&partnerID=40&md5=55d72c68909bd666337a19a0e1df3bbc,"School of Computing, Queen's University, Kingston, ON, Canada","Alvi, A.K., School of Computing, Queen's University, Kingston, ON, Canada; Zulkernine, M., School of Computing, Queen's University, Kingston, ON, Canada","Software security patterns are a proven solution for recurring security problems. Security pattern catalogs are increasing rapidly. This creates difficulty in selecting appropriate software security patterns for a particular recurring security problem. There are several classification schemes to organize software security patterns. Every classification scheme has unique selection criteria for choosing a security pattern. However, no classification scheme considers security flaws, which is the root cause of software security vulnerabilities. In this paper, we provide a natural classification scheme for software security patterns. Our classification scheme is associated with software lifecycle phases. Security flaws are incorporated in the classification of software security patterns with security objectives in the requirement phase, security properties in the design phase, and attack patterns in the implementation phase. Furthermore, we enhance the existing security pattern template with classification parameters. © 2011 IEEE.",design patterns; pattern classification; secure system development; software security patterns,Attack patterns; Classification parameters; Classification scheme; Design Patterns; Design phase; Root cause; Secure system; Security flaws; Security objectives; Security patterns; Security problems; Security properties; Software life cycles; Software security; software security patterns; Unique selection; Embedded software; Pattern recognition; Security of data,,,,,,"Jurjens, J., UMLsec: Extending UML for Secure Systems Development (2002) UML 2002 - The Unified Modeling Language, 2460, pp. 412-425. , Springer Berlin / Heidelberg; Schumacher, M., Fernandez-Buglioni, E., Hybertson, D., Buschmann, F., Sommerlad, P., (2006) Security Patterns: Integrating Security and Systems Engineering, , John Wiley & Sons Ltd; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press; Yoshioka, N., Washizaki, H., Maruyama, K., A Survey on Security Patterns (2008) Progress in Informatics, 5, pp. 35-47; Halkidis, S.T., Chatzigeorgiou, A., Stephanides, G., A Qualitative Evaluation of Security Patterns (2004) Information and Communications Security, 3269, pp. 251-259. , Springer Berlin / Heidelberg; Laverdiere, M.-A., Mourad, A., Hanna, A., Debbabi, M., Security Design Patterns: Survey and Evaluation Canadian Conference on Electrical and Computer Engineering, May 2006, pp. 1605-1608; Fernandez, E.B., Washizaki, H., Yoshioka, N., Kubo, A., Fukazawa, Y., Classifying Security Patterns Proc. of the 10th Asia-Pacific Web Conference, China, April 2008, pp. 342-347; Hafiz, M., Ralph, E.J., (2006) Security Patterns and Their Classification Schemes, , University of Illinois at Urbana-Champaign, Technical Report, August; Bob, B., Craig, H., (2004) Security Design Patterns, , The Open Group, Technical Report G031; Wiesauer, A., Sametinger, J., A Security Design Pattern Taxonomy based on Attack Patterns International Joint Conference on E-Business and Telecommunications, Italy, July 2009; Trowbridge, D., Cunningham, W., Evans, M., Brader, L., Slater, P., (2004) Describing the Enterprise Architectural Space, , http://msdn.microsoft.com/en-us/library/ff648192.aspx, MSDN, June; Rosado, D., Gutierrez, C., Fernández-Medina, E., Piattini, M., (2007) Computational Science and Its Applications, 4707, pp. 262-272. , Defining Security Architectural Patterns Based on Viewpoints Springer Berlin / Heidelberg; Hasheminejad, S.M.H., Jalili, S., Selecting Proper Security Patterns Using Text Classification International Conference on Computational Intelligence and Software Engineering, 2009, pp. 1-5; Hafiz, M., Adamczyk, P., Johnson, R.E., Organizing Security Patterns (2007) Software, IEEE, 24 (4), pp. 52-60. , July; IEEE Recommended Practice for Architectural Description of Software-Intensive Systems (2000) IEEE Standard 1471-2000, pp. 1-23; Kienzle, D.M., Elder, M.C., (2002) Security Patterns for Web Application Development, , Defense Advanced Research Projects Agency, Technical Report F30602-01-C-0164; Sasha, R., (2001) Security Design Patterns: Part 1, , http://www.cgisecurity.com/lib/securityDesignPatterns.html, Online at version 1.4, November, Last Accessed Oct. 2010; Yoder, J., Barcalow, J., Architectural Patterns for Enabling Application Security 4th Conference on Pattern Languages of Programs, 1997; Heyman, T., Yskout, K., Scandariato, R., Joosen, W., An Analysis of the Security Patterns Landscape Proc. of the Third International Workshop on Software Engineering for Secure Systems, 2007, p. 3; Cheng, B., Konrad, S., Campbell, L.A., Wassermann, R., Using Security Patterns to Model and Analyze Security Requirements IEEE Workshop on Requirements for High Assurance Systems, 2003, pp. 13-22; Viega, J., McGraw, G., (2001) Building Secure Software: How to Avoid Security Problems the Right Way, , 1st ed., Addison-Wesley Professional, MA; Kienzle, D.M., Elder, M.C., Tyree, D., Edwards-Hewitt, J., (2002) Security Patterns Repository, , http://www.scrypt.net/~celer/securitypatterns/repository.pdf, version 1.0, Available; Zachman, J.A., A Framework for Information Systems Architecture (1999) IBM Systems Journal, 38 (2-3), pp. 454-470; Goodyear, M., (1999) Enterprise System Architectures: Building Client Server and Web Based Systems, , 1st ed., CRC Press, Sept; Beck, K., Andres, C., (2004) Extreme Programming Explained: Embrace Change, , 2nd ed., Addison-Wesley Professional, Nov; Yskout, K., Heyman, T., Scandariato, R., Joosen, W., (2006) A System of Security Patterns, , Catholic University of Leuven, Belgium, Dept. of Computer Science, Technical Report CW-469; Steel, C., Nagappan, R., Lai, R., (2005) Core Security Pattern: Best Practices and Strategies for J2EE, Web Services, and Identity Management, , Prentice Hall PTR / Sun Micros; Sarmah, A., Hazarika, S.M., Sinha, S.K., Security Pattern Lattice: A Formal Model to Organize Security Patterns International Workshop on Database and Expert Systems Application, 2008, pp. 292-296; VanHilst, M., Fernandez, E.B., Braz, F., A Multidimensional Classification for Users of Security Patterns (2009) Journal of Research and Practice in Information Technology, 41, pp. 87-98; Washizaki, H., Fernandez, E.B., Maruyama, K., Kubo, A., Yoshioka, N., Improving the Classification of Security Patterns 20th International Workshop on Database and Expert Systems Application, 2009, pp. 165-170; Stoneburner, G., Hayden, C., Feringa, A., Risk Management Guide for Information Technology Systems (2002) Recommendations of the National Institute of Standards and Technology (NIST), , Technical Report, NIST Special Publication 800-30; Avgeriou, P., Zdun, U., Architectural Patterns Revisited-A Pattern Language Proc. of the 10th European Conference on Pattern Languages of Programs, Irsee, Germany, July 2005; Kienzle, D.M., Elder, M.C., Tyree, D.S., Edwards-Hewitt, J., (2003) Security Patterns: Template and Tutorial, , http://www.scrypt.net/~celer/securitypatterns/, Technical Report, Nov; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, 1. , John Wiley & Sons, England; Kalloniatis, C., Kavakli, E., Gritzalis, S., Using Privacy Process Patterns for Incorporating Privacy Requirements into the System Design Process The Second International Conference on Availability, Reliability and Security, April 2007, pp. 1009-1017; Bandara, A., Shinpei, H., Jurjens, J., Kaiya, H., Kubo, A., Laney, R., Mouratidis, H., (2009) Security Patterns: Comparing Modeling Approaches, , The Open University, Department of Computing, Technical Report TR2009-06; Mouratidis, H., Weiss, M., Giorgini, P., Modeling Secure Systems Using An Agent-oriented Approach and Security Patterns (2006) International Journal of Software Engineering and Knowledge Engineering, 16, pp. 471-498; Halkidis, S.T., Chatzigeorgiou, E., A Practical Evaluation of Security Patterns Proc. of International Conference on Artcicial Intelligence and Digital Communications, 2006, pp. 37-44; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , 1st ed., Addison-Wesley Professional; Rising, L., (1998) The Patterns Handbook: Techniques, Strategies, and Applications, , 1st ed., Cambridge University Press; Schumacher, M., Foundations of Security Patterns (2003) Security Engineering with Patterns, 2754, pp. 97-119. , Springer Berlin / Heidelberg; Dörenberg, F., Dependability Impairments: Faults, Errors and Failures (2003) Analysis and Synthesis of Dependable Electronic Systems, , http://www.nonstopsystems.com/textbook_sample_1.pdf, unpublished; Weiss, M., Modelling Security Patterns Using NFR Analysis (2006) Integrating Security and Software Engineering: Advances and Future Visions, pp. 127-141. , IGI Publishing Hershey, PA, USA; Barnum, S., (2008) Common Attack Pattern Enumeration and Classification (CAPEC) Schema Description, , Department of Homeland Security, Cigital, Inc; Chad, D., Kirk, S., Robert, C.S., David, S., Kazuya, T., (2009) Secure Design Patterns, , Software Engineering Institute, Carnegie Mellon University, Pittsburgh, Technical Report CMU/SEI-2009-TR-010; Giorgini, P., Massacci, F., Mylopoulos, J., Zannone, N., Modeling Security Requirements through Ownership, Permission and Delegation 13th IEEE International Conference on Requirements Engineering, 2005, pp. 167-176; Liu, Y., Clark, J.A., Stepney, S., ""Devices are people too"" using process patterns to elicit security requirements in novel domains: A ubiquitous healthcare example (2005) Lecture Notes in Computer Science, 3450, pp. 31-45. , Security in Pervasive Computing - Second International Conference, SPC 2005, Proceedings; Shiralkar, T., Grove, B., (2009) Guidelines for Secure Coding, , http://www.atsec.com/downloads/pdf/secure-coding-guidelines.pdf, Technical Report, January; Hans, K., Cutting Edge Practices for Secure Software Engineering (2010) International Journal of Computer Science and Security, 4 (4), pp. 403-408","Alvi, A.K.; School of Computing, Queen's University, Kingston, ON, Canada; email: aleem@cs.queensu.ca",,,,"9th IEEE Int. Conf. on Dependable, Autonomic and Secure Comput., DASC 2011, incl. 9th Int. Conf. on Pervasive Intelligence and Computing, PICom 2011, 9th Int. Symp. on Embedded Computing, EmbeddedCom 2011, 1st Int. Conf. on Cloud and Green Comput.CGC",12 December 2011 through 14 December 2011,"Sydney, NSW",88139,,9780769546124,,,English,"Proc. - IEEE Int. Conf. Dependable, Autonomic Secure Comput., DASC",Conference Paper,Scopus,2-s2.0-84856107683,,
TRUE,3,3,"Liu, D., Xu, S., Du, W.",Case study on incremental software development,2011,"Proceedings - 2011 9th International Conference on Software Engineering Research, Management and Applications, SERA 2011",,,6065596,227,234,,1,10.1109/SERA.2011.43,http://www.scopus.com/inward/record.url?eid=2-s2.0-82155165820&partnerID=40&md5=3962cc6145975f6fd62c1495ec5732b9,"Brain Technologies, Marine Del Rey, CA, United States; Department of Computer Science, Algoma University, Sault Ste Marie, ON, Canada; College of Information Science and Technology, Hainan University, Haikou, China","Liu, D., Brain Technologies, Marine Del Rey, CA, United States; Xu, S., Department of Computer Science, Algoma University, Sault Ste Marie, ON, Canada; Du, W., College of Information Science and Technology, Hainan University, Haikou, China","It has been long recognized that software development in industry is often iterative while new requirements and challenges arise along with software evolution. One of general rules for software design is to degrade coupling between modules so that software architecture is flexible and scalable. Along with software evolution it is better to keep user interface stay similar which helps users to upgrade, and to keep programming interface consistent for the same functionality which is undoubtedly beneficial to programmers. In this paper, we discuss about these situations along a real development case study and propose a few systematic solutions which facilitate source code reuse and assure software quality. Detailed analysis and comparison are provided to show their effectiveness. © 2011 IEEE.",case study; design patterns.; incremental software development; programming interface; Software evolution,design patterns.; incremental software development; programming interface; Software evolution; Software Quality; Source codes; Computer programming; Computer software reusability; Computer software selection and evaluation; Engineering research; Research and development management; Software architecture; User interfaces; Software design,,,,,,"Fowler, M., Beck, K., Brant, J., Opdyke, W., Roberts, D., (1999) Refactoring: Improving the Design of Existing Code, , 1st ed. Addison-Wesley Professional; Schwaber, K., Beedle, M., (2001) Agile Software Development with Scrum, , Prentice Hall; Stevens, W., Myers, G., Constantine, L., (1979) Structured Design, pp. 205-232; Brito E Abreu, F., Goulao, M., Coupling and cohesion as modularization drivers: Are we being over-persuaded? Fifth European Conference on Software Maintenance and Reengineering, 2001., 2001, pp. 47-57. , presented at the; Allen, E.B., Khoshgoftaar, T.M., Chen, Y., Measuring coupling and cohesion of software modules: An information-theory approach Proceedings of Seventh International Software Metrics Symposium, 2001. METRICS 2001., 2001, pp. 124-134; Brooks, F.P., (1995) The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition, Anniversary, , Addison-Wesley Professional; McConnell, S., (2004) Code Complete: A Practical Handbook of Software Construction, , 2nd ed. Microsoft Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , 1st ed. Addison-Wesley Professional; (1956) Symposium on Advanced Programming Methods for Digital Computers□: Washington, D.C., June 28, 29, 1956, , United States., [Washington D.C.]: Office of Naval Research Dept. of the Navy; Larman, C., Basili, V.R., Iterative and incremental developments. A brief history (2003) Computer, 36 (6), pp. 47-56. , Jun; Stroustrup, B., (2000) The C++ Programming Language: Special Edition, , 3rd ed. Addison-Wesley Professional; Java, , http://www.java.com/, [Online]. Available: [Accessed: 24-Apr-2011]; C++ - Standards, , http://www.open-std.org/jtc1/sc22/wg21/docs/standards, [Online]. Available: [Accessed: 24-Apr-2011]; Hooks (Windows), , http://msdn.microsoft.com/en-us/library/ms632589(v=vs.85).aspx, [Online]. Available: [Accessed: 24-Apr-2011]; Apache Commons, , http://commons.apache.org/, [Online]. Available: [Accessed: 25-Apr-2011]; Java Layout Management, , http://java.sun.com/developer/onlineTraining/GUI/AWTLayoutMgr/ shortcourse.html, [Online]. Available: [Accessed: 25-Apr-2011]; Object Management Group - UML, , http://www.omg.org/UML/, [Online]. Available: [Accessed: 24-Apr-2011]; JavaBeans, , http://download.oracle.com/javase/tutorial/javabeans/, [Online]. Available: [Accessed: 24-Apr-2011]; Churchvill, D., (2007) Agile User Interface Development, , http://www.infoq.com/articles/agile-useability-churchville","Liu, D.; Brain Technologies, Marine Del Rey, CA, United States; email: dliu@thebrain.com",,Int. Assoc. Comput. Inf. Sci. (ACIS),,"9th ACIS International Conference on Software Engineering Research, Management and Applications, SERA 2011",10 August 2011 through 12 August 2011,"Baltimore, MD",87462,,9780769544908,,,English,"Proc. - Int. Conf. Softw. Eng. Res., Manage. Appl., SERA",Conference Paper,Scopus,2-s2.0-82155165820,,
TRUE,3,3,"Erdemir, U., Tekin, U., Buzluca, F.",E-quality: A graph based object oriented software quality visualization tool,2011,Proceedings of VISSOFT 2011 - 6th IEEE International Workshop on Visualizing Software for Understanding and Analysis,,,6069454,,,,,10.1109/VISSOF.2011.6069454,http://www.scopus.com/inward/record.url?eid=2-s2.0-82055193738&partnerID=40&md5=f75683c94a99a51fce1dadfd322ca2e3,"Center of Research for Advanced Technologies of Informatics and Information Security, Kocaeli, Turkey; Computer Engineering Department, Istanbul Technical University, Istanbul, Turkey","Erdemir, U., Center of Research for Advanced Technologies of Informatics and Information Security, Kocaeli, Turkey; Tekin, U., Center of Research for Advanced Technologies of Informatics and Information Security, Kocaeli, Turkey; Buzluca, F., Computer Engineering Department, Istanbul Technical University, Istanbul, Turkey","Recently, with increasing maintenance costs, studies on software quality are becoming increasingly important and widespread because high quality software means more easily maintainable software. Measurement plays a key role in quality improvement activities and metrics are the quantitative measurement of software design quality. In this paper, we introduce a graph based object-oriented software quality visualization tool called ""E- Quality"". E-Quality automatically extracts quality metrics and class relations from Java source code and visualizes them on a graph-based interactive visual environment. This visual environment effectively simplifies comprehension and refactoring of complex software systems. Our approach assists developers in understanding of software quality attributes by level categorization and intuitive visualization techniques. Experimental results show that the tool can be used to detect software design flaws and refactoring opportunities. © 2011 IEEE.",Design Flaw Detection; Design Patterns; Eclipse; Object-Oriented Metrics; Refactoring; Software Maintenance; Software Quality; Software Visualization,Design Patterns; Eclipse; Flaw detection; Object-Oriented Metrics; Refactorings; Software Quality; Software Visualization; Computer software maintenance; Java programming language; Quality control; Software design; Visualization; Computer software selection and evaluation,,,,,,"Bandi, R.K., Vaishnavi, V.K., Turk, D.E., Predicting maintenance performance using object-oriented design complexity metrics (2003) IEEE Trans. Software Eng., 29 (1), pp. 77-86. , Jan; Bansiya, J., Davis, C.G., A hierarchical model for object-oriented design quality assessment (2002) IEEE Transactions on Software Engineering, 28 (1), pp. 4-17. , DOI 10.1109/32.979986; Meyer, B., Self-organizing graphs a neural network perspective of graph layout (1998) Lec. Notes in Computer Sci., pp. 246-262. , Springer; Briand, L.C., Wust, J.K., Daly, J.W., Porter, D.V., Exploring the Relationships between Design Measures and Software Quality in Object- Oriented Systems (2000) J. Systems and Software, 51, pp. 245-273; Brito E Abreu, F., Pereira, G., Soursa, P., Coupling-guided cluster analysis approach to reengineer the modularity of object-oriented systems (2000) Proc. Euromicro Conf. Software Maint. and Reeng., pp. 13-22; Chidamber, S., Kemerer, C., A metrics suite for object-oriented design (1994) IEEE Trans. Software Eng., 20 (6), pp. 476-493. , June; Dagpinar, M., Jahnke, J.H., Predicting maintainability with object-oriented metrics an empirical comparison (2003) Proc. WCRE, p. 155; IBM Rational Software Architect, , http://www.rational.com; Kontogiannis, K., Evaluating experiments on the detection of programming patterns using software metrics (1997) Proc. WCRE, pp. 44-54; Lanza, M., Ducasse, S., Polymetric views a lightweight visual approach to reverse engineering (2003) Trans. on Software Eng., , Sep; Lanza, M., Marinescu, R., (2006) Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems, , Springer, Heidelberg; Larman, C., (2005) Applying UML and Patterns, , (3rd ed.). Prentice Hall; Lorenz, M., Kidd, J., (1994) Objectoriented Software Metrics, , Prentice Hall; Marinescu, R., Detecting design flaws via metrics in object oriented systems (2001) Proc. 39th Intl Conf. and Exhibition on Technology of Object- Oriented Languages and Systems, pp. 173-182; PDE Incubator Dependency Visualization, , http://www.eclipse.org/pde/-incubator/dependency-visualization/index.php; Riel, A., (1996) Object-Oriented Design Heuristics, , AddisonWesley; Subramanyam, R., Krishnan, M., Empirical analysis of CK metrics for object-oriented design complexity: Implications for software defects (2003) IEEE Trans. Software Eng., 29; Termeer, M., Lange, C., Telea, A., Chaudron, M., Visual exploration of combined architectural and metric information (2005) Proc. VISSOFT, p. 11. , September 25-25; Tukey, J.W., (1977) Exploratory Data Analysis, , Addison-Wesley; Unified Modeling Language, , http://www.uml.org/; Visual Paradigm, , http://www.visual-paradigm.com/; Wettel, R., Lanza, M., Visualizing software systems as cities (2007) Proc. VISSOFT, pp. 92-99; Fruchterman, T.M.J., Reingold, E.M., Graph drawing by force-directed placement (1991) Software Prac. and Exp., 21 (11), p. 11291164; Telea, A., Voinea, L., An interactive reverse engineering environment for large-scale C++ code 4th ACM Symp. on Soft. Vis., 2008; The Eclipse Visualization Toolkit, , http://www.eclipse.org/gef/zest/; CCCC, C and C++ Code Counter, , http://sourceforge.net/projects/cccc; Eclipse Metrics Plug-in 3.4, , http://eclipse-metrics.sourceforge.net; Alghamdi, J., Rufai, R., Khan, S., OOMeter: A software quality assurance tool (2005) CSMR, pp. 190-191; Karniyarik, , http://www.karniyarik.com; E-Quality, , http://smart.cs.itu.edu.tr/tools/equality/","Erdemir, U.; Center of Research for Advanced Technologies of Informatics and Information Security, Kocaeli, Turkey; email: ural@bilgem.tubitak.gov.tr",,IEEE Computer Society;IEEE Comput. Soc. Tech. Counc. Softw. Eng. (TCSE),,"6th IEEE International Workshop on Visualizing Software for Understanding and Analysis, VISSOFT 2011",29 September 2011 through 30 September 2011,"Williamsburg, VA",87446,,9781457708237,,,English,Proc. VISSOFT - IEEE Int. Workshop Vis. Softw. Underst. Anal.,Conference Paper,Scopus,2-s2.0-82055193738,,
FALSE,3,1,"Aronis, S., Sagonas, K.",Typed callbacks for more robust behaviours,2011,Erlang'11 - Proceedings of the 2011 ACM SIGPLAN Erlang Workshop,,,,23,29,,,10.1145/2034654.2034660,http://www.scopus.com/inward/record.url?eid=2-s2.0-80755167773&partnerID=40&md5=b6505ef1ae678701b62493a0a145c203,"School of Electrical and Computer Engineering, National Technical University of Athens, Athens, Greece; Department of Information Technology, Uppsala University, Sweden","Aronis, S., School of Electrical and Computer Engineering, National Technical University of Athens, Athens, Greece; Sagonas, K., School of Electrical and Computer Engineering, National Technical University of Athens, Athens, Greece, Department of Information Technology, Uppsala University, Sweden","Behaviours are one of the most widely used features of Erlang/OTP. They offer a convenient and well-tested abstraction layer for frequently employed design patterns in concurrent Erlang programming. In effect, they allow programmers to focus on the functional characteristics of their applications without having to resort to Erlang's concurrency-supporting primitives. However, when it comes to ensuring that behaviours are properly used and callbacks are as expected, the current Erlang/OTP compiler performs only minimal checks. This is no fault of the compiler though, because most/all of the callbacks' API exists only in the documentation or the comments accompanying the code; as such, it cannot always be trusted and it is almost impossible to have it mechanically processed. In this paper, we propose a small extension to the language of function specifications of Erlang to allow the formal definition of the behaviours' callback API. We have implemented this extension on the development branch of Erlang/OTP and provide evidence of how it can be leveraged by static analysis tools such as Dialyzer to detect behaviour misuses. © 2011 ACM.",abstract classes; behaviours; erlang,Abstract class; Abstraction layer; behaviours; Design Patterns; erlang; Formal definition; Function specification; Functional characteristics; Abstracting; Computer programming languages; Functional programming; Program compilers; Static analysis,,,,,,"Armstrong, J., (2007) Programming Erlang: Software for a Concurrent World, , The Pragmatic Bookshelf, Raleigh, NC; Cesarini, F., Thompson, S., (2009) Erlang Programming: A Concurrent Approach to Software Development, , O'Reilly; Lindahl, T., Sagonas, K., Detecting software defects in telecom applications through lightweight static analysis: A war story (2004) LNCS, 3302, pp. 91-106. , C. Wei-Ngan, editor, Programming Languages and Systems: Proceedings of the Second Asian Symposium, Berlin, Germany, Springer; Lindahl, T., Sagonas, K., Practical type inference based on success typings (2006) Proceedings of the 8th ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, pp. 167-178. , New York, NY, USA, ACM Press; Logan, M., Merritt, E., Carlsson, R., (2011) Erlang and OTP in Action, , Manning, Stamford, CT; Mattsson, H., Nilsson, H., Wikström, C., Mnesia - A distributed robust DBMS for telecommunications applications (1999) LNCS, 1551, pp. 152-163. , G. Gupta, editor, Practical Applications of Declarative Languages: Proceedings of the PADL'1999 Symposium, Berlin, Germany, Jan. Springer; Sagonas, K., Experience from developing the Dialyzer: A static analysis tool detecting defects in Erlang applications Proceedings of the ACM SIGPLAN Workshop on the Evaluation of Software Defect Detection Tools, 2005","Aronis, S.; School of Electrical and Computer Engineering, National Technical University of Athens, Athens, Greece; email: dialyzer@softlab.ntua.gr",,ACM SIGPLAN,,"10th ACM SIGPLAN Erlang Workshop, Erlang 2011, Co-located with the Annual ACM SIGPLAN International Conference on Functional Programming, ICFP",23 September 2011 through 23 September 2011,Tokyo,87236,,9781450308595,,,English,Erlang - Proc. ACM SIGPLAN Erlang Workshop,Conference Paper,Scopus,2-s2.0-80755167773,,
TRUE,4,4,"Serna, F., Catalán, C., Blesa, A., Colom, J.M., Rams, J.M.","""Predictive maintenance surveyor"" design pattern for machine tools control software applications",2011,"IEEE International Conference on Emerging Technologies and Factory Automation, ETFA",,,6059119,,,,,10.1109/ETFA.2011.6059119,http://www.scopus.com/inward/record.url?eid=2-s2.0-80655132068&partnerID=40&md5=e2375a78b162a4a1cd948916d1a00a81,"Dept. Informática e Ingeniería de Sistemas, University of Zaragoza, Spain; Inst. de Invest. de Ing. de Aragón (13A), University of Zaragoza, Spain; TUROMAS-TECNOCAT Group, Spain","Serna, F., Dept. Informática e Ingeniería de Sistemas, University of Zaragoza, Spain; Catalán, C., Dept. Informática e Ingeniería de Sistemas, University of Zaragoza, Spain; Blesa, A., Inst. de Invest. de Ing. de Aragón (13A), University of Zaragoza, Spain; Colom, J.M., Inst. de Invest. de Ing. de Aragón (13A), University of Zaragoza, Spain; Rams, J.M., TUROMAS-TECNOCAT Group, Spain","Software involved in modern control applications is becoming increasingly complex, having to deal with newer and more sophisticated responsibilities. It must be now considered as a very relevant part in the mix of the system complexities and, unfortunately maybe very often, it is also an important source of engineering headaches. Its specific particularities should be conveniently taken into account using common software techniques. Design patterns are one of such techniques, widely used in the software world. The presented design pattern suggests a way to handle predictive maintenance, a service oriented to machine tools containing parts that suffer progressive deterioration which can be indirectly detected. This way, adequate maintenance actions can be scheduled just in time to avoid further problems development. © 2011 IEEE.",,Common software; Control software; Design Patterns; Just in time; Maintenance Action; Modern control; Predictive maintenance; Service Oriented; System complexity; Design; Factory automation; Machine tools; Computer software maintenance,,,,,,"Mekid, S., Pruscheck, P., Hernanez, J., Beyond intelligent manufacturating: A new generation of flexible intelligent NC machines (2009) Mechanims and Machine Theory, 44, pp. 466-476; Koren, Y., Heisel, U., Jovane, F., Moriwak, T., Reconfigurable Manufacturing Systems (1999) Annals of the Int. Institution for Production Engineering Research (CIRP), 48 (2), pp. 527-539; http://www.medeia.eu/fileadmin/Publications/ MEDEIA_ProjectPresentation_V003_2008-08-25.pdfThiry, L., Perronne, J.-M., Thirion, B., Patterns for behavior modeling and integration (2004) Computers in Industry, 55, pp. 225-237; Rooker, M.N., Ebenhofer, G., Strasser, T., Reconfigurable Control in Distributed Automation Systems ASME/IFToMM Int. Conf. on Reconfigurable Mechanisms and Robots. 2009, pp. 705-714; Alexander, C., (1979) The Timeless Way of Building, p. 247. , New York. Oxford Univ. Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns. Elements of Reusable Object Oriented Software, , Reading MA: Addison Wesley; Szyperski, C., Component Software: Beyond Object-Oriented Programming, , Ed. Pearson. ISBN 0-201-017888-5; Hall, K.H., Staron, R.J., Zoitl, A., Challenges to industry adoption of the IEC 61499 standard on event-based Function Blocks 5th IEEE Int. Conf. on Industrial Informatics, 2007; Zoitl, A., Strassr, T., Hall, K., Staron, R., Sünder, C., Favre-bulle, B., The past, present, and future of IEC 61499 Proc. 2rd Int. Conf.Industrial Appl. Of Holonic and Multi-agent Systems, Holomas, Regensburg, Germany, 2007; Thramboulidis, K., Zoitl, A., Vyatkin, V., Face to face: Different perspectives (2009) IEEE Industrial Electronics Magazine, , December; Sanz, R., Zalewski, J., Pattern-based Control Systems Engineering. Using design patterns to document, transfer and exploit design knowledge (2003) IEEE Control Systems Magazine, pp. 43-60; Zalewski, J., Real-time software architectures and design patterns: Fundamental concepts and their consequences (2001) Annual Reviews in Control, 25, pp. 133-146. , DOI 10.1016/S1367-5788(01)80001-8, PII S136757880100013X; Catalán, C., Serna, F., Blesa, A., Colom, J.M., Rams, J.M., COSME: A Distributed Control Platform for Communicating Machine Tools in Agile Manufacturing Systems 16th IEEE Conference on Emerging Technologies and Factory Automation, (EFTA), Toulouse, France, September 2011; Serna, F., Catalán, C., Blesa, A., Rams, J.M., Design Patterns for Failure Management in IEC 61499 Function Blocks IEEE Conference on Emerging Technologies and Factory Automation, (EFTA), Bilbao, Spain, September 2010; Serna, F., Catalan, C., Blesa, A., Colom, J.M., Rams, J.M., Preventive Maintenance Manager design pattern for component based machine tools IEEE International Conference on Industrial Informatics (INDIN), Lisbon, Portugal, 2011; Shaikh, M., Cementing the Relationship between DCS and PLC: A Review of Emerging Trends in Plant Control Systems (2009) Cement Industry Technical Conference Record, 2009 IEEE, pp. 1-12. , vol., no., May 29 2009-June 5; http://www.opcfoundation.orghttp://www.turomas.com","Serna, F.; Dept. Informática e Ingeniería de Sistemas, University of ZaragozaSpain; email: fserna@unizar.es",,IEEE Industrial Electronics Society;University of Toulouse 3,,"2011 IEEE 16th Conference on Emerging Technologies and Factory Automation, ETFA 2011",5 September 2011 through 9 September 2011,Toulouse,87207,,9781457700187,85ROA,,English,IEEE Symp Emerging Technol Fact Autom ETFA,Conference Paper,Scopus,2-s2.0-80655132068,,
FALSE,3,1,"Hofmann, M., Rooker, M., Zoitl, A.",Improved communication model for an IEC 61499 runtime environment,2011,"IEEE International Conference on Emerging Technologies and Factory Automation, ETFA",,,6059121,,,,,10.1109/ETFA.2011.6059121,http://www.scopus.com/inward/record.url?eid=2-s2.0-80655146494&partnerID=40&md5=1652f08a16c3297fe796b762369dbfff,"Profactor GmbH, Im Stadtgut A2, 4407 Steyr-Gleink, Austria; Automation and Control Institute, Vienna University of Technology, Gusshausstrasse 27-29/E376, 1040 Vienna, Austria","Hofmann, M., Profactor GmbH, Im Stadtgut A2, 4407 Steyr-Gleink, Austria; Rooker, M., Profactor GmbH, Im Stadtgut A2, 4407 Steyr-Gleink, Austria; Zoitl, A., Automation and Control Institute, Vienna University of Technology, Gusshausstrasse 27-29/E376, 1040 Vienna, Austria","For IEC 61499 distributed control application development the control engineer has to rely mainly on the Compliance Profile for Feasibility Demonstrations for the necessary communication infrastructure. This profile utilizes the TCP/UDP protocols and has some limitations in order to be easily used for industrial automation. With this article we identify these shortcomings and introduce an improved communication model for IEC 61499 control applications. The following three attempts to define communication interaction in IEC 61499 will be presented: (1) by function block type defined protocol, (2) by function block parameter defined protocol, (3) automatic connection. We show the impact of these attempts from the engineer's point of view. Also the required engineering tool features are presented. The result is a profile which enables the engineer to easily use different network protocols within IEC 61499 applications without the limitation to use only the TCP/UDP protocol. Furthermore, this paper shows the implementation of the developed communication profile. The implementation focuses on the runtime environment and shows how the implementation can be used by the engineer and by the engineering tool. The implementation takes strong attention to the re-usability of already implemented protocols. This is achieved by the usage of the ""layered protocol"" design pattern. © 2011 IEEE.",,Communication infrastructure; Communication interaction; Communication models; Control applications; Control engineers; Design Patterns; Distributed control; Engineering tools; Function Block; IEC 61499; Industrial automation; Runtime environments; TCP/UDP; Communication; Engineers; Factory automation; Information theory; Network protocols; Standards,,,,,,"ARM Ltd. Last accessed April 29, 2011Cengic, G., Ljungkrantz, O., Akesson, K., A framework for component based distributed control software development using iec 61499 Emerging Technologies and Factory Automation, 2006. ETFA'06. IEEE Conference on, pp. 782-789. , IEEE; Christensen, J.H., Design patterns for systems engineering in iec 61499 (2000) Verteilte Automatisierung - Modelle und Methoden Fr Entwurf, Verifikation, Engineering und Instrumentierung, pp. 63-71. , Magdeburg; Christensen, J.H., IEC 61499 Compliance Profile for Feasibility Demonstrations, , Last accessed May 28, 2010, 2006; Digi-Key Corporation. Last accessed May 28, 2010Douglass, B.P., (2003) Real-Time Design Patterns: Robust Scalable Architecture for Real-Time Systems, , Addison-Wesley, Boston; Froschauer, R., Schimmel, A., Auinger, F., Zoitl, A., Engineering of communication links with aadl in iec 61499 automation and control systems (2009) Proc. of 7th IEEE Int'l Conference on Industrial Informatics INDIN 2009, pp. 261-265. , Cardiff, June; Hofmann, M., (2010) Communication Model for An iec 61499 Runtime Environment, , Master's thesis, Fachhochschule Hagenberg, Embedded Systems Design, JUL; (1993) Programmable Controllers - Part 3: Programming Languages, , International Electrotechnical Commission, Geneva; (2005) Function Blocks - Part 1: Architecture, , International Electrotechnical Commission, Geneva; Korkeakoulu, T., Ogskolan, T.H., Adapting Problem Solving Strategies in Control Software Development to New Standards: Case Examples Iec 61499 and Isobus; LEGO Group. Last accessed April 29, 2011Lewis, R., Modelling control systems using IEC 61499 (2001) Control Engineering Series 59, , The Institution of Electrical Engineers; Quigley, M., Conley, K., Gerkey, B.P., Faust, J., Foote, T., Leibs, J., Wheeler, R., Ng, A.Y., Ros: An opensource robot operating system ICRA Workshop on Open Source Software, 2009; Schimmel, A., Zoitl, A., Real-time communication for iec 61499 in switched ethernet networks (2010) 2010 International Congress on Ultra Modern Telecommunications and Control Systems AndWorkshops, pp. 406-411. , Moscow, Oct; Sierla, S., Peltola, J., Koskinen, K., Real-time middleware for the requirements of distributed process control Industrial Informatics, 2005. INDIN'05. 2005 3rd IEEE International Conference on, pp. 1-6. , IEEE; Tanenbaum, A.S., (2003) Computer Networks, , Pearson, Upper Saddle River, NJ, 4. edition; Vyatkin, V., The iec 61499 standard and its semantics (2009) Industrial Electronics Magazine, 3 (4), pp. 40-48. , IEEE, Dec; Weehuizen, F., Zoitl, A., Using the cip protocol with iec 61499 communication function blocks (2007) INDIN 2007 Conference Proceedings, pp. 261-265. , Vienna, July; Zoitl, A., Strasser, T., Valentini, A., Open source initiatives as basis for the establishment of new technologies in industrial automation: 4DIAC a case study (2010) IEEE International Symposium on Industrial Electronics (ISIE), pp. 3817-3819. , july","Hofmann, M.; Profactor GmbH, Im Stadtgut A2, 4407 Steyr-Gleink, Austria; email: michael.hofmann@profactor.at",,IEEE Industrial Electronics Society;University of Toulouse 3,,"2011 IEEE 16th Conference on Emerging Technologies and Factory Automation, ETFA 2011",5 September 2011 through 9 September 2011,Toulouse,87207,,9781457700187,85ROA,,English,IEEE Symp Emerging Technol Fact Autom ETFA,Conference Paper,Scopus,2-s2.0-80655146494,,
TRUE,v,v,"Gupta, M.",Design pattern mining using greedy algorithm for multi-labelled graphs,2011,International Journal of Information and Communication Technology,3,4,,314,323,,2,10.1504/IJICT.2011.043627,http://www.scopus.com/inward/record.url?eid=2-s2.0-84857256006&partnerID=40&md5=dfe710eeb8cadcd6e438408d0d335708,"DST-Centre for Interdisciplinary Mathematical Sciences, Department of Computer Science, Banaras Hindu University, Varanasi - 221005, India","Gupta, M., DST-Centre for Interdisciplinary Mathematical Sciences, Department of Computer Science, Banaras Hindu University, Varanasi - 221005, India","Design patterns are used as a software reuse technology, which provides a large scale reuse. During maintenance of a software system, developers can understand and benefit by understanding the idea of which design patterns have been used in the system, if any. Thus, one can say that reuse technologies such as design patterns and frameworks improves the program understanding and software maintenance. Therefore, it is necessary to automate the design pattern discovery process. We first define a multi-labelled graph representation for the design of software. Multi-labelled graph allows multiple labels on vertices and edges. Then we are applying a greedy algorithm on the multi-labelled graphs of design pattern and system design to detect design patterns in it. Using this approach, variants of design patterns as well as all occurrences of a design pattern can be detected. © 2011 Inderscience Enterprises Ltd.",Design pattern; Greedy approach; Multi-labelled graph; UML,Design Patterns; Graph representation; Greedy algorithms; Greedy approach; Multi-labelled graph; Multiple labels; Program understanding; Reuse technology; Software reuse technology; Software systems; UML; Algorithms; Computer software reusability; Software design; Systems analysis; Computer software maintenance,,,,,,"Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196. , DOI 10.1016/S0164-1212(01)00061-9, PII S0164121201000619; Champin, P.A., Solnon, C., Measuring the similarity of labeled graphs (2003) 5th International Conference on Case-based Reasoning (ICCBR), , Lecture Notes in Computer Science, Springer-Verlag; Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching (2008) The Proceedings of the 23rd Annual ACM Symposium on Applied Computing (SAC), pp. 765-769. , Ceará, Brazil; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns Elements of Reusable Object-oriented Software, , Addison-Wesley; Gupta, M., Inexact graph matching for design pattern detection using genetic algorithm (2010) International Conference on Computer Engineering and Technology, , November, Jodhpur, to be published by IEEE Xplore; Gupta, M., Rao, R.S., Tripathi, A.K., Design pattern detection using inexact graph matching (2010) International Conference on Communication and Computational Intelligence, , Tamil Nadu, December, to be published by IEEE Xplore; Gupta, M., Pande, A., Rao, R.S., Tripathi, A.K., Design pattern detection by normalized cross correlation (2010) International Conference on Methods and Models in Computer Sciences (ICM2CS-2010), , 13-14 December 2010, JNU, to be published by IEEE Xplore; Gupta, M., Rao, R.S., Pande, A., Tripathi, A.K., Design pattern mining using state space representation of graph matching (2011) 1st International Conference on Computer Science and Information Technology, Banglore, Advances in Computer Science and Information Technology Communications in Computer and Information Science, 131, pp. 318-328. , Part 2; Lee, M., Kim, H., Kim, J., Lee, J., StarUML 5.0 developer guide (2005) The Open Source UML/MDA Platform, , http://staruml.sourceforge.net/en/; Pande, A., Gupta, M., Design pattern detection using graph matching (2010) International Journal of Computer Engineering and Information Technology (IJCEIT), 15 (20), pp. 59-64. , Special Edition; Pande, A., Gupta, M., Design pattern mining for GIS application using graph matching techniques (2010) 3rd IEEE International Conference on Computer Science and Information Technology, pp. 09-11. , IEEE Xplore Chengdu, China; Pande, A., Gupta, M., Tripathi, A.K., A new approach for detecting design patterns by graph decomposition and graph isomorphism (2010) International Conference on Contemporary Computing, Contemporary Computing Communications in Computer and Information Science, 95 (PART 2), pp. 108-119. , Jaypee Noida (Ed.); Pande, A., Gupta, M., Tripathi, A.K., A decision tree approach for design patterns detection by subgraph isomorphism (2010) International Conference on Advances in Information and Communication Technologies, Communications in Computer and Information Science, 101 (PART 3), pp. 561-564. , Kochi, Kerala (Ed); Pande, A., Gupta, M., Tripathi, A.K., DNIT - A new approach for design pattern detection (2010) International Conference on Computer and Communication Technology, pp. 545-550. , MNNIT - Allahabad, IEEE Xplore, ISBN: 978-1-4244-9033-2; Stencel, K., Wegrzynowicz, P., Detection of diverse design pattern variants (2008) 15th Asia-Pacific Software Engineering Conference, , IEEE Computer Society; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transaction on Software Engineering, 32 (11); Wenzel, S., Kelter, U., Model-driven design pattern detection using difference calculation (2006) Proc. of the 1st International Workshop on Pattern Detection for Reverse Engineering, , (DPD4RE), Benevento, Italy","Gupta, M.; DST-Centre for Interdisciplinary Mathematical Sciences, Department of Computer Science, Banaras Hindu University, Varanasi - 221005, India; email: manjari_gupta@rediffmail.com",,,,,,,,14666642,,,,English,Int. J. Inf. Commun. Technol.,Article,Scopus,2-s2.0-84857256006,,
FALSE,??,3,"Walsh, D., Schugerl, P., Rilling, J., Charland, P.",Quality validation through pattern detection - A semantic web perspective,2011,Proceedings - International Computer Software and Applications Conference,,,6032350,251,252,,,10.1109/COMPSAC.2011.40,http://www.scopus.com/inward/record.url?eid=2-s2.0-80054980567&partnerID=40&md5=454cb7f48ec295ba464188b339090a4c,"Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; System of Systems Section, Defence R and D Canada, Valcartier, QC, Canada","Walsh, D., Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Schugerl, P., Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Rilling, J., Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; Charland, P., System of Systems Section, Defence R and D Canada, Valcartier, QC, Canada","Given the ongoing trend towards the globalization of software systems, open networks, and distributed platforms, validating non-functional requirements and quality becomes essential. Our research addresses this challenge from two different perspectives: (1) the integration of knowledge and tool resources through Semantic Web technologies as part of our SE-PAD environment, in order to reduce or eliminate existing traditional information and analysis silos. (2) The ability to reason upon linked resources to infer both explicit and implicit patterns to support the validation of quality aspects. We have applied our SE-PAD environment for the detection of security and design patterns, as well as the violations of secure programming guidelines. © 2011 IEEE.",Patterns; Semantic Web; Software comprehension; Software quality,Design Patterns; Distributed platforms; Integration of knowledge; Non-functional requirements; Open network; Pattern detection; Patterns; Quality aspects; Secure programming; Semantic Web technology; Software comprehension; Software quality; Software systems; Computer applications; Computer software selection and evaluation; Semantics; User interfaces; World Wide Web; Semantic Web,,,,,,"(2004) Security Design Patterns, , Blakley B, Heath C, and Members of the Open Group Security Forum; Gruber, T.R., A translation approach to portable ontology specifications (1993) Knowledge Acquisition, 5 (2), pp. 199-220; http://jena.sourceforge.net/index.htmlhttp://www.racer-systems.com/index.phtmlhttp://findbugs.sourceforge.net/Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Professional, 1st Edition","Walsh, D.; Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; email: da_wals@cse.concordia.ca",,IEEE;IEEE Computer Society,,"35th Annual IEEE International Computer Software and Applications Conference, COMPSAC 2011",18 July 2011 through 21 July 2011,Munich,87008,7303157,9780769544397,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-80054980567,,
,4,,"Hsueh, N.-L., Chu, P.-H., Hsiung, P.-A., Chuang, M.-J., Chu, W., Chang, C.-H., Koong, C.-S., Shih, C., Yang, C.-T.",A pattern-based refactoring approach for multi-core system design,2011,International Journal of Advancements in Computing Technology,3,9,,196,209,,5,10.4156/ijact.vol3.issue9.25,http://www.scopus.com/inward/record.url?eid=2-s2.0-80555146561&partnerID=40&md5=a2b05acfd53f427fdbc382a72401678f,"Department of Information Engineering and Computer Science, Feng Chia University, Taiwan; Department of Computer Science and Information Engineering, National Chung Cheng University, Taiwan; Department of Computer Science, Tunghai University, Taiwan; Department of Information Management, Hsiuping University of Science and Technology, Taiwan; Department of Computer and Information Science, National Taichung University, Taiwan","Hsueh, N.-L., Department of Information Engineering and Computer Science, Feng Chia University, Taiwan; Chu, P.-H., Department of Information Engineering and Computer Science, Feng Chia University, Taiwan; Hsiung, P.-A., Department of Computer Science and Information Engineering, National Chung Cheng University, Taiwan; Chuang, M.-J., Department of Information Engineering and Computer Science, Feng Chia University, Taiwan; Chu, W., Department of Computer Science, Tunghai University, Taiwan; Chang, C.-H., Department of Information Management, Hsiuping University of Science and Technology, Taiwan; Koong, C.-S., Department of Computer and Information Science, National Taichung University, Taiwan; Shih, C., Department of Computer Science, Tunghai University, Taiwan; Yang, C.-T., Department of Computer Science, Tunghai University, Taiwan","Until recently, the most software development tools and techniques were concentrated on views from the sequential model of program execution. Software developers who only familiarize with the sequential model will face unusual challenges of software projects that require multi-core or parallel programming. In this paper, we addresses the challenges that developers face as their projects requiring multi-core or parallel programming by applying design patterns. In general, design patterns are usually regarded as the role of quality-improver for improving software quality, but they could be the role of design-facilitator for facilitating design activities. To address this issue, we propose an approach for specifying the applicable contexts and refactoring steps of patterns systematically, as well as automating the refactoring process for lightening the burden of developers. We also extract a multi-core pattern ParallelWhile which is derived from the template class parallel_while of Intel® TBB library to introduce our approach. Furthermore, we demonstrate our approach by a real-world multi-core embedded system PVE (Parallel Video Encoder), where Command Pipeline pattern is designed for the design enhancement and platform migration. It aids developers identifying operations which could be parallel processing, and revising a sequential design as an Intel® TBB parallel structure. In addition, our approach can promote the extensibility of parallel operations.",Design pattern; Model transformation; Multi-core embedded system; Pattern application,Design activity; Design enhancement; Design Patterns; Model transformation; Multi core; Multi-core systems; Parallel operations; Parallel processing; Parallel structures; Pattern application; Pipeline patterns; Program execution; Refactorings; Sequential design; Sequential model; Software developer; Software development tools; Software project; Software Quality; Video encoder; Computer software selection and evaluation; Design; Embedded systems; Microprocessor chips; Multicore programming; Parallel programming; Systems analysis; Software design,,,,,,"Pankratius, V., Schaefer, C., Jannesari, A., Tichy, W.F., Software Engineering For Multicore Systems: An Experience Report (2008) Proceedings of the 1st international workshop on Multicore software engineering, pp. 53-60; Mattson, T., Sanders, B., Massingill, B., (2004) Patterns For Parallel Programming, , Addison-Wesley Professional, USA; Chen, L., Gao, Q., Research on Framework Developing Technology based on MVC (2011) AISS: Advances In Information Sciences and Service Sciences, 3 (3), pp. 25-31; Chen, L., Tan, L., Gao, Q., Shen, J., Integrated Design Supporting Business Model Stability (2011) IJACT: International Journal of Advancements In Computing Technology, 3 (2), pp. 130-136; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, USA; Chung, L., Cooper, K., Yi, A., Developing adaptable software architectures using design patterns: An NFR approach (2003) Computer Standards & Interfaces, 25 (3), pp. 253-260. , Jun; Gross, D., Yu, E., From Non-Functional Requirements to Design through Patterns (2001) Requirements Engineering, 6 (1), pp. 18-36; Hsueh, N.L., Kuo, J.Y., Lin, C.C., Object-oriented design: A goal-driven and pattern-based approach (2009) Software and Systems Modeling, 8 (1), pp. 67-84. , Feb; Hsueh, N.L., Chu, P.H., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) Journal of Systems and Software, 81 (8), pp. 1430-1439. , Aug; Hsiung, P.-A., VERTAF: An Application Framework for the Design and Verification of Embedded Real-Time Software (2004) IEEE Transactions On Software Engineering, 30 (10), pp. 656-674; Hsiung, P.-A., Lin, S.-W., Chen, Y.-R., Hsueh, N.-L., Chang, C.-H., Shih, C.-H., Koong, C.-S., Chu, W.C., Model-driven development of multi-core embedded software (2009) Multicore Software Engineering, 2009, pp. 9-16. , IWMSE '09. ICSE Workshop on; France, R.B., Kim, D.K., Sudipto, G., Song, E., A UML-based pattern specification technique (2004) Software Engineering, IEEE Transactions On, 30 (3), pp. 193-206; Bézivin, J., Büttner, F., Gogolla, M., Jouault, F., Kurtev, I., Lindow, A., Model Transformations? Transformation Models! (2006) Proceedings of the 9th International Conference, MoDELS 2006, pp. 440-453; Dong, J., Zhao, Y.J., Sun, Y.T., XSLT-based evolutions and analyses of design patterns (2009) Software: Practice and Experience, 39 (8), pp. 773-805. , Jun 10; Meyer, B., (2000) Object-oriented Software Construction, , 2nd ed Prentice Hall PTR, USA; Lien, C.H., Bai, Y.W., Lin, M.B., Estimation by software for the power consumption of streaming-media servers (2007) Instrumentation and Measurement, IEEE Transactions On, 56 (5), pp. 1859-1870; Taibi, T., Ngo, D.C.L., Formal specification of design pattern combination using BPSL (2003) Information and Software Technology, 45 (3), pp. 157-170; Kim, D., Whittle, J., Generating UML Models From Pattern Specifications (2005) Proceedings of the Third ACIS International Conference on Software Engineering Research, Management and Applications (SERA2005), pp. 166-173; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise Modeling of Design Patterns in UML (2004) IEEE Computer Society, pp. 252-261. , Proceedings of the 26th International Conference on Software Engineering; Soundarajan, N., Hallstrom, J., Shu, G., Delibas, A., Patterns: From system design to software testing (2008) Innovations In Systems and Software Engineering, 4 (1), pp. 71-85","Chu, P.-H.; Department of Information Engineering and Computer Science, Feng Chia UniversityTaiwan; email: phchu@mail.fcu.edu.tw",,,,,,,,20058039,,,,English,Intl. J. Adv. Comput. Technolog.,Article,Scopus,2-s2.0-80555146561,,
,4,,"Bouassida, N., Kouas, A., Ben-Abdallah, H.",A design pattern recommendation approach,2011,ICSESS 2011 - Proceedings: 2011 IEEE 2nd International Conference on Software Engineering and Service Science,,,5982389,590,593,,,10.1109/ICSESS.2011.5982389,http://www.scopus.com/inward/record.url?eid=2-s2.0-80052461237&partnerID=40&md5=b4611f4402f60fc41058b73a7fe7f54b,"Mir at Cl Laboratory, Institut Supérieur d'Informatique et de Multimédia, Sfax University, Tunisia; Mir at Cl Laboratory, Faculté des Sciences Economiques et de Gestion, Sfax University, Tunisia","Bouassida, N., Mir at Cl Laboratory, Institut Supérieur d'Informatique et de Multimédia, Sfax University, Tunisia; Kouas, A., Mir at Cl Laboratory, Faculté des Sciences Economiques et de Gestion, Sfax University, Tunisia; Ben-Abdallah, H., Mir at Cl Laboratory, Faculté des Sciences Economiques et de Gestion, Sfax University, Tunisia","Design patterns describe solutions for well-known design problems. They were proposed to improve software quality and accelerate software development. However, there are several limitations slowing their large-scale expansion such as the complexity of their comprehension and the difficulty of choosing and instantiating the right pattern adapted to a certain application. In this context, we propose a tool for design pattern assistance that retrieves the adequate pattern from a repository of patterns. It identifies the correct design pattern and helps the designer in its instantiation. © 2011 IEEE.",Design Pattern assistance; instantiation process; Reuse,Design Patterns; Design problems; Instantiation process; Reuse; Software Quality; Computer software selection and evaluation; Design; Software design,,,,,,"Guéhéneuc, Y., Mustapha, R., A simple recommender system for design patterns (2007) Proceedings of the 1st EuroPLoP Focus Group on Pattern Repositories; Vladimir, M., Template based, designer driver design pattern instantiation support (2004) Advances in DataBases and Information System (ADBIS), East European Conference on Advances in Databases and Information Systems, (8). , Budapest, Hongrie, September; Ziane, M., Chantit, S., Vers une Démarche ""générer et Tester pour Aider à Utiliser les Patrons de Conception (2004) 8th Maghrebian Conference on Software Engineering and Artificial Intelligence (MCSEAI'2004), , Sousse-Tunisie, 8-12 Mai; He, C., He, F., He., K., Tu, W., Liu, J., Role of relationship and its Meta model for design pattern instanciation (2005) - International Conference on Advanced Data Mining and Applications (ADMA), (1). , Wuhan, China, July; Arnaud, N., Front, A., Rieu, D., Une approche par méta-modélisation pour l'imitation des patrons (2004) Congrès INFORSID'04, , Biarritz, Mai; Khayati, O., Giraudin, J.-P., Components retrieval systems (2002) Reuse in Object-Oriented Information Systems Design, OOIS Workshop Montpellier; O'Cinnéide, M., Nixon, P., Automated software evolution towards design patterns (2001) IW- PSE 2001: Proceedings of the 4th International Workshop on Principles of Software Evolution, pp. 162-165. , ACM, New York; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Pattern - Elements of Reusable Object-Oriented Software, , Addison Wesley; http://argouml.tigris.org/documentation/umlsupport/index.htmlhttp://www.techno-science.net/?onglet=glossaire&definition=5346http://fr.wikipedia.org/wiki/Web_Ontology_Language","Bouassida, N.; Mir at Cl Laboratory, Institut Supérieur d'Informatique et de Multimédia, Sfax UniversityTunisia; email: Nadia.Bouassida@isimsf.rnu.tn",,IEEE Beijing Section;IEEE China Council and Beijing University of Technology;Beijing University of Posts and Telecommunications;The Hong Kong Polytechnic University;Andhra University,,"2011 IEEE 2nd International Conference on Software Engineering and Service Science, ICSESS 2011",15 July 2011 through 17 July 2011,Beijing,86378,,9781424496969,,,English,ICSESS - Proc.: IEEE Int. Conf. Softw. Eng. Serv. Sci.,Conference Paper,Scopus,2-s2.0-80052461237,,
,3,,"Syer, M.D., Adams, B., Hassan, A.E.",Industrial case study on supporting the comprehension of system behaviour under load,2011,IEEE International Conference on Program Comprehension,,,5970187,215,216,,3,10.1109/ICPC.2011.38,http://www.scopus.com/inward/record.url?eid=2-s2.0-80052413617&partnerID=40&md5=2b70876a030db9fcad6f6816732d160b,"Software Analysis and Intelligence Lab. (SAIL), School of Computing, Queen's University, Canada","Syer, M.D., Software Analysis and Intelligence Lab. (SAIL), School of Computing, Queen's University, Canada; Adams, B., Software Analysis and Intelligence Lab. (SAIL), School of Computing, Queen's University, Canada; Hassan, A.E., Software Analysis and Intelligence Lab. (SAIL), School of Computing, Queen's University, Canada","Large-scale software systems achieve concurrency on enormous scales using a number of different design patterns. Many of these design patterns are based on pools of pre-existing and reusable threads that facilitate incoming service requests. Thread pools limit thread lifecycle overhead (thread creation and destruction) and resource thrashing (thread proliferation). Despite their potential for scalability, thread pools are hard to configure and test because of concurrency risks like synchronization errors and dead lock, and thread pool-specific risks like resource thrashing and thread leakage. Addressing these challenges requires a thorough understanding of the behaviour of the threads in the thread pool. We argue for a methodology to automatically identify and rank deviations in the behaviour of threads based on resource usage. © 2011 IEEE.",behaviour-based clustering; thread-pools; understanding ULS systems,behaviour-based clustering; Dead lock; Design Patterns; Industrial case study; Large-scale software systems; Resource usage; Service requests; Synchronization error; thread-pools; understanding ULS systems; Computer programming; Industrial applications; Lakes,,,,,,"Cornelissen, B., Zaidman, A., Van Deursen, A., Moonen, L., Koschke, R., A systematic survey of program comprehension through dynamic analysis (2009) Trans. Software Engineering, 35 (5), pp. 684-702. , Sep; Jiang, Z.M., Hassan, A., Hamann, G., Flora, P., Automated performance analysis of load tests Proc. 25th Int. Conf. Software Maintenance (ICSM), Sep. 2009, pp. 125-134; Ernst, M., Czeisler, A., Griswold, W., Notkin, D., Quickly detecting relevant program invariants Proc. 22nd Int. Conf. Software Engineering (ICSE), Jun. 2000, pp. 449-458; Hamou-Lhadj, A., Lethbridge, T., Summarizing the content of large traces to facilitate the understanding of the behaviour of a software system Proc. 14th Int. Conf. Program Comprehension (ICPC), Jun. 2006, pp. 181-190; Pirzadeh, H., Agarwal, A., Hamou-Lhadj, A., An approach for detecting execution phases of a system for the purpose of program comprehension Proc. 8th Int. Conf. Software Engineering Research, Management and Applications (SERA), May 2010, pp. 207-214; Malik, H., Jiang, Z.M., Adams, B., Hassan, A.E., Flora, P., Hamann, G., Automatic comparison of load tests to support the performance analysis of large enterprise systems Proc. 14th European Conf. Software Maintenance and Reengineering (CSMR), Mar. 2010, pp. 222-231; Weyuker, E., Vokolos, F., Experience with performance testing of software systems: Issues, an approach, and case study (2000) Trans. Software Engineering, 26 (12), pp. 1147-1156. , Dec","Syer, M.D.; Software Analysis and Intelligence Lab. (SAIL), School of Computing, Queen's UniversityCanada; email: mdsyer@cs.queensu.ca",,,,"2011 IEEE 19th International Conference on Program Comprehension, ICPC 2011",22 June 2011 through 24 June 2011,"Kingston, ON",86322,,9780769543987,,,English,IEEE Int. Conf. Program Comprehension,Conference Paper,Scopus,2-s2.0-80052413617,,
,1,,"Albers, A., Börsting, P., Turki, T.",Micro gas turbine development: Design improvements using design patterns,2011,Micro and Nanosystems,3,3,,250,253,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-80052924213&partnerID=40&md5=603388e0d8d844cd63ddb5b2233f6762,"IPEK - Institute of Product Engineering, Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany","Albers, A., IPEK - Institute of Product Engineering, Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany; Börsting, P., IPEK - Institute of Product Engineering, Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany; Turki, T., IPEK - Institute of Product Engineering, Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany","This paper describes the application of design patterns in a case study on microsystems development. The case study was conducted in the scope of the Collaborative Research Centre 499 (SFB 499). The SFB 499 aims at developing new production technologies for prototyping and mass-production of microsystems. These production technologies (e.g. Micro Powder Injection Moulding or Micro Casting) allow processing a vast variety of materials, especially metals and ceramics and enable to produce 3D free form geometries. In this context design patterns are used as a means to capture the fast growing design know-how in this new field and to provide knowledge-based design support in the future. The pattern approach in microsystems development is explained in its theoretical context. In previous design projects, experts on microsystems development elicited design patterns, capturing micro-specific design know-how. In this case study these design patterns were given to a design team inexperienced in microsystems development and not familiar with the design pattern approach. Use of patterns, benefits and drawbacks are described on the basis of a single pattern example. Inexperienced designers were enabled to detect weaknesses in their designs. Nevertheless, pattern retrieval is still suboptimal and subject to future research efforts. The results of this case study show that design patterns are helpful in developing and optimizing microsystems. © 2011 Bentham Science Publishers.",Design patterns; Design support; Knowledge management; Microtechnology; Pattern languages; Wiki,Design Patterns; Design support; Microtechnology; Pattern languages; Wiki; Casting; Injection molding; Knowledge based systems; Knowledge management; Microsystems; Research; Technology transfer; Design,,,,,,"Albers, A., Marz, J., Knowledge-based design environment for primary shaped micro parts (2003) HARMST 03, , California, USA, June 15-17; Albers, A., Marz, J., Restrictions of production engineering on micro-specific product development (2004) Microsystem Technologies, 10, pp. 205-210; Marz, J., (2005) Micro-specific Product Development Process (my PDP) For Tool Based Micro Technologies, , Albers A. (Ed.) research report of the Institute of Product Engineering Karlsruhe. Doctoral Thesis, University of Karlsruhe, Germany; Albers, A., Deigendesch, T., Turki, T., Design patterns in microtechnology (2009) 17th International Conference On Engineering Design, , Stanford, CA, USA; Alexander, C., (1977) A Pattern Language - Towns, Buildings, Construction, , Oxford University Press, New York; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press, New York; Beck, K., Cunningham, W., Using pattern languages for object oriented programs (1987) Conference On Object-Oriented Programs, Systems, Languages, and Applications OOPSLA, , Orlando, Florida, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-oriented Software, , Addison-Wesley, Reading, MA; http://www.c2.com/cgi/wiki?WikiWikiWeb, WikiWikiWeb, Accessed march 2010Salustri, F.A., Using pattern languages in design engineering (2005) Proceedings of 15th International Conference On Engineering Design, , Melbourne, Australia; Bungert, F., (2009) Pattern-based Development Methodology For Product Lifecycle Management, , Doctoral Thesis, University of Aachen, Germany; Albers, A., Deigendesch, T., Turki, T., Müller, T., Patterns for design in Microtechnology (2010) Microsystem Technologies, 16, pp. 1537-1545; Micro Book of Knowledge (MyBoK), , http://wiki.ipek.unikarlsruhe.de/mybok/doku.php, accessed March 2010; Gohr, A., DokuWiki, , http://www.dokuwiki.org, accessed March 2010; (2009), http://www.sfb499.de, Collaborative Research Centre 499, Updated 8 July, accessed March 2010Deigendesch, T., (2009) Creativity In Product Development and Patterns As a Methodological Means of Support, , Doctoral Thesis, Karlsruhe Institute of Technology, Germany; Bauer, W., Müller, M., Knitter, R., Börsting, P., Albers, A., Deuchert, M., Schulze, V., Design and prototyping of a Ceramic Micro Turbine: A case study (2010) Microsystem Technologies, 16, pp. 607-615. , Springer, Berlin","Börsting, P.; IPEK - Institute of Product Engineering, Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany; email: peter.boersting@kit.edu",,,,,,,,18764029,,,,English,Micro Nanosystems,Article,Scopus,2-s2.0-80052924213,,
,4,,"Štěpán, P.",Design pattern solutions as explicit entities in component-based software development,2011,CompArch'11 - Proceedings of the 2011 Federated Events on Component-Based Software Engineering and Software Architecture - WCOP'11,,,,9,16,,,10.1145/2000292.2000295,http://www.scopus.com/inward/record.url?eid=2-s2.0-79960510661&partnerID=40&md5=7cdfaaab898b63dc52aaa09720f2e836,"School of Computer Science, University of Manchester, Manchester, United Kingdom","Štěpán, P., School of Computer Science, University of Manchester, Manchester, United Kingdom","Despite patterns being reusable pieces of design knowledge, in current practice, software developers have no first-class support for their application and have to encode patterns manually in terms of low-level abstractions. We propose patterns to become explicit software system entities, both in design and implementation, by defining them as component model entities. Patterns would form high-level means for component composition. In this paper, we demonstrate the feasibility of the idea and identify research challenges that the approach raises. © 2011 ACM.",component model; component-based software development; design pattern; high-level composition mechanism,Component composition; Component model; Component-based software development; Design knowledge; design pattern; Design Patterns; high-level composition mechanism; Research challenges; Software developer; Software systems; Computer software reusability; Design; Software architecture; Software design,,,,,,"Arbab, F., What do you mean, coordination? (1998) Bulletin of the Dutch Association for Theoretical Computer Science, pp. 11-22. , NVTI; Arbab, F., Reo: A channel-based coordination model for component composition (2004) Mathematical Structures in Computer Science, 14 (3), pp. 329-366; Basu, A., Bozga, M., Sifakis, J., Modeling heterogeneous real-time components in BIP (2006) SEFM, pp. 3-12. , IEEE Computer Society; Bayley, I., Zhu, H., Formal specification of the variants and behavioural features of design patterns (2010) Journal of Systems and Software, 83 (2), pp. 209-221; Booch, G., Back to the future (2008) IEEE Software; Buschmann, F., Henney, K., Schmidt, D.C., (2007) Pattern-oriented Software Architecture: On Patterns and Pattern Languages, 5. , John Wiley and Sons; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: A System of Patterns, 1. , John Wiley and Sons; Carriero, N., Gelernter, D., Coordination languages and their significance (1992) Comm. of the ACM, 35 (2), p. 96. , Feb; Dong, J., Alencar, P.S.C., Cowan, D.D., Yang, S., Composing pattern-based components and verifying correctness (2007) Journal of Systems and Software, 80 (11), pp. 1755-1769. , DOI 10.1016/j.jss.2007.03.005, PII S0164121207000817; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855; Elaasar, M., Briand, L., Labiche, Y., A metamodeling approach to pattern specification and detection (2006) Model Driven Engineering Languages and Systems, pp. 1-28. , March; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Trans. on Soft. Eng., 30 (3), pp. 193-206; Gamma, E., Helm, R., Vlissides, J., Johnson, R.E., (1995) Design Patterns, , Addison-Wesley; Gibbons, J., Design patterns as higher-order datatype-generic programs (2006) Proceedings of the ACM SIGPLAN Workshop on Generic Programming, pp. 1-12. , R. Hinze, editor, ACM; Guennec, A.L., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns (2000) LNCS, 1939, pp. 482-496. , UML 2000, York, UK, Springer; Hannemann, J., Kiczales, G., Design pattern implementation in Java and AspectJ (2002) ACM SIGPLAN Notices, 37 (11), pp. 161-173. , Nov; Kamal, A.W., Avgeriou, P., Modeling architectural patterns' behavior using architectural primitives (2008) ECSA 2008, 5292, pp. 164-179. , Springer; Lau, K.-K., Ntalamagkas, I., Tran, C.M., Rana, T., (behavioural) design patterns as composition operators (2010) LNCS, 6092, pp. 232-251. , CBSE 2010, Springer-Verlag; Lau, K.-K., Rana, T., A taxonomy of software composition mechanisms (2010) Proc. 36th EUROMICRO Conference on Software Engineering and Advanced Applications, pp. 102-110. , IEEE; Lau, K.-K., Safie, L., Štěpán, P., Tran, C., A component model that is both control-driven and data-driven CBSE 2011, , to appear; Lau, K.-K., Velasco Elizondo, P., Wang, Z., Exogenous connectors for software components (2005) LNCS, 3489, pp. 90-106. , CBSE 2005; Lau, K.-K., Wang, Z., Software component models (2007) IEEE Trans. on Soft. Eng., 33 (10). , October; Manolescu, D., Kozaczynski, W., Miller, A., Hogg, J., The growing divide in the patterns world (2007) IEEE Software, 24 (4), pp. 61-67. , DOI 10.1109/MS.2007.120; Maplesden, D., Hosking, J.G., Grundy, J.C., A visual language for design pattern modelling and instantiation (2001) HCC, pp. 338-339. , IEEE Computer Society; Mehta, N.R., Medvidovic, N., Composing architectural styles from architectural primitives (2003) ESEC/SIGSOFT FSE, pp. 347-350. , ACM; Meyer, B., Arnout, K., Componentization: The Visitor example (2006) Computer, 39 (7), pp. 23-30. , July; Mikkonen, T., Formalizing design patterns (1998) ICSE '98, pp. 115-124; Schmidt, D.C., Model-driven engineering (2006) Computer, 39 (2), pp. 25-31. , DOI 10.1109/MC.2006.58; Shaw, M., Garlan, D., (1996) Software Architecture: Perspectives on An Emerging Discipline; Taibi, T., Taibi, F., Formal Specification of Design Patterns and Their Instances (2006) IEEE Int. Conf. on Computer Systems and Applications, 2006, pp. 33-36","Štěpán, P.; School of Computer Science, University of Manchester, Manchester, United Kingdom; email: petr.stepan@cs.man.ac.uk",,"Assoc. Comput. Mach., Spec. Interest Group;Softw. Eng. (ACM SIGSOFT)",,"16th International Workshop on Component-Oriented Programming, WCOP'11, Part of the 2011 Federated Events on Component-Based Software Engineering and Software Architecture, CompArch'11",20 June 2011 through 24 June 2011,"Boulder, CO",85627,,9781450307260,,,English,CompArch - Proc. Fed. Events Compon.-Based Softw. Eng. Softw. Archit. - WCOP,Conference Paper,Scopus,2-s2.0-79960510661,,
,v,,"Iacob, C.",A design pattern mining method for interaction design,2011,"Proceedings of the 2011 SIGCHI Symposium on Engineering Interactive Computing Systems, EICS 2011",,,,217,222,,3,10.1145/1996461.1996523,http://www.scopus.com/inward/record.url?eid=2-s2.0-79960186521&partnerID=40&md5=6c035dc8c28f9bb56aa5f56a8d9e5bc1,"University of Milan, Via Comelico, 39/41, Milan, Italy","Iacob, C., University of Milan, Via Comelico, 39/41, Milan, Italy","This paper reports on a design pattern mining method addressing pattern mining in interaction design. The method aims at identifying proven solutions to recurring design problems through design workshops and software application analysis. During a design workshop, a team of 3-5 designers is asked to design the GUI and the interaction process for an application in the domain of the mining process and the design issues they address are collected. Moreover, a set of software applications in the area of the mining process is analyzed in order to identify in what measure the design issues discussed during the workshops are considered in the implementation of existing applications. Candidates for being documented as design patterns are the most recurring design issues in both the workshops and the software analysis. The paper describes the method together with its application in mining for design patterns for the design of synchronous collaborative systems. Copyright 2011 ACM.",Design patterns; Design workshops; Interaction design,Collaborative systems; Design issues; Design Patterns; Design problems; Design workshops; Interaction design; Interaction process; Mining process; Pattern mining; Software analysis; Software applications; Computer systems; Mining; Design,,,,,,"Adler, A., Nash, J.C., Noel, S., Evaluating and implementing a collaborative office document system (2006) Interacting with Computers, 18 (4), pp. 665-682. , DOI 10.1016/j.intcom.2005.10.001, PII S0953543805000810; Alexander, C., (1977) A Pattern Language: Towns, Buildings, Construction, , New York: Oxford University Press; Amershi, S., Morris, M.R., CoSearch: A system for co-located collaborative web search (2008) Proceeding of CHI '08, pp. 1647-1656. , (Florence Italy, April), ACM Press; Baggetun, R., Rusman, E., Poggi, C., Design patterns for collaborative learning: From practice to theory and back (2004) Proceedings of International Conference on Educational Multimedia, Hypermedia and Telecommunications, pp. 2493-2498. , Lugano Switzerland; Battocchi, A., Pianesi, F., Tomasini, D., Zancanaro, M., Esposito, G., Venuti, P., Ben Sasson, A., Weiss, P.L., Collaborative puzzle game: A tabletop interactive game for fostering collaboration in children with autism spectrum disorders (2009) Proceedings of the International Conference on Interactive Tabletops and Surfaces, pp. 197-204. , ACM Press; Borchers, J., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons, Inc; Carroll, J.M., (1995) Scenario-Based Design: Envisioning Work and Technology in System Development, , John Wiley & Sons, Inc., New York, NY, USA; Crumlish, C., Malone, E., (2009) Designing Social Interfaces, , O'Reilly Media, Inc; Díaz, P., Rosson, M.B., Aedo, I., Carroll, J.M., Web design patterns: Investigating user goals and browsing strategies (2009) Proceedings of the Symposium on End-User Development, pp. 186-204. , Siegen Germany, March; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) International Journal of Software Engineering and Knowledge Engineering, 19 (6), pp. 823-855. , September; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading MAAddison-Wesley; http://www.docs.google.com/Klopfer, E., Perry, J., Squire, K., Jan, M.F., Steinkuehler, C., Mystery at the museum: A collaborative game for museum education (2005) Proceedings of the Conference on Computer Support for Collaborative Learning, pp. 316-320; Kruschitz, C., Hitz, M., Analyzing the HCI design pattern variety (2010) Proceedings of AsianPLoP2010, , (Tokyo Japan, March), GRACE-TR-2010-01; Lukosch, S., Schümmer, T., Communicating design knowledge with groupware technology patterns: The case of shared object management (2004) Proceedings of CRIWG 2004, pp. 223-237. , Costa Rica; Margaritis, M., Avouris, N., Kahrimanis, G., On supporting users' reflection during small groups synchronous collaboration (2006) Proceedings of 12th International Workshop on Groupware, , CRIWG 2006 (Spain) LNCS 4154, Springer; Meszaros, G., Doble, J., A pattern language for pattern writing (1997) Proceedings of International Conference on Pattern Languages of Program Design, pp. 529-574. , Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA; Retalis, S., Georgiakakis, P., Dimitriadis, Y., Eliciting design patterns for e-learning systems (2006) Computer Science Education, 16 (2), pp. 105-118; Schadewitz, N., Jachna, T., Comparing inductive and deductive methodologies for design patterns identification and articulation (2007) International Design Research Conference, 12, p. 15. , November; Schadewitz, N., Design patterns for cross-cultural collaboration (2009) International Journal of Design, 3, p. 3; Schuler, D., A pattern language for living communication (2002) Proceedings of PDC'02, , Malmö Sweden, June; Shah, C., Marchionini, G., Kelly, D., Learning design principles for a collaborative information seeking system (2009) Proceedings of CHI '09, pp. 3419-3424. , (Boston USA, April). ACM Press; Tidwell, J., (2005) Designing Interfaces: Patterns for Effective Interaction Design, , O'Reilly Media; Wallas, G., (1926) The Art of Thought, , Harcourt, Brace & World, New York; Welie, M., Patterns in Interaction Design, , http://www.welie.com, Retrieved: June, 2 0th 2010; Winters, N., Mor, Y., Dealing with abstraction: Case study generalisation as a method for eliciting design patterns (2009) Computers in Human Behavior, 25 (5), pp. 1079-1088","Iacob, C.; University of Milan, Via Comelico, 39/41, Milan, Italy; email: iacob@dico.unimi.it",,ACM SIGCHI,,"3rd ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'11",13 June 2011 through 16 June 2011,Pisa,85412,,9781450307789,,,English,"Proc. SIGCHI Symp. Eng. Interact. Comput. Syst., EICS",Conference Paper,Scopus,2-s2.0-79960186521,,
,4,,"Iacob, C.","Identifying, relating, and evaluating design patterns for the design of software for synchronous collaboration",2011,"Proceedings of the 2011 SIGCHI Symposium on Engineering Interactive Computing Systems, EICS 2011",,,,323,326,,1,10.1145/1996461.1996547,http://www.scopus.com/inward/record.url?eid=2-s2.0-79960160221&partnerID=40&md5=5e4d40ca18901e77167c6bcab83f142d,"University of Milan, Via Comelico, 39/41, Milan, Italy","Iacob, C., University of Milan, Via Comelico, 39/41, Milan, Italy","Many working environments require that geographicallydistributed or co-located work group members work together-supported by software-in developing and refining one commonly shared resource in the same time. Hence, synchronous collaboration is common to various contexts and domains, examples being drawing, searching, text editing, and game solving. However, little work has been done in identifying design patterns for the design of systems for such collaboration. This line of research aims at identifying, relating and evaluating such design patterns for providing: a). a better understanding of the design processes of synchronous collaborative software, and b). a repository of knowledge comprising best practices in such design processes for practitioners. Copyright 2011 ACM.",Design patterns; Synchronous collaboration,Co-located; Collaborative softwares; Design Patterns; Design process; Game solving; Shared resources; Synchronous collaboration; Text editing; Workgroups; Working environment; Computer systems; Design; Groupware; User interfaces; Software design,,,,,,"Adler, A., Nash, J.C., Noel, S., Evaluating and implementing a collaborative office document system (2006) Interacting with Computers, 18 (4), pp. 665-682. , DOI 10.1016/j.intcom.2005.10.001, PII S0953543805000810; Alexander, C., (1977) A Pattern Language: Towns, Buildings, Construction, , New York: Oxford University Press; Amershi, S., Morris, M.R., CoSearch a system for collocated collaborative web search (2008) Proceeding of CHI ' 08, pp. 1647-1656. , (Florence Italy, April), ACM Press; Battocchi, A., Pianesi, F., Tomasini, D., Zancanaro, M., Esposito, G., Venuti, P., Ben Sasson, A., Weiss, P.L., Collaborative puzzle game: A tabletop interactive game for fostering collaboration in children with autism spectrum disorders (2009) Proceedings of the International Conference on Interactive Tabletops and Surfaces, pp. 197-204. , ACM Press; Borchers, J., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons, Inc; Carroll, J.M., (1995) Scenario-based Design: Envisioning Work and Technology in System Development, , John Wiley & Sons, Inc., New York, NY, USA; Crumlish, C., Malone, E., (2009) Designing Social Interfaces, , O'Reilly Media, Inc; Díaz, P., Rosson, M.B., Aedo, I., Carroll, J.M., Web design patterns: Investigating user goals and browsing strategies (2009) Proceedings of the Symposium on End-user Development, pp. 186-204. , Siegen Germany, March; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Reading, MA Addison-Wesley; Iacob, C., A design pattern mining method for interaction design (2011) Proceedings of the 3 rd Symposium on Engineering Interactive Computing Systems 2011, , Pisa Italy, June; Klopfer, E., Perry, J., Squire, K., Jan, M.F., Steinkuehler, C., Mystery at the museum: A collaborative game for museum education (2005) Proceedings of the Conference on Computer Support for Collaborative Learning, pp. 316-320; Kruschitz, C., Hitz, M., Analyzing the HCI design pattern variety (2010) Proceedings of AsianPLoP2010, , Tokyo Japan March, GRACE-TR-2010-01; Lukosch, S., Schümmer, T., Communicating design knowledge with groupware technology patterns: The case of shared object management (2004) Proceedings of CRIWG 2004, pp. 223-237. , Costa Rica; Margaritis, M., Avouris, N., Kahrimanis, G., On supporting users' reflection during small groups synchronous collaboration (2006) Proceedings of 12 th International Workshop on Groupware CRIWG 2006, , Spain LNCS 4154, Springer; Schadewitz, N., Design patterns for cross-cultural collaboration (2009) International Journal of Design, 3 (3); Schümmer, T., Patterns for building communities in collaborative systems (2004) Proceedings of the European Conference on Pattern Languages of Programs (EuroPLoP'04), pp. 379-440. , UVK, Konstanz, Germany, Irsee, Germany; Shah, C., Marchionini, G., Kelly, D., Learning design principles for a collaborative information seeking system (2009) Proceedings of CHI ' 09, pp. 3419-3424. , Boston USA, April. ACM Press","Iacob, C.; University of Milan, Via Comelico, 39/41, Milan, Italy; email: iacob@dico.unimi.it",,ACM SIGCHI,,"3rd ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'11",13 June 2011 through 16 June 2011,Pisa,85412,,9781450307789,,,English,"Proc. SIGCHI Symp. Eng. Interact. Comput. Syst., EICS",Conference Paper,Scopus,2-s2.0-79960160221,,
,4,,"Rahim, L.A., Whittle, J.",Identifying state space reduction techniques from behavioural design patterns,2011,ACM International Conference Proceeding Series,,,,49,55,,,10.1145/1993956.1993963,http://www.scopus.com/inward/record.url?eid=2-s2.0-79960185110&partnerID=40&md5=ceccaf9754147b2c8b1c5eab78c2fbfb,"School of Computing and Communications, InfoLab21, Lancaster University, Lancaster, LA1 4WA, United Kingdom","Rahim, L.A., School of Computing and Communications, InfoLab21, Lancaster University, Lancaster, LA1 4WA, United Kingdom; Whittle, J., School of Computing and Communications, InfoLab21, Lancaster University, Lancaster, LA1 4WA, United Kingdom","Model checking has always been associated with a scalability problem when verifying systems with large state spaces. This problem can be addressed using techniques that reduce the state space during verification. This paper proposes guidelines to identify suitable reduction techniques from design patterns. The selection of suitable state space reduction techniques is demonstrated using a complex concurrent system as case study. Using this case study, we discuss the reasons and conditions for selecting a reduction technique when a design pattern is used. The proposed guidelines are evaluated by checking if the selected reduction techniques reduces the number of states; implying that these techniques are suitable. The result of this evaluation shows that suitable reduction techniques can be identified from design patterns. Copyright 2011 ACM.",Design pattern; State space reduction,Complex concurrent systems; Design Patterns; Number of state; Reduction techniques; Scalability problems; State space; State-space reduction; Design; Foundations; Model checking; Mathematical models,,,,,,"Bass, L., Clements, P., Kazman, R., (2003) Software Architecture in Practice, , 2nd Edition. Addison Wesley; Betin-Can, A., Bultan, T., Highly dependable concurrent programming using design for verification (2007) Formal Aspects of Computing, 19 (2), pp. 243-268. , DOI 10.1007/s00165-006-0017-0; Betin-Can, A., Bultan, T., Fu, X., Design for verication for asynchronously communicating web services (2005) Proceedings of the 14th International World Wide Web Conference, pp. 750-759. , ACM; Clarke, E.M., Grumberg, O., Peled, D.A., (1999) Model Checking, , The MIT Press; Dwyer, M.B., Avrunin, G.S., Corbett, J.C., Property specication patterns for finite-state verication (1998) Proceedings on the 2nd Workshop on Formal Methods in Software Practice, pp. 7-15. , ACM; Furia, C.A., (2005) A Compositional World: A Survey of Recent Works on Compositionality in Formal Methods; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (2000) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Joint Tactical Radio System, , http://www.globalsecurity.org/military/systems/ground/jtrs.html; Mehlitz, P., Penix, J., Design for verication with dynamic assertions (2005) 29th Annual IEEE/NASA Software Engineering Workshop, pp. 285-292. , IEEE, July; Miller, A., Donaldson, A.F., Calder, M., Symmetry in temporal logic model checking (2006) ACM Computing Survey, 38 (3); Sharygina, N., Browne, J.C., Kurshan, R.P., A formal object-oriented analysis for software reliability: Design for verification (2001) LNCS, (2029), pp. 318-332. , Fundamental Approaches to Software Engineering; Visser, W., Pasareanu, C.S., Khurshid, S., Test input generation with Java PathFinder (2004) ISSTA 2004 - Proceedings of the ACM SIGSOFT International Symposium on Software Testing and Analysis, pp. 97-107. , ISSTA 2004 - Proceedings of the ACM SIGSOFT International Symposium on Software Testing and Analysis","Rahim, L.A.; School of Computing and Communications, InfoLab21, Lancaster University, Lancaster, LA1 4WA, United Kingdom; email: abrahim@lancaster.ac.uk",,,,"3rd International Workshop on Behavioural Modelling - Foundations and Applications, BM-FA2011 - In Collaboration with the 7th European Conference on Modelling Foundations and Applications, ECMFA 2011",6 June 2011 through 6 June 2011,Birmingham,85448,,9781450306171,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-79960185110,,
,3,,"Steimann, F., Stolz, F.U.",Refactoring to role objects,2011,Proceedings - International Conference on Software Engineering,,,,441,450,,,10.1145/1985793.1985854,http://www.scopus.com/inward/record.url?eid=2-s2.0-79959885436&partnerID=40&md5=24fb93beceeafae8893a74a258ff68d3,"Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, D-58084 Hagen, Germany; Volkswohl Bund Versicherungen, Südwall 37-41, D-44137 Dortmund, Germany","Steimann, F., Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, D-58084 Hagen, Germany; Stolz, F.U., Volkswohl Bund Versicherungen, Südwall 37-41, D-44137 Dortmund, Germany","Role objects are a widely recognized design pattern for representing objects that expose different properties in different contexts. By developing a tool that automatically refactors legacy code towards this pattern and by applying this tool to several programs, we have found not only that refactoring to role objects as currently defined produces code that is hard to read and to maintain, but also that the refactoring has preconditions so strong that it is rarely applicable in practice. We have therefore taken a fresh look at role objects and devised an alternative form that solves the exact same design problems, yet is much simpler to introduce and to maintain. We describe refactoring to this new, lightweight form of role objects in informal terms and report on the implementation of our refactoring tool for the JAVA programming language, presenting evidence of the refactoring's increased applicability in several sample programs. © 2011 ACM.",delegation; object schizophrenia; refactoring to patterns; roles,delegation; Design Patterns; Design problems; Legacy code; object schizophrenia; Refactoring tools; Refactorings; roles; Computer programming; Computer software; Java programming language,,,,,,"Albano, A., Bergamini, R., Ghelli, G., Orsini, R., An object data model with roles (1993) Proc. VLDB, pp. 39-51; Bachman, C.W., Daya, M., The role concept in data models (1977) Proc. of VLDB, pp. 464-476; Baldoni, M., Boella, G., Van Der Torre, L.W.N., Interaction between Objects in powerJava (2007) Journal of Object Technology, 6 (2); Bäumer, D., Riehle, D., Siberski, W., Wulf, M., The role object pattern Proc. of PLoP, 1997, , M; Chandra Sekharaiah, K., Janaki Ram, D., Object Schizophrenia Problem in Object Role System Design (2002) Proc. of OOIS 2002, pp. 494-506; Eclipse JDT Refactoring, , http://www.eclipse.org; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley; Fowler, M., Dealing with Roles, , http://martinfowler.com/apsupp/roles.pdf; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Software, , Addison-Wesley; Griswold, W.G., Notkin, D., Automated assistance for program restructuring (1993) ACM Trans. Softw. Eng. Methodol., 2 (3), pp. 228-269; Gottlob, G., Schrefl, M., Röck, B., Extending Object- Oriented Systems with Roles (1996) ACM Trans. Inf. Syst., 14 (3), pp. 268-296; Herrmann, S., A precise model for contextual roles: The programming language Object Teams/Java (2007) Applied Ontology, 2 (2), pp. 181-207; Johnson, R.E., Zweig, J.M., Delegation in C++ (1991) The Journal of Object-Oriented Programming, 4 (7), pp. 31-34; Kegel, H., Steimann, F., Systematically refactoring inheritance to delegation in Java (2008) Proceedings of the 30th ICSE, pp. 431-440; Kerievsky, J., (2004) Refactoring to Patterns, , Pearson Higher Education; Kristensen, B.B., Object-oriented modeling with roles (1996) Proc. of OOIS '95, pp. 57-71; Lieberman, H., Using prototypical objects to implement shared behavior in object-oriented systems (1986) Proc. of OOPSLA, pp. 214-223; Mikhajlov, L., Sekerinski, E., A study of the fragile base class problem Proc. of ECOOP (1998), pp. 355-382; Opdyke, W., (1992) Refactoring Object-Oriented Frameworks, , Ph.D. thesis, University of Illinois at Urbana-Champaign; Pernici, B., Objects with roles (1990) SIGOIS Bulletin, 11 (2-3), pp. 205-215; Sciore, E., Object Specialization (1989) ACM transactions on office information systems, 7 (2), pp. 103-122; Steimann, F., On the representation of roles in object-oriented and conceptual modelling (2000) Data Knowl. Eng., 35 (1), pp. 83-106; Steimann, F., Role = Interface: A merger of concepts (2001) JOOP - Journal of Object-Oriented Programming, 14 (4), pp. 23-32; Steimann, F., The Infer Type Refactoring and its Use for Interface- Based Programming (2007) Journal of Object Technology, 6 (2); Stein, L.A., Delegation is inheritance (1987) Proc. of OOPSLA, pp. 138-146; Tip, F., Kiezun, A., Bäumer, D., Refactoring for generalization using type constraints (2003) Proc. of OOPSLA, pp. 13-26; Ungar, D., Smith, R.B., Self: The power of simplicity (1987) Proc. of OOPSLA, pp. 227-242","Steimann, F.; Lehrgebiet Programmiersysteme, Fernuniversität in Hagen, D-58084 Hagen, Germany; email: steimann@acm.org",,"Assoc. Comput. Mach., Spec. Interest Group Softw.;Eng. (ACM SIGSOFT);IEEE Computer Society;Technical Council on Software Engineering (TCSE)",,"33rd International Conference on Software Engineering, ICSE 2011",21 May 2011 through 28 May 2011,"Waikiki, Honolulu, HI",85380,2705257,9781450304450,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-79959885436,,
,3,,"Shimony, B., Nikolaidis, I., Gburzynski, P., Stroulia, E.",On coordination tools in the PicOS tuples system,2011,Proceedings - International Conference on Software Engineering,,,,19,24,,,10.1145/1988051.1988056,http://www.scopus.com/inward/record.url?eid=2-s2.0-79959833588&partnerID=40&md5=66437f80858d80bae5f6a5c995996229,"Computing Science Dept., University of Alberta, Edmonton, AB T6G 2E8, Canada; Olsonet Comm. Corp., 51 Wycliffe Street, Ottawa, ON K2G 5L9, Canada","Shimony, B., Computing Science Dept., University of Alberta, Edmonton, AB T6G 2E8, Canada; Nikolaidis, I., Computing Science Dept., University of Alberta, Edmonton, AB T6G 2E8, Canada; Gburzynski, P., Olsonet Comm. Corp., 51 Wycliffe Street, Ottawa, ON K2G 5L9, Canada; Stroulia, E., Computing Science Dept., University of Alberta, Edmonton, AB T6G 2E8, Canada","In this paper, we discuss the most recent coordination extension to the PicOS-tuples environment, inspired, to a degree, by B-Threads and FACTS. We illustrate the extensions with two design patterns, highly useful in WSN computations, known as regulative superimposition and distributed detection. Those patterns are employed in a debugging protocol that retrieves snapshots of node states. We demonstrate how our new idioms can be propitious for separating concerns in WSN programming using tuples. © 2011 ACM.",coordination interface; superimposition; tuple space,Design Patterns; Distributed detection; Node-state; superimposition; Tuple space; Java programming language; Sensor networks; Sensors; Software engineering,,,,,,"Werner-Allen, G., Lorincz, K., Johnson, J., Lees, J., Welsh, M., Fidelity and yield in a volcano monitoring sensor networks OSDI'06; Hill, J., Szewczyk, R., Woo, A., Hollar, S., Culler, D., Pister, K., System architecture directions for networked sensors (2000) SIGPLAN Not., 35 (11), pp. 93-104; Akhmetshina, E., Gburzyński, P., Vizeacoumar, F., PicOS: A Tiny Operating System for Extremely Small Embedded Platforms (2003) Proceedings of ESA'03, pp. 116-122. , june; Nicholas, M., Boers and Pawel Gburzynski and Ioanis Nikolaidis and Wladek Olesinski. Developing wireless sensor network applications in a virtual environment (2010) Telecommunication Systems, 45 (2-3), pp. 165-176; McCartney, W.P., Sridhar, N., Abstractions for safe concurrent programming in networked embedded systems (2006) Proceedings of SenSys'06, pp. 167-180. , Boulder, Colorado, USA; Dijkstra, E.W., Sholten, C.S., Termination Detection for diffusing computations (1980) Information Processing Letters, 11 (1), pp. 1-4. , North-Holland, August; Bougé, L., Francez, N., A compositional approach to superimposition (1988) Proceedings of the 15th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL '88, pp. 240-249. , New York, NY, USA, ACM; Carriero, N., Gelernter, D., Linda in context (1989) Commun. ACM, 32 (4), pp. 444-458; Chandy, M., Misra, J., (1988) Parallel Program Design, , Addison-Wesley; Francez, N., Forman, I.R., Superimposition for interacting processes (1990) Proceedings of CONCUR '90, pp. 230-245. , New York, NY, USA, Springer-Verlag New York, Inc; Harel, D., Marron, A., Weiss, G., Programming coordinated behavior in java (2010) Proceedings of ECOOP'10, pp. 250-274. , Berlin, Heidelberg, Springer-Verlag; Katz, S., A superimposition control construct for distributed systems (1993) ACM Trans. Program. Lang. Syst., 15, pp. 337-356. , April; Kiczales, G., Hilsdale, E., Hugunin, J., Kersten, M., Palm, J., Griswold, W.G., An overview of aspectj (2001) ECOOP '01, pp. 327-353. , London, UK, Springer-Verlag; Kurki-Suonio, R., Action systems in incremental and aspect-oriented modeling (2003) Distrib. Comput., 16 (2-3), pp. 201-217; Römer, K., Ringwald, M., Increasing the visibility of sensor networks with passive distributed assertions (2008) Proceedings of the Workshop on Real-world Wireless Sensor Networks, REALWSN '08, pp. 36-40. , New York, NY, USA, ACM; Shimony, B., Nikolaidis, I., Gburzynski, P., Stroulia, E., Picos tuples: Easing event based programming in tiny pervasive systems (2010) Proceedings MOMPES '10, pp. 53-60. , New York, NY, USA, ACM; Costa, P., Mottola, L., Murphy, A.L., Picco, G.P., TeenyLIME: Transiently shared tuple space middleware for wireless sensor networks Proceedings of MidSens'06; Sihman, M., Katz, S., Superimpositions and aspect-oriented programming (2003) The Computer Journal, 46, pp. 529-541; Terfloth, K., Wittenburg, G., Schiller, J.H., Facts - A rule-based middleware architecture for wireless sensor networks COMSWARE, 2006; Terfloth, K., Schiller, J.H., Self-sustained Routing for Event Diffusion in Wireless Sensor Networks RuleML '08, pp. 236-241. , Orlando, Florida. Springer-Verlag; Tseng, Y.-C., Ni, S.-Y., Chen, Y.-S., Sheu, J.-P., The broadcast storm problem in a mobile ad hoc network (2002) Wirel. Netw., 8, pp. 153-167. , March; Fok, C.-L., Roman, G.-C., Lu, C., Rapid development and flexible deployment of adaptive wireless sensor network applications ICDCS05, pp. 653-662","Shimony, B.; Computing Science Dept., University of Alberta, Edmonton, AB T6G 2E8, Canada; email: shimony@ualberta.ca",,ACM SIGSOFT;IEEE CS,,"2nd International Workshop on Software Engineering for Sensor Network Applications, SESENA 2011, in Conjunction with the International Conference on Software Engineering, ICSE 2011",22 May 2011 through 22 May 2011,"Waikiki, Honolulu, HI",85383,2705257,9781450305839,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-79959833588,,
,3,,"Shim, J., Han, J., Kim, J., Lee, B., Oh, J., Wu, C.",Patterns for configuration requirements of Software-as-a-Service,2011,Proceedings of the ACM Symposium on Applied Computing,,,,155,161,,3,10.1145/1982185.1982222,http://www.scopus.com/inward/record.url?eid=2-s2.0-79959292832&partnerID=40&md5=6bf5b637dcaa79dc26fc44b6f091fd7c,"School of Computer Science and Engineering, Seoul National Univ., South Korea; School of Computer Science, Univ. of Seoul, South Korea; School of Computer Science Information Engineering, Catholic Univ. of Korea, South Korea","Shim, J., School of Computer Science and Engineering, Seoul National Univ., South Korea; Han, J., School of Computer Science and Engineering, Seoul National Univ., South Korea; Kim, J., School of Computer Science and Engineering, Seoul National Univ., South Korea; Lee, B., School of Computer Science, Univ. of Seoul, South Korea; Oh, J., School of Computer Science Information Engineering, Catholic Univ. of Korea, South Korea; Wu, C., School of Computer Science and Engineering, Seoul National Univ., South Korea","Software-as-a-Service is becoming popular in the software business, due to its rapid delivery and cost effectiveness in development and maintenance. Software-as-a-Service should be provided in single code base and operated as a single instance. To meet these constraints and requirements from various customers, Software-as-a-Service must be highly configurable. To develop configurable Software-as-a-Service, it is important to elicit and analyze configuration requirements in the early stages of development. Another issue is that on implementing configuration requirements, there are duplicated and untidy code segments. In our study, configuration requirements are identified and classified. This study introduces design patterns to remove duplicated codes for configuration. © 2011 ACM.",configuration; configuration requirements; design pattern; SaaS,Code segments; Configurable; configuration; configuration requirements; design pattern; Design Patterns; SaaS; Software business; Software-as-a-Service; Computer software maintenance,,,,,,"http://www.agile-software-systems.com/articles/438- ERP_Software_Customization.htmGamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Guo, P., A Survey of Software as a Service Delivery Paradigm TKK Technical Reports in Computer Science and Engineering, B5 Current Internet Trends Seminar on Internetworking, 2009; Han, J., Shim, J., Lee, B., Oh, J., Wu, C., A Classification Technique for Configuration Requirements Elicitation of SaaS Proc. of Korea Computer Congress, 2010, pp. 199-205; Kim, J., Shim, J., Han, J., Wu, C., Lee, B., Park, C., Oh, J., Applying Patterns for Configuration of SaaS Applications Proc. of Korea Conference on Software Engineering, 2010, pp. 133-139; Li, H., Shi, Y., Li, Q., A Multi-granularity Customization Relationship Model for SaaS (2009) Proc. of International Conference on Web Information Systems and Mining, WISM 2009, pp. 611-615; (2009) Configurability in SaaS, , http://www.lionbridge.com/kc_content/en-US/SaaS-Configurability.pdf, white paper; Nitu, Configurability in SaaS applications Proc. of the 2nd India Software Engineering Conference, 2009, pp. 19-26; Ormerod, M., SaaS Customization and Personalization, , http://communities.progress.com/pcom/servlet/JiveServlet/; Mietzner, R., Metzger, A., Leymann, F., Pohl, K., Variability Modeling to Support Customization and Deployment of Multi-Tenant-Aware Software as a Service Applications Proc. of ICSE Workshop on Principles of Engineering Service Oriented Systems, 2009, pp. 18-25; Sun, W., Zhang, X., Guo, C.J., Sun, P., Su, H., Software as a Service: Configuration and Customization Perspectives Proc. of IEEE Congress on Services Part II, 2008, pp. 18-25; Wheater, S.M., Little, M.C., The Design and Implementation of a Framework for Configurable Software Proc. of International Conference on Configurable Distributed Systems (ICCDS '96), 1996, pp. 136-143","Lee, B.; School of Computer Science, Univ. of SeoulSouth Korea; email: bjlee@uos.ac.kr",,ACM Special Interest Group on Applied Computing (SIGAPP);Tunghai University;Taiwan Ministry of Education;Taiwan Bureau of Foreign Trade;Taiwan National Science Council (NSC),,"26th Annual ACM Symposium on Applied Computing, SAC 2011",21 March 2011 through 24 March 2011,TaiChung,85134,,9781450301138,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-79959292832,,
,3,,"Chu, P.-H., Hsueh, N.-L., Lee, C.-C., Chuang, M.-J., Hsiung, P.-A., Chu, W.",A pattern-based verification approach for a multi-core system development,2011,Proceedings of the ACM Symposium on Applied Computing,,,,49,53,,,10.1145/1982185.1982198,http://www.scopus.com/inward/record.url?eid=2-s2.0-79959320848&partnerID=40&md5=6b655fb46ec2ce11b1b1f964307fd273,"Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan; Feng Chia University, Taichung, Taiwan; Department of Computer Science and Information Engineering, National Chung Cheng University, Chiayi, Taiwan; Department of Computer Science and Information Engineering, Tunghai University, Taichung, Taiwan","Chu, P.-H., Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan, Feng Chia University, Taichung, Taiwan; Hsueh, N.-L., Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan, Feng Chia University, Taichung, Taiwan; Lee, C.-C., Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan, Feng Chia University, Taichung, Taiwan; Chuang, M.-J., Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan, Feng Chia University, Taichung, Taiwan; Hsiung, P.-A., Department of Computer Science and Information Engineering, National Chung Cheng University, Chiayi, Taiwan; Chu, W., Department of Computer Science and Information Engineering, Tunghai University, Taichung, Taiwan","Recent years, with the development of multi-core processor architecture, multi-core software development is also being gradually recognized. Therefore, how to quickly develop reliable multi-core software will be a challenge. In our approach, we use Model-driven architecture (MDA) technology to achieve this challenge. First, we extract the experience of designing multi-core software and model the experience as a reusable pattern by using UML meta-modeling techniques. Then, we specify a set of constraints using the Object Constraint Language (OCL) to verify the model with profile. Finally, we provide a tool to specify the operation definition for connecting the design and implementation, so that the model transformation process can be more efficient. Furthermore, we demonstrate our approach by a case study on a real-world multi-core embedded system called PVE (Parallel Video Encoder), where a pattern CommandPipeline is designed for the development convenience. © 2011 ACM.",design pattern; multi-core embedded system; UML profile,Design Patterns; Meta-modeling technique; Model transformation; Model-driven architecture; Multi core; Multi-core processor; Multi-core systems; Object Constraint Language; UML profiles; Video encoder; Computer software reusability; Embedded systems; Software architecture; Verification; Software design,,,,,,"Pankratius, V., Schaefer, C., Jannesari, A., Tichy, W., Software engineering for multicore systems: An experience report (2008) Proceedings of the 1st International Workshop on Multicore Software Engineering, pp. 53-60. , ACM; Mattson, T., Sanders, B., Massingill, B., (2004) Patterns for Parallel Programming, , Addison-Wesley Professional; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Software, , Addison-Wesley; Chung, L., Cooper, K., Yi, A., Developing adaptable software architectures using design patterns: An nfr approach (2003) Computer Standards & Interfaces, 25 (3), pp. 253-260; Graves, A.R., Czarnecki, C., Design patterns for behavior-based robotics (2000) Systems, Man and Cybernetics, Part A: Systems and Humans, IEEE Transactions on, 30 (1), pp. 36-41. , Jan; Gross, D., Yu, E., From non-functional requirements to design through patterns (2001) Requirements Engineering, 6 (1), pp. 18-36; Hsueh, N., Kuo, J., Lin, C., Object-oriented design: A goal-driven and pattern-based approach (2009) Software and Systems Modeling, 8 (1), pp. 67-84; Intel® Threading Building Blocks Tutorial, Version 1.6, , http://www.threadingbuildingblocks.org/; Board, O.A.R., Openmp application program interface, version 3.0 (2008) The OpenMP Forum, , Tech. Rep; Fowler, M., Patterns (2003) Software, IEEE, 20 (2), pp. 56-57; Hsueh, N., Chu, P., Chu, W., A quantitative approach for evaluating the quality of design patterns (2008) Journal of Systems and Software, 81 (8), pp. 1430-1439; Meyer, B., (2000) Object-Oriented Software Construction, , 2nd ed. Prentice Hall PTR, March; Larman, C., Protected variation: The importance of being closed (2001) IEEE Software, 18 (3), pp. 89-91; Lien, C., Bai, Y., Lin, M., Estimation by software for the power consumption of streaming-media servers (2007) Instrumentation and Measurement, IEEE Transactions on, 56 (5), pp. 1859-1870. , Oct","Chu, P.-H.; Department of Information Engineering and Computer Science, Feng Chia University, Taichung, Taiwan; email: phchu@mail.fcu.edu.tw",,ACM Special Interest Group on Applied Computing (SIGAPP);Tunghai University;Taiwan Ministry of Education;Taiwan Bureau of Foreign Trade;Taiwan National Science Council (NSC),,"26th Annual ACM Symposium on Applied Computing, SAC 2011",21 March 2011 through 24 March 2011,TaiChung,85134,,9781450301138,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-79959320848,,
,3,,"Deterding, S., O'Hara, K., Sicart, M., Dixon, D., Nacke, L.",Gamification: Using game design elements in non-gaming contexts,2011,Conference on Human Factors in Computing Systems - Proceedings,,,,2425,2428,,101,10.1145/1979742.1979575,http://www.scopus.com/inward/record.url?eid=2-s2.0-79957930613&partnerID=40&md5=52725a7a8300e2b867e9e9da9c53555a,"Hans-Bredow Institute, University of Hamburg, 20354 Hamburg, Germany; Microsoft Research Cambridge, 7 JJ Thomson Ave, Cambridge CB3 0FB, United Kingdom; Center for Computer Games Research, IT University of Copenhagen, DK-2300 Copenhagen S, Denmark; Digital Cultures Research Centre, University of the West of England, Bristol BS16 1QY, United Kingdom; Department of Computer Science, University of Saskatchewan, Saskatoon, S7N 5C9, Canada","Deterding, S., Hans-Bredow Institute, University of Hamburg, 20354 Hamburg, Germany; O'Hara, K., Microsoft Research Cambridge, 7 JJ Thomson Ave, Cambridge CB3 0FB, United Kingdom; Sicart, M., Center for Computer Games Research, IT University of Copenhagen, DK-2300 Copenhagen S, Denmark; Dixon, D., Digital Cultures Research Centre, University of the West of England, Bristol BS16 1QY, United Kingdom; Nacke, L., Department of Computer Science, University of Saskatchewan, Saskatoon, S7N 5C9, Canada","""Gamification"" is an informal umbrella term for the use of video game elements in non-gaming systems to improve user experience (UX) and user engagement. The recent introduction of 'gamified' applications to large audiences promises new additions to the existing rich and diverse research on the heuristics, design patterns and dynamics of games and the positive UX they provide. However, what is lacking for a next step forward is the integration of this precise diversity of research endeavors. Therefore, this workshop brings together practitioners and researchers to develop a shared understanding of existing approaches and findings around the gamification of information systems, and identify key synergies, opportunities, and questions for future research.",Design patterns; Funology; Game design; Games with a purpose; Gamification; Motivational affordances; Persuasive technology,Affordances; Design Patterns; Funology; Game design; Games with a purpose; Gamification; Persuasive technology; Computer supported cooperative work; Design; Research; Technology; Ubiquitous computing; Human computer interaction,,,,,,"Barr, P., Noble, J., Biddle, R., Video game values: Human-computer interaction and games (2007) Interacting with Computers, 19 (2), pp. 180-195. , DOI 10.1016/j.intcom.2006.08.008, PII S0953543806001159, HCI Issues in Computers Games; Bernhaupt, R., User experience evaluation in entertainment (2010) Evaluating User Experience in Games: Concepts and Methods, pp. 3-7. , R. Bernhaupt Springer, London; Blythe, M.A., Overbeeke, K., Monk, A.F., Wright, P.C., (2004) Funology: From Usability to Enjoyment, , Kluwer Academic Publishers, Norwell, MA; Fogg, B.J., (2002) Persuasive Technology: Using Computers to Change What We Think and Do, , Morgan Kaufmann, Amsterdam et al; Jung, J.H., Schneider, C., Valacich, J., Enhancing the motivational affordance of information systems: The effects of real-time performance feedback and goal setting in group collaboration environments (2010) Management Science, 56 (4), pp. 724-742; Kort, Y.A., Ijsselsteijn, W.A., People, places, and play: Player experience in a socio-spatial context (2008) Computers in Entertainment, 6 (2). , art. 18; Ling, K., Beenen, G., Ludford, P., Using social psychology to motivate contributions to online communities (2005) Journal of Computer-mediated Communication, 10 (4). , art. 10; Lockton, D., Harrison, D., Stanton, N.A., The design with intent method: A design tool for influencing user behaviour (2010) Applied Ergonomics, 41 (3), pp. 382-392; Malone, T., What makes things fun to learn? Heuristics for designing instructional computer games (1980) Proc. 3rd ACM SIGSMALL Symposium, pp. 162-169. , ACM Press; Malone, T., Heuristics for designing enjoyable user interfaces: Lessons from computer games (1982) Proc. 1982 Conference on Human Factors in Computing Systems, pp. 63-68. , ACM Press; McGonigal, J., (2011) Reality is Broken: Why Games Make Us Better and How They can Change the World, , Penguin, London; Monk, A., Hassenzahl, M., Blythe, M., Reed, D., Funology: Designing enjoyment (2002) Proc. CHI 2002 Extended Abstracts, pp. 924-925. , ACM Press; Nacke, L., Niesenhaus, J., Engl, S., Canossa, A., Kuikkaniemi, K., Immich, T., Bringing game design and affective evaluation to user research and user experience (2010) Entertainment Interfaces Workshop, , Duisburg, Germany; Niebuhr, S., Kerkow, D., Captivating patterns: A first validation (2007) Proc. PERSUASIVE 2007, pp. 48-54. , Springer; Rashid, A.M., Ling, K., Tassone, R.D., Resnick, P., Kraut, R., Riedl, J., Motivating participation by displaying the value of contribution (2006) Proc. CHI 2006, , ACM Press; Reeves, B., Read, J.L., (2009) Total Engagement: Using Games and Virtual Worlds to Change the Way People Work and Businesses Compete, , Harvard Business School Press, Boston, MA; Ryan, R.M., Rigby, C.S., Przybylski, A., The motivational pull of video games: A self-determination theory approach (2006) Motivation and Emotion, 30 (4), pp. 344-360; Shaffer, N., Heuristic evaluation of games (2008) Game Usability, pp. 79-89. , K. Isbister and N. Shaffer Morgan Kaufman, Amsterdam et al; Sweetser, P., Wyeth, P., GameFlow: A model for evaluating player enjoyment in games (2005) Computers in Entertainment, 3 (3). , art. 3A; Von Ahn, L., Dabbish, L., Designing games with a purpose (2008) Communications of the ACM, 51 (8), pp. 58-67; Zhang, P., Motivational affordances: Reasons for ICT design and use (2008) Communications of the ACM, 51 (11), pp. 145-147; Zichermann, G., Linder, J., (2010) Game-based Marketing: Inspire Customer Loyalty Through Rewards, Challenges, and Contests, , Wiley, Hoboken, NJ","Deterding, S.; Hans-Bredow Institute, University of Hamburg, 20354 Hamburg, Germany; email: s.deterding@hans-bredow-institut.de",,"Assoc. Comput. Mach., Spec. Interest Group;Comput.-Hum. Interact. (ACM SIGCHI)",,"29th Annual CHI Conference on Human Factors in Computing Systems, CHI 2011",7 May 2011 through 12 May 2011,"Vancouver, BC",85042,,9781450302289,,,English,Conf Hum Fact Comput Syst Proc,Conference Paper,Scopus,2-s2.0-79957930613,,
,4,,"Posnett, D., Bird, C., Dévanbu, P.",An empirical study on the influence of pattern roles on change-proneness,2011,Empirical Software Engineering,16,3,,396,423,,6,10.1007/s10664-010-9148-2,http://www.scopus.com/inward/record.url?eid=2-s2.0-80052436301&partnerID=40&md5=1b31495acde084a03380d523317f6443,"University of California Davis, Davis, CA, United States","Posnett, D., University of California Davis, Davis, CA, United States; Bird, C., University of California Davis, Davis, CA, United States; Dévanbu, P., University of California Davis, Davis, CA, United States","Identifying change-prone sections of code can help managers plan and allocate maintenance effort. Design patterns have been used to study change-proneness and are widely believed to support certain kinds of changes, while inhibiting others. Recently, several studies have analyzed recorded changes to classes playing design pattern roles and find that the patterns ""folklore"" offers a reasonable explanation for the reality: certain pattern roles do seem to be less change-prone than others. We push this analysis on two fronts: first, we deploy W. Pree's metapatterns, which group patterns purely by structure (rather than intent), and argue that metapatterns are a simpler model to explain recent findings by Di Penta et al. (2008). Second, we study the effect of the size of the classes playing the design pattern and metapattern roles. We find that size explains more of the variance in change-proneness than either design pattern or metapattern roles. We also find that both design pattern and metapattern roles were strong determinants of size. We conclude, therefore, that size appears to be a stronger determinant of change-proneness than either design pattern or metapattern roles, and observed differences in change-proneness between roles might be due to differences in the sizes of the classes playing those roles. The size of a class can be found much more quickly, easily and accurately than its pattern-roles. Thus, while identifying design pattern roles may be important for other reasons, as far as identifying change-prone classes, sheer size might be a better indicator. © The Author(s) 2010.",Design patterns; Empirical software engineering,Design Patterns; Empirical Software Engineering; Empirical studies; Sheer size; Software engineering; Design,,,,,,"Aversano, L., Canfora, G., Cerulo, L., Grosso, C.D., Di Penta, M., An empirical study on the evolution of design patterns (2007) ESEC-FSE'07: Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 385-394. , ACM, New York, ISBN 978-1-59593-811-4. doi:10.1145/1287624.1287680; Basili, V., Elbaum, S., Empirically driven SE research: State of the art and required maturity (2006) ICSE'06: Proceedings of the 28th International Conference on Software Engineering, pp. 32-32. , ACM, New York, ISBN 1-59593-375-1. doi:10.1145/1134285.1134291; Benjamini, Y., Hochberg, Y., Controlling the false discovery rate: A practical and powerful approach to multiple testing (1995) J R Stat Soc B (Methodological), 57 (1), pp. 289-300; Bieman, J., Jain, D., Yang, H., Design patterns, design structure, and program changes: An industrial case study (2001) Proceedings International Conference on Software Maintenance, pp. 580-589; Bieman, J., Straw, G., Wang, H., Munger, P., Alexander, R., Design patterns and change proneness: An examination of five evolving systems (2003) Software Metrics Symposium, 2003. Proceedings. Ninth International, pp. 40-49; Bird, C., Nagappan, N., Devanbu, P., Gall, H., Murphy, B., Does distributed development affect software quality? An empirical case study of windows vista (2009) Proc. of the International Conference on Software Engineering; Briand, L., Wust, J., Empirical studies of quality models in object-oriented systems (2002) Adv Comput, 56, pp. 98-167; Brooks, C., (2008) Introductory Econometrics for Finance, , Cambridge University Press; Bruneton, E., Lenglet, R., Coupaye, T., ASM: A code manipulation tool to implement adaptable systems (2002) Adaptable and Extensible Component Systems, , http://asm.objectweb.org/current/asm.eng.pdf, Grenoble, France; Cataldo, M., Wagstrom, P.A., Herbsleb, J.D., Carley, K.M., Identification of coordination requirements: Implications for the Design of collaboration and awareness tools (2006) Proceedings of the ACM Conference on Computer Supported Cooperative Work, CSCW, pp. 353-362. , DOI 10.1145/1180875.1180929, Proceedings of the 20th Anniversary ACM Conference on Computer Supported Cooperative Work, CSCW 2006; Cohen, J., Cohen, P., West, S., Aiken, L., (1983) Applied Multiple Regression/correlation Analysis for the Behavioral Sciences, , Erlbaum, NJ; Di Penta, M., Cerulo, L., Guéhéneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) 24th IEEE International Conference on Software Maintenance (ICSM 2008), pp. 217-226. , IEEE, China; El Emam, K., Benlarbi, S., Goel, N., Rai, S.N., The confounding effect of class size on the validity of object-oriented metrics (2001) IEEE Transactions on Software Engineering, 27 (7), pp. 630-650. , DOI 10.1109/32.935855; Fluri, B., Wursch, M., Pinzger, M., Gall, H.C., Change distilling: Tree differencing for fine-grained source code change extraction (2007) IEEE Transactions on Software Engineering, 33 (11), pp. 725-743. , DOI 10.1109/TSE.2007.70731; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Objectoriented Software, , Addison-Wesley Reading, MA; Guéhéneuc, Y., Antoniol, G., Demima: A multi-layered framework for design pattern identification (2007) IEEE Trans Softw Eng, 34 (5), pp. 667-684; Gunes Koru, A., Liu, H., Identifying and characterizing change-prone classes in two large-scale open-source products (2007) Journal of Systems and Software, 80 (1), pp. 63-73. , DOI 10.1016/j.jss.2006.05.017, PII S0164121206001622; Hayashi, S., Katada, J., Sakamoto, R., Kobayashi, T., Saeki, M., Design pattern detection by using meta patterns (2008) IEICE Trans Inf Syst, 91 (4), pp. 933-944; Jussien, N., Barichard, V., The PaLM system: Explanation-based constraint programming (2000) Proceedings of TRICS: Techniques for Implementing Constraint Programming Systems, A Postconference Workshop of CP 2000, pp. 118-133; Khomh, F., Guéhéneuc, Y., Antoniol, G., (2009) Playing Roles in Design Patterns: An Empirical Descriptive and Analytic Study; Lindeman, R., Merenda, P., Gold, R., (1980) Introduction to Bivariate and Multivariate Analysis, , New York; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Work experience versus refactoring to design patterns: A controlled experiment (2006) Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 12-22. , DOI 10.1145/1181775.1181778, 1181778, Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Do maintainers utilize deployed design patterns effectively? (2007) Proceedings - International Conference on Software Engineering, pp. 168-177. , DOI 10.1109/ICSE.2007.33, 4222579, Proceedings - 29th International Conference on Software Engineering, ICSE 2007; Perry, D., Porter, A., Votta, L., Empirical studies of software engineering: A roadmap (2000) Proceedings of the Conference on the Future of Software Engineering, pp. 345-355. , ACM, New York; Posnett, D., Bird, C., Devanbu, P., THEX: Mining metapatterns from java (2010) Mining Software Repositories (MSR), 2010 7th IEEE Working Conference On. IEEE, pp. 122-125; Prechelt, L., Unger, B., Tichy, W.F., Brossler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), pp. 1134-1144. , DOI 10.1109/32.988711; Pree, W., Meta patterns-a means for capturing the essentials of reusable object-oriented design (1994) Lect Notes Comput Sci, 821, pp. 150-162; Rosenberg, J., Some misconceptions about lines of code (1997) Proceeding of the Fourth International Software Metrics Symposium, pp. 137-142. , doi:10.1109/METRIC.1997.637174; (2010) Understand for Java 1.4, , Sci-Tools; Swanson, E., The dimensions of maintenance (1976) Proceedings of the 2nd International Conference on Software Engineering, pp. 492-497. , IEEE Computer Society Press; Tourwé, T., Mens, T., Automated support for framework-based software (2003) Proceedings International Conference on Software Maintenance (ICSM 2003), pp. 148-157. , IEEE Computer Society Press; Toutenburg, H., (2002) Statistical Analysis of Designed Experiments, , 2nd edn. Springer; Vokáč, M., Tichy, W., Sjøberg, D., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns-a replication in a real programming environment (2004) Empir Software Eng, 9 (3), pp. 149-195; Zhang, H., Tan, H.B.K., An empirical study of class sizes for large java systems (2007) APSEC'07: Proceedings of the 14th Asia-Pacific Software Engineering Conference, pp. 230-237. , IEEE Computer Society, Washington, ISBN 0-7695-3057-5. doi:10.1109/APSEC.2007.20","Posnett, D.; University of California Davis, Davis, CA, United States; email: dpposnett@ucdavis.edu",,,,,,,,13823256,,ESENF,,English,Empir Software Eng,Article,Scopus,2-s2.0-80052436301,,
,3,,"Ovatman, T., Weigert, T., Buzluca, F.",Exploring implicit parallelism in class diagrams,2011,Journal of Systems and Software,84,5,,821,834,,4,10.1016/j.jss.2011.01.005,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952445992&partnerID=40&md5=062022abfd011506fb8b58c8223cb876,"Istanbul Technical University, Department of Computer Engineering, 34469 Maslak, Istanbul, Turkey; Missouri University of Science and Technology, Department of Computer Science, 1870 Miner Circle, Rolla, MO 65409, United States","Ovatman, T., Istanbul Technical University, Department of Computer Engineering, 34469 Maslak, Istanbul, Turkey; Weigert, T., Missouri University of Science and Technology, Department of Computer Science, 1870 Miner Circle, Rolla, MO 65409, United States; Buzluca, F., Istanbul Technical University, Department of Computer Engineering, 34469 Maslak, Istanbul, Turkey","Abstract: As multicore processors are becoming more wide-spread, leveraging of parallelism is once again becoming an important concern during the software development process. Substantial refactoring is required to parallelize legacy sequential software in order to exploit the advantages offered by parallel processing. In this study, guidelines are offered to aid in parallelizing object-oriented programs by analyzing their designs as represented in UML class diagrams. We define often occurring patterns of class-dependencies and demonstrate their characteristics in class diagrams by investigating their properties. We present example instances exhibiting the usage of these patterns in class diagrams. Through analyzing the runtime aspects of these instances, we have identified how they impact the parallelization of object oriented software. Taking these lessons into account when refactoring existing object-oriented software can significantly reduce time and effort required. We have evaluated our method by applying it to three popular design patterns and a real-world case study. © 2011 Elsevier Inc. All rights reserved.",Class diagram analysis; Object oriented software refactoring; Parallel software design,Class diagrams; Design Patterns; Implicit parallelisms; Multi-core processor; Object oriented software; Object oriented software refactoring; Object-oriented program; Parallel processing; Parallel software; Parallelizations; Parallelizing; Real-world; Refactorings; Runtimes; Sequential softwares; Software development process; UML class diagrams; Encoding (symbols); Graphic methods; Multicore programming; Object oriented programming; Software design,,,,,,"Bik, A.J.C., Gannon, D.B., Automatically exploiting implicit parallelism in Java (1997) Concurrency Practice and Experience, 9 (6), pp. 579-619; Bull, J., Kambites, M., JOMP - An OpenMP-like interface for Java (2000) Proceedings of the Conference on Java Grande. ACM, pp. 44-53; Carpenter, B., Getov, V., Judd, G., Skjellum, A., Fox, G., MPJ: MPI-like message passing for Java (2000) Concurrency Practice and Experience, 12 (11), pp. 1019-1038. , DOI 10.1002/1096-9128(200009)12:11<1019::AID-CPE518>3.0.CO;2-G; Cazzola, W., Ghoneim, A., Saake, G., Reflective analysis and design for adapting object run-time behavior (2002) Proceedings of the Eighth International Conference on Object-Oriented Information Systems, pp. 242-254. , OOIS'02, Springer-Verlag, London, UK; Chan, B., Abdelrahman, T.S., Run-time support for the automatic parallelization of Java programs (2004) The Journal of Supercomputing, 28 (1), pp. 91-117; Chatzigeorgiou, A., Tsantalis, N., Stephanides, G., Application of graph theory to OO software engineering (2006) Proceedings of the International Workshop on Interdisciplinary Software Engineering Research, pp. 29-36. , WISER'06. ACM, New York, NY, USA; Dagum, L., Menon, R., Open MP: An industry-standard api for shared-memory programming (1998) Computing in Science and Engineering, 5, pp. 46-55; Das, D., Chakrabarti, P.P., Kumar, R., Functional verification of task partitioning for multiprocessor embedded systems (2007) Transactions on Design Automation of Electronic Systems, 12 (4), p. 44; Davies, J., Crichton, C., Concurrency and refinement in the unified modeling language (2003) Formal Aspects of Computing, 15 (2), pp. 118-145; Du, J., Chen, D., Xie, L., JAPS: An automatic parallelizing system based on JAVA (1999) Science in China, Series E: Technological Sciences, 42 (4), pp. 396-406; Edwards, D., Simmons, S., Kearns, P., Graphical limits of concurrency (2004) Neural Parallel and Scientific Computations, 12, pp. 219-232; Engels, G., Küuster, J., Groenwegen, L., Consistent interaction of software components (2002) Journal of Integrated Design and Process Science, 6 (4), pp. 2-22; Erraguntla, R., Carver, D.L., Migration of sequential systems to parallel environments by reverse engineering (1998) Information and Software Technology, 40 (7), pp. 369-380. , PII S0950584998000603; Eshuis, R., Symbolic model checking of UML activity diagrams (2006) ACM Transactions on Software Engineering and Methodology, 15 (1), pp. 1-38. , http://delivery.acm.org/10.1145/1130000/1125809/p1-eshuis.pdf?key1= 1125809&key2=8323690511&coll=portal&dl=ACM&CFID= 42424&CFTOKEN=38947858; Felber, P., Semi-automatic parallelization of Java applications (2005) On the Move to Meaningful Internet Systems: CoopIS, DOA, and ODBASE. Vol. 2888 of Lecture Notes in Computer Science, pp. 1369-1383. , Springer Berlin/Heidelberg; Gamma, B., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Giese, H., Klein, F., Burmester, S., Pattern synthesis from multiple scenarios for parameterized real-time UML models (2005) Lecture Notes in Computer Science, 3466, pp. 193-211. , Scenarios: Models, Transformations and Tools: International Workshop, Revised Selected Papers; Guitart, J., Martorell, X., Torres, J., Ayguad, E., Efficient execution of parallel Java applications (2001) 3rd Annual Workshop on Java for High Performance Computing (Part of the 15th ACM International Conference on Supercomputing). ICS01, pp. 31-35; Guitart, J., Martorell, X., Torres, J., Ayguad, E., Application/kernel cooperation towards the efficient execution of shared-memory parallel Java codes (2003) International Parallel and Distributed Processing Symposium 0, 38a; Ha, J., Arnold, M., Blackburn, S.M., McKinley, K.S., A concurrent dynamic analysis framework for multicore hardware (2009) Proceeding of the Twentyfourth ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications, pp. 155-174. , OOPSLA'09. ACM, New York, NY, USA; Halvorsen, O., Runde, R.K., Haugen Ø, Time exceptions in sequence diagrams (2007) Models in Software Engineering. Vol. 4364 of Lecture Notes in Computer Science, pp. 131-142. , Springer Berlin/Heidelberg; Holzmann, G.J., (1991) Design and Validation of Computer Protocols, , Prentice-Hall, Inc. Upper Saddle River, NJ, USA; Holzmann, G.J., The model checker SPIN (1997) IEEE Transactions on Software Engineering, 23 (5), pp. 279-295; (1997), http://www-124.ibm.com/developerworks/ossjikes/, Jikes. [Online]Karypis, G., Kumar, V., A fast and high quality multilevel scheme for partitioning irregular graphs (1998) SIAM Journal of Scientific Computing, 20 (1), pp. 359-392. , PII S1064827595287997; Kaveh, N., Using model checking to detect deadlocks in distributed object systems (2001) Revised Papers from the Second International Workshop on Engineering Distributed Objects, pp. 116-128. , EDO'00. Springer-Verlag, London, UK; Kim, S., Ch, D., Solihin, Y., Fair cache sharing and partitioning in a chip multiprocessor architecture (2004) Proceedings of the Thirteenth International Conference on Parallel Architectures and Compilation Techniques, pp. 111-122. , PACT'04. IEEE Computer Society, Washington, DC, USA; Konrad, S., Campbell, L.A., Cheng, B.H.C., Automated analysis of timing information in UML diagrams (2004) Proceedings - 19th International Conference on Automated Software Engineering, ASE 2004, pp. 350-353. , Proceedings - 19th International Conference on Automated Software Engineering, ASE 2004; Latella, D., Majzik, I., Massink, M., Automatic verification of a behavioural subset of UML statechart diagrams using the SPIN model-checker (1999) Formal Aspects of Computing, 11 (6), pp. 637-664; Li, X., Lilius, J., Timing analysis of UML sequence diagrams (1999) Proceedings of the Second International Conference on the Unified Modeling Language, pp. 661-674. , Beyond the Standard. Springer, Fort Collins, CO, USA; Xuandong, L., Meng, C., Yu, P., Jianhua, Z., Guoliang, Z., Timing Analysis of UML Activity Diagrams (2001) LECTURE NOTES IN COMPUTER SCIENCE, (2185), pp. 62-75. , ""UML"" 2001 - The Unified Modeling Language. Modeling Languages, Concepts, and Tools. 4th International Conference Toronto, Canada, October 1-5, 2001 Proceedings; Mehner, K., Wagner, A., Visualizing the synchronization of Java-threads with uml (2000) Proceedings of the IEEE International Symposium on Visual Languages, p. 199. , VL'00. IEEE Computer Society, Washington, DC, USA; Merkel, A., Bellosa, F., Memory-aware scheduling for energy efficiency on multicore processors (2008) Proceedings of the Conference on Power Aware Computing and Systems, , HotPower'08. USENIX Association, Berkeley, CA, USA; Mitchell, B., Characterizing communication channel deadlocks in sequence diagrams (2008) IEEE Transactions on Software Engineering, 34 (3), pp. 305-320; (1994) Message Passing Interface, , http://www.mpi-forum.org, MPI Online; Newman, E., Greenhouse, A., Annotation-based diagrams for shared-data concurrency (2001) Workshop on Concurrency Issues in UML at the Fourth International Conference on the Unified Modeling Language; Ng, A., Jordan, M., Weiss, Y., On spectral clustering: Analysis and an algorithm (2001) Advances in Neural Information Processing Systems. MIT Press, pp. 849-856; Oliver, J., Guitart, J., Ayguade, E., Navarro, N., Torres, J., Strategies for the efficient exploitation of loop-level parallelism in Java (2001) Concurrency Computation Practice and Experience, 13 (8-9), pp. 663-680. , DOI 10.1002/cpe.573; Ovatman, T., Buzluca, F., Investigating software design pattern behavior in multiprocessor systems: A case study on observer (2008) 23rd International Symposium on Computer and Information Sciences. ISCIS'08, pp. 1-4; Ovatman, T., Buzluca, F., Software design pattern behavior in shared memory multiprocessor systems (2009) International Conference on Computational Intelligence and Software Engineering, CiSE'09, pp. 1-4; Ovatman, T., Weigert, T., Buzluca, F., Applying enhanced graph clustering to software dependency analysis (2010) 19th International Conference on Software Engineering and Data Engineering, pp. 1-7; Plasil, F., Mencl, V., Getting 'whole picture' behavior in a use case model (2003) Journal of Integrated Design and Process Science, 7 (4), pp. 63-79; Seiter, L.M., Palsberg, J., Lieberherr, K.J., Evolution of object behavior using context relations (1998) IEEE Transactions on Software Engineering, 24 (1), pp. 79-92; Sethumadhavan, S., Arora, N., Ganapathi, R.B., Demme, J., Kaiser, G.E., COMPASS: A community-driven parallelization advisor for sequential software (2009) Proceedings of the ICSE Workshop on Multicore Software Engineering. IWMSE'09, pp. 41-48. , IEEE Computer Society, Washington, DC, USA; Tam, D., Azimi, R., Soares, L., Stumm, M., Managing shared L2 caches on multicore systems in software (2007) Workshop on the Interaction between Operating Systems and Computer Architecture; Tam, D., Azimi, R., Stumm, M., Thread clustering: Sharing-aware scheduling on SMP-CMP-SMT multiprocessors (2007) Operating Systems Review (ACM), pp. 47-58. , DOI 10.1145/1272996.1273004, Operating Systems Review - Proceedings of the 2007 EuroSys Conference; Van Dongen, S., (2000) Graph Clustering by Flow Simulation, , Ph.D. thesis, University of Utrecht, The Netherlands; Yau, S., Bae, D., Pour, G., A partitioning approach for object-oriented software development for parallel processing systems (1992) Proceedings of the Sixteenth Annual International Computer Software and Applications Conference. COMPSAC'92, pp. 251-256; Yau, S., Jia, X., Bae, D., Chidambaram, M., Oh, G., Using model checking to detect deadlocks in distributed object systems (1991) Proceedings of the Fifteenth Annual International Computer Software and Applications Conference. COMPSAC'91, pp. 453-458; Yu, M., Guo, M., Pan, Y., Zang, W., Xie, L., JAPS-II: A source to source parallelizing compiler for Java (2002) Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications - Volume 1, pp. 164-170. , PDPTA '02. CSREA Press; Zhou, B., Qiao, J., Lin, S., Research on dynamic cache distribution scheduling algorithm on multi-core processors (2009) International Conference on E-Business and Information System Security. EBISS'09, 23-24, pp. 1-4","Ovatman, T.; Istanbul Technical University, Department of Computer Engineering, 34469 Maslak, Istanbul, Turkey; email: ovatman@itu.edu.tr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-79952445992,,
,v,,"De Lucia, A., Deufemia, V., Gravino, C., Risi, M.",Improving behavioral design pattern detection through model checking,2011,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,5714432,176,185,,19,10.1109/CSMR.2010.16,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952692538&partnerID=40&md5=a5a578d4b9ec968dab3340ffda3399ad,"Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy","De Lucia, A., Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy; Deufemia, V., Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy; Gravino, C., Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy; Risi, M., Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy","Recovering design pattern instances in a software system can help maintainers to understand its design and implementation. In this paper we present a fully automated design pattern recovery approach that analyzes the behavior of pattern instances both statically and dynamically. In particular, the proposed approach exploits model checking to statically verify the behavioral aspects of design pattern instances. To this end, we encode the properties defining the correct behavior of a pattern as LTL (Linear Temporal Logic) formulae and the sequence diagram representing the possible interaction traces among the objects involved in the candidate instances as PROMELA specifications. To verify whether the LTL properties are satisfied by the candidates we employ the SPIN model checking tool. The dynamic analysis of the pattern behavior is performed through a code instrumentation and monitoring phase applied on the candidate pattern instances. This phase allows us to obtain actual dynamic data during program execution, which is then used to verify its compliance to the pattern definition. The effectiveness of the proposed approach is shown by presenting and discussing the results obtained on JHotDraw and JRefactory. © 2010 IEEE.",Design pattern recovery; Dynamic analysis; Model checking,Automated design; Candidate patterns; Code instrumentation; Design pattern recovery; Design Patterns; Dynamic data; JHotDraw; Linear temporal logic; LTL property; Pattern definition; Program execution; PROMELA; Sequence diagrams; Software systems; Spin models; Computer software maintenance; Design; Dynamic analysis; Maintainability; Object oriented programming; Recovery; Reengineering; Temporal logic; Model checking,,,,,,"Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proc. of International Conference on Software Maintenance (ICSM'03), pp. 305-314; Beyer, D., Lewerentz, C., CrocoPat: Efficient pattern analysis in object-oriented programs (2003) Proc. of the IEEE International Workshop on Program Comprehension (IWPC'03), pp. 294-295; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems & Software, 18 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral pattern identification through visual language parsing and code instrumentation (2009) Proc. of European Conference on Software Maintenance and Reengineering (CSMR'09), pp. 99-108; Dong, J., Zhao, Y., Sun, Y., A matrix-based approach to recovering design patterns (2009) IEEE Transactions on Systems, Man, and Cybernetics - Part A: Systems and Humans, 39 (6), pp. 1271-1282; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) IEEE International Conference on Software Maintenance, ICSM, 2005, pp. 295-304. , DOI 10.1109/ICSM.2005.40, 1510125, Proceedings of the 21st IEEE International Conference on Software Maintenance, ICSM 2005; Fülöp, L.J., Gyovai, T., Ferenc, R., Evaluating C++ design pattern miner tools (2006) Proc. of the International Workshop on Source Code Analysis and Manipulation (SCAM'06), pp. 127-138; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Menlo Park, CA; Ghezzi, C., Jazayeri, M., Mandrioli, D., (1991) Fundamentals of Software Engineering, , Prentice-Hall, NJ, USA; Guéhéneuc, Y.-G., P-MARt: Pattern-like micro architecture repository (2007) Proc. of the 1st EuroPLoP Focus Group on Pattern Repositories, , July; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Transactions on Softw. Engineer, 34 (5), pp. 667-684; Gueheneuc, Y.-G., Douence, R., Jussien, N., No Java without caffeine - A tool for dynamic analysis of Java programs Proc. of Conference on Automated Software Engineering, pp. 117-126. , W. Emmerich and D. Wile, eds; Heuzeroth, D., Mandel, S., Lowe, W., Generating design pattern detectors from pattern specifications (2003) Proc. of the International Conference on Automated Software Engineering (ASE'03), pp. 245-248; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proc. of International Workshop on Program Comprehension (IWPC'03), pp. 94-103; http://babelfish.arc.nasa.gov/trac/jpfhttp://www.jhotdraw.orghttp://jrefactory.sourceforge.netKa-Yee Ng, J., Guéhéneuc, Y.-G., Identification of behavioral and creational design patterns through dynamic analysis (2007) Proc. of the Workshop on Program Comprehension Through Dynamic Analysis (PCODA'07), pp. 34-42; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proc. of Working Conference on Reverse Engineering (WCRE'96), pp. 208-215; Leue, S., Ladkin, P.B., Implementing and verifying MSC specifications using PROMELA/XSPIN (1996) Proc. of the 2nd SPIN Workshop, , Sept; Niere, J., Schafer, W., Wadsack, J.P., Wendenhals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings - International Conference on Software Engineering, pp. 338-348; Olsson, R., Shi, N., Reverse engineering of design patterns from Java source code (2006) Proc. of IEEE/ACM International Conference on Automated Software Engineering (ASE'06), pp. 123-134; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) Proc. of Workshop on Dynamic Analysis (WODA'05), pp. 43-49; http://ptidej.dyndns.org/downloads/pmart/Creating Custom Profilers with Probekit, , http://www.eclipse.org/tptp/platform/documents/probekit/probekit.html; Salton, G., McGill, M., (1983) Introduction to Modern Information Retrieval, , McGraw Hill; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., (2006) Design Pattern Detection, , http://java.uom.gr/~nikos/pattern-detection.html; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proc. of Workshop on Dynamic Systems Analysis, (WODA'06), pp. 33-40","De Lucia, A.; Dipartimento di Matematica e Informatica, Università di Salerno, Fisciano(SA), Italy; email: adelucia@unisa.it",,Reengineering Forum (REF),,"14th European Conference on Software Maintenance and Reengineering, CSMR 2010",15 March 2010 through 18 March 2010,Madrid,84159,15345351,9780769543215,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-79952692538,,
,v,,"Kniesel, G., Binun, A., Hegedüs, P., Fülöp, L.J., Chatzigeorgiou, A., Guéhéneuc, Y.-G., Tsantalis, N.",DPDX - Towards a common result exchange format for design pattern detection tools,2011,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,5714440,232,235,,4,10.1109/CSMR.2010.40,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952675483&partnerID=40&md5=fd2986540a939ef960759e190bc44395,"University of Bonn, Bonn, Germany; University of Szeged, Szeged, Hungary; University of Macedonia, Thessaloniki, Greece; Ecole Polytechnique de Montreal, QC, Canada","Kniesel, G., University of Bonn, Bonn, Germany; Binun, A., University of Bonn, Bonn, Germany; Hegedüs, P., University of Szeged, Szeged, Hungary; Fülöp, L.J., University of Szeged, Szeged, Hungary; Chatzigeorgiou, A., University of Macedonia, Thessaloniki, Greece; Guéhéneuc, Y.-G., Ecole Polytechnique de Montreal, QC, Canada; Tsantalis, N., University of Macedonia, Thessaloniki, Greece","Tools for design pattern detection (DPD) can ease program comprehension, helping programmers understand the design and intention of certai n parts of a system's implementation. Many tools have been proposed in the past. However, the many different output formats used by the tools make it difficult to compare their results and to improve their accuracy and performance through data fusion. In addition, all the output formats have been shown to have several limitations in both their forms and contents. Consequently, we develop DPDX, a rich common exchange format for DPD tools, to overcome previous limitations. DPDX provides the basis for an open federation of tools that perform comparison, fusion, visualisation, and-or validation of DPD results. © 2010 IEEE.",,Design Patterns; Exchange format; Program comprehension; Visualisation; Computer software maintenance; Data fusion; Design; Reengineering; Visualization; Equipment,,,,,,"Kniesel, G., Binun, A., Witnessing patterns: A data fusion approach to design pattern detection (2009) CS Department III, Uni.Bonn, Germany, Technical Report IAI-TR-2009-01, , http://wwW'CS'lmi-bomLde/~gk/papers/IAI-TR-2009-01.pdf, ISSN 0944-8535, Jan. [Online].' Available; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design pattern discovery using matrix (2007) Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems, pp. 371-380. , DOI 10.1109/ECBS.2007.33, 4148953, Proceedings - 14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, ECBS 2007: Raising Expectations of Computer-Based Systems; Wendehals, L., Improving design pattern instance recognition by dy-namic analysis (2003) WODA'03, , Portland,USA: IEEE Computer Society; Ferenc, R., Gustafsson, J., Muller, L., Paakki, J., Recognizing design patterns in C++ programs with the integration of Columbus and Maisa (2002) Acta Cybernetica, 15 (4), pp. 669-682; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proceedings of the 19th International Conference on Software Maintenance (ICSM 2003), pp. 305-314. , IEEE Computer Society,Sep; Shi, N., Olsson, R.A., Reverse engineering of design patterns from Java source code (2006) ASE'06, pp. 123-134. , Washington,USA: IEEE Computer Society; Gueheneuc, Y.-G., A reverse engineering tool for precise class dia-grams (2004) CASCON'04, pp. 28-41. , IBM Press; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools CSMR '08: Proceedings of the 2008 12th European Conference on Software Maintenance and Reengineering, 2008, pp. 143-152. , Washington,DC,USA: IEEE Computer Society; P-mart Homepage, , www.ptidej.net/downloads/pmart/, [Online]. Available; Winter, A., Kullbach, B., Riediger, V., An overview of the GXL graph exchange language (2002) Revised Lectures on Software Visualization, International Seminar, pp. 324-336. , London,UK: Springer-Verlag; Albin-Amiot, H., Gueheneuc, Y.-G., Meta-modeling design patterns: Application to pattern detection and code synthesis (2001) Proceedings of First ECOOP Workshop on Automating Object-Oriented Software Development Methods; Kniesel, G., Binun, A., Hegedus, P., Fulop, L.J., Tsantalis, N., Chatzigeorgiouand, A., Gueheneuc, Y.-G., A common exchange format for design pattern detection tools CS Department III, Uni.Bonn, Germany, Technical Report IAI-TR-2009-03, , https://sewiki.iai.uni-bonn.de/dpdx/, ISSN 0944-8535,Oct 2009. [Online]. Available","Kniesel, G.; University of Bonn, Bonn, Germany; email: gk@iai.uni-bonn.de",,Reengineering Forum (REF),,"14th European Conference on Software Maintenance and Reengineering, CSMR 2010",15 March 2010 through 18 March 2010,Madrid,84159,15345351,9780769543215,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-79952675483,,
,v,,"Rasool, G., Maeder, P., Philippow, I.",Evaluation of design pattern recovery tools,2011,Procedia Computer Science,3,,,813,819,,1,10.1016/j.procs.2010.12.134,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952500927&partnerID=40&md5=d8bdd21b8218791ff5d38a585fe1f9f4,"TU Ilmenau, Software Systems/Process Informatic, Ilmenau, Germany; Comsats Institute of Information Technology, Department of Computer Science, Lahore, Pakistan","Rasool, G., TU Ilmenau, Software Systems/Process Informatic, Ilmenau, Germany, Comsats Institute of Information Technology, Department of Computer Science, Lahore, Pakistan; Maeder, P., TU Ilmenau, Software Systems/Process Informatic, Ilmenau, Germany; Philippow, I., TU Ilmenau, Software Systems/Process Informatic, Ilmenau, Germany","Design pattern recovery approaches are assisted by different tools which recognize patterns from source code of legacy applications. Several tools are presented in related work, but little attention is paid on the evaluation of tools due to the unavailability of standard benchmarks and frameworks. Different pattern recovery tools extract different results from the same examined systems. The causes for disparity of results and ignorance for cross validation of results by different tools is still not thoroughly investigated. In this paper, we review existing design pattern recovery tools based on their available features and compare them regarding limitations of different tools. We recommend guidelines based on our observation and on the evaluation of different tools which can be used for comparing features of existing tools and developing new design pattern recovery tools. © 2010 Published by Elsevier Ltd.",Design patterns; Pattern recovery tools; Program comprehension; Reverse engineering; Tool analysis,Cross validation; Design pattern recovery; Design Patterns; Legacy applications; New design; Pattern recovery; Program comprehension; Source codes; Computer programming; Information technology; Recovery; Reverse engineering; Equipment,,,,,,"Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) The Journal of Systems and Software, 82, pp. 1177-1193; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings - Working Conference on Reverse Engineering, WCRE, pp. 172-181. , Proceedings - 11th Working Conference on Reverse Engineering, WCRE 2004; Shi, N., Olsoon, R.A., Reverse engineering of design patterns from java source code (2006) Procedings of the 21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06), pp. 123-134; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design pattern discovery using matrix (2007) Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems, pp. 371-380. , DOI 10.1109/ECBS.2007.33, 4148953, Proceedings - 14th Annual IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, ECBS 2007: Raising Expectations of Computer-Based Systems; Smith, J.M., Stotts, D., Elemental design patterns: Case studies in automated design pattern detection in C++ code using SPQR (2004) Technical Report TR05-013, Univ. of North Carolina; Beyer, D., Lewerentz, C., CrocoPat: Efficient pattern analysis in object-oriented programs Proceedings of the International Workshop on Program Comprehension (IWPC'03), pp. 294-295. , Portland, OR, USA; Wang, W., Tzerpos, V., DPVK - An eclipse plug-in to detect design patterns in eiffel systems (2004) Electronic Notes in Theoretical Computer Science (ENTCS), 107, pp. 71-86; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proceedings of International Conference on Software Maintenance (ICSM'03), pp. 305-314. , Amsterdam, The Netherlands; Sparx System Architect Modeling Tool, , http://www.sparxsystems.com/products/ea/, [accessed 05.05.09]; IBM Rational Rose Website, , http://www.ibm.com/software/rational/, [accessed 10.06.10]; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering, pp. 143-152. , Athens, Greece, 1-4 April; Gueheneuc, Y., Mens, K., Wuyts, R., A comparative framework for design recovery tools (2006) Proceedings of Conference on Software Maintenance and Reengineering (CSMR'06), pp. 123-134. , Bari Italy, March 22-24; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection (2006) First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE'06), pp. 1-8. , October; The Licor Homepage, , http://prog.vub.ac.be/research/DMP/soul/soul2.html; Arcelli, F., Masiero, S., Raibulet, C., Tisato, F., A comparison of reverse engineering tools based on design pattern decomposition (2005) Proceedings of the Australian Software Engineering Conference, ASWEC, 2005, pp. 262-269. , DOI 10.1109/ASWEC.2005.5, 1402021, Proceedings - 2005 Australian Software Engineering Conference ASWEC 2005; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley Publishing Company, Reading, MA","Rasool, G.; TU Ilmenau, Software Systems/Process Informatic, Ilmenau, Germany; email: ghulam.rasool@tu-ilmenau.de",,,,"1st World Conference on Information Technology, WCIT-2010",6 October 2010 through 10 October 2010,Istanbul,84172,18770509,,,,English,Procedia Comput. Sci.,Conference Paper,Scopus,2-s2.0-79952500927,,
,4,,"Iacob, C.",Strategies in the collaborative use of design patterns,2011,CEUR Workshop Proceedings,777,,,25,30,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84891132450&partnerID=40&md5=2ed89e6f3fa87aa26b926e9f93fee054,"Department of Computer Science, University of Milan, Italy","Iacob, C., Department of Computer Science, University of Milan, Italy","Originally proposed as a tool for knowledge representation and sharing addressing architects, the concept of design pattern has been adopted by other domains as well. This led to new and innovative ways of using it and its usefulness is largely recognized in the literature. However, little work has been done in investigating and measuring the impact a collection of patterns has on collaborative design processes involving designers. The paper describes the results of a case study involving 18 teams of undergraduate students in Computer Science. Making use of a collection of design patterns for the design of synchronous applications and being observed by a facilitator, they were asked to design applications which support synchronous collaboration. Abstracting from a) the sequences of actions the teams performed on the collection of patterns in isolated contexts of their design processes, b) the ratio of each category of actions the teams performed, and c) the facilitator's notes on the participants' interactions, a set of strategies the participants developed while using the patterns were identified and are presented in the paper.",,Knowledge representation; Students; Visualization; Collaborative design process; Design applications; Design Patterns; Design process; Synchronous collaboration; Undergraduate students; Design,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , New York: Oxford University Press; Borchers, J., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons, Inc; Dearden, A., Finlay, J., Allgar, E., McManus, B., Using pattern languages in participatory design (2002) Proceedings of PDC'02, , CPSR, Palo Alto, CA. 2002; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading, MA: Addison-Wesley; Iacob, C., A design pattern mining method for interaction design (2011) Proceedings of EICS2011, pp. 217-222. , Pisa, Italy, June 13-16, 2011; Kolfschoten, G., Lukosch, S., Verbraeck, A., Valentin, E., De Vreedea, G.J., Cognitive learning efficiency through the use of design patterns in teaching (2010) Computers&Education, 54 (3), pp. 652-660. , April 2010; Martin, D., Rouncefield, M., Sommerville, I., Applying patterns of cooperative interaction to work (re)design: E-government and planning (2002) Proceedings of CHI '02, pp. 235-242; Schummer, T., Lukosch, S., (2007) Patterns for Computer-Mediated Interaction, , John Wiley & Sons, Ltd","Iacob, C.; Department of Computer Science, University of MilanItaly; email: iacob@dico.unimi.it",,,CEUR-WS,"1st International Workshop on Collaborative Usage and Development of Models and Visualizations, CollabViz 2011 - Held at ECSCW 2011",24 September 2011 through 24 September 2011,Aarhus,101693,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84891132450,,
,1,,"Seffah, A., Cahier, J.-P., Bénel, A.",Thinking global acting local: A human-centric pattern to designing information-intensive services for global crisis management,2011,"8th International Conference on Information Systems for Crisis Response and Management: From Early-Warning Systems to Preparedness and Training, ISCRAM 2011",,,,,,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84905661958&partnerID=40&md5=10b8560aaaf3db3b75cd0cd26609d7b6,"ICD/Tech-CICO, STMR (UMR CNRS 6279), Troyes University of Technology, France","Seffah, A., ICD/Tech-CICO, STMR (UMR CNRS 6279), Troyes University of Technology, France; Cahier, J.-P., ICD/Tech-CICO, STMR (UMR CNRS 6279), Troyes University of Technology, France; Bénel, A., ICD/Tech-CICO, STMR (UMR CNRS 6279), Troyes University of Technology, France","Information-intensive services for global crisis situations management can no longer be based on local information only. A global picture is required to be able to make informed and reliable local decisions. It takes also to know how the local decisions one country may take will affect the others. Indeed, each country, city or community needs the whole picture and the key facts in managing the situation in their local area. Therefore, we should provide a proven solution to identify, analyze and mix the relevant information to support informed local decision based on both global and local information. In this paper, we introduce a novel design pattern to face this challenge of making informed local decisions. We also provide two real life examples illustrating the needs of the design pattern.",Design patterns; Global crisis management; Human-centered design; Information-intensive service design,Hardware; Crisis management; Crisis situations; Design Patterns; Global and local informations; Human-centered designs; Local decisions; Local information; Service design; Information systems,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley, Reading, MA; Landay, J., Borriello, G., Patterns for ubiquitous computing (2003) IEEE Computer, 36 (8), pp. 93-95; Kienzle, D., Elder, M., (2002) Security Patterns for Web Application Development, , Technical Report, Univ. of Virginia; Kyng, M., Nielsen, E.T., Kristensen, M., Challenges in designing interactive systems for emergency response (2006) Proceedings of the Sixth ACM Conference on Designing Interactive Systems, pp. 301-310. , University Park, PA. ACM Press, New York, NY; Montells, L., Montero, S., Diaz, P., Aedo, I., De Castro, J., SIGAME: Web-based system for resources management on emergencies (2006) Proceedings of the ISCRAM2006 Conference, pp. 1-5. , Newark, NJ; Turoff, M., Van De Walle, C.B., Yao, X., The design of a dynamic emergency response management information system (2004) Journal of Information Technology Theory and Applications, 5 (4), pp. 1-36; Van Duyne, D.K., Landay, J.A., Hong, J.I., (2002) The Design of Sites: Patterns, Principles, and Processes for Crafting A Customer- Centered Web Experience, , Addison-Wesley, Reading, MA; Montells, L., Montero, S., Díaz, P., Aedo, I., Mining patterns for web-based emergency management systems (2010) Proceedings of the Seventh International Conference on Information Systems for Crisis Response and Management, , Seatle, WA; Javahery, H., Sinnig, D., Seffah, A., Forbrig, P., Radhakrishnan, T., Pattern-based ui design: Adding rigor with user and context variables (2006) Proceedings of the Fifth International Workshop on Task Models and Diagrams, pp. 97-108; Dunn, L.J., HCI factors affecting quality of information in crisis management systems (1996) Proceedings of the Sixth Australian Conference on Computer-Human Interaction, , Hamilton, New Zealand; Cooper, A., Reimann, R.M., (2003) About Face 2.0: The Essentials of Interaction Design. Indianapolis, , John Wiley & Sons; Javahery, H., (2007) Pattern-Oriented UI Design Based on User Experiences: A Method Supported by Empirical Evidence, , A PhD Thesis, Department of Software Engineering and Computer Science, Concordia University, Montreal; Netta, I., (2009) Mediation between Design and Use: Revisiting Five Empirical Studies. Human IT 10.2 2009, pp. 81-126",,,"Instituto da Construcao e do Imobiliario (INCI);Redes Energeticas Nacionais, SGPS, S.A. (REN);Zagope - Construcoes e Engenharia S.A.","Information Systems for Crisis Response and Management, ISCRAM","8th International Conference on Information Systems for Crisis Response and Management, ISCRAM 2011",8 May 2011 through 11 May 2011,Lisbon,106762,,9789724922478,,,English,"Int. Conf. Inf. Syst. Crisis Response Manage.: Early-Warning Syst. Preparedness Train., ISCRAM",Conference Paper,Scopus,2-s2.0-84905661958,,
,4,,"Serna, F., Catalán, C., Blesa, A., Rams, J.M.",Design patterns for failure management in IEC 61499 function blocks,2010,"Proceedings of the 15th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2010",,,5641250,,,,,10.1109/ETFA.2010.5641250,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650546287&partnerID=40&md5=65dacce7ff05eac370dcbc8612177237,"Dept. de Informática e Ingeniería de Sistemas, Universidad de Zaragoza, Spain; Dept. de Ing. Electrónica y Comunicaciones, Universidad de Zaragoza, Spain; Turomas-Tecnocat Group, Spain","Serna, F., Dept. de Informática e Ingeniería de Sistemas, Universidad de Zaragoza, Spain; Catalán, C., Dept. de Informática e Ingeniería de Sistemas, Universidad de Zaragoza, Spain; Blesa, A., Dept. de Ing. Electrónica y Comunicaciones, Universidad de Zaragoza, Spain; Rams, J.M., Turomas-Tecnocat Group, Spain","IEC 61499 standard has promised to help handling the high level of complexity of modern control systems, but it hasn't still been adopted by the industry. Several authors claim for design methodologies to guide control engineers using this standard. This paper shows a way to ease the development of IEC 61499 based applications identifying and characterizing ""extended FBs"", adding semantic artefacts to basic FBs. Specific design patterns are built from those extended FBs, which match elements of the problem domain. Two specific design patterns are presented which allow dealing with Failure Management, a common topic in control applications. ©2010 IEEE.",,Control engineers; Design Methodology; Design Patterns; Failure management; Function Block; IEC 61499; IEC 61499 standard; In-control; Problem domain; Specific design; Factory automation; Semantics; Design,,,,,,"Koren, Y., Heisel, U., Jovane, F., MOriwak, T., Pritsshow, G., Ulsoy, G., Van Brussel, H., Reconfigurable Manufacturing Systems (1999) Annals of the International Institution for Production Engineering Research (CIRP), 48 (2), pp. 527-539; (1991) 21st Century Manufacturing Enterprise Strategy: An Industry-Led View, , Iacooca Institute, Lehigh University Press, ISBN 0-9624866-39; (2006) MANUfuture: Strategic Research Agenda, Assuring the Future of Manufacturing in Europe, , European Commission, Report of the High-Level-Group, ISBN 92-79-01026-3; IEC 61131-3, , International Electrotechnical Commission, Edition 2.0 (2003-01) TC/SC 65B IEC publications; Szyperski, C., Component Software: Beyond Object-Oriented Programming, , Ed. Pearson. ISBN 0-201-017888-5; IEC 61499-1, , International Electrotechnical Commission, Edition 1.0 (2005-01) TC/SC 65B, IEC publications; Thramboulidis, K., IEC 61499 in Factory Automation International Conference on Industrial Electrónics, Technology & Automation, (CISSE-IETA), 2005; Zoitl, A., Strassr, T., Hall, K., Staron, R., Sünder, C., Favre-bulle, B., The past, present, and future of IEC 61499 Proc. 2rd Int. Conf.Industrial Appl. Of Holonic and Multi-agent Systems, Holomas, Regensburg, Germany, 2007; Thramboulidis, K., Zoitl, A., Vyatkin, V., Face to face: Different perspectives (2009) IEEE Industrial Electronics Magazine, , December; Hall, K.H., Staron, R.J., Zoitl, A., Challenges to industry adoption of the IEC 61499 standard on event-based Function Blocks 5th IEEE Int. Conference on Industrial Informatics, 2007; Vyatkin, V., The IEC 61499 standard and its semantics (2009) Ind. Electron. Mag., 3 (4), pp. 40-48; Booch, G., Rumbaugh, J., Jacobson, I., (2005) The Unified Modeling Language User Guide, , 2nd ed. Pearson Addison Wesley; Sünder, C., Zoitl, A., H.Christensen, J., Steininger, H., Fritshce, J., Considering IEC 611313 and IEC 61499 in the context of Component Frameworks IEEE International Conference on Industrial Informatics (INDIN), Daejeon, Corea, 2008; Vyatkin, V., Dubinin, V., Sequential Axiomatic Model for Execution of Basic Function Blocks in IEC 61499 Proc. Fifth IEEE Int'l Conf. Industrial Informatics (INDIN), 2007; Tranoris, C., Thramboulidis, K., From Requirements to Function Block Diagrams: A new Approach for the design of industrial applications IEEE Mediterranean Conference on Control and Automation (MED), Lisbon, Portugal, 2002; Wagner, F., Bohl, J., Frey, G., An IEC 61499 Interpretation an Implementation Focused on Usability IEEE Conference on Emerging Technologies and Factory Automation"" (EFTA), Hamburg, Germany, 2008; Christensen, J.H., (2000) Design Patterns for Systems Engineering in IEC 61499, , Otto-von-Guericke-Universität Magdeburg, Germany, ISBN 3-929757-30-3; Sunder, C., Zoitl, A., Rainbauer, M., Favre-Bulle, B., Hierarchical control modeling architecture for modular distributed automation systems IEEE International Conference on Industrial Informatics (INDIN), Singapore, 2006; Thramboulidis, K., Model-Integrated Mechatronics-Toward a New Paradigm in the Development of Manufacturing Systems (2005) IEEE Transactions on Industrial Informatics, 1 (1); Thramboulidis, K., Using UML in Control Automation: A Model Driven Approach IEEE International Conference on Industrial Informatics (INDIN), Berlin, 2004; Tranoris, C., Thramboulidis, K., From Requirements to Function Block Diagrams: A new Approach for the design of industrial applications 10th IEEE Mediterranean Conference on Control and Automation, MED'02, 2002; IEC 60812. International Standard. Analysis Techniques for System Reliability - Procedure for Failure Mode and Effects Analysis (FMEA), , International Electrotechnical Comission, Edition 2.0 (2006-01), IEC publications. ISBN 2-8318-8425-X; IEC 61025. International Standard. Fault Tree Analysis (FTA), , International Electrotechnical Comission, Edition 2.0 (2006-12), IEC publications. ISBN 2-8318-8919-9","Serna, F.; Dept. de Informática e Ingeniería de Sistemas, Universidad de ZaragozaSpain; email: fserna@unizar.es",,IEEE Industrial Electronics Society,,"15th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2010",13 September 2010 through 16 September 2010,Bilbao,83100,,9781424468508,,,English,"Proc. IEEE Int. Conf. Emerg. Technol. Fact. Autom., ETFA",Conference Paper,Scopus,2-s2.0-78650546287,,
,4,,"Sharif, B., Maletic, J.I.",An eye tracking study on the effects of layout in understanding the role of design patterns,2010,"IEEE International Conference on Software Maintenance, ICSM",,,5609582,,,,1,10.1109/ICSM.2010.5609582,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650085582&partnerID=40&md5=e924c4b9896c7664f9b7ac0574cd3f5c,"Department of Computer Science, Kent State University, Kent, OH 44242, United States","Sharif, B., Department of Computer Science, Kent State University, Kent, OH 44242, United States; Maletic, J.I., Department of Computer Science, Kent State University, Kent, OH 44242, United States","The effect of layout in the comprehension of design pattern roles in UML class diagrams is assessed. This work replicates and extends a previous study using questionnaires but uses an eye tracker to gather additional data. The purpose of the replication is to gather more insight into the eye gaze behavior not evident from questionnaire-based methods. Similarities and differences between the studies are presented. Four design patterns are examined in two layout schemes in the context of three open source systems. Fifteen participants answered a series of eight design pattern role detection questions. Results show a significant improvement in role detection accuracy and visual effort with a certain layout for the Strategy and Observer patterns and a significant improvement in role detection time for all four patterns. Eye gaze data indicates classes participating in a design pattern act like visual beacons when they are in close physical proximity and follow the canonical layout, even though they violate some general graph aesthetics. © 2010 IEEE.",Design pattern roles; Eye-tracking study; UML class diagram layout,Design Patterns; Detection accuracy; Detection time; Eye trackers; Eye-gaze; Eye-tracking; General graph; Layout schemes; Open source system; Physical proximity; UML class diagrams; Computer software maintenance; Encoding (symbols); Open systems; Surveys; Design,,,,,,"Andriyevska, O., Dragan, N., Simoes, B., Maletic, J.I., (2005) Evaluating UML Class Diagram Layout Based on Architectural Importance, pp. 14-19. , VISSOFT, Hungary, Sept 25; Booch, G., Jacobson, I., Rumbaugh, J., (1999) The Unified Software Development Process, , Addison-Wesley; Brooks, R., Towards a theory of the comprehension of computer programs (1983) International Journal of Man-Machine Studies, 18 (6), pp. 543-554; Eichelberger, H., Nice class diagrams admit good design? (2003) ACM Symposium on Software Visualization (SoftVis), pp. 159-167. , San Diego, USA, Jun 11-13; Eichelberger, H., Schmid, K., Guidelines on the aesthetic quality of UML class diagrams (2009) Information and Software Technology, 51 (12), pp. 1686-1698; Eiglsperger, M., Kaufmann, M., Siebenhaller, M., A topology-shape-metrics approach for the automatic layout of uml class diagrams (2003) SoftVis, pp. 189-198; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guéhéneuc, Y.-G., TAUPE: Towards understanding program comprehension 16th IBM Centers for Advanced Studies on Collaborative Research, pp. 1-13. , Canada, Oct 06; Gutwenger, C., Jünger, M., Klein, K., Kupke, J., Leipert, S., Mutzel, P., A new approach for visualizing UML class diagrams (2003) SoftVis, pp. 179-188; Jeanmart, S., Guéhéneuc, Y.-G., Sahraoui, H., Habra, N., Impact of the visitor pattern on program comprehension and maintenance (2009) 3rd International Symposium on Empirical Software Engineering and Measurement, pp. 69-78. , Lake Buena Vista, Florida, Oct 15-16; Just, M., Carpenter, P., A theory of reading: From eye fixations to comprehension (1980) Psychological Review, 87, pp. 329-354; Kuzniarz, L., Staron, M., Wohlin, C., An empirical study on using stereotypes to improve understanding of UML models (2004) 12th Intl Workshop on Program Comprehension (IWPC), pp. 14-23; Purchase, C.H., Allder, J.-A., Carrington, D., Graph layout aesthetics in UML diagrams: User preferences (2002) Journal of Graph Algorithms and Appl, 6 (3), pp. 255-279; Purchase, C.H., McGill, M., Colpoys, L., Carrington, D., Graph drawing aesthetics and the comprehension of UML class diagrams: An empirical study (2001) Australian Symp. on Information Visualisation, pp. 129-137. , Sydney; Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M., How developers' experience and ability influence web application comprehension tasks supported by UML stereotypes: A series of four experiments (2010) IEEE Trans. on Software Engineering, 36 (1), pp. 96-118. , Jan/Feb; Sharif, B., Maletic, J.I., The effect of layout on the comprehension of UML class diagrams: A controlled experiment (2009) VISSOFT, pp. 11-18. , Canada, Sept 25; Sharif, B., Maletic, J.I., An empirical study on the comprehension of stereotyped UML class diagram layouts (2009) 17th IEEE Intl Conf on Program Comprehension (ICPC), pp. 268-272. , Vancouver, BC, Canada, May 17-19; Sharif, B., Maletic, J.I., The Effects of layout on detecting the role of design patterns (2010) 23rd IEEE-CS International Conference on Software Engineering Education and Training, pp. 41-48. , (CSEE&T), Pittsburgh, Mar 9-12; Sun, D., Wong, K., On evaluating the layout of UML class diagrams for program comprehension (2005) 13th IEEE Intl Workshop on Prog. Comp., pp. 317-328. , Missouri, USA; Sutton, A., Maletic, J.I., Recovering UML class models from C++: A detailed explanation (2007) Information and Software Technology, 49 (3), pp. 212-229. , Jan; Wohlin, C., Runeson, P., Host, M., Ohlsson, M.C., Regnell, B., Wesslen, A., (2000) Experimentation in Software Engineering - An Introduction, , Kluwer Academic Publishers; Yusuf, S., Kagdi, H., Maletic, J.I., Assessing the comprehension of UML class diagrams via eye tracking (2007) 15th Intl Conf on Program Comprehension, pp. 113-122. , Canada, June 26-29","Sharif, B.; Department of Computer Science, Kent State University, Kent, OH 44242, United States; email: bsimoes@cs.kent.edu",,IEEE Computer Society;ACI Worldwide;Microsoft;IBM;Alcatel-Lucent,,"2010 IEEE International Conference on Software Maintenance, ICSM 2010",12 September 2010 through 18 September 2010,Timisoara,82750,,9781424486298,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-78650085582,,
,v,,"Bernardi, M.L., Di Lucca, G.A.",Model-driven detection of Design Patterns,2010,"IEEE International Conference on Software Maintenance, ICSM",,,5609740,,,,,10.1109/ICSM.2010.5609740,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650085108&partnerID=40&md5=993975dccc137e8ae4816b59b902d8bb,"Department of Engineering, University of Sannio, Italy","Bernardi, M.L., Department of Engineering, University of Sannio, Italy; Di Lucca, G.A., Department of Engineering, University of Sannio, Italy","Tracing source code elements of an existing Object Oriented software system to the components of a Design Pattern is a key step in program comprehension or re-engineering. It helps, mainly for legacy systems, to discover the main design decisions and trade-offs that are often not documented. In this paper an approach is presented to automatically detect Design Patterns in existing Object Oriented systems by tracing system's source code components to the roles they play in the Patterns. Design Patterns are modelled by high level structural Properties (e.g. inheritance, dependency, invocation, delegation, type nesting and membership relationships) that are checked, by source code parsing, against the system structure and components. The approach allows to detect also Pattern variants, defined by overriding the Pattern structural properties. The approach was applied to some open-source systems to validate it. Results on the detected patterns, discovered variants and on the overall quality of the approach are provided and discussed. © 2010 IEEE.",Design patterns; Software comprehension; Software evolution; Software maintenance; Source code analysis,Design Patterns; Software comprehension; Software Evolution; Software maintenance; Source code analysis; Computer software maintenance; Design; Legacy systems; Structural properties; Object oriented programming,,,,,,"Johnson, R., Vlissides, J., Gamma, E., Helm, R., (1998) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Gueheneuc, Y.-G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Transactions on Software Engineering, 34 (5), pp. 667-684; Kim, D.H., Yun, I.D., Lee, S.U., Attributed relational graph matching based on the nested assignment structure (2010) Pattern Recogn., 43 (3), pp. 914-928; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE ' 02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA, ACM; Smith, J.M., Stotts, D., Spqr: Flexible automated design pattern extraction from source code (2003) Proc. 18th IEEE International Conference on Automated Software Engineering, pp. 215-224. , October 6-10; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proc. 11th Working Conference on Reverse Engineering, pp. 172-181","Bernardi, M. L.; Department of Engineering, University of SannioItaly; email: mlbernar@unisannio.it",,IEEE Computer Society;ACI Worldwide;Microsoft;IBM;Alcatel-Lucent,,"2010 IEEE International Conference on Software Maintenance, ICSM 2010",12 September 2010 through 18 September 2010,Timisoara,82750,,9781424486298,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-78650085108,,
,v,,"De Lucia, A., Deufemia, V., Gravino, C., Risi, M.",An Eclipse plug-in for the detection of design pattern instances through static and dynamic analysis,2010,"IEEE International Conference on Software Maintenance, ICSM",,,5609707,,,,5,10.1109/ICSM.2010.5609707,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650167824&partnerID=40&md5=066732c676c55587892f88807d5f0594,"Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy","De Lucia, A., Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy; Deufemia, V., Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy; Gravino, C., Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy; Risi, M., Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy","The extraction of design pattern information from software systems can provide conspicuous insight to software engineers on the software structure and its internal charactzeristics. In this demonstration we present ePAD, an Eclipse plug-in for recovering design pattern instances from object-oriented source code. The tool is able to recover design pattern instances through a structural analysis performed on a data model extracted from source code, and a behavioral analysis performed through the instrumentation and the monitoring of the software system. ePAD is fully configurable since it allows software engineers to customize the design pattern recovery rules and the layout used for the visualization of the recovered instances. © 2010 IEEE.",Design pattern recovery; Eclipse plug-in; Reverse engineering; Source code analysis,Behavioral analysis; Configurable; Data models; Design pattern recovery; Design Patterns; Eclipse plug-in; Object oriented; Plug-ins; Software engineers; Software structures; Software systems; Source code analysis; Source codes; Static and dynamic analysis; Behavioral research; Computer software; Dynamic analysis; Engineers; Mathematical models; Recovery; Reverse engineering; Structural analysis; Visualization; Computer software maintenance,,,,,,"Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design pattern recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Case studies of visual language based design patterns recovery (2006) Procs. of European Conference on Software Maintenance and Reengineering (Bari, Italy), pp. 165-174; Von Detten, M., Meyer, M., Travkin, D., Reverse engineering with the reclipse tool suite (2010) Procs. of International Conference on Software Engineering (Cape Town, South Africa), 2, pp. 299-300; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery through visual language parsing and source code analysis (2009) Journal of Systems and Software, 82 (7), pp. 1177-1193; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral pattern identification through visual language parsing and code instrumentation (2009) Procs. of Europ. Conference on Software Maintenance and Reengineering (Kaiserslautern, Germany), pp. 99-108; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Improving behavioral design pattern detection through model checking (2010) Procs. of European Conference on Software Maintenance and Reengineering (Madrid, Spain), pp. 179-188; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Menlo Park California: Addison-Wesley; Gamma, E., Beck, K., (2003) Contributing to Eclipse: Principles, Patterns, and Plugins., , Addison-Wesley; Gueheneuc, Y., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Trans. on Software Engineering, 34 (5), pp. 667-684; Heuzeroth, D., Mandel, S., Lowe, W., Generating design pattern detectors from pattern specifications (2003) Procs. of the International Conference on Automated Software Engineering (Montreal, Canada), pp. 245-248; Huang, H., Zhang, S., Cao, J., Duan, Y., A practical pattern recovery approach based on both structural and behavioral analysis (2005) Journal of Systems and Software, 75 (1-2), pp. 69-87; Jeanmart, S., Guéhéneuc, Y., Sahraoui, H., Habra, N., Impact of the visitor pattern on program comprehension and maintenance (2009) Procs. of International Symposium on Empirical Software Engineering and Measurement (Lake Buena Vista, Florida, USA), pp. 69-78; http://www.jhotdraw.orgJohnson, R., Documenting frameworks using patterns (1992) Procs. of Conference on Object-Oriented Programming, Systems Languages and Applications (Vancouver, British Columbia, Canada), pp. 63-72; Olsson, R., Shi, N., Reverse engineering of design patterns from java source code (2006) Procs. of ACM International Conference on Automated Software Engineering (Tokyo, Japan), pp. 123-134; Creating Custom Profilers with Probekit, , http://www.eclipse.org/tptp/platform/documents/probekit/probekit.html; http://www.ptidej.netSharif, B., Maletic, J., The effects of layout on detecting the role of design patterns (2010) Procs. of International Conference on Software Engineering Education and Training (Pittsburgh, PA), pp. 41-48; Sharif, B., Maletic, J., The effect of layout on the comprehension of UML class diagrams: A controlled experiment (2009) Procs. of Workshop on Visualizing Software for Understanding and Analysis (Edmonton, Canada), pp. 11-18; http://sourcenav.sourceforge.nethttp://www.eclipse.org/tptpTsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Trans. on Software Engineering, 32 (11), pp. 896-909","De Lucia, A.; Dipartimento di Matematica e Informatica, Università degli studi di Salerno, Fisciano(SA), Italy; email: adelucia@unisa.it",,IEEE Computer Society;ACI Worldwide;Microsoft;IBM;Alcatel-Lucent,,"2010 IEEE International Conference on Software Maintenance, ICSM 2010",12 September 2010 through 18 September 2010,Timisoara,82750,,9781424486298,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-78650167824,,
,3,,"Tonelli Bartolomei, T., Czarnecki, K., Lämmel, R.",Swing to SWT and back: Patterns for API migration by wrapping,2010,"IEEE International Conference on Software Maintenance, ICSM",,,5610429,,,,1,10.1109/ICSM.2010.5610429,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650134145&partnerID=40&md5=9fa7e881ef15114dd70f433eb57f0dc1,"University of Waterloo, Waterloo, Canada; University of Koblenz-Landau, Koblenz, Germany","Tonelli Bartolomei, T., University of Waterloo, Waterloo, Canada; Czarnecki, K., University of Waterloo, Waterloo, Canada; Lämmel, R., University of Koblenz-Landau, Koblenz, Germany","Evolving requirements may necessitate API migration - re-engineering an application to replace its dependence on one API with the dependence on another API for the same domain. One approach to API migration is to replace the original API by a wrapper-based re-implementation that makes reuse of the other API. Wrapper-based migration is attractive because application code is left untouched and wrappers can be reused across applications. The design of such wrappers is challenging though if the two involved APIs were developed independently, in which case the APIs tend to differ significantly. We identify the challenges faced by developers when designing wrappers for object-oriented APIs, and we recover the solutions used in practice. To this end, we analyze two large, open-source GUI wrappers and compile a set of issues pervasive in their designs. We subsequently extract design patterns from the solutions that developers used in the GUI wrappers. © 2010 IEEE.",,Application codes; Design Patterns; Object oriented; Open-source; Computer software maintenance; Design; Graphical user interfaces; Maintainability; Application programming interfaces (API),,,,,,"Sneed, H.M., Majnar, R., A case study in software wrapping (1998) Proc. of the International Conference on Software Maintenance (ICSM), pp. 86-93. , IEEE; Şavga, I., Rudolf, M., Götz, S., Aßmann, U., Practical refactoringbased framework upgrade (2008) Proc. of the Int. Conf. on Generative Programming and Component Engineering (GPCE), pp. 171-180. , ACM; Dig, D., Negara, S., Mohindra, V., Johnson, R., Reba: Refactoringaware binary adaptation of evolving libraries (2008) Proc. of the Int. Conf. on Software Engineering (ICSE), pp. 441-450. , ACM; Bartolomei, T.T., Czarnecki, K., Lämmel, R., Van Der Storm, T., Study of an API migration for two XML APIs (2009) Proc. of the Int. Conf. on Software Language Engineering (SLE); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Balaban, I., Tip, F., Fuhrer, R., Refactoring support for class library migration (2005) Proc. of the Int. Conf. on Object Oriented Programming, Systems, Languages, and Applications (OOSPLA), pp. 265-279. , ACM; Hölzle, U., Integrating independently-developed components in object-oriented languages (1993) Proc. of the European Conference on Object-Oriented Programming (ECOOP), pp. 36-56. , Springer-Verlag; Li, M., Yu, B., Qi, M., Antonopoulos, N., Automatically wrapping legacy software into services: A grid case study (2008) Peer-to-Peer Networking and Applications, 1 (2), pp. 139-147; Zhang, B., Bao, L., Zhou, R., Hu, S., Chen, P., A Black-Box strategy to migrate GUI-Based legacy systems to web services (2008) Int. Symp. on Service-Oriented System Engineering (SOSE), pp. 25-31. , IEEE; Canfora, G., Fasolino, A.R., Frattolillo, G., Tramontana, P., A wrapping approach for migrating legacy system interactive functionalities to service oriented architectures (2008) Journal of Systems and Software, 81 (4), pp. 463-480. , April; Henkel, J., Diwan, A., CatchUp!: Capturing and replaying refactorings to support API evolution (2005) Proc. of the Int. Conf. on Software Engineering (ICSE), pp. 274-283. , ACM; Perkins, J.H., Automatically generating refactorings to support API evolution (2005) Proc. of the Workshop on Program Analysis for Software Tools and Engineering (PASTE), pp. 111-114. , ACM; Chow, K., Notkin, D., Semi-automatic update of applications in response to library changes (1996) Proc. of the Int. Conf. on Software Maintenance (ICSM), p. 359. , IEEE; Padioleau, Y., Lawall, J.L., Hansen, R.R., Muller, G., Documenting and automating collateral evolutions in linux device drivers (2008) Proc. of the EuroSys Conference, pp. 247-260. , ACM; Nita, M., Notkin, D., Using twinning to adapt programs to alternative APIs (2010) Proc. of the Int. Conf. on Software Engineering (ICSE); Kontogiannis, K., Martin, J., Wong, K., Gregory, R., Müller, H., Mylopoulos, J., Code migration through transformations: An experience report (1998) Proc. of the Conference of the Centre for Advanced Studies (CASCON), p. 13. , IBM; Malton, A.J., The software migration barbell (2001) ASERC Workshop on Software Architecture, , August; Martin, J., Muller, H., C to java migration experiences (2002) European Conference on Software Maintenance and Reengineering, pp. 143-153; Zhong, H., Thummalapenta, S., Xie, T., Zhang, L., Wang, Q., Mining API mapping for language migration (2010) Proc. of the Int. Conf. on Software Engineering (ICSE); Ratiu, D., Feilkas, M., Deissenboeck, F., Jürjens, J., Marinescu, R., Towards a repository of common programming technologies knowledge (2008) Proc. of the Int. Workshop on Semantic Technologies in System Maintenance (STSM)","Tonelli Bartolomei, T.; University of Waterloo, Waterloo, Canada",,IEEE Computer Society;ACI Worldwide;Microsoft;IBM;Alcatel-Lucent,,"2010 IEEE International Conference on Software Maintenance, ICSM 2010",12 September 2010 through 18 September 2010,Timisoara,82750,,9781424486298,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-78650134145,,
,3,,"Arcelli, F., Franzosi, D., Raibulet, C.",.NET reverse engineering with MARPLE,2010,"Proceedings - 5th International Conference on Software Engineering Advances, ICSEA 2010",,,5615733,227,231,,,10.1109/ICSEA.2010.41,http://www.scopus.com/inward/record.url?eid=2-s2.0-78649840022&partnerID=40&md5=ffa7475dc3463e170b09cf34e06a8a3d,"Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, Edificio U14, Milan, Italy","Arcelli, F., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, Edificio U14, Milan, Italy; Franzosi, D., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, Edificio U14, Milan, Italy; Raibulet, C., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, Edificio U14, Milan, Italy","Currently, research on reverse engineering and automated design pattern detection focuses mostly on some of the programming languages such as Java and C/C++, with marginal interest in the .NET area. In this paper, we present a tool for analyzing .NET executables for architecture reconstruction in general and design pattern detection in particular. The tool extracts the meaningful information from .NET systems and produces an output compatible with the design pattern detection tool we are developing for Java software, tool called MARPLE (Metrics and Architecture Reconstruction PLug-in for Eclipse). © 2010 IEEE.",.NET; Design pattern detection; Reverse engineering; Software engineering,.NET; Architecture reconstruction; Automated design; Design pattern detection; Design Patterns; Executables; Java software; Net systems; Plug-ins; Programming language; Java programming language; Reverse engineering; Computer software,,,,,,"Arcelli, F., Masiero, S., Raibulet, C., Elemental design patterns recognition in java (2006) Proceedings of the 13th International Workshop on Software Technology and Engineering Practice, pp. 196-205. , (STEP 2006), IEEE Computer Society, Budapest, HU, September; Arcelli, F., Cristina, L., Franzosi, D., nMarple: .Net reverse engineering with MARPLE (2007) Presentation During the ECOOP 2007 International Workshop on Object-Oriented Reengineering, , (WOOR 2007), Berlin, July; Arcelli, F., Raibulet, C., Program comprehension and design pattern recognition: An experience report (2006) Presentation During the ECOOP 2006 International Workshop on Object-Oriented Reengineering, , (WOOR 2006), Nantes, France, July, 4th; Chikofsky, E.J., Cross II, J.H., Reverse engineering and design recovery: A taxonomy (1990) IEEE Software, 7 (1), pp. 13-17. , January; Cristina, L., Arcelli, F., Enhancing software evolution through design patterns detection (2007) Proceedings of the IEEE Workshop on Software Evolvability, , Paris, October; Franzosi, D., (2007) NET Reverse Engineering: NMARPLE for Basic Elements Detection, , Master's thesis, University of Milano - Bicocca; (2010) FxCop, , www.gotdotnet.com/Team/FxCop, May; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, October; Guéhéneuc, Y.-G., PTIDEJ: Promoting patterns with patterns (2005) Proceedings of the 1st ECOOP Workshop on Building a System Using Patterns, , Springer Verlag; Lanza, M., (2003) Object Oriented Reverse Engineering, , PhD Thesis, University of Berna; Maggioni, S., Design pattern clues for creational design patterns (2006) Proceedings of the DPD4RE Workshop, Co-Located Event with IEEE WCRE 2006 Conference, , Benevento, Italy; Nickel, U.A., Niere, J., Wadsack, J.P., Zündorf, A., Roundtrip engineering with FUJABA (2000) Proceedings of 2nd Workshop on Software Reengineering, , (WSR), Germany; Shi, N., Olsson, A.R., Reverse engineering of design patterns from java source code (2006) 21st IEEE/ACM International Conference on Automated Software Engineering, , Japan, September; Smith, J.M., An elemental design pattern catalog (2002) Technical Report TR02-040, Department of Computer Science, , University of North Carolina at Chapel Hill; (2010) Software Evolution and Reverse Engineering, , www.essere.disco.unimib.it, lab at University of Milano Bococca May; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32, pp. 896-909; Tosi, C., Zanoni, M., Arcelli, F., Raibulet, C., Joiner: Form subcomponents to design patterns (2006) Proceedings of the DPD4RE Workshop, Co-Located Event with IEEE WCRE 2006 Conference, , Benevento, Italy","Arcelli, F.; Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Viale Sarca, 336, Edificio U14, Milan, Italy; email: arcelli@disco.unimib.it",,IARIA,,"5th International Conference on Software Engineering Advances, ICSEA 2010",22 August 2010 through 27 August 2010,Nice,82824,,9780769541440,,,English,"Proc. - Int. Conf. Softw. Eng. Adv., ICSEA",Conference Paper,Scopus,2-s2.0-78649840022,,
,v,,"Ng, J.K.-Y., Guéhéneuc, Y.-G., Antoniol, G.",Identification of behavioural and creational design motifs through dynamic analysis,2010,Journal of Software Maintenance and Evolution,22,8,,597,627,,9,10.1002/smr.421,http://www.scopus.com/inward/record.url?eid=2-s2.0-78649877790&partnerID=40&md5=28597d3e996e3986e417e96c49e2239d,"Ptidej Team and SOCCER Lab, Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, CP 6079 succ. Centre Ville, Montréal, QC H3C 3A7, Canada","Ng, J.K.-Y., Ptidej Team and SOCCER Lab, Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, CP 6079 succ. Centre Ville, Montréal, QC H3C 3A7, Canada; Guéhéneuc, Y.-G., Ptidej Team and SOCCER Lab, Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, CP 6079 succ. Centre Ville, Montréal, QC H3C 3A7, Canada; Antoniol, G., Ptidej Team and SOCCER Lab, Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, CP 6079 succ. Centre Ville, Montréal, QC H3C 3A7, Canada","Design patterns offer design motifs, solutions to object-oriented design problems. Design motifs lead to well-structured designs and thus are believed to ease software maintenance. However, after use, they are often 'lost' and are consequently of little help during program comprehension and other maintenance activities. Therefore, several works proposed design pattern identification approaches to recover occurrences of the motifs. These approaches mainly used the structure and organization of classes as input. Consequently, they have a low precision when considering behavioural and creational motifs, which pertain to the assignment of responsibilities and the collaborations among objects at runtime. We propose MoDeC, an approach to describe behavioural and creational motifs as collaborations among objects in the form of scenario diagrams. We identify these motifs using dynamic analysis and constraint programming. Using a proof-of-concept implementation of MoDeC and different scenarios for five other Java programs and Builder, Command, and Visitor, we show that MoDeC has a better precision than the state-of-the-art static approaches. Copyright © 2009 John Wiley & Sons, Ltd.",constraint programming; design pattern identification; dynamic analysis; reverse engineering; scenario diagrams,Constraint programming; Design motifs; design pattern identification; Design Patterns; Java program; Maintenance activity; Object-oriented design; Program comprehension; Proof of concept; Runtimes; scenario diagrams; Software maintenance; Static approach; Structured design; Computer programming; Computer software; Constraint theory; Java programming language; Maintenance; Reverse engineering; Dynamic analysis,,,,,,"Erlikh, L., Leveraging legacy system dollars for e-business (2000) IT Professional, 2 (3), pp. 17-23; Seacord, R.C., Plakosh, D., Lewis, G.A., (2003) Modernizing Legacy Systems: Software Technologies, Engineering Processes, and Business Practices, , (1st edn). Addison-Wesley Professional: Reading MA, February; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns-Elements of Reusable Object-oriented Software, , (1st edn). Addison-Wesley: Reading MA; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multi-layered framework for design pattern identification (2008) Transactions on Software Engineering (TSE), 34 (5), pp. 667-684; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , Garlan D., Kramer J. (eds.). ACM Press: New York, May; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , Wills L.M., Baxter I. (eds.). IEEE Computer Society Press: Silver Spring MD, November; Niere, J., Fuzzy logic based interactive recovery of software design (2002) ICSE Doctoral Symposium, , May; Pettersson, N., Löwe, W., Efficient and accurate software pattern detection (2006) Proceedings of the 13th Asia Pacific Software Engineering Conference, pp. 317-326. , Jalote P. (ed.). IEEE Computer Society Press: Silver Spring MD, December; Seemann, J., Von Gudenberg, J.W., Pattern-based design recovery of Java software (1998) Proceedings of the 5th International Symposium on Foundations of Software Engineering, pp. 10-16. , Scherlis B. (ed.). ACM Press: New York, November; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) Transactions on Software Engineering, 32 (11), pp. 896-909; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of the 26th Conference on the Technology of Object-oriented Languages and Systems, pp. 112-124. , Gil J. (ed.). IEEE Computer Society Press: Silver Spring MD, August; Heuzeroth, D., Holl, T., Löwe, W., Combining static and dynamic analyses to detect interaction patterns (2002) Proceedings of the 6th World Conference on Integrated Design and Process Technology, , Ehrig H., Krämer B.J., Ertas A. (eds.). Society for Design and Process Science, June; Heuzeroth, D., Löwe, W., Mandel, S., Generating design pattern detectors from pattern specifications (2003) Eighteenth IEEE International Conference on Automated Software Engineering (ASE) 2003, , IEEE: New York; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proceedings of the 4th ICSE Workshop on Dynamic Analysis, , Gupta N., Podgurski A. (eds.). ACM Press: New York, May; Ka-Yee Ng, J., Guéhéneuc, Y.-G., Identification of behavioral and creational design patterns through dynamic analysis (2007) Proceedings of the 3rd International Workshop on Program Comprehension Through Dynamic Analysis (PCODA), pp. 34-42. , Zaidman A., Hamou-Lhadj A., Greevy O. (eds.). Delft University of Technology: Delft, October;. TUD-SERG-2007-022; Ghezzi, C., Jazayeri, M., Mandrioli, D., (1991) Fundamentals of Software Engineering, , Prentice-Hall, Inc.: Upper Saddle River NJ, U.S.A; Briand, L., Labiche, Y., Leduc, J., Towards the reverse engineering of UML sequence diagrams for distributed Java software (2006) Transactions on Software Engineering, 32 (9), pp. 642-663; Thomas, D., Reflective software engineering-From MOPS to AOSD (2002) Journal of Object Technology, 1 (4), pp. 17-26; Object Management Group. UML 2.0 Superstructure Specification, October 2004Apache Jakarta Project. Byte Code Engineering Library, June 2006Guéhéneuc, Y.-G., Douence, R., Jussien, N., No Java without Caffeine-A tool for dynamic analysis of Java programs (2002) Proceedings of the 17th Conference on Automated Software Engineering (ASE), pp. 117-126. , Emmerich W., Wile D. (eds.). IEEE Computer Society Press: Silver Spring MD, September; Cesar Sampaio, J., Leite, D.P., Doorn, J.H., Hadad, G.D.S., Kaplan, G.N., Scenario inspections (2005) Requirements Engineering, 10 (1), pp. 1-21; Sampaio, J.C., Leite, D.P., Hadad, G.D.S., Doorn, J.H., Kaplan, G.N., A scenario construction process (2000) Requirements Engineering, 5 (1), pp. 38-61; Egyed, A., A scenario-driven approach to trace dependency analysis (2003) Transactions on Software Engineering, 29 (2), pp. 1-17; Gregoriades, A., Sutcliffe, A., Scenario-based assessment of nonfunctional requirements (2005) Transactions on Software Engineering, 31 (5), pp. 392-409; Sutcliffe, A.G., Maiden, N.A.M., Minocha, S., Manuel, D., Supporting scenario-based requirements engineering (1998) Transactions on Software Engineering, 24 (12), pp. 1072-1088; Antoniol, G., Guéhéneuc, Y., Feature identification: An epidemiological metaphor (2006) Transactions on Software Engineering (TSE), 32 (9), pp. 627-641; Quilici, A., Yang, Q., Woods, S., Applying plan recognition algorithms to program understanding (1997) Journal of Automated Software Engineering, 5 (3), pp. 347-372; Jussien, N., E-Constraints: Explanation-based constraint programming (2001) First CP Workshop on User-interaction in Constraint Satisfaction, , O'Sullivan B, Freuder E (eds.), December; Gamma, E., Eggenschwiler, T., (1998) JHotDraw. Web Site, , Available at: [15 November ]; Frakes, W.B., Baeza-Yates, R., (1992) Information Retrieval: Data Structures and Algorithms, , Prentice-Hall: Englewood Cliffs NJ, June. Facsimile edition; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Proceedings of the 21st International Conference on Automated Software Engineering, pp. 123-134. , Uchitel S., Easterbrook S. (eds.). IEEE Computer Society Press, ACM Press: Silver Spring MD, New York; Yin, R.K., (2002) Case Study Research: Design and Methods, , (3rd edn). SAGE Publications: London; Hamou-Lhadj, A., Braun, E., Amyot, D., Lethbridge, T., Recovering behavioral design models from execution traces (2005) CSMR'05: Proceedings of the Ninth European Conference on Software Maintenance and Reengineering, pp. 112-121. , IEEE Computer Society: Washington, DC, U.S.A; Hamou-Lhadj, A., Lethbridge, T., Summarizing the content of large traces to facilitate the understanding of the behaviour of a software system (2006) ICPC '06: Proceedings of the 14th IEEE International Conference on Program Comprehension (ICPC'06), pp. 181-190. , IEEE Computer Society: Washington, DC, U.S.A; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) Proceedings of the 1st IJCAI Workshop on Modeling and Solving Problems with Constraints, pp. 57-64. , Bessière C. (ed.). AAAI Press: Seattle, WA, U.S.A., August; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: Putting icing on the UML cake (2004) Proceedings of the 19th Conference on Object-oriented Programming, Systems, Languages, and Applications (OOPSLA), pp. 301-314. , Schmidt D.C. (ed.). ACM Press: New York, October; Kniesel, G., Hannemann, J., Rho, T., A comparison of logic-based infrastructures for concern detection and extraction (2007) Proceedings of the 3rd AOSD Workshop on Linking Aspect Technology and Evolution, , Tourwé T., Kellens A., Ceccato M., Shepherd D., Marin M. (eds.). ACM Press: New York, March; Shawky, D.M., Abd-El-Hafiz, S.K., El-Sedeek, A.-L., A dynamic approach for the identification of object-oriented design patterns (2005) Proceedings of the 2nd International Conference on Software Engineering, pp. 138-143. , February; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59, pp. 181-196; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the 1st ICSE Workshop on Dynamic Analysis, , Cook J.E., Ernst M.D. (eds.). IEEE Computer Society Press: Silver Spring MD, May; De Pauw, W., Kimelman, D., Vlissides, J.M., Modeling object-oriented program execution (1994) Proceedings of the 8th European Conference on Object-oriented Programming, 821, pp. 163-182. , Springer: Berlin, July; Briand, L., Labiche, Y., Miao, Y., Towards the reverse engineering of UML sequence diagrams (2003) Proceedings of the 10th Working Conference on Reverse Engineering, pp. 57-66. , November; Rountev, A., Volgin, O., Reddoch, M., Static control-flow analysis for reverse engineering of UML sequence diagrams (2005) Proceedings of the 6th Workshop on Program Analysis for Software Tools and Engineering, pp. 96-102","Guéhéneuc, Y.-G.; Ptidej Team and SOCCER Lab, Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, CP 6079 succ. Centre Ville, Montréal, QC H3C 3A7, Canada; email: yann-gael.gueheneuc@polymtl.ca",,,,,,,,1532060X,,JSMEC,,English,J. Software Maint. Evol.,Article,Scopus,2-s2.0-78649877790,,
,v,,"Pires, W., Ramalho, F., Ledo, A., Serey, D.",Checking UML design patterns in Java implementations,2010,"Proceedings - 4th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2010",,,5631934,120,129,,1,10.1109/SBCARS.2010.22,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952086953&partnerID=40&md5=ea477e926dda1e8da3ef98ac08acdf51,"Universidade Federal de Campina Grande, Campina Grande, Brazil","Pires, W., Universidade Federal de Campina Grande, Campina Grande, Brazil; Ramalho, F., Universidade Federal de Campina Grande, Campina Grande, Brazil; Ledo, A., Universidade Federal de Campina Grande, Campina Grande, Brazil; Serey, D., Universidade Federal de Campina Grande, Campina Grande, Brazil","In a previous work, we presented a technique that allows verifying the conformance between Java implementations and UML class diagrams, using design tests. While it allowed verifying conformance it does so in a sense that does not deal adequately with some design patterns. In such scenarios, there are semantic constraints among the involved elements that UML does not allow our technique to recognize them. Therefore, if one evolves the implementation violating the design pattern, the generated design tests will no longer be capable of detecting the design violation. To address this problem, we propose in this paper an approach based on: (1) UML profiles to explicitly tag UML incorporating design patterns; and (2) a set of design test templates able to recognize the appropriate implementation of these design patterns on Java code. We also present a prototype capable of automatically generating the design tests to verify the design patterns explicated by the UML profile. © 2010 IEEE.",Design patterns; Design tests; MDA; UML profile,Design Patterns; Design tests; Java codes; Java implementation; MDA; Semantic constraints; UML class diagrams; UML design; UML profiles; Automatic test pattern generation; Computer software reusability; Markup languages; Semantics; Software architecture; Testing; Unified Modeling Language; Design,,,,,,"Sommerville, I., (2004) Software Engineering, , 7th ed. Addison-Wesley; Parnas, D.L., Software aging (1994) Proceedings of the 16th International Conference on Software Engineering, pp. 279-290. , B. Fadini, Ed. Sorrento, Italy: IEEE Computer Society Press, May; Pires, W., Brunet, J., Ramalho, F., Serey, D., Uml-based design test generation (2008) SAC '08: Proceedings of the 2008 ACM Symposium on Applied Computing, pp. 735-740. , Fortaleza, Ceara, Brazil: ACM; Gamma, Helm, Johnson, Vlissides, (2000) Design Patterns Elements of Reusable Object-oriented Software, , Massachusetts: Addison-Wesley; Rumbaugh, J.E., Modeling models and viewing views: A look at the model-view-controller framework (1994) JOOP, 7 (2), pp. 14-20. , 29; Genova, G., Del Castillo, C.R., Llorens, J., Mapping UML associations into Java code (2003) Journal of Object Technology, 2 (5), pp. 135-162. , http://www.jot.fm/issues/issue_2003_09/article4.pdf; Hailpern, B., Tarr, P., Model-driven development: The good, the bad, and the ugly (2006) IBM Systems Journal, 45 (3), pp. 451-461. , http://www.research.ibm.com/journal/sj/453/hailpern.pdf; (2006) Mof, , http://www.omg.org/cgi-bin/doc?ptc/2005-11-01; (2005) Atlas Transformation Language, , http://www.sciences.univ-nantes.fr/lina/atl/, AMMA Project; (2004) UML 2.0 Superstructure Specification, , Object Management Group, Framingham, Massachusetts, Oct; JAS-metamodel, , http://www.emn.fr/x-info/atlanmod/index.php/Atlantic, [Online]. Available: http://www.emn.fr/x-info/atlanmod/index.php/Atlantic; Brunet, J., Guerrero, D., Figueiredo, J., Design tests: An approach to programmatically check your code against design rules (2009) Proc. 31th International Conference on Software Engineering (ICSE 2009), New Ideas and Emerging Results, , May; http://www.designwizard.org, [Online]. Available: http://www.designwizard.orgEclise MDT-OCL, , http://www.eclipse.org/modeling/mdt/?project=ocl, [Online]. Available: http://www.eclipse.org/modeling/mdt/?project=oc; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multilayered approach for design pattern identification (2008) IEEE Trans. Software Eng, 34 (5), pp. 667-684. , [Online]. Available: http://dx.doi.org/10.1109/TSE.2008.48; P-MARt: Pattern-like Micro-architecture Repository, , http://www.ptidej.net/downloads/pmart/, [Online]. Available: http://www.ptidej.net/downloads/pmart/; OMondo-eclipse UML, , http://www.uml2.org/, [Online]. Available: http://www.uml2.org/; Dong, J., Representing the applications and compositions of design patterns in UML (2003) SAC, pp. 1092-1098. , ACM; Eden, A.H., LePUS: A visual formalism for object-oriented architectures (2002) 6th World Conference on Integrated Design and Process Technology (IDPT), , Jun; Dong, J., Yang, S., Zhang, K., A model transformation approach for design pattern evolutions (2006) Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems, pp. 80-89. , DOI 10.1109/ECBS.2006.10, 1607357, Proceedings - 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems, ECBS 2006; Moha, N., Gueheneuc, Y.-G., Leduc, P., Automatic generation of detection algorithms for design defects (2006) Proceedings - 21st IEEE/ACM International Conference on Automated Software Engineering, ASE 2006, pp. 297-300. , DOI 10.1109/ASE.2006.22, 4019591, Proceedings - 21st IEEE/ACM International Conference on Automated Software Engineering, ASE 2006; Izurieta, C., Bieman, J.M., Testing consequences of grime buildup in object oriented design patterns (2008) IEEE International Conference on Software Testing Verification and Validation (ICST), , IEEE Computer Society, to appear; AltovaUmodel, , http://www.altova.com/products/umodel/, [Online]. Available: http://www.altova.com/products/umodel/; France, R.B., Kim, D.-K., Song, E., Role-based modeling language (rbml) specification v1.0 Computer Science Department, Colorado State University, Fort Collins, Tech. Rep.; Binder, R.V., (1999) Testing Object-oriented Systems: Models, Patterns, and Tools, Ser. Object Technology Series, , Addison Wesley; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Trans. Software Eng, 30 (3), pp. 193-206. , http://csdl.computer.org/comp/trans/ts/2004/03/e0193abs.htm, [Online]. Available; Jet, , http://www.eclipse.org/emft/projects/jet/, [Online]. Available: http://www.eclipse.org/emft/projects/jet/; Mofscript, , http://www.eclipse.org/gmt/mofscript/, [Online]. Available: http://www.eclipse.org/gmt/mofscript/","Pires, W.; Universidade Federal de Campina Grande, Campina GrandeBrazil; email: neto@dsc.ufcg.edu.br",,,,"4th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2010",27 September 2010 through 29 September 2010,"Salvador, Bahia",83985,,9780769542591,,,English,"Proc. - Braz. Symp. Softw. Components, Archit. Reuse, SBCARS",Conference Paper,Scopus,2-s2.0-79952086953,,
,3,,"Brutch, T.G., Su, B.-Y.",Architecting an object recognition system using parallel design patterns,2010,Proceedings of the IASTED International Conference on Parallel and Distributed Computing and Systems,,,,226,233,,,10.2316/P.2010.724-063,http://www.scopus.com/inward/record.url?eid=2-s2.0-84858676938&partnerID=40&md5=2e67aa22cfbcb3035d3d3f19197db8e8,"Samsung Electronics, EECS Department, UC Berkeley, San Jose, CA, United States; Samsung Electronics, EECS Department, UC Berkeley, Berkeley, CA, United States","Brutch, T.G., Samsung Electronics, EECS Department, UC Berkeley, San Jose, CA, United States, Samsung Electronics, EECS Department, UC Berkeley, Berkeley, CA, United States; Su, B.-Y., Samsung Electronics, EECS Department, UC Berkeley, San Jose, CA, United States, Samsung Electronics, EECS Department, UC Berkeley, Berkeley, CA, United States","In this paper, we use an object recognition application as a case study to illustrate our Parallelization Methodology, for architecture, design and development. Our goal was to identify a methodology with a streamlined process for problem analysis, design and development, and use this design methodology in developing a high quality parallel object recognition application, with an efficient and scalable implementation. Our parallelization methodology consists of application design, concurrency analysis, implementation, debugging and testing, and performance tuning phases. In this paper, we focus on the application design, concurrency analysis and implementation phases of the parallelization methodology, to illustrate selection and use of parallel design patterns, during design and implementation phases. In the concurrency analysis phase, we identified key application computations, and performed application decomposition and dependency analysis. During application design, appropriate parallel design patterns were mapped to the problem for efficient parallelization of computations. We illustrate how parallel design patterns were used to guide algorithmic choices during application design, and how design patterns were used in exploring the design space for an efficient implementation, while satisfying the constraints and requirements of the object recognition problem. Applications in the area of object recognition tend to have similar computational flows with variations in input size. A design pattern based approach to parallel software architecture provided us with a common vocabulary for design and development, and helped in meeting the requirements and constraints of the original problem. We found that using our parallelization methodology resulted in a streamlined process for project planning and execution. In this paper, we step through the application design process using parallel design patterns. We review related work in the area of object recognition, and provide detailed experimental results from our object recognition application implementation.",Parallel design patterns; Parallel programming; Parallel software development; Parallelization methodology,Application design; Computational flows; Concurrency analysis; Dependency analysis; Design and Development; Design Methodology; Design Patterns; Design spaces; Efficient implementation; High quality; Implementation phasis; Input size; Object recognition problem; Object recognition systems; Parallel design; Parallel software development; Parallelization methodology; Parallelizations; Performance tuning; Problem analysis; Project planning; Scalable implementation; Design; Parallel programming; Quality control; Software architecture; Object recognition,,,,,,"Keutzer, K., Mattson, T., A design pattern language for engineering (Parallel) software (2010) Intel Technology Journal, 13 (4); Mattson, T., Beverly sanders, and berna massingill (2009) Patterns for Parallel Programming, , Addison Wesley, Boston, March; Catanzaro, B., Kamil, S., Lee, Y., Asanovic, K., Demmel, J., Keutzer, K., Shalf, J., Fox, A., SEJITS: Getting productivity and performance with selective embedded JIT specialization (2009) Proc. Programming Models for Emerging Architectures, , Raleigh, NC; Dalal, N., Triggs, B., Histograms of oriented gradients for human detection (2005) Proc. Computer Vision and Pattern Recognition, , San Diego, CA; Felzenszwalb, P., McAllester, D., Ramanan, D., A discriminatively trained, multiscale, deformable part model (2008) Proc. Computer Vision and Pattern Recognition; Maji, S., Malik, J., Object detection using a max-margin Hough transform (2009) Proc. Computer Vision and Pattern Recognition, , Miami, FL; Boiman, O., Shechtman, E., Irani, M., In defense of nearest-neighbor based image classification (2008) Proc. Computer Vision and Pattern Recognition, , Anchorage, AK; Gu, C., Lim, J., Arbeĺaez, P., Malik, J., Recognition using regions (2009) Proc. Computer Vision and Pattern Recognition, , Miami, FL; Catanzaro, B., Su, B., Sundaram, N., Lee, Y., Murphy, M., Keutzer, K., Efficient, high-quality image contour detection (2009) Proc. International Conference on Computer Vision, , Kyoto, Japan; Arbeĺaez, P., Maire, M., Fowlkes, C., Malik, J., From contours to regions: An empirical evaluation (2009) Proc. Computer Vision and Pattern Recognition, , Miami, FL; Bourdev, L., Malik, J., Poselets: Body part detectors trained using 3D human pose annotations (2009) Proc. International Conference on Computer Vision, , Kyoto, Japan; Lampert, C., Blaschko, M., Hofmann, T., Beyond sliding windows: Object localization by efficient subwindow search (2008) Proc. Computer Vision and Pattern Recognition, , Anchorage, AK; Ferrari, V., Marin-Jimenez, M., Zisserman, A., Progressive search space reduction for human pose estimation (2008) Proc. Computer Vision and Pattern Recognition, , Anchorage, AK; Hoiem, D., Efros, A.A., Hebert, M., Geometric context from a single image (2005) Proceedings of the IEEE International Conference on Computer Vision, I, pp. 654-661. , DOI 10.1109/ICCV.2005.107, 1541316, Proceedings - 10th IEEE International Conference on Computer Vision, ICCV 2005; Russell, B.C., Efros, A.A., Sivic, J., Freeman, W.T., Zisserman, A., Using multiple segmentations to discover objects and their extent in image collections (2006) Proc. Computer Vision and Pattern Recognition, , New York, NY; Malisiewicz, T., Efros, A., Recognition by association via learning per-exemplar distances (2008) Proc. Computer Vision and Pattern Recognition, pp. 1-8. , Anchorage, AK; Ferrari, V., Tuytelaars, T., Gool, L.V., Object detection by contour segment networks (2006) Proc. European Conference on Computer Vision, , Graz, Austria; Lowe, D., Distinctive image features from scale-invariant key points (2004) International Journal of Computer Vision, 60 (2), pp. 91-110. , November; Oliva, A., Torralba, A., Modeling the shape of the scene: A holistic representation of the spatial envelope (2001) International Journal of Computer Vision, 42 (3), pp. 145-175. , DOI 10.1023/A:1011139631724; Shakhnarovish, Darrell, Indyk, (2005) Nearest-Neighbor Methods in Learning and Vision, , ed., MIT Press; Agresti, A., (2002) Categorical Data Analysis, , New York: Wiley-Interscience; Cortes, C., Vapnik, V., Support-Vector networks (1995) Machine Learning, 20; Freund, Y., Schapire, R.E., A decision-theoretic generalization of on-line learning and an application to boosting Proc. Second European Conference on Computational Learning, 904, pp. 23-37. , Springer-Verlag, London; Wu, C., SiftGPU: A GPU Implementation of Scale Invariant Feature Transform (SIFT), , http://cs.unc.edu/~ccwu/siftgpu/; Garcia, V., Debreuve, E., Barlaud, M., Fast k nearest neighbor search using GPU (2008) Proc. CVPR Workshop on Computer Vision on GPU, , Anchorage, Alaska, USA, June; Catanzaro, B., Sundaram, N., Keutzer, K., Fast support vector machine training and classification on graphics processors (2008) International Conference on Machine Learning, , San Diego, CA; Wan, J.Y., Sun, Y.Q., Xue, J.Y., Expanding design pattern to support parallel programming (2000) Proc. 36 th International Conference on Parallel Processing, , Toronto, Canada; Nyland, L.S., Prins, J.F., Goldberg, A., Mills, P.H., A design methodology for data-parallel applications (2000) IEEE Transactions on Software Engineering, 26 (4). , April; Bromling, S., Macdonald, S., Anvik, J., Schaeffer, J., Szafron, D., Tan, K., Pattern-based parallel programming (2002) Proc. International Conference on Parallel Processing, , Vancouver, BC, Canada; Macdonald, S., Tan, K., Schaeffer, J., Szafron, D., Deferring design pattern decisions and automating structural pattern changes using a design-pattern based programming system (2009) Transactions on Programming Languages and Systems, 31 (3). , April","Brutch, T.G.; Samsung Electronics, EECS Department, UC Berkeley, San Jose, CA, United States; email: t.brutch@samsung.com",,Int. Assoc. Sci. Technol. Dev. (IASTED) -;Tech. Comm. Comput.;Int. Assoc. Sci. Technol. Dev. (IASTED) -;Tech. Comm. Parallel Distrib. Comput. Syst.;World Modelling and Simulation Forum (WMSF),,"IASTED International Conference on Parallel and Distributed Computing and Systems, PDCS 2010",8 November 2010 through 10 November 2010,"Marina Del Rey, CA",89096,10272658,9780889868786,,,English,Proc. IASTED INt. Conf. Parall. Distrib. Comput. Syst.,Conference Paper,Scopus,2-s2.0-84858676938,,
,4,,"Wahba, S.K., Hallstrom, J.O., Soundarajan, N.",Initiating a design pattern catalog for embedded network systems,2010,"Embedded Systems Week 2010 - Proceedings of the 10th ACM International Conference on Compilers, Architecture and Synthesis for Embedded Systems, EMSOFT'10",,,,249,258,,2,10.1145/1879021.1879054,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650663128&partnerID=40&md5=5346383ae0d381dfce24ae7be0748087,"School of Computing, Clemson University, Clemson, SC 29634, United States; Computer Science and Eng., Ohio State University, Columbus, OH 43210, United States","Wahba, S.K., School of Computing, Clemson University, Clemson, SC 29634, United States; Hallstrom, J.O., School of Computing, Clemson University, Clemson, SC 29634, United States; Soundarajan, N., Computer Science and Eng., Ohio State University, Columbus, OH 43210, United States","In the domain of desktop software, design patterns have had a profound impact; they are applied ubiquitously across a broad range of applications. Patterns serve both to promulgate expert knowledge and as a vocabulary for documenting software design. The result is higher-quality software, reduced development effort, and improved documentation. This impact has yet to be felt in the emerging domain of embedded network software. The applications are characterized by highly distributed, reactive computations executed over resource-constrained processors; they present a host of new design challenges. Without a coherent repository of expert solutions, best practices do not emerge, design flaws are repeated, and developer communication is hindered. In this paper, we initiate a pattern catalog for embedded network software. The contributions are two-fold. First, we present three new design patterns distilled from a careful analysis of expert-crafted software. Second, we present a formalism for specifying the structural requirements of such patterns. The resulting specifications provide a rigorous foundation for pattern identification and documentation.",Embedded networks; nesC; Patterns; Sensor networks; TinyOS,Best-practices; Design flaws; Design Patterns; Desktop software; Embedded network; Expert knowledge; nesC; New design; Pattern identification; Patterns; Quality software; Resource-constrained; Structural requirements; TinyOS; Design; Embedded software; Libraries; Network architecture; Program compilers; Sensor networks; Software design; Embedded systems,,,,,,"Barwise, J., (1978) Handbook of Mathematical Logic, pp. 5-46. , chapter an introduction to first-order logic, North-Holland Publication Co; Bhatti, S., MANTIS OS: An embedded multithreaded operating system for wireless micro sensor platforms (2005) Mobile Networks and Applications, 10 (4), pp. 563-579; Buschmann, F., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley & Sons, Inc. New York, NY USA; Cao, Q., The LiteOS operating system: Towards unix-like abstractions for wireless sensor networks (2008) IPSN'08, pp. 233-244. , IEEE, April; Coplien, J., (1992) Advanced C++Programming Styles and Idioms, , Addison-Wesley, Boston, MA USA; Doolin, D., Sitar, N., Wireless sensors for wildfire monitoring (2005) SPIE Smart Structures/NDE, pp. 477-484. , SPIE Press, Mar; Eden, A., Formal specification of oo design (2001) ICMDE'01, pp. 1-38. , Concordia Uni. Nov; Eidson, G., The South Carolina Digital Watershed: End-to-end support for realtime management of water resources (2009) IRA-DSN'09, pp. 9-16. , May; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading, MA USA; Gay, D., The nesC language: A holistic approach to networked embedded systems (2003) ACM SIGPLAN PLDI, pp. 1-11. , ACM Press, June; Gay, D., Levis, P., Culler, D., Software design patterns for tinyos (2007) Transactions on Embedded Computing Systems, 6 (4). , Article 22; Glaser, S., Some real-world applications of wireless sensor nodes (2004) SPIE Smart Structures/NDE, pp. 344-355. , SPIE Press, Mar; Hallstrom, J., Amplifying the benefits of design patterns: From specification through implementation (2006) Foundational Approaches to Software Engineering, pp. 214-229. , Springer-Verlag, Mar; Helm, R., Holland, I., Gangopadhyay, D., Contracts: Specifying behavioral compositions in object-oriented systems (1990) OOPSLA, pp. 169-180. , ACM Press, Oct; Hill, J., System architecture directions for networked sensors (2000) ASPLOS, pp. 93-104. , ACM Press, Nov; Kim, S., Carrington, D., Using integrated metamodeling to define OO design patterns with Object-Z and UML (2004) APSEC'04, pp. 257-264. , IEEE Computer Society, Nov; Konrad, S., Cheng, B., Requirements patterns for embedded systems (2002) IEEE RE'02, pp. 127-136. , IEEE Computer Society, Sep; Levis, P., (2006) Tinyos Programming, , http://csl.stanford.edu/~pal/pubs/tinyos-programming.pdf, June; McCartney, W., Sridhar, N., Abstractions for safe concurrent programming in networked embedded systems (2006) SenSys, pp. 167-180. , ACM, Oct; (2006) Tmote Sky Datasheet, , www.moteiv.com/products/docs/tmote-skydatasheet,pdf, Moteiv Corporation; Mwelwa, C., Pont, M., Two simple patterns to support the development of reliable embedded systems. (2003) Viking PLoP'03, pp. 17-26. , Hillside Europe, Sep; Pont, M., (2001) Patterns for Time-Triggered Embedded Systems: Building Reliable Applications with the 8051 Family of Microcontrollers, , ACM Press, Aug; Pont, M., Prototyping time-triggered embedded systems using PC hardware (2003) EuroPLoP'03, pp. 691-716. , Universitäts Verlag Konstanz, June; Pont, M., Mwelwa, C., Developing reliable embedded systems using 8051 and ARM processors: Towards a new pattern language (2003) Viking PLoP'03, pp. 1-18. , Hillside Europe, Sept; Pont, M., Ong, R., Using watchdog timers to improve the ttc embedded systems (2002) Viking PLoP, pp. 159-200. , MSBS, ApS, Sept; Schmidt, D., (2000) Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Objects, , John Wiley & Sons, Inc; Smith, G., (2000) The Object-Z Specification Language, , Kluwer Academic Publishers, Norwell, MA USA; Soundarajan, N., Hallstrom, J., Responsibilities and rewards: Specifying design patterns (2004) ICSE'04, pp. 666-675. , IEEE Computer Society, May; Taibi, T., Ngo, D., Formal specification of design patterns- A balanced approach (2003) Journal of Object Technology, 2 (4), pp. 127-140; Tolle, G., A macroscope in the redwoods (2005) SenSys'05, pp. 51-63. , ACM Press, Nov; Wahba, S., NePTune: Optimizing sensor networks (2008) ICCCN'08, , pages (cd-rom). IEEE Computer Society, Aug","Wahba, S. K.; School of Computing, Clemson University, Clemson, SC 29634, United States; email: sallyw@cs.clemson.edu",,IEEE Council on Electronic Design Automation;IEEE Circuits and Systems Society;IEEE Computer Society;ACM SIGMICRO;ACM SIGBED,,"6th Embedded Systems Week 2010, ESWEEK 2010 - 10th ACM International Conference on Compilers, Architecture and Synthesis for Embedded Systems, EMSOFT'10",24 October 2010 through 29 October 2010,"Scottsdale, AZ",83146,,9781605589046,,,English,"Embedded Syst. Week - Proc. ACM Int. Conf. Compilers, Archit. Synth. Embedded Syst., EMSOFT",Conference Paper,Scopus,2-s2.0-78650663128,,
,4,,"Navarro, I., Díaz, P., Malizia, A.",A recommendation system to support design patterns selection,2010,"Proceedings - 2010 IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC 2010",,,5635261,269,270,,,10.1109/VLHCC.2010.53,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952049839&partnerID=40&md5=7b5a9d97598491af2c6d8f84520076b6,"Computer Science, Universidad Carlos III, DEI Lab, Leganés, Madrid, Spain","Navarro, I., Computer Science, Universidad Carlos III, DEI Lab, Leganés, Madrid, Spain; Díaz, P., Computer Science, Universidad Carlos III, DEI Lab, Leganés, Madrid, Spain; Malizia, A., Computer Science, Universidad Carlos III, DEI Lab, Leganés, Madrid, Spain","Pattern languages might be useful tools for design as far as designers can identify the right patterns. For this users need to understand the relationships between patterns and how to combine them. In this process, knowing how patterns have been used by other designers might help in identifying the best combination of solutions. In this paper we propose a module that recommends patterns based on the selection already made by them, with a view to supporting designers in making the correct design decisions. © 2010 IEEE.",Component; Design patterns; Recommendation algorithms,Component; Design decisions; Design patterns; Pattern languages; Recommendation algorithms; Recommendation systems; Support design; Algorithms; Recommender systems; Design,,,,,,"Adomavicius, G., Tuzhilin, A., Toward the next generation of recommender systems: A survey of the state-of-the-art and possible extensions (2005) IEEE Transactions on Knowledge and Data Engineering, 17 (6), pp. 734-749. , DOI 10.1109/TKDE.2005.99; Ansari, Essegaier, S., Kohli, R., (2000) Internet Recommendation Systems, pp. 363-375; Balabanovic, M., Shoham, Y., Fab: Content-based, collaborative recommendation (1997) Communications of the ACM, 40 (3), pp. 66-72. , March; Billsus, D., Pazzani, M.J., (1998) Learning Collaborative Information Filters, pp. 46-54; Carroll, J.M., Farooq, U., Patterns as a paradigm for theory in community-based learning (2007) Computer-Suppported Collaborative Learning, 2, pp. 41-59; Cohen, W.W., Schapire, R.E., Singer, Y., Learning to order things (1999) Journal of Artificial Intelligence Research, 10, pp. 243-270; Delgado, J., Ishii, N., (1999) Memory-based Weighted-majority Prediction for Recommender Systems; Díaz, P., Aedo, I., Rosson, M.B., Carroll, J.M., A visual tool for using design patterns as patterns languages (2010) Proceedings of the Working Conference on Advanced Visual Interfaces, pp. 67-74408-411. , Santucci, G. (ed); Duyne, D.K.V., Landay, J.A., Hong, J.I., (2003) The Design of Sites: Patterns, Principles, and Processes for Crafting A Customer-centered Web Experience, , Addison-Wesley Professional; Hill, W., Stead, L., Rosenstein, M., Furnas, G., (1995) Recommending and Evaluating Choices in A Virtual Community of Use, pp. 194-201","Navarro, I.; Computer Science, Universidad Carlos III, DEI Lab, Leganés, Madrid, Spain; email: inmartin@inf.uc3m.es",,"IEEE Computer Society;IEEE;Gobierno de Espana, Ministerio de Ciencia e Innovacion;Universidad Carlos III de Madrid;NSF;Microsoft Research",,"2010 IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC 2010",21 September 2010 through 25 September 2010,"Leganes, Madrid",83983,,9780769542065,,,English,"Proc. - IEEE Symp. Vis. Lang. Hum.-Cent. Comput., VL/HCC",Conference Paper,Scopus,2-s2.0-79952049839,,
,3,,"Barrett, N., Weber-Jahnke, J.",Building a biomedical tokenizer using the token lattice design pattern and the adapted viterbi algorithm,2010,"Proceedings - 9th International Conference on Machine Learning and Applications, ICMLA 2010",,,5708873,473,478,,,10.1109/ICMLA.2010.76,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952421738&partnerID=40&md5=8ef77cbb4e9c599b879594f8e5a780b5,"Department of Computer Science, University of Victoria, VIC, Canada","Barrett, N., Department of Computer Science, University of Victoria, VIC, Canada; Weber-Jahnke, J., Department of Computer Science, University of Victoria, VIC, Canada","Proper tokenization of biomedical text is a nontrivial problem. Problematic characteristics of current biomedical tokenizers include idiosyncratic tokenizer output and poor tokenizer extensibility and reuse. To address these problematic characteristics, we identified and completed a novel tokenizer design pattern for biomedical tokenizers. We separated a tokenizer into three components: a token lattice and lattice constructor, a best lattice-path chooser and token transducers. Token transducers create tokens from text. These tokens are assembled into a token lattice by the lattice constructor. The best path (tokenization) is selected from the token lattice, tokenizing the text. We applied our design pattern and our token transducer identification guidelines in the creation of a tokenizer for SNOMED CT concept descriptions and compared our tokenizer to three other tokenizer methods. Medpost and our adapted Viterbi tokenizer perform best with a 90.1% and 93.7% accuracy respectively. © 2010 IEEE.",Machine learning; Medicine and science; Natural language processing; Patterns,Biomedical text; Concept description; Design Patterns; Lattice design; Machine-learning; Natural language processing; Patterns; Three component; Tokenization; Tokenizer; Tokenizing; Viterbi; Computational linguistics; Design; Learning algorithms; Learning systems; Medicine; Transducers; Viterbi algorithm; Natural language processing systems,,,,,,"Jurafsky, D., Martin, J.H., (2009) Speech and Language Processing, , Prentice Hall; Webster, J.J., Kit, C., Tokenization as the initial phase in nlp Proceedings of the 14th Conference on Computational Linguistics. Morristown, NJ, USA: Association for Computational Linguistics, 1992, pp. 1106-1110; Attia, M., Arabic tokenization system (2007) IProceedings of the 2007 Workshop on Computational Approaches to Semitic Languages: Common Issues and Resources, pp. 65-72. , http://www.aclweb.org/anthology/W/W07/W07-0809, Prague, Czech Republic: Association for Computational Linguistics, June [Online]. Available; Jiang, J., Zhai, C., An empirical study of tokenization strategies for biomedical information retrieval (2007) Inf. Retr., 10 (4-5), pp. 341-363; Tomanek, K., Wermter, J., Hahn, U., Sentence and token splitting based on conditional random fields PACLING 2007 - Proceedings of the 10th Conference of the Pacific Association for Computational Linguistics. Melbourne, Australia, September 19-21, 2007. Melbourne: Pacific Association for Computational Linguistics, 2007, pp. 49-57; Arens, R., A preliminary look into the use of named entity information for bioscience text tokenization (2004) Proceedings of the Student Research Workshop at HLT-NAACL 2004 on XX, Ser. HLT-NAACL '04, pp. 37-42. , http://portal.acm.org/citation.cfm?id=1614038.1614045, Morristown, NJ, USA: Association for Computational Linguistics, [Online]. Available; He, Y., Kayaalp, M., A comparison of 13 tokenizers on medline (2006) The Lister Hill National Center for Biomedical Communications, , Tech. Rep. LHNCBC-TR-2006-003; Grana, J., Barcala, F.-M., Ferro, J.V., Formal methods of tokenization for part-of-speech tagging (2002) CICLing '02: Proceedings of the Third International Conference on Computational Linguistics and Intelligent Text Processing, pp. 240-249. , London, UK: Springer-Verlag; Lavelli, A., Califf, M.E., Ciravegna, F., Freitag, D., Giuliano, C., Kushmerick, N., Romano, L., Ireson, N., Evaluation of machine learningbased information extraction algorithms: Criticisms and recommendations (2008) Language Resources and Evaluation, 42 (2), pp. 361-393. , Dec; Trieschnigg, D., Kraaij, W., De Jong, F., The influence of basic tokenization on biomedical document retrieval (2007) SIGIR '07: Proceedings of the 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 803-804. , New York, NY, USA: ACM; Hassler, M., Fliedl, G., Text preparation through extended tokenization (2006) Data Mining VII: Data, Text and Web Mining and Their Business Applications, 37, pp. 13-21. , Zanasi, A and Brebbia, CA and Ebecken, NFF, Ed., WIT Press/Computational Mechanics Publications; Grana, J., Alonso, M.A., Vilares, M., A common solution for tokenization and part-of-speech tagging: One-pass viterbi algorithm vs. iterative approaches (2002) Lecture Notes in Computer Science, 2448, pp. 3-10. , Text, Speech and Dialogue, Springer-Verlag; Wrenn, J.O., Stetson, P.D., Johnson, S.B., An unsupervised machine learning approach to segmentation of clinician-entered free text (2007) AMIA Annu Symp Proc, pp. 811-815; McDonald, R., Crammer, K., Pereira, F., Flexible text segmentation with structured multilabel classification (2005) HLT '05: Proceedings of the Conference on Human Language Technology and Empirical Methods in Natural Language Processing. Morristown, NJ, USA: Association for Computational Linguistics, pp. 987-994; Chiarcos, C., Ritz, J., Stede, M., By all these lovely tokens...: Merging conflicting tokenizations (2009) ACL-IJCNLP '09: Proceedings of the Third Linguistic Annotation Workshop. Morristown, NJ, USA: Association for Computational Linguistics, pp. 35-43; Buschmann, F., Henney, K., Schmidt, D.C., (2007) Pattern Oriented Software Architecture: On Patterns and Pattern Languages, , John Wiley & Sons; Kiss, T., Strunk, J., Unsupervised multilingual sentence boundary detection (2006) Computational Linguistics, 32 (4), pp. 485-525; Marcus, M.P., Marcinkiewicz, M.A., Santorini, B., Building a large annotated corpus of english: The penn treebank (1993) Comput. Linguist., 19 (2), pp. 313-330; Brants, T., Tnt: A statistical part-of-speech tagger (2000) Proceedings of the Sixth Conference on Applied Natural Language Processing, pp. 224-231. , San Francisco, CA, USA: Morgan Kaufmann Publishers Inc; Davey, B.A., Priestley, H.A., (2002) Introduction to Lattices and Order, , 2nd ed. Cambridge University Press; Guo, J., Critical tokenization and its properties (1997) Comput. Linguist., 23 (4), pp. 569-596; Ma, Y., Way, A., Bilingually motivated domain-adapted word segmentation for statistical machine translation (2009) EACL '09: Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics, pp. 549-557. , Morristown, NJ, USA: Association for Computational Linguistics; Parnas, D.L., On the criteria to be used in decomposing systems into modules (1972) Commun. ACM, 15 (12), pp. 1053-1058; (2009) SNOMED Clinical Terms - User Guide, , The International Health Terminology Standards Development Organisation, January; Smith, L., Rindflesch, T., Wilbur, W.J., Medpost: A part-of-speech tagger for biomedical text (2004) Bioinformatics, 20 (14), pp. 2320-2321. , Sep","Barrett, N.; Department of Computer Science, University of Victoria, VIC, Canada; email: nbarrett@uvic.ca",,Association for Machine Learning and Applications;IEEE;California State University Bakersfield;Wayne State University,,"9th International Conference on Machine Learning and Applications, ICMLA 2010",12 December 2010 through 14 December 2010,"Washington, DC",84064,,9780769543000,,,English,"Proc. - Int. Conf. Mach. Learn. Appl., ICMLA",Conference Paper,Scopus,2-s2.0-79952421738,,
,1,,"Song, Q., Wang, L., Xu, S.",Design and development of detection and analysis system for wheat stripe rust resistance genes,2010,"2010 World Automation Congress, WAC 2010",,,5665459,89,94,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-78651444193&partnerID=40&md5=9da4457a3b9a66473105d80f8756d0fe,"College of Information and Electrical Engineering, China Agricultural University, Beijing, China; Institute of Plant Protection, Chinese Academy of Agricultural Sciences, Beijing, China","Song, Q., College of Information and Electrical Engineering, China Agricultural University, Beijing, China; Wang, L., College of Information and Electrical Engineering, China Agricultural University, Beijing, China; Xu, S., Institute of Plant Protection, Chinese Academy of Agricultural Sciences, Beijing, China","To improve the efficiency and veracity of the detection and analysis of the wheat stripe rust resistance genes, the detection and analysis system for wheat stripe rust resistance genes (SRGDAS) was designed and developed, through introducing the experience and knowledge of the experts in the agricultural domain into computer. This system is based on the MVC (Model-View-Controller) design pattern, and combined with the component and framework design thought and technology. Taking the detection method and actual analysis process adopted by domain experts into full consideration, developed the knowledge base, the knowledge acquisition facility, the inference engine, the explanation facility, as well as the friendly man-machine interface. This system is principally used to derive the stripe rust resistance genes from the wheat cultivars according to the phenotypes of the tested wheat cultivars infected by Puccinia striiformis. Additionally, it can analyze the existence credibility of the derived known genes in terms of the all-around information of the wheat cultivars. Adopting the clustering method, it can also process the derived unknown genes according to the wheat cultivars resistance characteristics. This system is applied to practice and validated by the detection and analysis experimental data, which verifies the feasibility and validity of this system.",Gene postulation; MVC pattern; Resistance gene; Wheat stripe (yellow) rust,Analysis process; Analysis system; Clustering methods; Design and Development; Design Patterns; Detection methods; Domain experts; Experimental data; Knowledge base; Man-machine interface; Model-View-Controller; MVC pattern; Puccinia striiformis; Resistance characteristics; Resistance genes; Stripe rust; Wheat cultivars; Wheat stripe (yellow) rust; Agricultural machinery; Design; Knowledge acquisition; Knowledge based systems; Plants (botany); Genes,,,,,,"Stubbs, R.W., Pathogenicity analysis of yellow (stripe) rust of wheat and its significance in a global context (1988) Breeding Strategies for Resistance to the Rusts of Wheat, pp. 23-28. , N. W. Simmonds and S. Rajaram, eds., CIMMYT Mexico; Zeng, S.M., Luo, Y., Systems analysis of wheat stripe rust epidemics in China (2008) European Journal of Plant Pathology, 121 (4), pp. 425-438; Li, Z.Q., Zeng, S.M., (2002) Wheat Rusts in China, , China Agriculture Press, Beijing; Wan, A.J., Zhao, Z.H., Chen, X.M., Wheat stripe rust epidemic and virulence of Puccinia striiformis f. sp. tritici in China in 2002 (2004) Plant Disease, 88 (8), pp. 896-904; Ge, C.B., Liao, P.A., Guo, C.Q., Summary of the research on the biology technique of wheat stripe rust resistance gene (2008) Journal of Anhui Agricultural Science, 36 (15), p. 6189. , 6191; Qamar, M., Ahmad, S.D., Shah, A.H., Postulation of stripe rust resistant genes in some Australian bread wheat cultivars and their response to temperature (2008) Pakistan Journal of Botany, 40 (6), pp. 2573-2585; Wang, F.L., Wu, L.R., Wan, A.M., Postulated genes for resistance to stripe rust in seedling of wheat cultivars from Shanxi, Gansu and Sichuan provinces (1994) Acta Agron. Ainica, 20 (5), pp. 589-594; Li, X., (2004) The Theory and Realization of MVC Design Pattern, , JiLin University, Changchun, Jilin; Wang, N., Li, L.M., Wang, Y.Z., Research on the web information system development platform based on MVC design pattern (2008) Web Intelligence and Intelligent Agent Technology, 3, pp. 203-206; Zhang, Y., Ye, Y.Z., Hu, W.Z., Research and application of the MVC model in agriculture expert system (2008) Journal of Agricultural Mechanization Research, (7), pp. 201-203. , 218; Chu, H.C., Wang, G.J., A Delphi-based approach to developing expert systems with the cooperation of multiple experts (2008) Expert Systems with Applications, 34 (4), pp. 2826-2840; Lin, H.C., Tseng, S.S., Teng, C.W., Dynamic EMCUD for knowledge acquisition (2008) Expert Systems with Applications, 34 (2), pp. 833-844; Han, J., Kamber, M., (2007) Data Mining: Concepts and Techniques, , 2nd ed., China Machine Press, Beijing; Razavi, A.R., Taeb, M., Afshari, F., Gene effects and combining ability in some bread wheat genotypes to yellow rust disease (2009) Pakistan Journal of Biological Sciences, 12 (2), pp. 146-151","Song, Q.; College of Information and Electrical Engineering, China Agricultural University, Beijing, China; email: szx09@126.com",,,,"2010 World Automation Congress, WAC 2010",19 September 2010 through 23 September 2010,Kobe,83391,,9781424496730,,,English,"World Autom. Congr., WAC",Conference Paper,Scopus,2-s2.0-78651444193,,
,3,,"Smith, S., Dekhane, S., Napier, N.",Blended learning patterns for course design,2010,Proceedings of the 2010 International SIGED: IAIM Conference,,,,,,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866007790&partnerID=40&md5=350bd6a61adf84a09fccd0407c4273bd,"Center for Teaching Excellence, Georgia Gwinnett College, United States; School of Science and Technology, Georgia Gwinnett College, United States","Smith, S., Center for Teaching Excellence, Georgia Gwinnett College, United States; Dekhane, S., School of Science and Technology, Georgia Gwinnett College, United States; Napier, N., School of Science and Technology, Georgia Gwinnett College, United States","Design patterns provide an overall structure for describing best practices. Design patterns originated in the field of architecture and urban design and gained popularity in programming and human-computer interaction. Instructors have recognized the value of design patterns for common course design and instructional issues. Pedagogical patterns specify a problem, provide the context, suggest resolution strategies, describe assessment activities, and identify related patterns. In this paper we apply pedagogical patterns to blended learning course design. We present an overview of pedagogical patterns, describe the collaborative effort involved in creating and assessing patterns, provide an example of pedagogical patterns for blended learning course design, and discuss how pedagogical patterns can advance our understanding of what works in the blended learning context.",Blended learning; Course design; Pedagogical patterns,Assessment activities; Blended learning; Course design; Design Patterns; Pedagogical patterns; Resolution strategy; Urban design; Curricula; Design; Teaching,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1979) A Pattern Language, , New York: Oxford University Press; Allen, I.E., Seaman, J., Garrett, R., (2005) Blending In: The Extent and Promise of Blended Education in the United States, , Needham, MA: The Sloan Consortium; Bayle, E., Bellamy, R., Casaday, G., Erickson, T., Putting it all together: Towards a pattern language for interaction design: A CHI 97 workshop (1998) ACM SIGCHI Bulletin, pp. 17-23; Bergin, J., Eckstein, J., Manns, M., Wallingford, E., Patterns for gaining different perspectives (2001) Pedagogical Patterns Project; Gamma, E., Helm, R., Johnson, R.D., Vlisssides, J., (1994) Design Patterns: Elements of Usable Object Oriented Software, , Reading, MA: Addison-Wesley; Garrison, D.R., Kanuka, H., Blended learning: Uncovering its transformative potential in higher education (2004) Science Direct; Garrison, D.R., Vaughan, N.D., (2007) Blended Learning in Higher Education: Framework, Principles, and Guidelines, , Jossey-Bass; Garrison, D.R., Vaughan, N.D., (2008) Blended Learning in Higher Education: Framework, Principles, and Guidelines, , Jossey-Bass; Haberman, B., Pedagogical patterns: A means for communication within the CS teaching community of practice (2006) Computer Science Education, 16 (2), pp. 87-103; Levy, J., Envision the future of e-learning (2005) CIO Canada, 13, p. 2; Senn, G.J., Comparison of face-to-face and hybrid delivery of a course that requires technology skills development (2008) Journal of Information Technology Education, (7), pp. 267-283. , 2008","Smith, S.; Center for Teaching Excellence, Georgia Gwinnett CollegeUnited States; email: ssmith2@ggc.edu",,"International Academy for Information Management (IAIM);University of Pretoria, Department of Informatics",,2010 International SIGED: IAIM Conference,10 December 2010 through 12 December 2010,"Saint Louis, MO",92525,,9780620491495,,,English,Proc. Int. SIGED: IAIM Conf.,Conference Paper,Scopus,2-s2.0-84866007790,,
,4,,"Menon, S., Suryaprasad, J.",A pattern based methodology for the design and implementation of multiplexed master-slave devices at the system-level use-case: Modeling a level-2 cache IP module at transaction level,2010,"2010 IEEE International Conference on Networked Embedded Systems for Enterprise Applications, NESEA 2010",,,5678054,,,,,10.1109/NESEA.2010.5678054,http://www.scopus.com/inward/record.url?eid=2-s2.0-79951489094&partnerID=40&md5=65591bf8ce93dc477c528682ae73b0a2,"Centre for System Design and Verification, PES School of Engineering, Bangalore-560100, Karnataka, India; PES School of Engineering, Bangalore-560100, Karnataka, India","Menon, S., Centre for System Design and Verification, PES School of Engineering, Bangalore-560100, Karnataka, India; Suryaprasad, J., PES School of Engineering, Bangalore-560100, Karnataka, India","In a customer driven environment, systems pose a great challenge to designers in terms of complexity and time-to-market. Thus, designers have to look at Commercial-Off-The-Shelf (COTS) based development techniques that rely on integrating components produced by various manufacturers. However, the vast range of components from various manufacturers leads to obscurity of interfaces between them, making system integration a dreadful task. Hence, large warehouses of IP modules comprising of various software simulation models of system components at different levels of abstraction that can be readily integrated to form a Virtual Prototype are highly beneficial towards the exploration of various architectures. In order to design and implement IP modules efficiently, we identify the Design patterns that they follow. We propose a Design pattern based methodology for modeling and implementing multiplexed Master-Slave devices. As an effort to showcase the methodology, we choose to model a Level-2 Cache (L2Cache) using SystemC. A technical specification document of the Motorola MPC2605 L2Cache is procured and modeled using hierarchical state machines that we implement using SystemC. The developed model is an integrated look-aside L2Cache supporting 4-way set-associative cache mapping and LRU replacement algorithm, compatible with the Simple Bus. The L2Cache module is then further parameterized to accommodate changes in L2Cache size, cache mapping strategies and replacement algorithms. In this paper, we present the proposed methodology through a description of the process of modeling and verifying an L2Cache IP module at system-level, using the ""Master-Bus-Slave/Master-Bus- Slave"" Design pattern. The test-bench involves a master (to generate transactions), a Simple Bus, the L2Cache Module and Slave Module (Simple memory). Various relevant test cases were generated to test the functionality of the developed module. The test-case outputs were routed to a debug file which is inspected to determine whether the output is as expected. We conclude by enunciating our learning from our experience with this methodology. ©2010 IEEE.",Design patterns; ESL; L2Cache; SystemC; TLM,Design Patterns; ESL; L2 caches; SystemC; TLM; Algorithms; Buffer storage; Buses; Computer simulation; Computer software; Embedded systems; Integration; Manufacture; Multiplexing; Logic design,,,,,,"Sangiovanni-Vincentelli, A., Quo Vadis, SLD? Reasoning about the Trends and Challenges of System Level Design; Suryaprasad, J., Shankar, R., CAD Based Design Course Using a State-of-the-art System Level Language, , Dr. Dr; SystemC - From Wikipedia, , http://en.wikipedia.org/wiki/SystemC; Virtual Prototyping, , http://www.synopsys.com/Tools/SLD/VirtualPrototyping/Pages/default.aspx; Mizuno, H., Kobayashi, H., Onoye, T., Shirakawa, I., Power Estimation at Architecture Level for Embedded Systems; Motorola MPC2605 Technical Specification Download Link, , http://www.datasheetcatalog.com/datasheets_pdf/M/P/C/2/MPC2605.shtml; Design Patterns, , http://en.wikipedia.org/wiki/Design_pattern_(computer_science)","Menon, S.; Centre for System Design and Verification, PES School of Engineering, Bangalore-560100, Karnataka, India; email: sushil.menon.1988@gmail.com",,,,"1st IEEE International Conference on Networked Embedded Systems for Enterprise Applications, NESEA 2010",25 November 2010 through 26 November 2010,Suzhou,83779,,9781424491773,,,English,"IEEE Int. Conf. Networked Embedded Syst. Enterp. Appl., NESEA",Conference Paper,Scopus,2-s2.0-79951489094,,
,4,,"Bouhours, C., Leblanc, H., Percebois, C.",Sharing bad practices in design to improve the use of patterns,2010,ACM International Conference Proceeding Series,,,22,,,,,10.1145/2493288.2493310,http://www.scopus.com/inward/record.url?eid=2-s2.0-84892939700&partnerID=40&md5=66fc347ac6e7eda1e2359fbf5ef63dba,"IRIT, University of Toulouse, France; IRIT, MACAO Team, University of Paul Sabatier, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France","Bouhours, C., IRIT, University of Toulouse, France, IRIT, MACAO Team, University of Paul Sabatier, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France; Leblanc, H., IRIT, University of Toulouse, France, IRIT, MACAO Team, University of Paul Sabatier, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France; Percebois, C., IRIT, University of Toulouse, France, IRIT, MACAO Team, University of Paul Sabatier, 118 Route de Narbonne, 31062 Toulouse Cedex 9, France","To ensure the use of good analysis and design practices and an easier maintenance of software, analysts and designers may use patterns. To help them, we propose models inspection in order to detect instantiations of""spoiled patterndifferent and models reworking through the use of the design patterns. As a design pattern allows the instantiation of the best known solution for a given problem, a""spoiled patterndifferent allows the instantiation of alternative solutions for the same problem: requirements are respected, but architecture is improvable. We have collected a set of alternative solutions and deduced the corresponding spoiled patterns. We have defined a first catalog of these improvable practices from several experiments with students. To overcome the limits imposed by this method (restricted public, limited problems and tiresome validation process), we would like to open this problematic to the expert community. Therefore, we propose a collaborative website sharing bad practices in object oriented design to improve the use of patterns.",Design patterns; Spoiled pattern,Alternative solutions; Bad practices; Collaborative website; Design Patterns; Design practice; Object oriented design; Spoiled pattern; Validation process; Computer applications; Computer programming; Design,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings of the 16th Conference on Automated Software Engineering (ASE), pp. 166-173. , D. Richardson, M. Feather, and M. Goedicke, Eds IEEE Computer Society Press; Albin-Amiot, H., Guéhéneuc, Y.-G., Meta-modeling design patterns: Application to pattern detection and code synthesis (2001) Proceedings of the 1st European Conference on Object-Oriented Programming (ECOOP) Workshop on Automating Object-Oriented Software Development Methods, , B. Tekinerdogan, P V. D. Broek, M. Saeki, P. Hruby, and G. Suny, Eds. Centre for Telematics and Information Technology, University of Twente. TR-CTIT-01-35; Baroni, A.L., Guéhéneuc, Y.-G., Albin-Amiot, H., Design patterns formalization (2003) Research Report 03/03/INFO, , Computer sciences department, Ecole des Mines de Nantes. June; Bouhours, C., (2010) Detection, Explanations and Refactoring of Design Defects: The Spoiled Patterns, , PhD thesis; Bouhours, C., Leblanc, H., Percebois, C., Bad smells in design and design patterns (2009) Journal of Object Technology, 8 (3), pp. 43-63; Brown, W.J., Malveau, R.C., Mowbray, T.J., (1998) AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, , Wiley; Dietrich, J., Elgar, C., A formal description of design patterns using owl (2005) Proceedings of the 16th Australian Software Engineering Conference 0, pp. 243-250. , IEEE Computer Society, Los Alamitos, CA, USA; Dodani, M., Patterns of anti-patterns ? (2006) Journal of Object Technology, 5 (5), pp. 29-33; Dong, J., Zhao, Y., Classification of design pattern traits (2007) Proceedings of the 19th International Conference on Software Engineering & Knowledge Engineering (SEKE), pp. 473-477; Duell, M., Goodsen, J., Rising, L., Non-software examples of software design patterns (1997) OOPSLA ' 97: Addendum to the 1997 ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications (Addendum), pp. 120-124. , ACM, New York, NY, USA; Eden, A.H., Yehudai, A., Gil, J., Precise specification and automatic application of design patterns (1997) Proceedings of the 12th International Conference on Automated Software Engineering (ASE), pp. 143-152. , IEEE Computer Society, Washington, DC, USA; El-Boussaidi, G., Mili, H., Detecting patterns of poor design solutions using constraint propagation (2008) Proceedings of the 11th International Conference on Model Driven Engineering Languages and Systems (MoDELS), 5301, pp. 189-203. , 2009. Springer-Verlag, Berlin, Heidelberg; Fagan, M., (2002) Design and Code Inspections to Reduce Errors in Program Development, pp. 575-607; Fowler, M., Beck, K., Brant, J., Opdyke, W., Roberts, D., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley Professional; France, R., Ghosh, S., Song, E., Kim, D.-K., A metamodeling approach to pattern-based model refactoring (2003) IEEE Software, 20 (5), pp. 52-58; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley, Boston, MA; Guennec, A.L., Sunyé, G., Marc Jézéquel, J., Precise modeling of design patterns (2000) Proceedings of 3rd International Conference on the Unified Modeling Language (UML), pp. 482-496. , Springer Verlag; Kampffmeyer, H., Zschaler, S., Finding the pattern you need: The design pattern intent ontology (2007) Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems (MoDELS) (2007-09-13). Lecture Notes in Computer Science Series, 4735, pp. 211-225. , 2007. Springer; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in uml (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE), pp. 252-261. , IEEE Computer Society, Los Alamitos, CA, USA; McGuinness, D.L., Van Harmelen, F., (2004) OWL Web Ontology Language Overview; Mili, H., El-Boussaidi, G., Representing and applying design patterns: What is the problem? (2005) Proceedings of the 8th International Conference on Model Driven Engineering Languages and Systems (MoDELS), pp. 186-200; Millan, T., Sabatier, L., Thi, T.T.L.E., Bazex, P., Percebois, C., An OCL extension for checking and transforming UML Models (2009) Proceedings of the 8th International Conference on Software Engineering, Parallel and Distributed Systems (SEPADS), pp. 144-150. , http://www.wseas.org/, WSEAS Press, (Confrencier invit); O'Cinnéide, M., Nixon, P., A methodology for the automated introduction of design patterns (1999) Proceedings of the 15th IEEE International Conference on Software Maintenance (ICSM), pp. 463-473. , IEEE Computer Society, Washington, DC, USA; (2006) Uml 2.0 Ocl Specification, , http://www.omg.org/spec/ocl/2.0/pdf; (2007) Mof 2.0/xmi Mapping, v2.1.1 Specification, , http://www.omg.org/spec/xmi/2.1.1/pdf","IRIT, University of ToulouseFrance",,Hillside Group;ACM Special Interest Group on Programming Languages (SIGPLAN),,"17th Conference on Pattern Languages of Programs, PLoP 2010",16 October 2010 through 18 October 2010,"Reno, NV",102146,,9781450301077,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-84892939700,,
,4,,"Bottoni, P., Guerra, E., De Lara, J.",Towards a formal notion of interaction pattern,2010,"Proceedings - 2010 IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC 2010",,,5635238,235,239,,3,10.1109/VLHCC.2010.40,http://www.scopus.com/inward/record.url?eid=2-s2.0-79551659808&partnerID=40&md5=bcd06b9619fa1ffc6534bd96cc81bde9,"Univ. La Sapienza, Rome, Italy; Univ. Carlos III, Madrid, Spain; Univ. Aut Onoma, Madrid, Spain","Bottoni, P., Univ. La Sapienza, Rome, Italy; Guerra, E., Univ. Carlos III, Madrid, Spain; De Lara, J., Univ. Aut Onoma, Madrid, Spain","While interaction patterns are becoming widespread in the field of interface design, their definitions do not enjoy a common standard yet, as is for software patterns. Moreover, patterns are developed for diverse design aspects, reflecting the complexity of the field. As a consequence, research on formalization of interaction patterns is not developed, and few attempts have been made to extend techniques developed for design pattern formalization. We show here how an extension to our recent approach to pattern formalization can be usefully employed to formalize some classes of interaction patterns, to express relations among them, and to detect conflicts. © 2010 IEEE.",,Common standards; Design Patterns; Interaction pattern; Interface designs; Software patterns; Design,,,,,,"Borchers, J., (2001) A Pattern Approach to Interaction Design, , Wiley; Bottoni, P., Guerra, E., De Lara, J., A language-independent and formal approach to pattern-based modelling with support for composition and analysis (2010) Inf. Soft. Technol., 52 (8), pp. 821-844; Calvary, G., Coutaz, J., Thevenin, D., Limbourg, Q., Bouillon, L., Vanderdonckt, J., A unifying reference framework for multi-target user interfaces (2003) Interacting with Computers, 15 (3), pp. 289-308; Ehrig, H., Ehrig, K., Habel, A., Pennemann, K.-H., Theory of constraints and application conditions: From graphs to high-level structures (2006) Fundam. Inform., 74 (1), pp. 135-166; Folmer, E., Van, G.J., Bosch, J., A framework for capturing the relationship between usability and software architecture (2003) Software Process Improvement and Practice, 8 (2), pp. 67-87. , DOI 10.1002/spip.171; Folmer, E., Van, W.M., Bosch, J., Bridging patterns: An approach to bridge gaps between SE and HCI (2006) Information and Software Technology, 48 (2), pp. 69-89. , DOI 10.1016/j.infsof.2005.02.005, PII S0950584905000273; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1994) Design Patterns. Elements of Reusable Object-Oriented Software, , Addison Wesley; Juzgado, N.J., López, M., Moreno, A.M., Segura, M.I.S., Improving software usability through architectural patterns (2003) SE-HCI, pp. 12-19. , IFIP; Mori, G., Paternò, F., Santoro, C., Design and development of multidevice user interfaces through multiple logical descriptions (2004) IEEE TSE, 30, pp. 507-520; Orejas, F., Attributed graph constraints (2008) LNCS, 5214, pp. 274-288. , ICGT'08, Springer; Pribeanu, C., Vanderdonckt, J., A transformational approach for pattern-based design of user interfaces (2008) ICAS, pp. 47-54. , IEEE Computer Society; Schürr, A., Specification of graph translators with triple graph grammars (1994) LNCS, 903, pp. 151-163. , WG, Springer; Scott, B., Neil, T., (2009) Designing Web Interfaces: Principles and Patterns for Rich Interactions, , O'Reilly; Tidwell, J., (2006) Designing Interfaces, , O'Reilly","Bottoni, P.; Univ. La Sapienza, Rome, Italy; email: bottoni@di.uniroma1.it",,"IEEE Computer Society;IEEE;Gobierno de Espana, Ministerio de Ciencia e Innovacion;Universidad Carlos III de Madrid;NSF;Microsoft Research",,"2010 IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC 2010",21 September 2010 through 25 September 2010,"Leganes, Madrid",83983,,9780769542065,,,English,"Proc. - IEEE Symp. Vis. Lang. Hum.-Cent. Comput., VL/HCC",Conference Paper,Scopus,2-s2.0-79551659808,,
,3,,"Sabané, A.",Improving system testability and testing with microarchitectures,2010,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,5645492,309,312,,,10.1109/WCRE.2010.47,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650641168&partnerID=40&md5=4730f728de8ec25c0c81f87dba96151f,"Ptidej Lab. - SOCCER Lab. - DGIGL, École Polytechnique de Montréal, QC, Canada","Sabané, A., Ptidej Lab. - SOCCER Lab. - DGIGL, École Polytechnique de Montréal, QC, Canada","Testing is essential to ensure software reliability and dependability. however, testing activities are very expensive and complex. Microarchitectures, such as design patterns and anti-patterns, widely exist in object oriented systems and are recognized as influencing many software quality attributes. Our goal is to identify their impact on system testability and analyse how they can be leveraged to reduce the testing effort while increasing the system reliability and dependability. The proposed research aims at contributing to reduce complexity and increase testing efficiency by using micro architectures. We will base our work on the rich existing tools of microarchitectures detection and code reverse-engineering. © 2010 IEEE.",Anti-patterns; Design patterns; Test case generation; Testability; Testing,Anti-patterns; Design patterns; Improving systems; Micro architectures; Object-oriented system; Software quality attributes; System reliability; Test case generation; Testability; Testing efficiency; Testing effort; Computer software selection and evaluation; Object oriented programming; Reverse engineering; Software reliability,,,,,,"Harrold, M.J., Testing: A roadmap (2000) ICSE '00: Proceedings of the Conference on the Future of Software Engineering, pp. 61-72. , New York, NY, USA: ACM; Baudry, B., Le Traon, Y., Sunyé, G., Jézéquel, J.-M., Measuring and improving design patterns testability (2003) METRICS '03: Proceedings of the 9th International Symposium on Software Metrics, p. 50. , Washington, DC, USA: IEEE Computer Society; Mouchawrab, S., Briand, L.C., Labiche, Y., A measurement framework for object-oriented software testability (2005) Inf. Softw. Technol., 47 (15), pp. 979-997; Binder, R.V., Design for testability in object-oriented systems (1994) Commun. ACM, 37 (9), pp. 87-101; Erich Gamma, R.J., Helm, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Venners, B., (2005) How to use Design Patterns a Conversation with Erich Gamma, Part I, , http://www.artima.com/lejava/articles/gammadp.htm, year publisher; Khomh, F., Gueheneuc, Y.-G., (2008) An Empirical Study of Design Patterns and Software Quality, pp. 1-19; Aversano, L., Canfora, G., Cerulo, L., Del Grosso, C., Di Penta, M., An empirical study on the evolution of design patterns (2007) ESEC-FSE '07: Proceedings of the The 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 385-394. , New York, NY, USA: ACM; Bruntink, M., Van Deursen, A., An empirical study into class testability (2006) J. Syst. Softw., 79 (9), pp. 1219-1232; Baudry, B., Traon, Y.L., Measuring design testability of a uml class diagram (2005) Inf. Softw. Technol., 47 (13), pp. 859-879","Sabané, A.; Ptidej Lab. - SOCCER Lab. - DGIGL, École Polytechnique de Montréal, QC, Canada; email: aminata.sabane@polymtl.ca",,Reengineering Forum,,"17th Working Conference on Reverse Engineering, WCRE 2010",13 October 2010 through 16 October 2010,"Beverly, MA",83137,10951350,9780769541235,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-78650641168,,
,3,,"Frees, S.",Context-driven interaction in immersive virtual environments,2010,Virtual Reality,14,4,,277,290,,5,10.1007/s10055-010-0178-2,http://www.scopus.com/inward/record.url?eid=2-s2.0-78649507639&partnerID=40&md5=315b7788999f1ccf54e191a8f2f97fa8,"Ramapo College of New Jersey, Mahwah, NJ, United States","Frees, S., Ramapo College of New Jersey, Mahwah, NJ, United States","There are many interaction tasks a user may wish to accomplish in an immersive virtual environment. A careful examination of these tasks reveals that they are often performed under different contexts. For each task and context, specialized interaction techniques can be developed. We present the context-driven interaction model: a design pattern that represents contextual information as a first-class, quantifiable component within a user interface and supports the development of context-sensitive applications by decoupling context recognition, context representation, and interaction technique development. As a primary contribution, this model provides an enumeration of important representations of contextual information gathered from across the literature and describes how these representations can effect the selection of an appropriate interaction technique. We also identify how several popular 3D interaction techniques adhere to this design pattern and describe how the pattern itself can lead to a more focused development of effective interfaces. We have constructed a formalized programming toolkit and runtime system that serves as a reference implementation of the context-driven model and a discussion is provided explaining how the toolkit can be used to implement a collection of representative 3D interaction interfaces. © Springer-Verlag London Limited 2010.","Context-sensitive interaction; Human-computer interaction; Virtual environments, 3DUI, interaction techniques; Virtual reality",3D interaction technique; 3D interactions; Context recognition; Context representation; Context-sensitive; Context-sensitive applications; Contextual information; Design Patterns; Immersive virtual environments; Interaction model; Interaction techniques; Primary contribution; Programming toolkits; Reference implementation; Runtime systems; Knowledge management; Three dimensional; User interfaces; Virtual reality; Human computer interaction,,,,,,"Albinsson, P.A., Zhai, S., High precision touch screen interaction (2003) Proceedings of SIGCHI Conference On Human Factors In Computing Systems, pp. 105-112; Beir, E.A., Snap-dragging in three dimensions (1990) Proceedings of the ACM Symposium On Interactive 3D Graphics, 24 (2), pp. 193-204; Bowman, D.A., Hodges, L.F., An evaluation of techniques for grabbing and manipulating remote objects in immersive virtual environments (1997) Proceedings of the ACM Symposium On Interactive 3D Graphics, pp. 35-38; Bowman, D.A., Koller, D., Hodges, L.F., Travel in immersive virtual environments: An evaluation of viewpoint motion control techniques (1997) Proceedings of the Virtual Reality Annual International Symposium, pp. 45-52; Bowman, D.A., Johnson, D., Hodges, L.F., (1999) Testbed Evaluation of V.E. Interaction Techniques, pp. 26-33; Bowman, D., Wingrave, C., Campbell, J., Ly, V., Using pinch gloves for both natural and abstract interaction techniques in virtual environments (2001) Proc HCI Int, pp. 629-633; Bowman, D., Kruijff, E., Laviola, J., Poupyrev, I., An introduction to 3D user interface design (2001) Presence Teleoper Virtual Environ, 10 (1), pp. 96-108; Bowman, D., Badillo, B., Manek, D., Evaluating the need for display-specific and device-specific 3D interaction techniques (2007) Proceedings of Virtual Reality International Conference, 4563, pp. 195-204. , (in Lecture notes in computer science); Bukowski, R.W., Sequin, C.H., Object associations: A simple and practical approach to virtual 3D manipulation (1995) Proceedings of the ACM Symposium On Interactive 3D Graphics, pp. 131-138; http://give.ramapo.edu/lab.html, CDI Toolkit Web SiteChen, J., Bowman, D., Evaluation of the effectiveness of cloning techniques for architectural virtual environment (2006) Proceedings of IEEE Virtual Reality, pp. 103-110. , Alexandria, VA; Feiner, S., Macintyre, B., Haupt, M., Solomon, E., Windows on the world: 2D windows for 3D augmented reality (1993) Proceedings of the ACM Symposium On User Interface Software and Technology, pp. 145-155; Forsberg, A., Herndon, K., Zelesnik, R., Aperture based selection for immersive virtual environments (1996) Proceedings of the ACM Symposium On User Interface Software and Technology, pp. 95-96; Frees, S., (2006) Intent Driven Interaction In Immersive Virtual Environments, p. 266. , (Doctoral Dissertation). Lehigh University, Department of Computer Science, Available from Dissertations and Theses database. (UMI/AAT No. 3215837); Frees, S., Kessler, G.D., Kay, E., PRISM interaction for enhancing control in immersive virtual environments (2007) ACM Trans Comput Hum Interact, 14 (1); Greenhalgh, C., Benford, S., MASSIVE: A collaborative virtual environment for teleconferencing (1995) ACM Trans Comput Hum Interact, 2 (3), pp. 239-261; Grosjean, J., Coquillart, S., Command & control cube: A shortcut paradigm for virtual environments (2001) Immersive Projection Technology and Virtual Environments 2001 Proceedings, pp. 1-12; Kessler, G.D., A framework for interactors in immersive virtual environments (1999) Proc IEEE Virtual Real, pp. 190-197; Kessler, G.D., Bowman, D.A., Hodges, L.F., The simple virtual environment library, and extensible framework for building VE applications (2000) Presence Teleoper Virtual Environ, 9 (2), pp. 187-208; Koller, D., Mine, M., Hudson, S., Head-tracked orbital viewing: An interaction technique for immersive virtual environments (1996) Proceedings of the ACM Symposium On User Interface Software and Technology, pp. 81-82; Mapes, D.P., Moshell, J.M., A two-handed interface for object manipulation in virtual environments (1995) Presence: Teleoper Virtual Environ, 4 (4), pp. 403-416; (1996) Context and Consciousness-activity Theory and Human Computer Interaction, , Nardi BA (ed), MIT Press, Cambridge; Pierce, J., Pausch, R., (2004) Navigation With Place Representations and Visible Landmarks, pp. 173-180; Pierce, J., Forsberg, A., Conway, M., Hong, S., Zeleznik, R., Mine, M., Image plane interaction techniques in 3D immersive environments (1997) Proceedings of the ACM Symposium On Interactive 3D Graphics, pp. 39-40; Poupyrev, I., Billinghurst, M., Weghorst, S., Ichikawa, T., The go-go interaction technique: Non-linear mapping for direct manipulation in VR (1996) Proceedings of the ACM Symposium On User Interface Software and Technology, pp. 79-80; Poupyrev, I., Weghorst, S., Billinghurst, M., Ichikawa, T., A framework and testbed for studying manipulation techniques for immersive VR (1997) Proceedings of the ACM Symposium On Virtual Reality Software and Technology, pp. 21-28; Poupyrev, I., Weghorst, S., Billinghurst, M., Ichikawa, T., Egocentric object manipulation in virtual environments: Empirical evaluation of interaction techniques (1998) Comput Graph Forum, 17 (3), pp. 41-52; Ray, A., Bowman, D., Towards a system for reusable 3D interaction techniques (2007) Proceedings of the ACM Symposium On Virtual Reality Software and Technology, pp. 187-190; Ruddle, R.A., Jones, D.M., Movement in cluttered virtual environments (2001) Presence: Teleoper Virtual Environ, 10, pp. 511-524; Stoakley, R., Conway, M., Paush, R., Virtual reality on a WIM: Interactive worlds in miniature (1995) Proceedings of the ACM Conference On Human Factors In Computing Systems, pp. 265-272; Stuerzlinger, W., Smith, G., Efficient manipulation of object groups in virtual environments (2002) Proc IEEE Virtual Real, pp. 251-258; Tan, D.S., Robertson, G.G., Czerwinski, M., Exploring 3D navigation: Combining speed-coupled flying with orbiting (2001) Proceedings of the ACM Conference On Human Factors In Computing Systems, pp. 418-424; Tanriverdi, V., Jacob, R.J., VRID: A design model and methodology for developing virtual reality interfaces (2001) Proceedings of the ACM Symposium On Virtual Reality Software and Technology, pp. 175-182; Usoh, M., Arthur, K., Whitton, M.C., Bastos, R., Steed, A., Slater, M., Walking[walking-in-place[flying, in Virtual Environments (1999) Proceedings of the 26th Annual Conference On Computer Graphics and Interactive Techniques, pp. 259-264; Ware, C., Arsenault, R., Frames of reference in virtual object rotation (2004) Proceedings of the 1st Symposium On Applied Perception In Graphics and Visualization, , Los Angeles, California, 7-8 Aug 2004; Wesche, G., The toolfinger: Supporting complex direct manipulation in virtual environments (2003) ACM International Conference Proceedings Series-proceedings of the Workshop On Virtual Environments, pp. 39-45; Wingrave, C., Bowman, D., Tiered developer-centric representations for 3D interfaces: Concept-oriented design in chasm (2008) IEEE Virtual Real","Frees, S.; Ramapo College of New Jersey, Mahwah, NJ, United States; email: sfrees@ramapo.edu",,,,,,,,13594338,,,,English,Virtual Reality,Article,Scopus,2-s2.0-78649507639,,
,1,,"Hoekstra, R.",Representing social reality in OWL 2?,2010,CEUR Workshop Proceedings,614,,,,,10,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84889033037&partnerID=40&md5=9e1dfb86e0cf39662450381d52acb99c,"Department of Computer Science, Faculty of Exact Sciences, VU University, Amsterdam, Netherlands; Leibniz Center for Law, Faculty of Law, University of Amsterdam, Netherlands","Hoekstra, R., Department of Computer Science, Faculty of Exact Sciences, VU University, Amsterdam, Netherlands, Leibniz Center for Law, Faculty of Law, University of Amsterdam, Netherlands","This paper introduces a design pattern that allows for the OWL 2 DL representation of concepts central to social reality: Roles. The work presented here is motivated by experiences in the development of the LKIF Core ontology of basic legal concepts [10,8]. This paper applies modelling steps identified in earlier work for the representation of transactions [9] to the domain of roles. This is done by building on Searle's theory of social reality [14]. We use the new features of OWL 2 to approximate a reified relation, and show how the approach of [9] can be reused to define a pattern for capturing roles, intentional concepts and n-ary relations [13].",,Design Patterns; Legal concepts; Social reality; Birds,,,,,,"Dennett, D.C., (1987) The Intentional Stance, , MIT-Press; Motik, B., OWL 2 web ontology language: Structural specification and functional-style syntax (2009) Technical Report W3C; Ghilardi, S., Lutz, C., Wolter, F., Did I damage my ontology? A case for conservative extensions in description logics (2006) KR, pp. 187-197. , P. Doherty, J. Mylopoulos, and C.A. Welty, editors, AAAI Press; Grossi, D., (2007) Desigining Invisible Hancuffs, , Formal Investigations in Institu-tions and Organizations for Multi-agent Systems. SIKS dissertation series, Utrecht University, 2007-16; Guarino, N., Welty, C.A., An overview of ontoclean (2004) Handbook on Ontologies, , S. Staab and R. Studer, editors, chapter 8. Springer Verlag; Hayes, P., RDF semantics (2004) Recommendation W3C, , 10 February; Henriksson, J., Pradel, M., Zschaler, S., Pan, J.Z., Ontology design and reuse with conceptual roles (2008) Proceedings of RR 2008, pp. 104-118. , D. Calvanese and G. Lausen, editors; Hoekstra, R., (2009) Ontology Representation - Design Patterns and Ontologies That Make Sense, , volume 197 of Frontiers of Artificial Intelligence and Applications. IOS Press, Amsterdam, June; Hoekstra, R., Breuker, J., Polishing diamonds in OWL 2 (2008) Proceedings of EKAW 2008, , Aldo Gangemi and Jerome Euzenat, editors, October; Hoekstra, R., Breuker, J., Di Bello, M., Boer, A., LKIF core: Principled ontology development for the legal domain (2008) Law, Ontologies and the Semantic Web, , IOS Press; Klarman, S., Hoekstra, R., Bron, M., Versions and applicability of concept de-nitions in legal ontologies (2008) Proceedings of OWLED 2008 DC, , Kendall Clark and Peter F. Patel- Schneider, editors, Washington, DC (metro), April; Loebe, F., An analysis of roles (2003) Technical Report 6 Research Group Ontologies in Medicine, , University of Leipzig, Onto-Med Report; Noy, N., Rector, A., (2006) Defining N-ary Relations on the Semantic Web, , http://www.w3.org/TR/swbp-n-aryRelations/, Working group note, April; Searle, J.R., (1995) The Construction of Social Reality, , New York; Steimann, F., On the representation of roles in object-oriented and concep-tual modelling (2000) Data and Knowledge Engineering, 35 (1), pp. 83-106. , October; Valente, A., (1995) Legal Knowledge Engineering: A Modelling Approach, , PhD thesis, University of Amsterdam, Amsterdam; Van De Ven, S., Hoekstra, R., Breuker, J., Wortel, L., El-Ali, A., Judging amy: Automated legal assessment using OWL 2 (2008) Proceedings of OWLED 2008 EU, , October","Department of Computer Science, Faculty of Exact Sciences, VU University, Amsterdam, Netherlands",,,,"7th International Workshop on OWL: Experiences and Directions, OWLED 2010",21 June 2010 through 22 June 2010,"San Francisco, CA",101287,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84889033037,,
,3,,"Arcelli, F., Zanoni, M., Porrini, R., Vivanti, M.",A model proposal for program comprehension,2010,DMS 2010 - Proceedings of the 16th International Conference on Distributed Multimedia Systems,,,,23,28,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952401730&partnerID=40&md5=80b8c6b900cb0e3f226b2c4e91d49d94,"Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy","Arcelli, F., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy; Zanoni, M., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy; Porrini, R., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy; Vivanti, M., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy","One of the principal task in the context of reverse engineering is related to program comprehension activity, that can be performed through different techniques, tools and strategies. To better understand and exploit the knowledge necessary to comprehend an existing system different models and metamodels are necessary to represent the information extracted at different levels of abstraction. In this paper we describe the model we have defined in our Marple (Metrics and Architectures Reconstruction PLug-in for Eclipse) project, whose main objectives are related to design pattern detection and to software architecture reconstruction of an existing system to support program comprehension. We introduce the architecture of the model we have proposed outlining its extensibility features and we describe the implementation of the model through the Eclipse Modeling Framework (EMF). We are interested in using this model as the only data repository for any step of elaboration on the system.",,Architecture reconstruction; Data repositories; Design Patterns; Eclipse modeling framework; Existing systems; Levels of abstraction; Models and metamodels; Plug-ins; Program comprehension; Computer programming; Diamonds; Multimedia systems; Reverse engineering; Software architecture,,,,,,"Eclipse Modeling Framework, , http://www.eclipse.org/emf/, Web site; Arcelli, F., Masiero, S., Raibulet, C., Tisato, F., A comparison of reverse engineering tools based on design pattern decomposition (2005) Proceedings of the Australian Software Engineering Conference, ASWEC, 2005, pp. 262-269. , DOI 10.1109/ASWEC.2005.5, 1402021, Proceedings - 2005 Australian Software Engineering Conference ASWEC 2005; Arcelli, F., Tosi, C., Zanoni, M., A benchmark proposal for design pattern detection (2008) FAMOOSr 2008: Proceedings of 2nd Workshop on FAMIX and Moose in Reengineering; Arcelli, F., Tosi, C., Zanoni, M., Maggioni, S., The marple project - A tool for design pattern detection and software architecture reconstruction (2008) Proceedings of the WASDeTT Workshop, Co-located Event with ECOOP 2008 Conference, , Cyprus; Arcelli, F., Viscusi, G., Zanoni, M., Unifying software and data reverse engineering (2010) Proceedings of ICSOFT 2010, , Athens, July; Chikofsky, E.J., J.H.C. II, Reverse engineering and design recovery: A taxonomy (1990) IEEE Software, 7 (1), pp. 13-17; Dean, T.R., Malton, A.J., Holt, R.C., Union schemas as a basis for a C++ extractor (2001) Proceedings of the EighthWorking Conference on Reverse Engineering, , www.cppx.com, Stuttgart, Germany, October, IEEE Computer Society; Demeyer, S., Tichelaar, E., Steyaert, P., Famix 2.0 - The famoos information exchange model (1999) Technical Report, University of Berne; Explorers, L., Codelogic, , http://www.logicexplorers.com/index.html, Web site; Ferenc, R., Beszedes, A., Tarkiainen, M., Gyimothy, T., Columbus - Reverse engineering tool and schema for C++ (2002) Conference on Software Maintenance, pp. 172-181; (2004) Sa4j: Structural Analysis for Java, , http://www.alphaworks.ibm.com/tech/sa4j, Web site; Kraft, N.A., Malloy, B.A., Power, J.F., An infrastructure to support interoperability in reverse engineering (2007) Information and Software Technology, 49 (3), pp. 292-307. , DOI 10.1016/j.infsof.2006.10.014, PII S0950584906001868; Lanza, M., Ducasse, S., Gall, H., Pinzger, M., Codecrawler: An information visualization tool for program comprehension (2005) ICSE '05: Proceedings of the 27th International Conference on Software Engineering, pp. 672-673. , New York, NY, USA, ACM; Lethbridge, T.C., Tichelaar, S., Ploedereder, E., The Dagstuhl Middle Metamodel: A schema for reverse engineering (2004) Electronic Notes in Theoretical Computer Science, 94, pp. 7-18. , DOI 10.1016/j.entcs.2004.01.008, PII S1571066104050029, Proceedings of the International Workshop on Meta-Models and Schemes for Reverse Engineering (ateM 2003); Müller, H.A., Jahnke, J.H., Smith, D.B., Storey, M.-A., Tilley, S.R., Wong, K., Reverse engineering: A roadmap (2000) ICSE '00: Proceedings of the Conference on the Future of Software Engineering, pp. 47-60. , New York, NY, USA, ACM; Newcomb, P., Architecture-driven modernization (adm) (2005) WCRE '05: IEEE Proceedings of the 12th Working Conference on Reverse Engineering, p. 237. , Washington, DC, USA; O'Brien, L., Smith, D., Lewis, G., Supporting migration to services using software architecture reconstruction (2005) Proceedings - 13th IEEE International Workshop on Software Technology and Engineering Practice, STEP 2005, 2005, pp. 81-91. , DOI 10.1109/STEP.2005.29, 1691635, Proceedings - 13th IEEE International Workshop on Software Technology and Engineering Practice, STEP 2005; Zaidman, A., Hamou-Lhadj, A., Greevy, O., Röthlisberger, D., Workshop on program comprehension through dynamic analysis (pcoda'08) (2008) Working Conference on Reverse Engineering, pp. 345-346. , volume 0, Antwerp, Belgium, IEEE Computer Society","Arcelli, F.; Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano Bicocca, Viale Sarca, 336, 20126 Milano, Italy; email: arcelli@disco.unimib.it",,Knowledge Systems Institute Graduate School,,"16th International Conference on Distributed Multimedia Systems, DMS 2010",14 October 2010 through 16 October 2010,"Oak Brook, IL",84043,,1891706284,9781891706288,,,English,DMS - Proc. Int. Conf. Distrib. Multimedia Syst.,Conference Paper,Scopus,2-s2.0-79952401730,
,3,,"Sasai, K., Tanji, N., Takahashi, Y., Kitagata, G., Kinoshita, T.",An architecture of extended network management system: Autonomous cooperation between knowledge resource and network equipments,2010,"Proceedings - 9th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2010",,,5590989,617,622,,1,10.1109/ICIS.2010.107,http://www.scopus.com/inward/record.url?eid=2-s2.0-78649281021&partnerID=40&md5=c5d5c8a12ecc74e4e6c3435452ad5aad,"Research Institute of Electrical Communication, Tohoku University, Japan; Graduate School of Information Sciences, Tohoku University, Japan","Sasai, K., Research Institute of Electrical Communication, Tohoku University, Japan; Tanji, N., Graduate School of Information Sciences, Tohoku University, Japan; Takahashi, Y., Graduate School of Information Sciences, Tohoku University, Japan; Kitagata, G., Research Institute of Electrical Communication, Tohoku University, Japan; Kinoshita, T., Research Institute of Electrical Communication, Tohoku University, Japan","To reduce the work load of network administrators, e.g., fault detection/recovery, performance analysis and security maintenance etc., knowledge-based intelligent support system for network administrator based on active information resource (AIR-NMS) have been proposed. In this paper, we describe some design pattern and some implemented examples of activated information resource (AIR) on network administration. A design pattern consists of the classification policy of information resources such as state of network equipments and representation of information utilization knowledge such as expertise and heuristics of administrators. Based on these AIRs, we present a prototype architecture of cooperation among AIRs and integration of functions. The architecture realize the flexible/scalable fault recovery support processing in form of parallel distributed procedure. © 2010 IEEE.",Active information resource; Knowledge-based approach; Network management knowledge; Network management support system; Network state information,Autonomous cooperation; Design Patterns; Extended networks; Fault recovery; Information resource; Information utilization; Intelligent support; Knowledge resource; Knowledge-based approach; Network Administration; Network administrator; Network equipment; Network management support system; Network state information; Performance analysis; Prototype architecture; Security maintenance; Work loads; Classification (of information); Information science; Knowledge based systems; Knowledge representation; Network architecture; Recovery; Security of data; Network management,,,,,,"Consens, M., Hasan, M., Supporting network management through declaratively specified data visualizations (1993) IEEE/IFIP 3rd International Symposium on Integrated Network Management, pp. 725-738; Martin-Flatin, J.P., Znaty, S., Hubaux, J.P., A survey of distributed enterprise network and systems management paradigms (1999) Network and Systems Management, 7 (1), pp. 9-26; Stephan, R., Ray, P., Paramesh, N., Network management platform based on mobile agent (2003) International Journal of Network Management, 14, pp. 59-73; Konno, S., Iwaya, Y., Abe, T., Kinoshita, T., Design of Network Management Support System based on Active Information Resource (2004) Proc. 18th Int. Conf. Advanced Information Networking and Applications (AINA 2004), 1, pp. 102-106. , IEEE, Los Alamitos; Konno, S., Sameera, A., Iwaya, Y., Kinoshita, T., Effectiveness of Autonomous Network Monitoring Based on Intelligent-Agent-Mediated Status Information (2007) LNCS (LNAI), 4570, pp. 1078-1087. , H. G. Okuno, M. Ali (eds.) IEA/AIE 2007. Springer, Heidelberg; Li, B., Kinoshita, T., Active Support for Using Academic Information Resource in Distributed Environment (2007) Int. J. Computer Science and Network Security, 7 (6), pp. 69-73; DASH - Distributed Agent System Based on Hybrid Architecture, , http://www.agenttown.com/dash/, DASH GROUP. [Online].Available","Sasai, K.; Research Institute of Electrical Communication, Tohoku UniversityJapan",,IEEE Computer Society;Int. Assoc. Comput. Inf. Sci. (ACIS);Yamagata University,,"9th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2010",18 August 2010 through 20 August 2010,Yamagata,82351,,9780769541471,,,English,"Proc. - IEEE/ACIS Int. Conf. Comput. Inf. Sci., ICIS",Conference Paper,Scopus,2-s2.0-78649281021,,
,4,,"Schanz, T., Izurieta, C.",Object oriented design pattern decay: A taxonomy,2010,ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement,,,1852796,,,,,10.1145/1852786.1852796,http://www.scopus.com/inward/record.url?eid=2-s2.0-78149248762&partnerID=40&md5=2861828279f97a2e6f1380be1317c8f4,"Montana State University, Department of Computer Science, Bozeman, MT 59717, United States","Schanz, T., Montana State University, Department of Computer Science, Bozeman, MT 59717, United States; Izurieta, C., Montana State University, Department of Computer Science, Bozeman, MT 59717, United States","Software designs decay over time. While most studies focus on decay at the system level, this research studies design decay on well understood micro architectures, design patterns. Formal definitions of design patterns provide a homogeneous foundation that can be used to measure deviations as pattern realizations evolve. Empirical studies have shown modular grime to be a significant contributor to design pattern decay. Modular grime is observed when increases in the coupling of design pattern classes occur in ways unintended by the original designer. Further research is necessary to formally categorize distinct forms of modular grime. We identify three properties of coupling relationships that are used to classify subsets of modular grime. A taxonomy is presented which uses these properties to group modular grime into six disjoint categories. Illustrative examples of grime build-up are provided to demonstrate the taxonomy. A pilot study is used to validate the taxonomy and provide initial empirical evidence of the proposed classification. © 2010 ACM.",object oriented design patterns; software architectures; software decay; software evolution,Design Patterns; Empirical evidence; Empirical studies; Formal definition; Illustrative examples; Micro architectures; Object oriented design; Pilot studies; Research studies; software decay; Software Evolution; System levels; Decay (organic); Design; Object oriented programming; Software design; Taxonomies; Software architecture,,,,,,"Arisholm, E., Sjoberg, D.I.K., Towards a Framework for Empirical Assessment of Changeability Decay (2000) J. Syst. Software., 53 (1), pp. 3-14. , (July. 2000); Basili, V.R., Briand, L.C., Melo, W.L., A Validation of Object-Oriented Design Metrics as Quality Indicators (1996) IEEE. Trans. Software. Eng., 22 (10), pp. 751-761. , (October 1996); Bieman, J., Wang, H., (2004) Evaluating the Strength and Impact of Design Pattern Coupling, , Working paper; Briand, L.C., Daly, J.W., Wust, J.K., A Unified Framework for Coupling Measurement in Object-Oriented Systems IEEE (1999) Trans. Software. Eng., 25 (1), pp. 91-121. , (January 1999); Dae-Kyoo, K., Shen, W., Evaluating Pattern Conformance of UML Models: A Divide and Conquer Approach and Case Studies (2008) Software Quality Control., 16 (3), pp. 329-359. , (September 2008); Eick, S.G., Does Code Decay? Assessing the Evidence from Change Management.Data (2001) IEEE. Trans. Software. Eng., 27 (1), pp. 1-12. , (January 2001); France, R.B., Kim, D.K., Song, E., Ghosh, S., A UML-Based Pattern Specification. Technique (2004) IEEE. Trans. Software. Eng., 30 (3), pp. 193-206. , (March 2004); Gueheneuc, Y.-G., Antoniol, G., DeMIMA: A Multi-Layered Framework for Design Pattern Identification (2008) IEEE. Trans. Software. Eng., 34 (5), pp. 667-684. , (September 2008); Izurieta, C., Bieman, J.M., Testing Consequences of Grime Buildup in Object Oriented Design Patterns (2008) First ACM-IEEE International Conference on Software Testing, Verification and Validation (Lillehamer, Norway, April 9-11, 2008). ICST '08, pp. 449-451; Izurieta, C., Bieman, J.M., How Software Designs Decay: A Pilot Study of Pattern Evolution (2007) First ACMIEEE Symposium on Empirical Software Engineering and Measurement (Madrid, Spain, Sept. 20 - 21, 2007).ESEM '07, pp. 171-179; Izurieta, C., (2009) Decay and Grime Buildup in Evolving Object Oriented Design Patterns, , Ph.D. Dissertation, Colorado State University; Martin, R., OO Design Quality Metrics-An Analysis of Dependencies (1994) Proc. Workshop Pragmatic and Theoretical Directions in Object-Oriented Software Metrics, OOPSLA ' 94; Myers, G.J., (1978) Composite/Structural Design, , Van Nostrand Reinhold, New York; Ohlsson, M., Mayrhauser, A., McGuire, B., Wohlin, C., Code Decay Analysis of Legacy Software through Successive Releases (1999) Proceedings of the IEEE Aerospace Conf (Aspen, CO., March 6-13, 1999), pp. 69-81; Wilcoxon, F., Individual Comparisons by Ranking Methods (1945) Biometrics, 1, pp. 80-83; Bittorrent Protocol, , http://www.bittorrent.org/beps/bep_0003.html; Browse-by-Query, , http://browsebyquery.sourceforge.net/; Design Pattern Finder, , http://www.codeplex.com/DesignPatternFinder; Eclipse Integrated Development Environment, , http://www.eclipse.org/; SemmleCode, , http://semmle.com/semmlecode; http://www.vuze.com/","Schanz, T.; Montana State University, Department of Computer Science, Bozeman, MT 59717, United States; email: travis.schanz@cs.montana.edu",,ACM Special Interest Group on Software Engineering (SIGSOFT);IEEE CS,,"4th International Symposium on Empirical Software Engineering and Measurement, ESEM 2010",16 September 2010 through 17 September 2010,Bolzano-Bozen,82230,,9781450300391,,,English,ESEM - Proce. ACM-IEEE Int. Symp. Empir. Softw. Eng. Measur.,Conference Paper,Scopus,2-s2.0-78149248762,,
,3,,"Dahotre, A., Zhang, Y., Scaffidi, C.",A qualitative study of animation programming in the wild,2010,ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement,,,1852825,,,,,10.1145/1852786.1852825,http://www.scopus.com/inward/record.url?eid=2-s2.0-78149272660&partnerID=40&md5=1ed916fc37e21beeb9053e41f5e83292,"Oregon State University, 1148 Kelley Engineering Center, Corvallis, OR 97330, United States","Dahotre, A., Oregon State University, 1148 Kelley Engineering Center, Corvallis, OR 97330, United States; Zhang, Y., Oregon State University, 1148 Kelley Engineering Center, Corvallis, OR 97330, United States; Scaffidi, C., Oregon State University, 1148 Kelley Engineering Center, Corvallis, OR 97330, United States","Scratch is the latest iteration in a series of animation tools aimed at teaching programming skills. Scratch, in particular, aims not only to teach technical skills, but also skills related to collaboration and code reuse. In order to assess the strengths and weaknesses of Scratch relative to these goals, we have performed an empirical field study of Scratch animations and associated user comments from the online animation repository. Overall, we found that Scratch represents substantial progress toward its designers' goals, though we also identified several opportunities for significant improvement. In particular, many Scratch programs revealed significant technical mastery of the programming environment by programmers, and some animations even demonstrated design patterns. On the other hand, while the Scratch repository has successfully served as a supportive environment for generating constructive feedback among users, we did not find any occasions within our sample where this interaction led to online collaboration. In addition, we found low levels of code reuse, in terms of both frequency and success. Based on these results, we identify implications for improving the design of animation tools, for using these tools to teach programming skills, and for fostering successful collaboration and code reuse among end-user programmers. © 2010 ACM.",animation; collaboration; end-user programming; repositories,Animation tools; Code reuse; collaboration; Constructive feedback; Design Patterns; End user programmers; end-user programming; Field studies; Low level; Online collaboration; Programming environment; Programming skills; Qualitative study; repositories; Teaching programming; Technical skills; Animation; Design; Software engineering; Computer programming,,,,,,"Bogart, C., End-user programming in the wild: A field study of CoScripter scripts (2008) 2008 Symp. on Visual Lang. and Human-Centric Computing, pp. 39-46; Cooper, S., Dann, W., Pausch, R., Developing algorithmic thinking with Alice (2000) Information Sys. Educators Conf., pp. 506-539; Cottrell, R., Walker, R., Denzinger, Semi-automating small-scale source code reuse via structural correspondence (2008) 16th Intl. Symp. on Foundations of Software Engineering, pp. 214-225; Cypher, A., Smith, D., Tessler, L., Novice programming comes of age (2001) Your Wish Is My Command, pp. 7-20. , Morgan Kaufmann; Fisher, M., Rothermel, G., The EUSES spreadsheet corpus: A shared resource for supporting experimentation with spreadsheet dependability mechanisms (2005) 1 st Workshop on End-User Software Engineering, pp. 47-51; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Professional Computing Series; Gestwicki, P., Computer games as motivation for design patterns (2007) 38th SIGCSE Technical Symp. on Comp. Sci. Education, pp. 233-237; Glaser, B., Strauss, A., (1967) The Discovery of Grounded Theory: Strategies for Qualitative Research, , Aldine Publishers; Holmes, R., Walker, R., Supporting the investigation and planning of pragmatic reuse tasks (2007) 29 th Intl. Conf. on Software Engineering, pp. 447-457; Kafai, Y., Mentoring partnerships in a community technology center: A constructionist approach for fostering equitable service learning (2008) Mentoring and Tutoring: Partnership in Learning, 16 (2), pp. 191-205; Lanubile, F., Visaggio, G., Extracting reusable functions by program slicing (1997) Transactions on Software Engineering, 23 (4), pp. 246-259; Maloney, J., Programming by choice: Urban youth learning programming with Scratch (2008) 39 th SIGCSE Technical Symp. on Comp. Sci. Education, pp. 367-371; Monroy-Hernández, A., Resnick, M., Empowering kids to create and share programmable media (2008) Interactions, 15 (2), pp. 50-53. , Mar-Apr 2008; Moskal, B., Lurie, D., Cooper, S., Evaluating the effectiveness of a new instructional approach (2004) ACM SIG-CSE Bulletin, 36 (1), pp. 75-79. , Mar 2004; Pane, J., (2002) A Programming System for Children That Is Designed for Usability, , PhD Dissertation, School of Computer Science, Carnegie Mellon Univ; Panko, R., What we know about spreadsheet errors (1998) J. End User Computing, 10 (2), pp. 15-21; Papert, S., (1980) Mindstorms: Children, Computers, and Powerful Ideas, , Basic Books, Inc; Repenning, A., (1993) Agentsheets: A Tool for Building Domain-oriented Dynamic, Visual Environments, , PhD Dissertation, Dept. of Computer Science, Univ. Colorado-Boulder; Resnick, M., Scratch: Programming for all (2009) Communications of the ACM, 52 (11), pp. 60-67. , Nov 2009; http://scratch.mit.eduScaffidi, C., Predicting reuse of end-user web macro scripts (2009) 2009 Symp. on Visual Lang. and Human-Centric Computing, pp. 93-100","Dahotre, A.; Oregon State University, 1148 Kelley Engineering Center, Corvallis, OR 97330, United States; email: dahotrea@onid.orst.edu",,ACM Special Interest Group on Software Engineering (SIGSOFT);IEEE CS,,"4th International Symposium on Empirical Software Engineering and Measurement, ESEM 2010",16 September 2010 through 17 September 2010,Bolzano-Bozen,82230,,9781450300391,,,English,ESEM - Proce. ACM-IEEE Int. Symp. Empir. Softw. Eng. Measur.,Conference Paper,Scopus,2-s2.0-78149272660,,
,v,,"Pande, A., Gupta, M., Tripathi, A.K.",Design pattern mining for GIS application using graph matching techniques,2010,"Proceedings - 2010 3rd IEEE International Conference on Computer Science and Information Technology, ICCSIT 2010",3,,5564518,477,482,,,10.1109/ICCSIT.2010.5564518,http://www.scopus.com/inward/record.url?eid=2-s2.0-77958517422&partnerID=40&md5=c173fda699e7a73af3ca4cc1ec4609c8,"DST- Centre for Interdisciplinary Mathematical Sciences, Banaras Hindu University, Varanasi-221005, India; Department of Computer Science, DST - Centre for Interdisciplinary Mathematical Sciences, Banaras Hindu University, Varanasi-221005, India; Department of Computer Engineering, Institute of Technology, Banaras Hindu University, Varanasi-221005, India","Pande, A., DST- Centre for Interdisciplinary Mathematical Sciences, Banaras Hindu University, Varanasi-221005, India; Gupta, M., Department of Computer Science, DST - Centre for Interdisciplinary Mathematical Sciences, Banaras Hindu University, Varanasi-221005, India; Tripathi, A.K., Department of Computer Engineering, Institute of Technology, Banaras Hindu University, Varanasi-221005, India","Design Pattern Detection is a part of many solutions to Software Engineering difficulties. It is a part of reengineering process and thus gives important information to the designer. Design Pattern existence improve the program understanding and software maintenance. With the help of these patterns specific design problem can be solved and object oriented design become more flexible and reusable. Hence a reliable design pattern mining is required. A GIS is an information system designed to work with data referenced by spatial / geographical coordinates. Here we are detecting design patterns so that it can be used as a conceptual tool to cope with recurrent problems appearing in the GIS domain. In this way, GIS applications can evolve smoothly, because maintenance is achieved by focusing on different concerns at different times. © 2010 IEEE.",Design pattern; Graph distance; Matrix; Normalized crossed correlation; Subgraph isomorphism; Template matching; UML,Design Patterns; Graph distances; matrix; Normalized crossed correlation; Subgraph isomorphism; UML; Computer software maintenance; Computer software reusability; Information technology; Set theory; Software engineering; Template matching; Design,,,,,,"Gamma, E., Helm, R., Johnson, R., Ylissides, J., (1995) Design Patterns Elements of Reusable Object-oriented Software, , Addison-Wesley; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transaction on Software Engineering, 32 (11); Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching (2008) The Proceedings of the 23rd Annual ACM, Symposium on Applied Computing (SAC), pp. 765-769. , Ceara, Brazil, March; Wenzel, Kelter, U., Model-driven design pattern detection using difference calculation (2006) Proc. of the 1st International Workshop on Pattern Detection for Reverse Engineering (DPD4RE), , Benevento, Italy, October; Messmer, B.T., Bunke, H., Subgraph isomorphism detection in polynomial time on preprocessed model graphs (1995) Second Asian Conference on Computer Vision, pp. 151-155; Tsai, D.-M., Lin, C.-T., Fast normalized cross correlation for defect detection (2003) Pattern Recognition Letters, 24, pp. 2625-2631; Valiente, G., (2002) Algorithms on Trees and Graphs, p. 367; Bharat, K., Henzinger, M.R., Improved algorithms for topic distillation in a hyperlinked environment (1998) Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval; Brown, K., Design reverse-engineering and automated design pattern detection in Smalltalk (1996) Technical Report TR-96-07, Dept. of Computer Science, , North Carolina State Univ; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) J. Systems and Software, 59 (2), pp. 181-196; Wenzel, S., Kelter, U., Model-driven design pattern detection using difference calculation (2006) Proc. of the 1st International Workshop on Pattern Detection for Reverse Engineering (DPD4RE), , Benevento, Italy, October; Pagel Kosters, B.U., Six, H.W., Object-oriented requirements engineering for GIS applications (1995) Proc. of the ACM 3rd ACM International Workshop on Advances in Geographic Information Systems, ACMGIS' 95, pp. 61-68. , Baltimore, Maryland, USA; Casanova Medeiros, M.A., Camara, G., The Domus project. Building an OODB GIS for environmentalcontrol (1994) Proc. of IGIS'94, International Workshop on Advanced Research in GIS, 884, pp. 45-54. , Springer Verlag LNCS; Harder, T., Reuter, A., Architecture of database systems for non-standard applications, (in German) (1988) Database Systems in Office, Engineering, and Scientific Environment, 94. , A. Blaser and P. Pistor, editors, Springer Verlag, New York, NY, March 1985. Lecture Notes in Computer Science; Frank, A., Requirements for a database management system for a GIS (1988) Photogrammetric Engineering & Remote Sensing, 54 (11). , November; Bunke, H., Jiang, X., Kandel, A., On the minimum common supergraph of two graphs (2000) Computing, 65 (1), pp. 13-25; (2005) UM Learning, , Graph Matching - Filtering Databases of Graphs Using Machine Learning Techniques-thesis","Pande, A.; DST- Centre for Interdisciplinary Mathematical Sciences, Banaras Hindu University, Varanasi-221005, India; email: pandeakshara@gmail.com",,,,"2010 3rd IEEE International Conference on Computer Science and Information Technology, ICCSIT 2010",9 July 2010 through 11 July 2010,Chengdu,81988,,9781424455386,,,English,"Proc. - IEEE Int. Conf. Comput. Sci. Inf. Technol., ICCSIT",Conference Paper,Scopus,2-s2.0-77958517422,,
,??,,"Jebelean, C., Chirilǎ, C.-B., Creţu, V.",A logic based approach to locate composite refactoring opportunities in object-oriented code,2010,"2010 IEEE International Conference on Automation, Quality and Testing, Robotics, AQTR 2010 - Proceedings",3,,5520665,130,135,,2,10.1109/AQTR.2010.5520665,http://www.scopus.com/inward/record.url?eid=2-s2.0-77958111131&partnerID=40&md5=82a0d03a1e1670ce599b4ef01ab3e684,"Faculty of Automation and Computer Science, University Politehnica of Timişoara, Romania","Jebelean, C., Faculty of Automation and Computer Science, University Politehnica of Timişoara, Romania; Chirilǎ, C.-B., Faculty of Automation and Computer Science, University Politehnica of Timişoara, Romania; Creţu, V., Faculty of Automation and Computer Science, University Politehnica of Timişoara, Romania","In today's software engineering, more and more emphasis is put on the quality of object-oriented software design. It is commonly accepted that building a software system with maintainability and reusability issues in mind is far more important than just getting all the requirements fulfilled in one way or another. Design patterns are powerful means to obtain this goal. Tools have been built that automatically detect design patterns in object-oriented code and help in understanding the code. Other tools help in refactoring object-oriented code towards introducing design patterns, but human intelligence is needed to detect where these design patterns should be inserted. This paper proposes a logic approach to the automatic detection of places within object-oriented code where the Composite design pattern could have been used. Suspects identified by such a tool could very well be served as input data for other tools that automatically refactor the code as to introduce the missing design pattern.",,Automatic Detection; Composite design pattern; Design Patterns; Human intelligence; Input datas; Logic-based approach; Object-oriented code; Object-oriented software designs; Refactorings; Software systems; Computer software reusability; Computer software selection and evaluation; Design; Maintainability; Object oriented programming; Reusability; Robotics; Software design,,,,,,"Beck, K., (1999) Extreme Programming Explained: Embrace Change, , Addison-Wesley; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceedings of the Technology of Object-oriented Languages and Systems, , IEEE Computer Society; Chirilǎ, C.-B., Jebelean, C., Mǎduţa, A., Towards automatic generation and regeneration of logic representation for object-oriented programming languages (2008) Proceedings of the International Conference on Technical Informatics, , University Politehnica Timişoara; Fowler, M., (2000) Refactoring: Improving the Design of Existing Code, , Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Jebelean, C., Chirilǎ, C.-B., Mǎduţa, A., Generating logic based representations for programs (2008) Proceedings of the 2008 IEEE 4th International Conference on Intelligent Computer Communication and Processing, pp. 145-151. , Cluj-Napoca, Romania; Jebelean, C., Automatic detection of missing abstract-factory design pattern in object-oriented code (2004) Proceedings of the International Conference on Technical Informatics, , Politehnica University in Timişoara; Jhotdraw as Open Source Project, , www.jhotdraw.org; Jeon, S.-U., Lee, J.-S., Bae, D.-H., An automated refactoring approach to design pattern-based program transformations in Java programs (2002) Proceedings of the 9th Asia-pacific Software Engineering Conference; Kerievsky, J., (2004) Refactoring to Patterns, , Addison-Wesley; Kniesel, G., A logic foundation for conditional program transformations (2006) Technical Report IAI-TR-2006-1, Computer Science Department III, , University of Bonn, January; Marinescu, R., Detection strategies: Metrics-based rules for detecting design flaws (2004) Proceedings of the 20th IEEE International Conference on Software Maintenance, pp. 350-359. , IEEE Computer Society; Simon, F., Steinbruckner, F., Lewerentz, C., Metrics based refactoring (2001) Proceedings of the Conference on Software Maintainance and Reengineering, pp. 30-38; Tourwé, T., Mens, T., Identifying refactoring opportunities using logic meta programming (2003) Proceedings of the 7th European Conference on Software Maintainance and Reengineering, pp. 91-100. , IEEE Computer Society","Jebelean, C.; Faculty of Automation and Computer Science, University Politehnica of TimişoaraRomania; email: calin.jebelean@cs.upt.ro",,"IEEE Computer Society - Test Technology Technical Council;Technical University of Cluj-Napoca;IPA - R and D Institute for Automation, Cluj-Napoca subsidiary;Romanian Gov. - ANCS Natl. Auth. Sci. Res.;Romanian Soc. Control Eng. Tech. Informatics - SRAIT",,"17th IEEE International Conference on Automation, Quality and Testing, Robotics, AQTR 2010",28 May 2010 through 30 May 2010,Cluj-Napoca,82014,,9781424467259,,,English,"IEEE Int. Conf. Autom., Qual. Test., Rob., AQTR - Proc.",Conference Paper,Scopus,2-s2.0-77958111131,,
,4,,"Díaz, P., Aedo, I., Rosson, M.B., Carroll, J.M.",A visual tool for using design patterns as pattern languages,2010,Proceedings of the Workshop on Advanced Visual Interfaces AVI,,,,67,74,,3,10.1145/1842993.1843005,http://www.scopus.com/inward/record.url?eid=2-s2.0-77957952014&partnerID=40&md5=06c36e659e1810b33f4bca6cd1d4996e,"Laboratorio DEI, Universidad Carlos III, Leganés, Madrid, Spain; Information Sciences and Technology, Pennsylvania State University, State College, PA, United States","Díaz, P., Laboratorio DEI, Universidad Carlos III, Leganés, Madrid, Spain; Aedo, I., Laboratorio DEI, Universidad Carlos III, Leganés, Madrid, Spain; Rosson, M.B., Information Sciences and Technology, Pennsylvania State University, State College, PA, United States; Carroll, J.M., Information Sciences and Technology, Pennsylvania State University, State College, PA, United States","Design patterns document successful solutions to recurrent problems in a specific software development domain. However, finding the patterns you need can be difficult, often requiring the designer to comprehend a long narrative description to understand the benefits, implications and trade-offs of each pattern and of its relationships with others. In this paper we propose a visual notation supported by a software tool that may help to identify patterns that could satisfy a designer's goals, as well as conveying the positive and negative relations among patterns, including dependencies and collisions among patterns selected for a specific problem. This work extends the concept of Softgoal Interdependency Graphs (SIG) enhancing them with a number of visual clues and interaction capabilities to help designers realize the contributions and trade-offs of their design ideas and the complexity of the solution space they are building up. Copyright 2010 ACM.",Design patterns; Goal-based design; Visual languages,Design ideas; Design Patterns; Goal-based design; Pattern languages; Software development; Software tool; Solution space; Specific problems; Visual clues; Visual language; Visual notations; Visual tools; Design; Software design,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press, New York; Araujo, I., Weiss, M., Linking non-functional requirements and patterns (2002) Proc. of the Conference on Pattern Languages of Programming (PLOP); Bayle, E., Bellamy, R., Casaday, G., Erickson, T., Fincher, S., Grinter, B., Gross, B., Thomas, J., Putting It All Together: Towards A Pattern Language for Interaction Design, , http://www.visi.com/~snowfall/Patterns.WrkShpRep.html; Blakley, B., Heath, C., (2004) Security Design Patterns, , Technical report. The Open Group; Borchers, J.O., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons; Bulka, A., Design pattern automation (2003) Proceedings of the 2002 Conference on Pattern Languages of Programs - Volume 13, (175), pp. 1-10. , (Melbourne, Australia). J. Noble, Ed. Conferences in Research and Practice in Information Technology Series. Australian Computer Society, Darlinghurst, Australia; Carroll, J., (1997) Minimalism beyond the Nurnberg Funnel, , MIT Press; Chung, E.S., Hong, J.I., Lin, J., Prabaker, M.K., Landay, J.A., Liu, A.L., Development and evaluation of emerging design patterns for ubiquitous computing (2004) Proc. of the 5th Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques, pp. 233-242; Chung, L., Nixon, B.A., Yu, A., Mylopoulos, J., (2000) Non-Functional Requirements in Software Engineering, , Kluwer Academic Publishers; Cross, N., Expertise in Design:An overview (2004) Design Studies, 25 (5), pp. 427-441; Díaz, P., Aedo, I., Rosson, M.B., Visual representation of web design patterns for end-users (2008) AVI 2008, pp. 408-411; Díaz, P., Rosson, M.B., Aedo, I., Carroll, J.M., Web design patterns: Investigating user goals and browsing strategies (2009) LNCS, 5435 (2009), pp. 186-204. , 2nd International Symposium on End User Development; dino2.dei.inf.uc3m.es/veisig/Faulkner, S., Kolp, M., Wautelet, Y., Achbany, Y., A formal description language for multi-agent architectures (2008) LNCS, 4898, pp. 143-163. , Agent-Oriented Information Systems IV; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Graham, I., (2003) A Pattern Language for Web Usability, , Addison-Wesley; Gross, D., Yu, E., From non-functional requirements to design through patterns (2001) Requirements Engineering, 6 (1), pp. 18-36. , February 2001; Kampffmeyer, H., Zschaler, S., Finding the pattern you need: The design pattern intent ontology (2007) LNCS, 4735 (2007), pp. 211-225. , Model Driven Engineering Languages and Systems; Montero, S., Díaz, P., Aedo, I., From requirements to conceptual modeling of web applications through design patterns (2005) Workshop on HCI Patterns: Mapping User Needs into Interaction Design Solutions, in Conjunction with INTERACT, , 13 September, Rome, Italy; Mussbacher, G., Weiss, M., Amyot, D., Formalizing architectural patterns with the goal-oriented requirement language (2006) VikingPlop 2006; Ong, H., Weiss, M., Araujo, I., Rewriting a pattern language to make it more expressive (2003) Hot Topic on the Expressiveness of Pattern Languages, ChiliPLoP 2003; Radeke, F., Forbrig Seffah, P.A., Sinnig, D., PIM tool: Support for pattern-driven and model-based UI development (2006) Proc. of TAMODIA 2006, pp. 82-96; Schwabe, D., Rossi, G., Danculovic, J.P., Miaton, L., Patterns for personalized web applications (2001) Proceedings of EuroPLoP 2001; Schümmer, T., Schobertsupporting, W., Pattern language visualization with CoPE Europlop 2006 Workshops; Tidwell, J., (2006) UI Patterns and Techniques, , http://timetripper.com/uipatterns/; Van Duyne, D.K., Landay, J.A., Hong, J.I., (2002) The Design of Sites: Patterns, Principles, and Processes for Crafting A Customer-Centered Web Experience., , Addison-Wesley; Van Melie, M., (2006) Web Design Patterns, , http://www.welie.com/patterns/","Díaz, P.; Laboratorio DEI, Universidad Carlos III, Leganés, Madrid, Spain; email: pdp@inf.uc3m.es",,Consulta Umbria SRL;SIGMM;SIGCHI,,"International Conference on Advanced Visual Interfaces, AVI '10",26 May 2010 through 28 May 2010,Rome,81889,,9781450300766,,,English,Proc Workshop Adv Visual Interfaces,Conference Paper,Scopus,2-s2.0-77957952014,,
,3,,"Jeroudaih, L.M., Hajji, M.S.",Extensions to some AOSE methodologies,2010,"World Academy of Science, Engineering and Technology",64,,,383,388,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-78651526919&partnerID=40&md5=9563fb76a4cffbc5d10f542ddd04c971,"Software Engineering department, Faculty of IT, University of Damascus-Syria, Syrian Arab Republic","Jeroudaih, L.M., Software Engineering department, Faculty of IT, University of Damascus-Syria, Syrian Arab Republic; Hajji, M.S., Software Engineering department, Faculty of IT, University of Damascus-Syria, Syrian Arab Republic","This paper looks into areas not covered by prominent Agent-Oriented Software Engineering (AOSE) methodologies. Extensive paper review led to the identification of two issues, first most of these methodologies almost neglect semantic web and ontology. Second, as expected, each one has its strength and weakness and may focus on some phases of the development lifecycle but not all of the phases. The work presented here builds extensions to a highly regarded AOSE methodology (MaSE) in order to cover the areas that this methodology does not concentrate on. The extensions include introducing an ontology stage for semantic representation and integrating early requirement specification from a methodology which mainly focuses on that. The integration involved developing transformation rules (with the necessary handling of nonmatching notions) between the two sets of representations and building the software which automates the transformation. The application of this integration on a case study is also presented in the paper. The main flow of MaSE stages was changed to smoothly accommodate the new additions.",Agents; And design patterns; AUML; Intelligent agents; Software engineering (SE); UML,Agent Oriented Software Engineering; And design patterns; AUML; Early requirements; Semantic representation; Transformation rules; UML; Design Patterns; Artificial intelligence; Integration; Intelligent agents; Ontology; Semantic Web; Software engineering; Agents; Software agents; Software engineering,,,,,,"Tveit, A., A Survey Of Agent-Oriented Software Engineering (2001) NTNU Computer Science Graduate Student Conference, , Trondheim, Norway - May; Nicholas, R., (2001) Jennings and Michael Wooldridge, , Agent-Oriented Software Engineering, AAAI/MIT Press; Henderson-Sellers, B., Gorton, I., (2002) Agent-Based Software Development Methodologies, , Workshop on Agent-oriented Methodologies at OOPSLA 2002, Seattle, USA, November; Dam, K.H., (2003) Evaluating and Comparing Agent-Oriented Software Engineering Methodologies, , RMIT University - Melbourne, Australia, Master thesis, September; Franco, Z.N., Jenningsy, R., Michael, W., (2003) Developing Multiagent Systems: The Gaia Methodology; (2010), http://www.troposproject.org/, last Jan(2010), http://macr.cis.ksu.edu/, last JanBergenti, F., Gleizes, M.-P., Zambonelli, F., (2004) METHODOLOGIES and SOFTWARE ENGINEERING FOR AGENT SYSTEMS; Wood, M.F., DeLoach, S.A., (2000) An Overview of the Multiagent Systems Engineering Methodology, , First International Workshop, AOSE, Limerick, Ireland; DeLoach, S.A., Analysis and Design Using MaSE and AgentTool 12th Midwest Artificial Intelligence and Cognitive Science Conference (MAICS 2001), , Miami University, Oxford, Ohio; (2009), http://agenttool.cis.ksu.edu/, last update 01 OctoberGarcia-Ojeda, J.C., DeLoach, S.A., Robby, (2009) AgentTool III: From Process Definition to Code Generation, , Kansas State University; (2009), http://sesa.dit.unitn.it/sistar_tool/home.php?7, last updateDiLeo, J., Jacobs, T., DeLoach, S., Integrating Ontologies into Multiagent Systems Engineering","Jeroudaih, L. M.; Software Engineering department, Faculty of IT, University of Damascus-SyriaSyrian Arab Republic; email: louy.jer@gmail.com",,,,,,,,2010376X,,,,English,World Acad. Sci. Eng. Technol.,Article,Scopus,2-s2.0-78651526919,,
,4,,"Porras, G.C., Guéhéneuc, Y.-G.",An empirical study on the efficiency of different design pattern representations in UML class diagrams,2010,Empirical Software Engineering,15,5,,493,522,,17,10.1007/s10664-009-9125-9,http://www.scopus.com/inward/record.url?eid=2-s2.0-77954757588&partnerID=40&md5=e45327b4a049b5b44a693d67c70194c9,"Département d'informatique et de Recherche Opérationnelle, Université de Montréal, Montreacute;al, Canada; Giro Inc., Canada","Porras, G.C., Département d'informatique et de Recherche Opérationnelle, Université de Montréal, Montreacute;al, Canada, Giro Inc., Canada; Guéhéneuc, Y.-G.","Design patterns are recognized in the software engineering community as useful solutions to recurring design problems that improve the quality of programs. They are more and more used by developers in the design and implementation of their programs. Therefore, the visualization of the design patterns used in a program could be useful to efficiently understand how it works. Currently, a common representation to visualize design patterns is the UML collaboration notation. Previous work noticed some limitations in the UML representation and proposed new representations to tackle these limitations. However, none of these pieces of work conducted empirical studies to compare their new representations with the UML representation. We designed and conducted an empirical study to collect data on the performance of developers on basic tasks related to design pattern comprehension (i.e., identifying composition, role, participation) to evaluate the impact of three visual representations and to compare them with the UML one. We used eye-trackers to measure the developers' effort during the execution of the study. Collected data and their analyses show that stereotype-enhanced UML diagrams are more efficient for identifying composition and role than the UML collaboration notation. The UML representation and the pattern-enhanced class diagrams are more efficient for locating the classes participating in a design pattern (i.e., identifying participation). © Springer Science+Business Media, LLC 2010.",Design patterns; Empirical study; Eye-tracking; UML class diagrams; Visualization,Class diagrams; Design Patterns; Design problems; Empirical studies; Eye trackers; Eye-tracking; UML class diagrams; UML collaborations; UML diagrams; Visual representations; Java programming language; Software engineering; Visualization; Design,,,,,,"Ambler, S.W., (2005) The Elements of UML 2.0 Style, , Cambridge University Press, Cambridge; Aversano, L., Canfora, G., Cerulo, L., Del Grosso, C., Di Penta, M., An empirical study on the evolution of design patterns (2007) Proceedings of the the 6th European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 385-394. , ACM, New York; Bednarik, R., Tukiainen, M., An eye-tracking methodology for characterizing program comprehension processes (2006) Proceedings of 5th Symposium on Eye Tracking Research & Applications, pp. 125-132. , ACM, New York; Bojko, A., Eye tracking in user experience testing: how to make the most of it (2005) Proceedings of the 14th Annual Conference of the Usability Professionals Association, , Usability Professionals' Association, Bloomingdale; Briand, L.C., Labiche, Y., Di Penta, M., Yan-Bondoc, H., An experimental investigation of formality in UML-based development (2005) Trans Soft Eng, 31 (10), pp. 833-849; Chabris, C.F., Kosslyn, S.M., Representational correspondence as a basic principle of diagram design (2005) Knowledge and Information Visualization, pp. 36-57. , Springer, New York; Dong, J., Yang, S., Zhang, K., Visdp: a web service for visualizing design patterns on demand (2005) Proceedings of the 6th International Conference on Information Technology: Coding and Computing; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) Trans Soft Eng, 33 (7), pp. 433-453; Duchowski, A.T., (2003) Eye Tracking Methodology: Theory and Practice, , Springer, New York; Eden, A.H., Yehudai, A., Gil, J., (1997) Precise Specification and Automatic Application of Design Patterns, pp. 143-152. , IEEE Computer Society, Piscataway; Eichelberger, H., Nice class diagrams admit good design? (2003) Proceedings of the 1st Symposium on Software Visualization, , ACM, New York, pp 159-ff; Eichelberger, H., Von Gudenberg, J.W., Uml class diagrams-state of the art in layout techniques (2003) Proceedings of the 1st SOFTVIS Workshop on Visualizing Software for Understanding and Analysis, pp. 30-34. , ACM, New York; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A uml-based pattern specification technique (2004) Trans Soft Eng, 30 (3), pp. 193-206; Gamma, E., Applying design patterns in Java (1996) Java Rep, 1 (6), pp. 47-53; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1998) Design Patterns-elements of Reusable Object-oriented Software, , Addison-Wesley, Reading; Goldberg, J.H., Kotval, X.P., Computer interface evaluation using eye movements: methods and constructs (1999) Int J Ind Ergon, 24 (6), pp. 631-645; Goldberg, J.H., Stimson, M.J., Lewenstein, M., Scott, N., Wichansky, A.M., Eye tracking in web search tasks: design implications (2002) Proceedings of the 1st Symposium on Eye Tracking Research & Applications, pp. 51-58. , ACM, New York; Guan, Z., Lee, S., Cuddihy, E., Ramey, J., The validity of the stimulated retrospective think-aloud method as measured by eye tracking (2006) Proceedings of the 12th Conference on Human Factors in Computing Systems, pp. 1253-1262; Guhneuc, Y.-G., Taupe: towards understanding program comprehension (2006) Proceedings of 16th IBM Center for Advanced Studies Conference, pp. 1-13. , ACM, New York; Hutchins, E., (1995) Distributed Cognition, , MIT, Cambridge; (2007) JHotdraw: A Java GUI Framework for Technical and Structured Graphics, , http://www.jhotdraw.org; Kazman, R., Klein, M., Barbacci, M., Longstaff, T., Lispon, H., Carriere, J., The architecture tradeoff analysis method (1998) Proceedings of the 4th International Conference on Engineering of Complex Computer Systems, pp. 68-78. , IEEE Computer Society, Piscataway; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th Conference on Software Maintenance and Reengineering, , IEEE Computer Society Press, Piscataway; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of the 12th European Conference on Object-oriented Programming, pp. 114-134. , Springer, New York; Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using dpml (2002) Proceedings of the 14th International Conference on Tools, pp. 3-11. , Australian Computer Society, Canberra; Moore, P., Flitz, C., Gestalt theory and instructional design (1993) J Tech Writ Commun, 23 (2), pp. 137-157; (1997) Unified Modeling Language Specification, , http://www.omg.org, version 1.1; Purchase, H.C., Carrington, D.A., Allder, J.-A., Empirical evaluation of aesthetics-based graph layout (2002) Empir Soft Eng, 7 (3), pp. 233-255; Rayner, K., Eye movements in reading and information processing: 20 years of research (1998) Psychol Bull, 124 (3), pp. 372-422; Rich, C., Waters, R.C., The programmer's apprentice (1988) Computer, 21 (11), pp. 10-25; Schauer, R., Keller, R., Pattern visualization for software comprehension (1998) Proceedings of the 6th International Workshop on Program Comprehension, pp. 4-12. , IEEE Computer Society, Piscataway; Shalloway, A., Trott, J.R., (2002) Design Patterns Explained: A New Perspective on Object-oriented Design, , Addison-Wesley, Reading; Soloway, E., Pinto, J., Letovsky, S., Littman, D., Lampert, R., Designing documentation to compensate for delocalized plans (1988) Commununications, 31 (11), pp. 1259-1267; Sun, D., Wong, K., On evaluating the layout of uml class diagrams for program comprehension (2005) Proceedings of the 13th International Workshop on Program Comprehension, pp. 317-326. , IEEE Computer Society, Piscataway; Trese, T., Tilley, S., Documenting software systems with views V: towards visual documentation of design patterns as an aid to program understanding (2007) Proceedings of the 25th International Conference on Design of Communication, pp. 103-112. , ACM, New York; Vlissides, J., (1998) C++ Report, , Notation, notation, notation; Von Mayrhauser, A., Vans, A.M., Program comprehension during software maintenance and evolution (1995) IEEE Comput, 28 (8), pp. 44-55; Ware, C., (2005) Visual Queries: The Foundation of Visual Thinking, , Springer, New York; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic, Dordrecht; Yusuf, S., Kagdi, H., Maletic, J.I., Assessing the comprehension of uml class diagrams via eye tracking (2007) Proceedings of the 15th International Conference on Program Comprehension, pp. 113-122. , IEEE Computer Society, Piscataway","Guéhéneuc, Y.-G.; Département de Génie Informatique et Génie Logiciel, École Polytechnique de Montréal, Montréal, Canada; email: yann-gael.gueheneuc@polymtl.ca",,,,,,,,13823256,,ESENF,,English,Empir Software Eng,Article,Scopus,2-s2.0-77954757588,,
,4,,"Lin, J., Schatz, M.",Design patterns for efficient graph algorithms in MapReduce,2010,"Proceedings of the 8th Workshop on Mining and Learning with Graphs, MLG'10",,,,78,85,,61,10.1145/1830252.1830263,http://www.scopus.com/inward/record.url?eid=2-s2.0-77956237139&partnerID=40&md5=dd98d8e0e5b31e2396542305d8729afb,"University of Maryland, College Park, United States","Lin, J., University of Maryland, College Park, United States; Schatz, M., University of Maryland, College Park, United States","Graphs are analyzed in many important contexts, including ranking search results based on the hyperlink structure of the world wide web, module detection of proteinprotein interaction networks, and privacy analysis of social networks. Many graphs of interest are difficult to analyze because of their large size, often spanning millions of vertices and billions of edges. As such, researchers have increasingly turned to distributed solutions. In particular, MapReduce has emerged as an enabling technology for large-scale graph processing. However, existing best practices for MapReduce graph algorithms have significant shortcomings that limit performance, especially with respect to partitioning, serializing, and distributing the graph. In this paper, we present three design patterns that address these issues and can be used to accelerate a large class of graph algorithms based on message passing, exemplified by PageRank. Experiments show that the application of our design patterns reduces the running time of PageRank on a web graph with 1.4 billion edges by 69%. © 2010 ACM.",,Best-practices; Design Patterns; Distributed solutions; Enabling technologies; Graph algorithms; Graph processing; Hyperlink structure; Large class; Large sizes; Map-reduce; PageRank; Privacy analysis; Protein-protein interaction networks; Running time; Search results; Social Networks; Web graphs; Algorithms; Design; Electronic equipment manufacture; Hypertext systems; Message passing; World Wide Web; Graphic methods,,,,,,"Brants, T., Popat, A.C., Xu, P., Och, F.J., Dean, J., Large language models in machine translation (2007) Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pp. 858-867. , Prague, Czech Republic; Brin, S., Page, L., The anatomy of a large-scale hypertextual web search engine (1998) Proceedings of the Seventh International World Wide Web Conference (WWW 7), pp. 107-117. , Brisbane, Australia; Chu, C.-T., Kim, S.K., Lin, Y.-A., Yu, Y., Bradski, G., Ng, A., Olukotun, K., Map-reduce for machine learning on multicore (2006) Advances in Neural Information Processing Systems 19 (NIPS 2006), pp. 281-288. , Vancouver, British Columbia, Canada; Dean, J., Ghemawat, S., MapReduce: Simplified data processing on large clusters (2004) Proceedings of the 6th Symposium on Operating System Design and Implementation (OSDI 2004), pp. 137-150. , San Francisco, California; Dyer, C., Cordova, A., Mont, A., Lin, J., Fast, easy, and cheap: Construction of statistical machine translation models with MapReduce (2008) Proceedings of the Third Workshop on Statistical Machine Translation at ACL 2008, pp. 199-207. , Columbus, Ohio; Ghemawat, S., Gobioff, H., Leung, S.-T., The google file system (2003) Proceedings of the 19th ACM Symposium on Operating Systems Principles (SOSP 2003), pp. 29-43. , Bolton Landing, New York; Kang, U., Tsourakakis, C., Appel, A.P., Faloutsos, C., Leskovec, J., HADI: Fast diameter estimation and mining in massive graphs with hadoop (2008) Technical Report CMU-ML-08-117, School of Computer Science, Carnegie Mellon University; Kang, U., Tsourakakis, C.E., Faloutsos, C., PEGASUS: A peta-scale graph mining system - Implementation and observations (2009) Proceedings of the 2009 Ninth IEEE International Conference on Data Mining (ICDM 2009), pp. 229-238. , Miami, Floria; Kleinberg, J.M., Authoritative sources in a hyperlinked environment (1999) Journal of the ACM, 46, pp. 668-677; Langmead, B., Schatz, M.C., Lin, J., Pop, M., Salzberg, S.L., Searching for SNPs with cloud computing (2009) Genome Biology, 10 (R134); Lin, J., Brute force and indexed approaches to pairwise document similarity comparisons with MapReduce (2009) Proceedings of the 32nd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR 2009), pp. 155-162. , Boston, Massachusetts; Lin, J., Dyer, C., (2010) Data-Intensive Text Processing with MapReduce, , Morgan & Claypool Publishers; Navlakha, S., Kingsford, C., The power of protein interaction networks for associating genes with diseases (2010) Bioinformatics, 26, pp. 1057-1063; Navlakha, S., Schatz, M.C., Kingsford, C., Revealing biological modules via graph summarization (2009) J Comput Biol, 16, pp. 253-264; Page, L., Brin, S., Motwani, R., Winograd, T., The PageRank citation ranking: Bringing order to the web (1999) Technical Report 1999-66, Stanford InfoLab, , November; Panda, B., Herbach, J.S., Basu, S., Bayardo, R.J., PLANET: Massively parallel learning of tree ensembles with MapReduce (2009) Proceedings of the 35th International Conference on Very Large Data Base (VLDB 2009), pp. 1426-1437. , Lyon, France; Pevzner, P.A., Tang, H., Waterman, M.S., An eulerian path approach to DNA fragment assembly (2001) Proc Natl Acad Sci USA, 98, pp. 9748-9753; Schatz, M.C., CloudBurst: Highly sensitive read mapping with MapReduce (2009) Bioinformatics, 25 (11), pp. 1363-1369; Schneider, D.A., DeWitt, D.J., A performance evaluation of four parallel join algorithms in a shared-nothing multiprocessor environment (1989) Proceedings of the 1989 ACM SIGMOD International Conference on Management of Data, pp. 110-121. , Portland, Oregon; Wolfe, J., Haghighi, A., Klein, D., Fully distributed EM for very large datasets (2008) Proceedings of the 25th International Conference on Machine Learning (ICML 2008), pp. 1184-1191. , Helsinki, Finland; Zerbino, D.R., Birney, E., Velvet: Algorithms for de novo short read assembly using de bruijn graphs (2008) Genome Res, 18, pp. 821-829","Lin, J.; University of Maryland, College Park, United States; email: jimmylin@umd.edu",,Microsoft Research;PASCAL;Yahoo Research Labs,,"8th Workshop on Mining and Learning with Graphs, MLG'10",24 July 2010 through 25 July 2010,"Washington, DC",81565,,9781450302142,,,English,"Proc. Workshop Min. Learn. Graphs, MLG",Conference Paper,Scopus,2-s2.0-77956237139,,
,4,,"Mitsching, R., Weise, C., Kowalewski, S.",Design patterns for integrating variability in timed automata,2010,SSIRI-C 2010 - 4th IEEE International Conference on Secure Software Integration and Reliability Improvement Companion,,,5521559,38,45,,1,10.1109/SSIRI-C.2010.21,http://www.scopus.com/inward/record.url?eid=2-s2.0-77956099835&partnerID=40&md5=af96e727200c7c46fa73c164f38e5801,"Embedded Software Laboratory, RWTH Aachen University, Aachen, Germany","Mitsching, R., Embedded Software Laboratory, RWTH Aachen University, Aachen, Germany; Weise, C., Embedded Software Laboratory, RWTH Aachen University, Aachen, Germany; Kowalewski, S., Embedded Software Laboratory, RWTH Aachen University, Aachen, Germany","Products nowadays come in large number of variants, that allow to tailor products to the specific requirements of the customer. In the production process it is desirable to re-use the common core of product variants, and spend the main effort for an invariant in the development of the individualization of the product. This is true for all kinds of industrial products, including software systems and there specifically embedded systems. Formal approaches in software development are a good way to specifiy products so that common and individual parts can easily be identified. Model based approaches like UML have become widespread in software production. However, model based approaches normally do not support variability management and need to be extended to deal with product variants. For embedded systems, timed automata are a well-established specification formalism. We describe how to extend timed automata to support variability management, and show how a timed automata tool like Uppaal can be used in variability management. © 2010 IEEE.",,Design Patterns; Formal approach; Industrial product; Model based approach; Product variants; Production process; Software development; Software production; Software systems; Timed Automata; Variability management; Embedded software; Embedded systems; Integration; Software design; Software reliability; Formal methods,,,,,,"Hendriks, M., Verhoef, M., (2006) Timed Automata Based Analysis of Embedded System Architectures, p. 8. , April; Mitsching, R., Weise, C., Kolbe, A., Bohnenkamp, H., Berzen, N., (2009) Towards an Industrial Strength Process for Timed Testing, pp. 29-38; Rodriguez-Navas, G., Proenza, J., Hansson, H., Pettersson, P., (2009) Using Timed Automata for Modeling the Clocks of Distributed Embedded Systems, , P. Lus Gomes, Universidade Nova de Lisboa and P. Joo M. Fernandes, Universidade do Minho, Eds. IGI Global, June; David, A., Behrmann, G., Bulychev, P., Byg, J., Chatain, T., Larsen, K.G., Pettersson, P., Tranonouez, L.-M., (2009) Tools Formodelchecking, , C. Jard and O. H. Roux, Eds. ISTE Publishing/John Wiley, December; Behrmann, G., David, A., Larsen, K.G., A tutorial on UPPAAL (2004) Formal Methods for the Design of Real-time Systems: 4th International School on Formal Methods for the Design of Computer, Communication and Software Systems, SFM-RT 2004, (3185), pp. 200-237. , ser. LNCS, M. Bernardo and F. Corradini, Eds., Springer-Verlag, Sept; Pohl, K., Böckle, G., Van Der Linden, F., (2005) Software Product Line Engineering, , Springer; Czarnecki, K., Eisenecker, U., (2000) Generative Programming - Methodes, Tools and Applications, , Addison-Wesley; Robak, S., Developing software families (2002) CEUR Workshop Proceedings, , Chicago, illinois, June; Kang, K.C., Cohen, S.G., Hess, J.A., Novak, W.E., Peterson, A.S., Feature-oriented domain analysis(foda)feasibility study (1990) Tech. Rep., , Carnegie Mellon University, Pittsburgh; Czarnecki, K., (2005) Cardinality-based Feature Modeling and Constraints: A Progress Report; (2005) The RequiLine User Manual, , Research Group Software Construction, RWTH Aachen, January, Version 1.0; (2010) Pure::Variants User's Guide, , http://www.puresystems.com/fileadmin/downloads/pure-variants/doc/ pv-user-manual.pdf, www.puresystems.com, 01, [Online], Available,Version 3.0; Alur, R., Dill, D.L., A theory of timed automata (1994) Theoretical Computer Science, 126, pp. 183-235; Larsen, K.G., Pettersson, P., Yi, W., (1997) UPPAAL in a Nutshell, 1 (1-2), pp. 134-152. , Springer-Verlag, Oct; Von Der Maben, T., Lichter, H., Determining the variation degree of feature models (2005) SPLC, pp. 82-88; Djebbi, O., Salinesi, C., Fanmuy, G., (2007) Industry Survey of Product Lines Management Tools: Requirements, Qualities and Open Issues; Harel, D., Statecharts: A visual formalism for complex systems (1987) Science of Computer Programming, 8, pp. 231-274","Mitsching, R.; Embedded Software Laboratory, RWTH Aachen University, Aachen, Germany; email: mitsching@cs.rwth-aachen.de",,National University of Singapore (NUS);Infocomm Development Authority of Singapore;Reliability Society,,"4th IEEE International Conference on Secure Software Integration and Reliability Improvement Companion, SSIRI-C 2010",9 June 2010 through 11 June 2010,Singapore,81517,,9780769540870,,,English,SSIRI-C - IEEE Int. Conf. Secure Softw. Integr. Reliab. Improv. Companion,Conference Paper,Scopus,2-s2.0-77956099835,,
,4,,"Hussein, D., Alaa, G., Hamad, A.",Web 2.0 based service-oriented e-learning systems: Recurrent design and architectural patterns,2010,"Proceedings - 11th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD2010",,,5521528,227,234,,1,10.1109/SNPD.2010.42,http://www.scopus.com/inward/record.url?eid=2-s2.0-77956013460&partnerID=40&md5=43e0acce38bb8f0781962ee2f33ac5da,"Faculty of Informatics and Computer Science, British University in Egypt, BUE, Cairo - Suez Desert Road, El Sherouk City, Cairo, Egypt","Hussein, D., Faculty of Informatics and Computer Science, British University in Egypt, BUE, Cairo - Suez Desert Road, El Sherouk City, Cairo, Egypt; Alaa, G., Faculty of Informatics and Computer Science, British University in Egypt, BUE, Cairo - Suez Desert Road, El Sherouk City, Cairo, Egypt; Hamad, A., Faculty of Informatics and Computer Science, British University in Egypt, BUE, Cairo - Suez Desert Road, El Sherouk City, Cairo, Egypt","Adopting Web 2.0 technologies and techniques in modern e-learning systems guarantees a more interactive e-learning experience. It leverages collaboration among learners and enhances accessibility to various learning resources. Providing such functionalities as web services within an integrated e-learning system achieves interoperability and reduces redundancy. Our aim in this paper is to identify recurrent Web 2.0 and Service-oriented architecture (SOA) design and architectural patterns that would provide reusable building blocks for any Web 2.0 based service-oriented e-learning system. The paper builds on induction theory techniques to validate taxonomy related to Web 2.0 and SOA behavioural and technological patterns. We identified 3 elementary design patterns; inter-connectivity, file sharing and content re-mixing, a well as 4 secondary design patterns; streaming, content authoring, content aggregation and tagging. The proposed design patterns share three elementary architecture types; client-server, peer-peer and SOA. The paper also builds on UML4SOA techniques in modelling requirements prior application of proposed patterns in the case study. © 2010 IEEE.",Component; Design; E- learning; Patterns; SOA; Web 2.0,Architectural pattern; Building blockes; Client server; Component; Content aggregations; Design Patterns; File Sharing; Induction theory; Integrated e-learning; Learning resource; Patterns; Peer-peer; Service Oriented; SOA; Uml4soa; Web 2.0; Artificial intelligence; Computer software reusability; Design; Distributed computer systems; E-learning; Information services; Interoperability; Software engineering; Web services; Learning systems,,,,,,"Tsai, W.-T., Wei, X., Paul, R., Chung, J.-Y., Huang, Q., Chen, Y., (2007) Service-oriented System Engineering (Sose) and Its Applications to Embedded System Development, Service Oriented Computing and Applications, 1 (1), pp. 3-17. , April; Tsai, W.-T., Service-Oriented System Engineering : AAAA new paradigm (2005) IEEE International Workshop in Service-Oriented System Engineering, SOSE 2005, pp. 3-6. , December; Schulte, J., Hampel, T., Bopp, T., Hinn Wasabi Beans, R., SOA for collaborative learning and working systems (2008) Proc. of the Second IEEE International Conference on Digital Ecosystem and Technologies, pp. 173-183. , Phitsanulok, Thailand February; Chatti, M.A., Klamma, R., Jarke, M., Naeve, A., The web 2.0 driven seci model based learning process (2007) Proc. of the Seventh IEEE International Conference on Advanced Learning Technologies, ICALT 2007, pp. 780-878. , July; Awodele, O., Idowu, S., Anjorin, O., Adedire, A., Babcock, V., University enhancement system using a social networking approach: Extending e-learning (2009) Issues in Informing Science and Information Technology, 6. , May; Blinco, K., Gribsy, T., Larid, A., O'Neill, O., Srikanth, V., Smythe, C., Adoption of service oriented architecture (SOA) for Enterprise systems in education: Recommended practices (2009) IMS Global Learning Consortium, , December; Fang, C.F., Sing, L.C., Collaborative learning using service- oriented architecture: A framework design (2009) Elsevier Science Publishers, 22 (4), pp. 271-274. , May; (2008) E-Framework Programme, , Going for Gold Introducing SOA at City University, London. A Case Study, JISC: Bristol, UK, October; Chen, Y., Tsai, W.T., (2006) Introduction to Programming Languages: Programming in C, C++, Scheme, , Prolog, C#, and SOA 2nd edn. Kendall/Hunt Publishing Company, Dubugue; Anderson, P., What is Web 2.0? Ideas, technologies and implications for education (2007) JISC Technology and Standards Watch, , Bristol: JISC. Feb; Brown, J.S., Adler, R.P., (2008) Minds on Fire: Open Education, the Long Tail, and Learning 2.0. Educause Review, pp. 16-32. , February; O'Reilly, T., (2007) What Is Web 2.0: Design Patterns and Business Models for the Next Generation of Software. Communications & Strategies, (1), p. 17. , First Quarter; Kona, S., Bansal, A., Gupta, G., Hite, T., Efficient Web Service Discovery and Composition using Constraint Logic Programming (2006) ALPSWS Workshop at FLoC; (2006) Systinet, , SOA governance: balancing flexibility and control within an SOA . Mercury White Paper 2006; Wilson, S., Blinco, K., Rehak, D., (2004) Service-oriented Frameworks: Modelling the Infrastructure for the Next Generation of E-Learning Systems, , Wilson, Blinco and Rehak. alt-i-lab; (2005) Service Oriented Architecture Solutions, , IBM SOA Foundation: providing what you need to get started with SOA IBM white paper. September; Huhns, M.N., Singh, M.P., Service-oriented computing: Key concepts and principles (2005) IEEE Internet Computing, 9, pp. 75-81. , February; Dascalu, S., Hitchcock, P., Debnath, N.C., Klempau, A., From graphical representations to formal specifications and return: Translation algorithms in the harmony environment (2004) Proceedings of 200 IEEE International Conference on Information Reuse and Integration, pp. 215-221. , November; He, X., Ma, Z., Shao, W., Li, G., A metamodel for the notation of graphical modeling languages (2007) Computer Software and Applications Conference, 1, pp. 24-27. , COMPSAC 2007 31st Annual International, Volume 219-224, July 2007; Sommerville, I., (2004) Software Engineering, , 7th edition, Addison-Wesley; Bell, M., (2008) Service-Oriented Modeling: Service Analysis, Design, and Architecture, p. 2. , John Wiley & Sons, PP; Bertolini, D., Delpero, L., Mylopoulos, J., Novikau, A., Orler, A., Perini, A., Susi, A., Tomasi, B., A tropos model-driven development environment (2006) Proceedings of CAiSE 2006 Forum Proceedings, pp. 56-59. , June; Kim, S.K., Carrington, D., Visualization of formal specifications (1999) 6th Aisa Pacific Software Engineering Conference, IEEE, pp. 102-109; Snook, C., Butler, M., Using a Graphical Design Tool for Formal Specification (2001) Proc. 13th Annual Workshop of the Psychology of Programming Interest Group (PPIG), pp. 311-321. , March; Serrano, J.A., Formal specifications of software design methods (1999) 3rd Irish Workshop on Formal Methods Galway, , Ireland. July; Dulac, N., Viguier, T., Leveson, N.G., Storey, M.-A.D., On the use of visualization in formal requirements specification (2002) Proceedings of IEEE International Requirements Engineering Conference (RE), pp. 71-80; Perini, A., Pistore, M., Roveri, M., Susi, A., Agent-oriented modeling by interleaving formal and informal specification (2003) Proceedings of International Workshop on Agent- Oriented Software Engineering, Lecture Notes in Computer Science, p. 43. , Melbourne, Australia. July; Perini, A., Bresciani, P., Giunchiglia, F., Giorgini, P., Mylopoulos, J., A knowledge level software engineering methodology for agent oriented programming (2001) Proc. of the 5th Int. Conf on Autonomous Agents, Agents'01, , Montreal, Canada, May; Bresciani, P., Giorgini, P., Giunchiglia, F., Mylopoulos, J., Perrini, A., (2002) Tropos: An Agent-Oriented Software Development Methodology, , Technical Report DIT-02-0015, University of Trento, Italy; Wirsing, M., Hölzl, M., Koch, N., Mayer, P., Schroeder, A., Service engineering: The sensoria model driven approach (2008) Proc of Software Engineering Research, , Management and Applications (SERA) , Prague, Czech Republic; Pistore, M., Roveri, M., Busetta., P., Requirements-driven verification of web services (2004) Proc. of WS-FM'04, , Italy; Wirsing, M., Hölzl, M., Acciai, L., Banti, F., Clark, A., Nicola, R., Fantechi, A., Varro, D., SENSORIA patterns:Augmenting service engineering with formal analysis, transformation and dynamicity (2008) Proc. of the 3rd International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, Proceedings of ISoLA; Mayer, P., Schroeder, A., Koch., N., MDD4SOA: Model-driven service orchestration (2008) Proceedings of EDOC, IEEE, pp. 203-212; Lapadula, A., Pugliese, R., Tiezzi., F., A calculus for orchestration of web services (2007) Proc ESOP'07, , LNCS. Springer; (2005) Web Services Business Process Execution Language, , WS-BPEL TC OASIS, A. Arkin, S. Askary, B. Bloch, F. Curbera, Y. Goland, N. Kartha, C. K. Liu, S. Thatte, P. Yendluri, and A. Yiu, editors, May; Fantechi, A., Gnesi, S., Lapadula, A., Mazzanti, F., Pugliese, R., Tiezzi., F., A model checking approach for verifying COWS specifications (2008) In FASE, , LNCS. Springer; Banti, F., Pugliese, R., Tiezzi, F., Automated verification of UML models of services (2009) Tech. Rep., DSI, , Univ. Florence; Koch, N., Mayer, P., Heckel, R., Gonczy, L., Montangero, C., (2007) D1.4b: Uml for Service-oriented Systems, , Technical report, October; Tenenbaum, J.B., Griffiths, T.L., Kemp, C., Theory-based Bayesian models of inductive learning and reasoning (2006) Trends in Cognitive Sciences, 10, pp. 309-318. , July; Fowler., M., (1997) Analysis Patterns: Reusable Object Models, , Addison- Wesley, Reading, Massachusetts; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley and Sons; Koch, N., (2009) Modelling Service-Oriented Systems with UML4SOA, , 3rd SENSORIA Summer School (SENSUS 2009), Keszthely, Hungary; Hussein, D., Alaa, G., Hamad, A., Classifying Web 2.0 supported applications by pattern of usage: Functional and technical issues (2009) Proceeding of MCIS 4th International Conference in Information Systems MCIS 2009, pp. 25-27. , September, Athens, Greece","Hussein, D.; Faculty of Informatics and Computer Science, British University in Egypt, BUE, Cairo - Suez Desert Road, El Sherouk City, Cairo, Egypt; email: dina.hussein@bue.edu.eg",,Int. Assoc. Comput. Inf. Sci. (ACIS),,"11th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD2010",9 June 2010 through 11 June 2010,London,81518,,9780769540887,,,English,"Proc. - ACIS Int. Conf. Softw. Eng., Artif. Intell., Networking Parallel/Distrib. Comput., SNPD",Conference Paper,Scopus,2-s2.0-77956013460,,
,3,,"Berzal, F., Cortijo, F.J., Jiménez, A.",TMiner aspects: Crosscutting concerns in the TMiner component-based data mining framework,2010,Expert Systems with Applications,37,9,,6675,6681,,2,10.1016/j.eswa.2010.03.052,http://www.scopus.com/inward/record.url?eid=2-s2.0-80053618528&partnerID=40&md5=8123693fe6374578beb6cbd8a4c76be7,"Department of Computer Science and Artificial Intelligence, ETSIIT, University of Granada, Granada 18071, Spain","Berzal, F., Department of Computer Science and Artificial Intelligence, ETSIIT, University of Granada, Granada 18071, Spain; Cortijo, F.J., Department of Computer Science and Artificial Intelligence, ETSIIT, University of Granada, Granada 18071, Spain; Jiménez, A., Department of Computer Science and Artificial Intelligence, ETSIIT, University of Granada, Granada 18071, Spain","TMiner (Berzal, Cubero, & Jiménez, 2009) is a component-based data mining framework that has been designed to support the whole KDD process and facilitate the implementation of complex data mining scenarios. This paper shows how aspect-oriented programming techniques support some tasks whose implementation using conventional object-oriented programming would be extremely time-consuming and error-prone. In particular, we have successfully employed aspects in TMiner to evaluate and monitor the I/O performance of alternative data mining techniques. Without having to modify the source code of the system under analysis, aspects provide an unintrusive mechanism to perform this kind of performance analysis. In fact, aspects let us probe a system implementation so that we can identify potential bottlenecks, detect redundant computations, and characterize system behavior + lessons learned during the development of TMiner. © 2010 Elsevier Ltd. All rights reserved.",Aspect-oriented programming; Component-based systems; Crosscutting concerns; Data mining; Design patterns; Performance monitoring,Aspect-oriented; Complex data; Component based; Component based systems; Crosscutting concern; Data mining techniques; Design patterns; Error prones; I/O performance; Performance analysis; Performance monitoring; Programming technique; Redundant computation; Source codes; System behaviors; System implementation; Computer systems programming; Data mining; Object oriented programming; Software engineering; Aspect oriented programming,,,,,,"Berzal, F., Blanco, I., Cubero, J.-C., Marin, N., Component-based Data Mining Frameworks (2002) Communications of the ACM, 45 (12), pp. 97-100; Berzal, F., Cubero, J.C., Jiménez, A., The design and use of the TMiner component-based data mining framework (2009) Expert Systems with Applications, 36 (4), pp. 7882-7887; Berzal, F., Cubero, J.C., Sánchez, D., Serrano, J.M., ART: A hybrid classification model (2004) Machine Learning, 54 (1), pp. 67-92; Blake, C., Merz, C., (1998) UCI Repository of Machine Learning Databases, , http://www.ics.uci.edu/_mlearn/MLRepository.html; Boucké, N., Holvoet, T., Relating architectural views with architectural concerns (2006) EA '06: Proceedings of the 2006 International Workshop on Early Aspects at the International Conference on Software Engineering, pp. 11-18. , New York, NY, USA: ACM; Chitchyan, R., Rashid, A., Rayson, P., Waters, R., Semantics-based composition for aspect-oriented requirements engineering (2007) ACM International Conference Proceeding Series, 208, pp. 36-48. , DOI 10.1145/1218563.1218569, 6th International Conference on Aspect-Oriented Software Development - Research Track Proceedings; Clark, P., Boswell, R., Rule induction with CN2: Some recent improvements (1991) EWSL, pp. 151-163; Cohen, W.W., Fast effective rule induction (1995) Proceedings of the 12th International Conference on Machine Learning, pp. 115-123. , http://www.citeseer.ist.psu.edu/cohen95fast.html, A. Prieditis & S. Russell (Eds.), Tahoe City, CA: Morgan Kaufmann; Colyer, A., Greenfield, J., Jacobson, I., Kiczales, G., Thomas, D., Aspects: Passing fad or new foundation (2005) Oopsla '05: Companion to the 20th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 376-377. , New York, NY, USA: ACM; Constantine, L.L., Lockwood, L.A.D., (1999) Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design, , ACM Press/Addison-Wesley; Elrad, T., Aksit, M., Kiczales, G., Lieberherr, K.J., Ossher, H., Discussing aspects of aop (2001) Communications of the ACM, 44 (10), pp. 33-38; Fayad, M.E., Schmidt, D.C., Object-oriented application frameworks (1997) Communications of the ACM, 40 (10), pp. 32-38; Filman, R.E., Elrad, T., Clarke, S., Aksit, M., (2004) Aspect-Oriented Software Development, , Addison Wesley Professional; Fürnkranz, J., Widmer, G., Incremental reduced error pruning (1994) ICML, pp. 70-77; Gehrke, J., Ramakrishnan, R., Ganti, V., Rainforest - A framework for fast decision tree construction of large datasets (2000) Data Mining and Knowledge Discovery, 4 (2-3), pp. 127-162. , http://citeseer.ist.psu.edu/article/gehrke98rainforest.html; Gradecki, J.D., Lesiecki, N., (2003) Mastering Aspect J: Aspect-Oriented Programming in Java, , Wiley; Jacobson, I., Ng, P.-W., (2004) Aspect-Oriented Software Development with Use Cases, , Addison Wesley Professional; Kiczales, G., Aspect-oriented programming (1996) ACM Computing Surveys, 28 ES (4), p. 154; Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C., Loingtier, J.-M., Irwin, J., Aspect-Oriented Programming (1997) Lecture Notes in Computer Science, (1241), pp. 220-242. , ECOOP'97 - Object-Oriented Programming; Kiczales, G., Hilsdale, E., Hugunin, J., Kersten, M., Palm, J., Griswold, W.G., Getting started with aspect J (2001) Communications of the ACM, 44 (10), pp. 59-65; Kobryn, C., Modeling components and frameworks with UML (2000) Communications of the ACM, 43 (10), pp. 31-38; Laddad, R., (2003) Aspect J in Action: Practical Aspect-Oriented Programming, , Manning Publications; Larsen, G., Component-based enterprise frameworks (2000) Communications of the ACM, 43 (10), pp. 24-26; Moreira, A., Rashid, A., Araujc, J., Multi-dimensional separation of concerns in requirements engineering (2005) Proceedings of the IEEE International Conference on Requirements Engineering, pp. 285-296. , Proceedings - 13th IEEE International Conference on Requirements Engineering, RE 2005; Perry, D.E., Kaiser, G.E., Models of software development environments (1991) IEEE Transactions on Software Engineering, 17 (3), pp. 283-295; Quinlan, J.R., Induction of decision trees (1986) Machine Learning, 1 (1), pp. 81-106; Quinlan, J.R., (1993) C4.5: Programs for Machine Learning, , Morgan Kaufmann; Rozanski, N., (2005) Software Systems Architecture: Working with Stakeholders Using View Points and Perspectives, , Addison-Wesley; Shomrat, M., Yehudai, A., Obvious or not? regulating architectural decisions using aspect-oriented programming (2002) AOSD 2002: Proceedings of the 1st International Conference on Aspect-Oriented Software Development, pp. 3-9; Szyperski, C., Gruntz, D., Murer, S., (2002) Component Software: Beyond Objectoriented Programming, , Addison-Wesley","Berzal, F.; Department of Computer Science and Artificial Intelligence, ETSIIT, University of Granada, Granada 18071, Spain; email: fberzal@decsai.ugr.es",,,,,,,,9574174,,ESAPE,,English,Expert Sys Appl,Article,Scopus,2-s2.0-80053618528,,
,1,,"Wang, Y., Liu, D.",Research on three-dimensional roadway roaming system based on engine pattern,2010,"2010 International Conference on Computer Design and Applications, ICCDA 2010",2,,5540919,V217,V219,,,10.1109/ICCDA.2010.5540919,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955890950&partnerID=40&md5=e9d647e6a0cd246c7aed4a6eda9b5739,"Institute of Computer Science and Technology, Henan Polytechnic University, Jiaozuo, China","Wang, Y., Institute of Computer Science and Technology, Henan Polytechnic University, Jiaozuo, China; Liu, D., Institute of Computer Science and Technology, Henan Polytechnic University, Jiaozuo, China","The engine has become the development hypothesized simulation system's core technologies and the solution, this paper proposed a three-dimensional roadway roaming system, a common roaming architecture model; discussion of the use of the relatively more sophisticated collision detection algorithm, combined with bounding box algorithm and BSP technical processing Three-dimensional roadway system, collision detection. Combined W3C recommended standard SVG to propose the three dimensional roadway system based on the B/S architecture solution concept. © 2010 IEEE.",Design patterns; Engine; SVG; Three-dimensional roadway,Architecture models; B/S architecture; Bounding box algorithm; Collision detection; Collision detection algorithm; Core technology; Design Patterns; Roadway systems; Roaming systems; Simulation systems; Solution concepts; SVG; Technical processing; Three-dimensional roadway; Computer applications; Design; Three dimensional,,,,,,"Zhang, M., Yang, H., Pan, Z., Virtual Walkthrough System Base on Game Engine (2007) Computer Science, 34 (12), pp. 78-81. , J. Computer Science, 2007,34(12):78-81; Li, Z., Meng, X., Analysis and design of 3D engine in shoot simulation system (2006) Jisuanji Gongcheng/Computer Engineering, 32 (20), pp. 227-229; He, Z., Yu, J., The Application and Research of Design Pattern in 3D Graphics Engine (2008) Journal of System Simulation, 20, pp. 158-161. , J; Fan, Z., Wan, H., Gao, S., A Parallel Algorithm for Rapid Collision Detection (2000) Journal of System Simulation, 12 (5), pp. 548-552. , J; Xiong, Y., Zeng, X., Chen, Y.-M., Reaearch on a Parallel Algorithm for Rapid Collision Detection (2008) Computer Application and Software, 25 (4), pp. 48-50. , J","Wang, Y.; Institute of Computer Science and Technology, Henan Polytechnic University, Jiaozuo, China; email: wyk@hpu.edu.cn",,Int. Assoc. Comput. Sci. Inf. Technol. (IACSIT);Institute of Electrical and Electronics Engineers (IEEE);Northeastern University at Qinhuangdao (NEUQ);Dalian University of Technology;National Natural Science Foundation of China (NSFC),,"2010 International Conference on Computer Design and Applications, ICCDA 2010",25 June 2010 through 27 June 2010,"Qinhuangdao, Hebei",81482,,9781424471638,,,English,"Int. Conf. Comput. Des. Appl., ICCDA",Conference Paper,Scopus,2-s2.0-77955890950,,
,v,,"Pettersson, N., Löwe, W., Nivre, J.",Evaluation of accuracy in design pattern occurrence detection,2010,IEEE Transactions on Software Engineering,36,4,5374428,575,590,,16,10.1109/TSE.2009.92,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955342822&partnerID=40&md5=835a5a6685a5288bad2b4c9465ebdf0f,"School of Computer Science, Physics and Mathematics, Linnaeus University, 351 95 Växjö, Sweden; Department of Linguistics and Philology, Uppsala University, Box 635, 751 26 Uppsala, Sweden","Pettersson, N., School of Computer Science, Physics and Mathematics, Linnaeus University, 351 95 Växjö, Sweden; Löwe, W., School of Computer Science, Physics and Mathematics, Linnaeus University, 351 95 Växjö, Sweden; Nivre, J., Department of Linguistics and Philology, Uppsala University, Box 635, 751 26 Uppsala, Sweden","Detection of design pattern occurrences is part of several solutions to software engineering problems, and high accuracy of detection is important to help solve the actual problems. The improvement in accuracy of design pattern occurrence detection requires some way of evaluating various approaches. Currently, there are several different methods used in the community to evaluate accuracy. We show that these differences may greatly influence the accuracy results, which makes it nearly impossible to compare the quality of different techniques. We propose a benchmark suite to improve the situation and a community effort to contribute to, and evolve, the benchmark suite. Also, we propose fine-grained metrics assessing the accuracy of various approaches in the benchmark suite. This allows comparing the detection techniques and helps improve the accuracy of detecting design pattern occurrences. © 2010 IEEE.",evaluation; measurement techniques; object-oriented design methods; Patterns; reengineering; restructuring; reverse engineering,Benchmark suites; Design Patterns; Detection technique; measurement techniques; Object oriented design methods; Reverse engineering; Software engineering; Reengineering,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-Oriented Software, , Addison-Wesley; Meyer, M., Pattern-based reengineering of software systems (2006) Proc. 13th Working Conf. Reverse Eng., pp. 305-306. , Oct; Vokac, M., An efficient tool for recovering design patterns from C++ code (2006) J. Object Technology, 5 (1), pp. 139-157. , Jan./ Feb; Driesen, K., Holzle, U., The direct cost of virtual function calls in C++ (1996) SIGPLAN Notices (ACM Special Interest Group on Programming Languages), 31 (10), pp. 306-323; Schultz, U.P., Lawall, J.L., Consel, C., Specialization patterns (2000) Proc. 15th Int'l Conf. Automated Software Eng., pp. 197-206; Buchholz, S., Marsi, E., CoNLL-X shared task on multilingual dependency parsing (2006) Proc. 10th Conf. Computational Natural Language Learning, pp. 149-164. , http://www.aclweb.org/anthology/W/W06/W06-2920, June; Sim, S.E., Easterbrook, S., Holt, R.C., Using benchmarking to advance research: A challenge to software engineering (2003) Proc. 25th Int'l Conf. Software Eng., pp. 74-83; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: Putting icing on the UML cake (2004) Proc. Conf. Object Oriented Programming Systems Languages and Applications, pp. 301-314. , J.M. Vlissides and D.C. Schmidt, eds; Kaczor, O., Guéhéneuc, Y.-G., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) Proc. Conf. Software Maintenance and Reeng., , Mar; Guéhéneuc, Y.-G., Mens, K., Wuyts, R., A comparative framework for design recovery tools (2006) Proc. 10th Conf. Software Maintenance and Reeng., pp. 123-134. , Mar; Guéhéneuc, Y.-G., Antoniol, G., Demima: A multi-layered approach for design pattern identification (2008) IEEE Trans. Software Eng., 34 (5), pp. 667-684. , Sept./Oct; Dong, J., Zhao, Y., Peng, T., Architecture and design pattern discovery techniques-a review (2007) Proc. Int'l Workshop System/ Software Architectures, , June; Peng, T., Dong, J., Zhao, Y., Verifying behavioral correctness of design pattern implementation (2008) Proc. Int'l Conf. Software Eng. and Knowledge Eng., pp. 454-459; Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching (2008) Proc. ACM Symp. Applied Computing, pp. 765-769; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proc. 24th Int'l Conf. Software Eng., pp. 338-348; Niere, J., Wedsack, J.P., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) Proc. 11th IEEE Int'l Workshop Program Comprehension, , May; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proc. Int'l Conf. Software Eng. 2003 Workshop Dynamic Analysis, , May; Wendehals, L., Meyer, M., Elsner, A., Selective tracing of java programs (2004) Proc. Second Int'l Fujaba Days, pp. 7-10. , Sept; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proc. Workshop Dynamic Analysis, , May; Costagliola, G., Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery by visual language parsing (2005) Proc. Conf. Software Maintenance and Reeng., , Mar; Costagliola, G., Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Case studies of visual language based design patterns recovery (2006) Proc. Conf. Software Maintenance and Reeng., , Mar; Antoniol, G., Fiutem, R., Christoforetti, L., Design pattern recovery in object-oriented software (1998) Proc. Sixth Int'l Workshop Program Comprehension, pp. 153-160. , June; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proc. 11th Int'l Workshop Program Comprehension, , May; Pettersson, N., Löwe, W., A non-conservative approach to software pattern detection (2007) Proc. 15th IEEE Int'l Conf. Program Comprehension, pp. 189-197. , K. Wong, E. Stroulia, and P. Tonella, eds., June; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proc. Working Conf. Reverse Eng., pp. 208-215. , Nov; Beyer, D., Noack, A., Lewerentz, C., Simple and efficient relational querying of software structures (2003) Proc. 10th IEEE Working Conf. Reverse Eng., pp. 216-225. , Nov; Brown, K., Design reverse-engineering and automated design pattern detection in smalltalk (1996) Technical Report TR-96-107, , North Carolina State Univ., June; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse-engineering of design components (1999) Proc. Int'l Conf. Software Eng., pp. 226-235. , May; Balanyi, Z., Ferenc, R., Mining design patterns from C++ code (2003) Proc. IEEE Int'l Conf. Software Maintenance, , Sept; Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Software and Systems Modeling, 4 (1), pp. 55-70. , Feb; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) Proc. Int'l Conf. Software Eng. Workshop Dynamic Analysis, , May; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Proc. Int'l Conf. Automated Software Eng., , Sept; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Software Eng., 32 (11), pp. 896-909. , Nov; Seemann, J., Von Gudenberg, J.W., Pattern-based design recovery of java software (1998) Proc. ACM SIGSOFT, pp. 10-16. , Nov; Smith, J.M., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Proc. IEEE Int'l Conf. Automated Software Eng., , Oct; (2003) Treebanks: Building and Using Parsed Corpora, , A. Abeillé, ed. Kluwer Academic Publishers; Marcus, M.P., Santorini, B., Marcinkiewicz, M.A., Building a large annotated corpus of English: The penn treebank (1993) Computational Linguistics, 19, pp. 313-330; Black, E., Abney, S., Flickinger, D., Gdaniec, C., Grishman, R., Harrison, P., Hindle, D., Strzalkowski, T., A procedure for quantitatively comparing the syntactic coverage of English grammars (1991) Proc. DARPA Speech and Natural Language Workshop, pp. 306-311; Grishman, R., MacLeod, C., Sterling, J., Evaluating parsing strategies using standardized parse files (1992) Proc. Third ACL Conf. Applied Natural Language Processing, pp. 156-161; Vorhees, E.M., The philosophy of information retrieval evaluation (2002) Proc. 12th Text Retrieval Conf., pp. 355-370; Ahlgren, P., Grönqvist, L., Measuring retrieval effectiveness with incomplete relevance data (2006) Proc. Conf. Current Research in Information Sciences and Technology; Fülöp, L., Gyovai, T., Ferenc, R., Evaluating C++ design pattern miner tools (2006) Proc. Sixth IEEE Int'l Workshop Source Code Analysis and Manipulation, , Sept; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection (2006) Proc. First Int'l Workshop Design Pattern Detection for Reverse Eng., , Oct; Fülöp, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Proc. 12th European Conf. Software Maintenance and Reeng., pp. 143-152. , Apr; (2008) Pinot, , http://www.cs.ucdavis.edu/shini/research/pinot/, Jan; Pettersson, N., Towards pattern detection in software (2006) Licentiate Thesis, School of Math. and Systems Eng., , Växjö Univ., May; Pettersson, N., (2009) Design Pattern Detection Evaluation Suite (DPDES), , http://w3.msi.vxu.se/users/npe/DPDES, May","Pettersson, N.; School of Computer Science, Physics and Mathematics, Linnaeus University, 351 95 Växjö, Sweden; email: niklas.pettersson@lnu.se",,,,,,,,985589,,IESED,,English,IEEE Trans Software Eng,Article,Scopus,2-s2.0-77955342822,,
,v,,"Alnusair, A., Zhao, T.",Using semantic inference for software understanding and design recovery,2010,ITNG2010 - 7th International Conference on Information Technology: New Generations,,,5501504,980,985,,,10.1109/ITNG.2010.96,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955287847&partnerID=40&md5=ed448c09b239b3944c1a54a755c8fd90,"Department of Electrical Engineering and Computer Science, University of Wisconsin, Milwaukee, WI, United States","Alnusair, A., Department of Electrical Engineering and Computer Science, University of Wisconsin, Milwaukee, WI, United States; Zhao, T., Department of Electrical Engineering and Computer Science, University of Wisconsin, Milwaukee, WI, United States","Software understanding is often refers to the processes and activities undertaken by software engineers to fully comprehend complex software systems. Capturing software design can certainly enable a better environment for software understanding and reuse. This paper extends our previous work [1] on automatic design pattern recovery and details our vision towards a comprehensive environment for software understanding. Our approach utilizes Semantic Web technologies to provide a formal and explicit semantic-based representation of software systems. Through extended case studies and tool evaluations, we show that this software representation enables a detection mechanism that is both effective and usable. © 2010 IEEE.",Design patterns; Knowledge representation; Ontology reasoning; Semantic web; Software evolution,Automatic design; Complex software systems; Design patterns; Design recovery; Detection mechanism; Explicit semantics; Semantic inference; Semantic Web technology; Software engineers; Software systems; Software understanding; Computer software reusability; Design; Information technology; Knowledge representation; Object oriented programming; Ontology; Semantics; Software design; World Wide Web; Semantic Web,,,,,,"Alnusair, A., Zhao, T., Towards a model-driven approach for reverse engineering design patterns Proc. International Workshop on Transforming and Weaving Ontologies in MDE (TWOMDE'09) at MoDELS'09, Oct. 2009; Cinneide, M.O., Nixon, P., A methodology for the automatic introduction of design patterns Proc. IEEE International Conference on Software Maintenance (ICSM' 99), 1999, pp. 463-472; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code Proc. IEEE/ACM International Conference on Automated Software Engineering, Sep. 2006, pp. 123-132; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Trans. Softw. Eng., 32 (11), pp. 896-909. , Nov; Sartipi, K., Hu, L., Behavior-driven design pattern recovery Proc. IASTED International Conference on Software Engineering and Applications(SEA 2008), Nov. 2008, pp. 179-185; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software Proc. Working Conference on Reverse Engineering (WCRE96), 1996, pp. 208-215; Wuyts, R., Declarative reasoning about the structure of object-oriented systems Proc. of TOOLS USA '98, 1998, pp. 112-124; Dietrich, J., Elgar, C., A formal description of design patterns using owl Proc. Australian Software Engineering Conference, 2005, pp. 243-250; Kirasić, D., Basch, D., Ontology-based design pattern recognition Proc. International Conference on Knowledge-Based and Intelligent Information and Engineering Systems (KES'08), 2008, pp. 384-393; Gruber, T., A translation approach to portable ontology specifications (1993) Knowledge Acquisition, 5 (2), pp. 199-220; Berners-Lee, T., Hendler, J., Lassila, O., The semantic web (2001) Scientific American, 284 (5). , May; Alnusair, A., Zhao, T., Source Code Representation Ontology (SCRO), Design Pattern Ontolgies, and Framework Ontologies, , http://www.cs.uwm.edu/~alnusair/ontologies; http://clarkparsia.com/pellet/, Pellet homeGamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Jasper, R.J., Uschold, M.F., A framework for understanding and classifying ontology apllications Proc. International Workshop on Description Logics, 2004; http://jena.sourceforge.net/, Jena homeHou, D., Investigating the effects of framework design knowledge in example-based framework learning Proc. IEEE International Conference on Software Maintenance (ICSM'08), 2008, pp. 37-46; Holmes, R., Murphy, G., Using structural context to recommend source code examples Proc. International Conference on Software Engineering, 2005, pp. 117-125; Tansalarak, N., Claypool, K., XSnippet: Mining for sample code Proc. International Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), 2006, pp. 413-430","Alnusair, A.; Department of Electrical Engineering and Computer Science, University of Wisconsin, Milwaukee, WI, United States; email: alnusair@uwm.edu",,"Premier Hall for Advancing Science and Engineering, Inc. (PHASE)",,"7th International Conference on Information Technology - New Generations, ITNG 2010",12 April 2010 through 14 April 2010,"Las Vegas, NV",81329,,9780769539843,,,English,ITNG - Int. Conf. Inf. Technol.: New Generations,Conference Paper,Scopus,2-s2.0-77955287847,,
,??,,"Carvalho, S.C., Montini, D.Á., Cardoso, F.R.M., Santos, A., Fernades, D.D., Tasinaffo, P.M.",Syntatic patterns recognition applied to the APF analyses,2010,ITNG2010 - 7th International Conference on Information Technology: New Generations,,,5501575,1309,1311,,,10.1109/ITNG.2010.84,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955300444&partnerID=40&md5=f900851fe01659bed66528f665f22a95,"Brazilian Aeronautics Institute of Technology - ITA, Brazil","Carvalho, S.C., Brazilian Aeronautics Institute of Technology - ITA, Brazil; Montini, D.Á., Brazilian Aeronautics Institute of Technology - ITA, Brazil; Cardoso, F.R.M., Brazilian Aeronautics Institute of Technology - ITA, Brazil; Santos, A., Brazilian Aeronautics Institute of Technology - ITA, Brazil; Fernades, D.D., Brazilian Aeronautics Institute of Technology - ITA, Brazil; Tasinaffo, P.M., Brazilian Aeronautics Institute of Technology - ITA, Brazil","The evolution of technology has enabled research in several areas, one is the software manufacturing cells planning. There are several techniques for the study of design patterns. This line of research and development, small scale production, has been offered some computer systems dedicated to of design patterns analysis. The aim of this paper is to present the software implementation that uses Grammar of design patterns to validate string of characters in valid design patterns. © 2010 IEEE.",Context free grammar; CYK algorithm; Patterns recognition and APF,CYK algorithm; Design Patterns; Evolution of technology; Manufacturing cells; Research and development; Small-scale production; Software implementation; Computer software; Design; Flexible manufacturing systems; Industrial research; Information technology; Context free grammars,,,,,,"Montini, D.Á., (2005) Modelo de Indicadores de Risco para O Orçamento de Componentes de Software para Célula de Manufatura, , Production Engeineering Dissetation, UNIP, Brazil, São Paulo; CMMI for Development, , http://www.sei.cmu.edu/publicatons/documents/06.reports/06tr008.html, Version 1.2, CMU/SEI-2006-TR-008, Available in August of 2006; Forster, C.H.Q., (2008) Visão Geral Do Reconhecimento de Padrões: Curso Introdução a Análise de Padrões; NLTK - Natural Language Toolkit, , http://sourceforge.net/projects/nltk/, Available in Juneof 2009; Rodrigues, E., Lopes, H.S., (2007) Inferência de Gramáticas Livres de Contexto Usando Programação Genética, , UFPR, Brazil, Paraná, Curitiba; Polidorio, A.M., Borges, D.L., (2007) Um Método de Reconhecimento Sintático de Caracteres para Identificação de Placas de Veículos, , UEMA, Brazil, Pará, Maringá; (2008) Function Points Analysis - FPA, Training Course, , www.SoftwareMetrics.com, Longstreet Consulting Inc; EUA; (2007) Function Points Analysis - FPA, FPA Applied to DATA WAREHOUSING, , www.nesma.nl, Version 1.1.0. Publication of the Netherlands software metrics users association. Holanda; Python Programming Language - Official Website, , http://www.python.org, acesso em jun/2009","Carvalho, S. C.; Brazilian Aeronautics Institute of Technology - ITABrazil",,"Premier Hall for Advancing Science and Engineering, Inc. (PHASE)",,"7th International Conference on Information Technology - New Generations, ITNG 2010",12 April 2010 through 14 April 2010,"Las Vegas, NV",81329,,9780769539843,,,English,ITNG - Int. Conf. Inf. Technol.: New Generations,Conference Paper,Scopus,2-s2.0-77955300444,,
,3,,"Seffah, A.",The evolution of design patterns in HCI: From pattern languages to pattern-oriented design,2010,ACM International Conference Proceeding Series,,,,4,9,,,10.1145/1824749.1824751,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955129812&partnerID=40&md5=d52ae0d9969c58560fefc1dc0236f5c3,"Human-Centered Software Engineering Group, Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada","Seffah, A., Human-Centered Software Engineering Group, Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada","User interface design patterns also called HCI or interaction or usability patterns have been introduced first as a medium to capture and represent solutions to users' problems. Patterns have been used also as a medium for transferring the expertise of HCI designers and usability professionals to software engineers, who are usually unfamiliar with UI design and usability principles. Design patterns have been considered also as a lingua franca for crossing cultural and professional barriers between different stakeholders. Several HCI professionals have introduced their own pattern languages with specific terminology, classification and meanings. Patterns have also been presented as building reusable blocks at different levels of granularity, which can be combined to compose new interactive systems. Despite the obvious and acclaimed potential of these pattern-driven design approaches, patterns usage has not achieved the acceptance and widespread applicability envisaged by pattern pioneers such as Christopher Alexander. This paper provides an analysis of the facts about patterns usages, pattern languages and pattern-based design approaches. Some shortcomings in the presentation and application of HCI patterns are identified and discussed under the prevailing fallacies. Based on the analysis of how patterns have used so far, we draw some recommendations and future perspectives on what can be done to address the existing shortcomings. Making patterns more accessible, easily understandable, comparable and integratable in software and HCI design tools can promote HCI patterns to claim the usability, usefulness and importance originally envisaged for the pattern-oriented design approach. © 2010 ACM.",Design methods; Design patterns; Human-computer interaction; Pattern-oriented design,Christopher Alexander; Design approaches; Design method; Design Patterns; Future perspectives; HCI design; Interactive system; Pattern languages; Pattern-oriented designs; Software engineers; UI designs; Usability patterns; User interface design patterns; Biographies; Computer software reusability; Computer systems; Human computer interaction; Knowledge management; Linguistics; Usability engineering; User interfaces; Design,,,,,,"For further information on patterns including an exhaustive list of references, please visit the IPE (Integrated Pattern Environment Website) at hci.concordia.ca","Seffah, A.; Human-Centered Software Engineering Group, Department of Computer Science and Software Engineering, Concordia University, Montreal, Canada; email: seffah@cse.concordia.ca",,,,"1st International Workshop on Pattern-Driven Engineering of Interactive Computing Systems, PEICS '10, Organized at the 2nd ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS '10",20 June 2010 through 20 June 2010,Berlin,81290,,9781450302463,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-77955129812,,
,v,,"Stoianov, A., Şora, I.",Detecting patterns and antipatterns in software using prolog rules,2010,"ICCC-CONTI 2010 - IEEE International Joint Conferences on Computational Cybernetics and Technical Informatics, Proceedings",,,5491288,253,258,,2,10.1109/ICCCYB.2010.5491288,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955148790&partnerID=40&md5=94e3551f0c97acdbbe042432f1c9e303,"Department of Computers, Politennica University of Timisoara, Romania","Stoianov, A., Department of Computers, Politennica University of Timisoara, Romania; Şora, I., Department of Computers, Politennica University of Timisoara, Romania","Program comprehension is a key prerequisite for the maintainance and analysis of legacy software systems. Knowing about the presence of design patterns or antipatterns in a software system can significantly improve the program comprehension.Unfortunately, in many cases the usage of certain patterns is seldom explicitly described in the software documentation, while antipatterns are never described as such in the documentation. Since manual inspection of the code of large software systems is difficult, automatic or semi-automatic procedures for discovering patterns and antipatterns from source code can be very helpful. In this article we propose detection methods for a set of patterns and antipatterns, using a logic-based approach. We define with help of Prolog predicates both structural and behavioural aspects of patterns and antipatters. The detection results obtained for a number of test systems are also presented. © 2010 IEEE.",Antipattern; Design pattern; Detection,Anti-patterns; Behavioural aspects; Design Patterns; Detection methods; Large software systems; Legacy software; Logic-based approach; Manual inspection; Program comprehension; Semi-automatic procedures; Software documentation; Software systems; Source codes; Test systems; Cybernetics; Design; Information science; Legacy systems; PROLOG (programming language); System program documentation; Computer software,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns; Elements of Reusable Object-Oriented Software, , Addison Wesley; Brown, W.J., Malveau, R.C., McCormick, H.W., Mowbray, T.J., (1998) Antipatterns: Refactoring Software, Architectures, and Projects in Crisis, , New York: John Wilet and Sons; Pallet, D., Ducasse, S., Poyet, L., Alloui, I., Campan, S., Verjus, H., Towards a process-oriented software architecture reconstruction taxonomy (2007) Software Maintenance and Reengineering, European Conference on, 0, pp. 137-148; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) The International Journal of Software Engineering and Knowledge Engineering (IJSEKE), 19, pp. 823-855; Kniesel, G., Binun, A., Standing on the shoulders of giants - A data fusion approach to design pattern detection (2009) 17th International Conference on Program Comprehension (ICPC 2009), pp. 208-217. , IEEE Computer Society Press; Llano, M.T., Pooley, R., UML specification and correction of object-oriented anti-patterns (2009) Proceedings of Fourth International Conference on Software Engineering Advances, pp. 39-44. , IEEE Computer Society Press; Moha, N., Gueheneuc, Y.-G., Duchien, L., Le Meur, A.-F., Decor: A method for the specification and detection of code and design smells (2010) Software Engineering, IEEE Transactions on, 36, pp. 20-36; Lanza, M., Marinescu, R., (2006) Object Oriented Metrics in Practice, , Springer Verlag; Kniesel, G., Hannemann, J., Rho, T., A comparison of logic-based infrastructures for concern detection and extraction (2007) LATE '07: Proceedings of the 3rd Workshop on Linking Aspect Technology and Evolution, p. 6. , New York, NY, USA: ACM; http://roots.iai.un.ibonn.de/research/jtransformer, The JTransformer project. [Online]Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison Wesley; http://www.cs.ucdavis.edu/shini/research/pi.not/index.html, The Pinot project. [Online]","Stoianov, A.; Department of Computers, Politennica University of TimisoaraRomania",,,,"IEEE International Joint Conferences on Computational Cybernetics and Technical Informatics, ICCC-CONTI 2010",27 May 2010 through 29 May 2010,Timisoara,81307,,9781424474332,,,English,"ICCC-CONTI - IEEE Int. Jt. Conf. Comput. Cybern. Tech. Informatics, Proc.",Conference Paper,Scopus,2-s2.0-77955148790,,
,1,,"Hullett, K.",The science of level design,2010,FDG 2010 - Proceedings of the 5th International Conference on the Foundations of Digital Games,,,,262,264,,1,10.1145/1822348.1822387,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955143795&partnerID=40&md5=83d5cf84f07e45056658dd3a7e9e84f8,"University of California, Santa Cruz, Santa Cruz, CA 95064, United States","Hullett, K., University of California, Santa Cruz, Santa Cruz, CA 95064, United States","Level designers create gameplay through geometry, AI scripting, and item placement. There is little formal understanding of this process, but rather a large body of design lore and rules of thumb. We have taken a first step in improving understanding by identifying design patterns in first-person shooter (FPS) levels, providing cause-effect relationships between level design elements and gameplay. The next step is to validate this theory with a series of experiments that test the strength of these relationships. Analysis data collected from subjects can improve understanding and provide designers with scientifically verified tools for creating gameplay in FPS levels. © 2010 ACM.",Data mining; Design patterns; Game design; Level design; Player modeling; User testing,Cause-effect relationships; Design Patterns; First person shooter; Game design; Level design; Player modeling; User testing; Data mining; Interactive computer graphics; Java programming language; Design,,,,,,"Alexander, C., (1977) A Pattern Language, , Oxford University Press; Björk, S., Holopainen, J., (2004) Patterns in Game Design, , Charles River Media; Bryne, E., (2005) Game Level Design, , Charles River Media; Clayton, A., (2003) Introduction to Level Design for PC Games, , Charles River Media; Co, P., (2006) Level Design for Games: Creating Compelling Game Experiences, , New Riders; Drachen, A., Canossa, A., Yannakakis, G.N., Player modeling using self-organization in tomb raider: Underworld (2009) Proceedings of the IEEE Symposium on Computational Intelligence and Games; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Kreimeier, B., (2002) The Case for Game Design Patterns, , www.gamasutra.com/features/20020313/kreimeier_03.htm, March 12; Pedersen, C., Togelius, J., Yannakakis, G.N., Modeling player experience in super mario bros (2009) Proceedings of the IEEE Symposium on Computational Intelligence and Games","Hullett, K.; University of California, Santa Cruz, Santa Cruz, CA 95064, United States; email: khullett@soe.ucsc.edu",,"ACM Special Interest Group on Artificial Intelligence (SIGART);ACM Spec. Interest Group Comput. Graph. Interact. Tech.;ACM Spec. Interest Group Hypertext, Hypermedia, Web (SIGWEB);Microsoft;ACM Special Interest Group on Management of Data (SIGMOD)",,"5th International Conference on the Foundations of Digital Games, FDG 2010",19 June 2010 through 21 June 2010,"Monterey, CA",81293,,9781605589374,,,English,FDG - Proc. Int. Conf. Found. Digit. Games,Conference Paper,Scopus,2-s2.0-77955143795,,
,3,,"Mertens, A., Jochems, N., Schlick, C.M., Dünnebacke, D., Dornberg, J.H.",Design pattern TRABING: Touchscreen-based input technique for people affected by intention tremor,2010,EICS'10 - Proceedings of the 2010 ACM SIGCHI Symposium on Engineering Interactive Computing Systems,,,,267,272,,6,10.1145/1822018.1822060,http://www.scopus.com/inward/record.url?eid=2-s2.0-77955098316&partnerID=40&md5=5614827ae64b4ab92223c1893718f1c9,"RWTH Aachen University, Germany","Mertens, A., RWTH Aachen University, Germany; Jochems, N., RWTH Aachen University, Germany; Schlick, C.M., RWTH Aachen University, Germany; Dünnebacke, D., RWTH Aachen University, Germany; Dornberg, J.H., RWTH Aachen University, Germany","Tremor patients are frequently facing problems when interacting with IT systems and services. They do not reach the same levels of input efficiency and easily become unhappy with a technology they do not perceive as a general asset. Cases of Intention tremor show a significant comparative rise in inaccurate movement towards a real button or virtual buttons on touch screens, as this particular tremor increases its symptoms when approaching a desired physical target. People suffering from this specific tremor have been identified as the target group. This group has been closely investigated and thus, a new input procedure has been developed which may be used on standard touch screens. The new technique enables users, accordingly tremor patients, to fully operate IT-based systems and therefore possess full control over input. Deviations caused by the tremor are compensated with a continuous movement instead of a single targeted move which remains the most difficult task to the user. Also, the screen surface will present a frictional resistance, which significantly hinders tremor symptoms. Input can be identified by the computer system with high accuracy, by means of special heuristics, which support barrier free access beyond the target group. © 2010 ACM.",Ambient assited living (AAL); Design pattern; Human-computer interaction (HCI); Touchscreen; Tremor,Barrier-free; Design Patterns; Frictional resistance; Full control; Input techniques; IT system; Target group; Touch screen; Computer systems; Design; Friction; Information technology; Knowledge management; Targets; Human computer interaction,,,,,,"(2006) Umhegt Oder Abhängig: Der Mensch in Einer Digitalen Umgebung, , Eberspächer J., Reden, J. Von, (EDS) Springer, Heidelberg; Mertens, A., Kausch, B., Dünnebacke, D., Laing, P., Adequate requirements analysis in homely rehab (2009) EChallenges E-2009 Conference Proceedings, Paul Cunningham and Miriam Cunningham (Hrsg.), , IIMC International Information Management Corporation; Intelligent enviroments - Methods (2009) Algorithms and Applications, , Monekosso, D., Remangnino, P., Kuno, Y. (Eds) London: Springer; Martínez-Martín, P., An introduction to the concept of ""quality of life in parkinson's disease"" (1998) Journal of Neurology, , Springer, Berlin; Korhonen, P., Paavilainen, A., Application of ubiquitous computing technologies for support of independent living of the elderly in real life settings (2003) Ubicomp 2003 UbiHealth Workshop; Tom, S., Technikgestaltung aus sicht des nutzers (2008) Digitale Visionen, , Springer, Berlin Heidelberg; Akram, W., Tiberii, L., Betke, M., (2007) A Customizable Camera-Based Human Computer Interaction System Allowing People with Disabilities Autonomous Hands-Free Navigation of Multiple Computing Tasks, , Springer; Kobsa, A., Stephanidis, C., Adaptable and adaptive information access for all users Including Disabled and Elderly People, , Pittsburgh, USA; Rutgersson, S., Arvola, M., (2007) User Interfaces for Persons with Deafblindness, LNCS 4397, , Springer; Keshet, J., Bengio, S., (2009) Automatic Speech and Speaker Recognition: Large Margin and Kernel Methods, , John Wiley & Sons; Pfister, B., Kaufmann, T., (2008) Sprachverarbeitung: Grundlagen und Methoden der Sprachsynthese und Spracherkennung, , Springer, Berlin; Duchowski, A.T., (2009) Eye Tracking Methodology: Theory and Practice, , Springer, Berlin, 2nd ed; Gollücke, V., Eye-tracking - Grundlagen (2009) Technologien und Anwendungsgebiete, , Grin Verlag; Schalk, G., Mellinger, J., (2010) Introduction to Brain-Computer Interfacing Using BCI 2000, , Springer London Ltd; Plumb, M., Bain, P., (2006) Essential Tremor: The Facts, , Oxford Univ Pr; Raskin, J., The humane interface (2005) New Directions for Designing Interactive Systems, , Addison -Wesley; (2006) Ambient Assisted Living - European Overview Report: Europe Is Facing a Demographic Challenge: Ambient Assisted Living Offers Solutions, , VDI/VDE; (2008) Statistisches Bundesamt (Hrsg.): Demografischer Wandel in Deutschland - Heft 1: Bevölkerungs- und Haushaltsentwicklung im Bund und in Den Ländern, , Onlineveröffentlichung; Wahl, H., Naegele, G., Zukunft des alters in einer alternden gesellschaft: Szenarien jenseits von ökonomie und demografie (2004) Sozialer Fortschritt, 53 (2004), pp. 11-12; Klaffke, S., Trottenberg, T., (2009) Essentieller Tremor, , www.Charite-Berlin.de; Schneider, N., Vetter, S., Kausch, B., Schlick, C., Age-differentiated visualization of network plans for project management software (2009) Proceedings of the IEA2009-17th World Congress on Ergonomics, pp. 1-8. , 09.-14. August, Beijing (CD-ROM), Beijing, China; Borchers, J., (2001) A Pattern Approach to Interaction Design, , Chichester: Wiley; Mertens, A., Przybysz, P., Kausch, B., Dünnebacke, D., Schlick, C., Adequate assistance for elderly people in homely rehab Proceedings of Intelligent Interactive Assistance and Mobile Multimedia Computing Conference 2009, 36 (3), pp. 328-340. , Communication in Computer and information science (CCIS), Springer, 2009. Sousa JP, Poladian V, Garlan D et al (2006) Task-based adaptation for ubiquitous computing. IEEE Transactions on Systems, Man, and Cybernetics C; Fitts Paul, M., The information capacity of the human motor system in controlling the amplitude of movement (1954) Journal of Experimental Psychology, 47 (6); MacKenzie, I.S., Buxton, W., Extending fittś law to two-dimensional tasks (1992) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems 1992, , P. Bauersfeld, J. Bennett, G. Lynch, Eds. ACM, New York; Mertens, A., Dünnebacke, D., Kausch, B., Laing, P., Schlick, C.M., Innovation of homely rehab with help of telemedical services (2009) IFMBE Proceedings of World Congress on Medical Physics and Biomedical Engineering, , Dössel, Schlegel (Hrsg.), Munich, Springer; Gina, M.J., Sherry, L.W., Influence of direct computer experience on older adultś attitudes toward computers (1992) Journal of Gerontology: Psychological Science, 47 (4), pp. 250-257; Ellison, N., Heino, R., Gibbs, J., (2006) Managing Impressions","Mertens, A.; RWTH Aachen UniversityGermany; email: a.mertens@iaw.rwth-aachen.de",,ACM SIGCHI,,"2nd ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'10",19 June 2010 through 23 June 2010,Berlin,81247,,9781450300834,,,English,EICS - Proc. ACM SIGCHI Symp. Eng. Interact. Comput. Syst.,Conference Paper,Scopus,2-s2.0-77955098316,,
,v,,"Von Detten, M., Meyer, M., Travkin, D.",Reverse engineering with the reclipse tool suite,2010,Proceedings - International Conference on Software Engineering,2,,,299,300,,10,10.1145/1810295.1810360,http://www.scopus.com/inward/record.url?eid=2-s2.0-77954706960&partnerID=40&md5=e7861067ab4ceb633dd20e9fc2bdaee6,"Heinz Nixdorf Institute, Department of Computer Science, University of Paderborn, Germany","Von Detten, M., Heinz Nixdorf Institute, Department of Computer Science, University of Paderborn, Germany; Meyer, M., Heinz Nixdorf Institute, Department of Computer Science, University of Paderborn, Germany; Travkin, D., Heinz Nixdorf Institute, Department of Computer Science, University of Paderborn, Germany","Design pattern detection is a reverse engineering methodology that helps software engineers to analyze and understand legacy software by recovering its design and thereby aiding in the preparation of re-engineering activities. We present Reclipse, a reverse engineering tool suite for static and dynamic design pattern detection in combination with a pattern candidate rating used to assess the detection results' reliability. © 2010 ACM.",,Design Patterns; Legacy software; Reverse engineering tools; Software engineers; Static and dynamic; Toolsuite; Computer software; Reengineering; Reverse engineering; Software architecture,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley; Meyer, M., Pattern-based Reengineering of Software Systems (2006) Proc. of the 13 th Working Conference on Reverse Engineering, pp. 305-306; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards Pattern-Based Design Recovery (2002) Proc. of the 24 th International Conference on Software Engineering, pp. 338-348; Von Detten, M., Meyer, M., Travkin, D., (2010) Reclipse - A Reverse Engineering Tool Suite, , Technical Report tr-ri-10-312, University of Paderborn, Germany; Von Detten, M., Platenius, M.C., Improving Dynamic Design Pattern Detection in Reclipse with Set Objects (2009) Proc. of the 7 th International Fujaba Days, pp. 15-19; Wendehals, L., (2007) Struktur- und Verhaltensbasierte Entwurfsmustererkennung (Structural and Behavioral Design Pattern Detection), , PhD thesis, University of Paderborn, In German; Wendehals, L., Orso, A., Recognizing Behavioral Patterns at Runtime using Finite Automata (2006) Proc. of the 4 th ICSE Workshop on Dynamic Analysis, pp. 33-40","Von Detten, M.; Heinz Nixdorf Institute, Department of Computer Science, University of PaderbornGermany; email: mvdetten@upb.de",,Association for Computing Machinery (ACM);IEEE Computer Society;Technical Council on Software Engineering (tcse);SIGSOFT;Computer Society - South Africa,,"32nd ACM/IEEE International Conference on Software Engineering, ICSE 2010",1 May 2010 through 8 May 2010,Cape Town,81137,2705257,9781605587196,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-77954706960,,
,3,,"Posnett, D., Bird, C., Devanbu, P.",THEX: Mining metapatterns from java,2010,Proceedings - International Conference on Software Engineering,,,5463349,122,125,,,10.1109/MSR.2010.5463349,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953751755&partnerID=40&md5=0ae66ffc4118a4e286fe0f31cdfc2b3e,"Department of Computer Science, University of California, Davis, CA, United States","Posnett, D., Department of Computer Science, University of California, Davis, CA, United States; Bird, C., Department of Computer Science, University of California, Davis, CA, United States; Devanbu, P., Department of Computer Science, University of California, Davis, CA, United States","Design patterns are codified solutions to common object-oriented design (OOD) problems in software development. One of the proclaimed benefits of the use of design patterns is that they decouple functionality and enable different parts of a system to change frequently without undue disruption throughout the system. These OOD patterns have received a wealth of attention in the research community since their introduction; however, identifying them in source code is a difficult problem. In contrast, metapatterns have similar effects on software design by enabling portions of the system to be extended or modified easily, but are purely structural in nature, and thus easier to detect. Our long-term goal is to evaluate the effects of different OOD patterns on coordination in software teams as well as outcomes such as developer productivity and software quality. we present THEX, a metapattern detector that scales to large codebases and works on any Java bytecode. We evaluate THEX by examining its performance on codebases with known design patterns (and therefore metapatterns) and find that it performs quite well, with recall of over 90%. © 2010 IEEE.",,Design Patterns; Java byte codes; Long-term goals; Object-oriented design; Research communities; Software development; Software Quality; Software teams; Source codes; Computer software selection and evaluation; Design; Java programming language; Object oriented programming; Software design,,,,,,"Pree, W., Meta patterns-a means for capturing the essentials of reusable object-oriented design (1994) Lecture Notes in Computer Science, 821 (150), pp. 19-27; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addisonwesley Reading, MA; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code 21st IEEE/ACM International Conference on Automated Software Engineering, 2006, pp. 123-134; Guéhéneuc, Y.-G., Antoniol, G., Demima: A multilayered approach for design pattern identification (2008) IEEE Trans. Software Eng., 34 (5), pp. 667-684; Gil, J., Maman, I., Micro patterns in Java code (2005) Proceedings of the 20th Annual ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications, 40 (10), pp. 97-116. , ACM New York, NY, USA; Tourwé, T., Mens, T., Automated support for frameworkbased software Software Maintenance, 2003. ICSM 2003. Proceedings. International Conference On, 2003, pp. 148-157; King, J., Symbolic execution and program testing (1976) Communications of the ACM, 19 (7), p. 394; Bruneton, E., Lenglet, R., Coupaye, T., ASM: A code manipulation tool to implement adaptable systems (2002) Adaptable and Extensible Component Systems; Huston, V., (2007) Huston Design Patterns, , http://www.vincehuston.org/dp, accessed January [Online]. Available; Hayashi, S., Katada, J., Sakamoto, R., Kobayashi, T., Saeki, M., Design Pattern Detection by Using Meta Patterns (2008) IEICE Transactions on Information and Systems, 91 (4); Guéhéneuc, Y.G., (2010) P-mart: Pattern-like Micro Architecture Repository, , http://www.ptidej.net/downloads/pmart/, accessed January, Online. Available","Posnett, D.; Department of Computer Science, University of California, Davis, CA, United States; email: dpposnett@ucdavis.edu",,,,"7th IEEE Working Conference on Mining Software Repositories, MSR 2010, Co-located with the 2010 ACM/IEEE International Conference on Software Engineering, ICSE 2010",2 May 2010 through 3 May 2010,Cape Town,80678,2705257,9781424468034,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-77953751755,,
,3,,"Baudry, B., Ghosh, S., Fleurey, F., France, R., Le Traon, Y., Mottu, J.-M.",Barriers to systematic model transformation testing,2010,Communications of the ACM,53,6,,139,143,,53,10.1145/1743546.1743583,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953182376&partnerID=40&md5=63441cdec93b3a9fc23992deea50aa69,"Computer Science Department, INRIA, Rennes Bretagne Atlantique, France; Computer Science Department, Colorado State University, CO, United States; SINTEF, Oslo, Norway; University of Luxembourg, CSC Research Unit, Security Reliability and Trust Research Center, United Kingdom; University of Nantes, France","Baudry, B., Computer Science Department, INRIA, Rennes Bretagne Atlantique, France; Ghosh, S., Computer Science Department, Colorado State University, CO, United States; Fleurey, F., SINTEF, Oslo, Norway; France, R., Computer Science Department, Colorado State University, CO, United States; Le Traon, Y., University of Luxembourg, CSC Research Unit, Security Reliability and Trust Research Center, United Kingdom; Mottu, J.-M., University of Nantes, France","Introduction Model Driven Engineering (MDE) techniques support extensive use of models in order to manage the increasing complexity of software systems. Appropriate abstractions of software system elements can ease reasoning and understanding and thus limit the risk of errors in large systems. Automatic model transformations play a critical role in MDE since they automate complex, tedious, error-prone, and recurrent software development tasks. Airbus uses automatic code synthesis from SCADE models to generate the code for embedded controllers in the Airbus A380. Commercial tools for model transformations exist. Objecteering and Together from Borland are tools that can automatically add design patterns in a UML class model. Esterel Technologies have a tool for automatic code synthesis for safety critical systems. Other examples of transformations are refinement of a design model by adding details pertaining to a particular target platform, refactoring a model by changing its structure to enhance design quality, or reverse engineering code to obtain an abstract model. These software development tasks are critical and thus the model transformations that automate them must be validated. A fault in a transformation can introduce a fault in the transformed model, which if undetected and not removed, can propagate to other models in successive development steps. As a fault propagates across transformations, it becomes more difficult to detect and isolate. Since model transformations are meant to be reused, faults present in them may result in many faulty models. Model transformations constitute a class of programs with unique characteristics that make testing them challenging. The complexity of input and output data, lack of model management tools, and the heterogeneity of transformation languages pose special problems to testers of transformations. In this paper we identify current model transformation characteristics that contribute to the difficulty of systematically testing transformations. We present promising solutions and propose possible ways to overcome these barriers. © 2010 ACM.",,Abstract models; Airbus A380; Automatic code synthesis; Automatic models; Commercial tools; Current models; Design models; Design Patterns; Design Quality; Embedded controllers; Error prones; Esterel Technologies; Input and outputs; Large system; Model management tools; Model transformation; Model-driven engineering; Refactorings; Safety critical systems; Software development; Software systems; Systematic models; UML class models; Abstracting; Computer software; Java programming language; Metadata; Models; Reengineering; Reverse engineering; Software design,,,,,,"Bezivin, J., Rumpe, B., Schurr, A., Tratt, L., (2005) Supplemental Proceedings of the MoDELS'05 Conference, pp. 120-127. , Model Transformations in Practice Workshop; Brottier, E., Fleurey, F., Steel, J., Baudry, B., Traon., L.Y., Metamodel-based test generation for model transformations: An algorithm and a tool (2006) Int. Symposium on Software Reliability Engineering, , Raleigh, NC, USA; Ehrig, K., Küster, J.M., Taentzer, G., Winkelmann, J., Generating instance models from meta models (2006) Formal Methods for Open Object-Based Distributed Systems, , Bologna, Italy; Fleurey, F., Baudry, B., Muller, P.-A., Le Traon, Y., Towards dependable model transformations: Qualifying input test data (2007) Software and Systems Modeling; France, R., Rumpe, B., Model-driven development of complex software: A research roadmap (2007) Future of Software Engineering, , L. Briand and A. Wolf, Editors. IEEE-CS Press; Korf, R.E., Space-effcient search algorithms (1995) ACM Computing Surveys, 27 (3), pp. 337-339; Küster, J.M., Abd-El-Razik, B., Validation of model transformations-first experiences using a white box approach Model Design and Validation Workshop Associated to MoDELS'06, , Genova, Italy; Mottu, J.-M., Baudry, B., Le Traon, Y., Reusable MDA components: A testing-for-trust approach (2006) MoDELS'06, , Genova, Italy; Reiter, T., Altmanninger, K., Bergmayr, A., Schwinger, W., Kotsis, G., Models in confict-detection of semantic conficts in model-based development Proceedings of 3rd International Workshop on Model-Driven Enterprise Information Systems, , Madeira, Portugal; Schmidt, D.C., Model-driven engineering (2006) IEEE Computer, 39 (2), pp. 25-31; Solberg, A., Reddy, R., Simmonds, D., France, R., Ghosh, S., Developing service oriented systems using an aspect-oriented model driven framework (2006) International Journal of Cooperative Information Systems; Xing, Z., Stroulia, E., UMLDiff: An algorithm for object-oriented design differencing (2005) Automated Software Engineering, , USA","Baudry, B.; Computer Science Department, INRIA, Rennes Bretagne Atlantique, France; email: bbaudry@irisa.fr",,,,,,,,10782,,CACMA,,English,Commun ACM,Article,Scopus,2-s2.0-77953182376,,
,v,,"Aminzadeh, N., Salim, S.S.",Detecting and visualizing web design patterns,2010,"2010 The 2nd International Conference on Computer and Automation Engineering, ICCAE 2010",2,,5451397,100,103,,,10.1109/ICCAE.2010.5451397,http://www.scopus.com/inward/record.url?eid=2-s2.0-77952636786&partnerID=40&md5=67ba6fddea2e072d2040297baf970064,"Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia","Aminzadeh, N., Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia; Salim, S.S., Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia","The focus of this paper is on Human-Computer-Interaction (HCI) design patterns and, specifically, web design patterns as a subcategory of HCI design patterns. These patterns are generally expressed in a textual format, which is semi-formal. The lack of formal structure causes problems in the process of reverse engineering regarding HCI aspects. Generating detected web design patterns in a formalized format is, therefore, seriously required. Based on the approaches taken for detection and visualization of web design patterns implemented via hyperlinks, the Interactive Design Patterns Detect (IDPDetect) system, which detects the occurrence of web design patterns in a web page through static analysis of the web page source code and visualizes detected web design patterns via UML class diagrams, is developed. ©2010 IEEE.",Detection; HCI; Visualization; Web design patterns,Design Patterns; HCI; HCI design; Human-computer; Hyperlinks; Interactive design; Source codes; Textual format; UML class diagrams; Web designs; Web page; Human computer interaction; Hypertext systems; Reengineering; Reverse engineering; User interfaces; Visualization; World Wide Web,,,,,,"Lucca, G.A., Fasolino, A.R., Tramontana, P., Recovering interaction design patterns in web applications Proceedings of the Ninth European Conference on Software Maintenance and Reengineering, March 2005, pp. 366-374. , doi: 10.1109/CSMR.2005.47; Beale, R., Bordbar, B., Using modelling to put HCI design patterns to work HCI International.11th International Conference on Human-Computer Interaction Lawrence Erlbaum Associates, 2005; Bordbar, B., Derrick, J., Waters, A.G., Using UML to specify Qos constraints in ODP (2002) Computer Network and ISDN Systems, pp. 279-304; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code Proceedings of IEEE/ACM International Conference on Automated Software Engineering (ASE'06), Tokyo, September 2006, pp. 123-134. , dio: 10.1109/ASE.2006.57; Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching Proceedings of the 2008 ACM Symposium on Applied Computing, 2008, pp. 765-769; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection 11th IEEE International Workshop on Program Comprehension, May 2003, pp. 94-103. , doi: 10.1109/WPC.2003.1199193; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, MA; Welie, M.V., Interaction Design Pattern Library, , http://www.welie.com/patterns/index.php, viewed 19 August 2009","Aminzadeh, N.; Faculty of Computer Science and Information Technology, University of Malaya, Kuala Lumpur, Malaysia; email: nazanin@um.edu.my",,,,"2nd International Conference on Computer and Automation Engineering, ICCAE 2010",26 February 2010 through 28 February 2010,Singapore,80373,,9781424455850,,,English,"Int. Conf. Comput. Autom. Eng., ICCAE",Conference Paper,Scopus,2-s2.0-77952636786,,
,v,,"Sudhakar, N., Gyani, J.",TECDP: A tool for extracting creational design patterns,2010,"ICWET 2010 - International Conference and Workshop on Emerging Trends in Technology 2010, Conference Proceedings",,,,735,736,,1,10.1145/1741906.1742077,http://www.scopus.com/inward/record.url?eid=2-s2.0-77952326690&partnerID=40&md5=85053850bed1a58639df251260cf35a0,"Jayamukhi Institute of Technological Sciences, Narsampet, Warangal.(A.P.), India","Sudhakar, N., Jayamukhi Institute of Technological Sciences, Narsampet, Warangal.(A.P.), India; Gyani, J., Jayamukhi Institute of Technological Sciences, Narsampet, Warangal.(A.P.), India","Refactoring using design patterns leads to production of high quality and easily maintainable software. Without an acceptable level of design patterns in the development of software, it will not be able to meet the demands of software industry. Promoting design patterns requires effective support. In this paper we propose a tool to extract few creational design patterns by detecting Intent Aspects(IA's) from Java source code by applying reverse engineering algorithms. This helps in refactoring the code and thus improves the quality of software, in terms of reusability, flexibility and extendibility. Copyright 2010 ACM.",Design patterns; Extendibility; Flexibility; Quality; Refactoring; Reusability,Design Patterns; Extendibility; High quality; Intent-aspects; Java source codes; Quality of softwares; Refactorings; Software industry; Computer software reusability; Computer software selection and evaluation; Java programming language; Reengineering; Reusability; Reverse engineering; Software design,,,,,,"Gyani, J., Murti, P.R.K., Enhancing Software Evolution with Pattern Oriented Software Life Cycle; Ram, D.J., Rajesh, J., Detecting intent aspects from code to apply design patterns in refactoring: An approach towards a refactoring tool (2004) Proceedings of 2nd Workshop on Software Design and Architecture(SODA)04, , Jan; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Proceedings of the Fifth International Symposium on Software (METRICS98), , Nov; Batory, D., Tokuda, L., Automated software evolution via design pattern transformations (1995) Technical Report CS-TR-95-106, , The University of Texas at Austin, Department of Computer Sciences; Roberts, D., Brant, J., Johnson, R., A refactoring tool for smalltalk (1997) Theory and Practice of Object Systems, pp. 253-263; Roberts, D.B., (1999) Practical Analysis for Refactoring, , PhD thesis University of Illinois at Urbana- Champaign June; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns: Elements of Reusable Object Oriented Software, p. 1994. , Addison Wesley; Janaki, R.D., Dwivedi, R.A., Ramakrishna, O., An implementation mechanism for design patterns (1998) ACM Software Engineering Notes, 23 (7), pp. 52-56; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison Wesley; Cinneide, M.O., Automated refactoring to introduce design patterns (2000) International Conference on Software Engineering, pp. 722-724. , ACM Press,Limerick , June; Eide, E., Reid, A., Regehr, J., Lepreau, J., ""Static and dynamic structure in design patterns"" Software Engineering. ICSE 2002 (2002) Proceedings of the 24rd International Conference on, pp. 208-218; Gamma, E., Johnson, R., Helm, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proc. of the 3rd Working Conference on Reverse Engineering (WCRE), pp. 208-215. , Monterey, CA. IEEE Computer Society Press, November; Tonella, P., Potrich, A., Static and dynamic C++ Code Analysis for the Recovery of the Object Diagram (2002) Proc. of ICSM2002, International Conference on Software Maintenance","Sudhakar, N.; Jayamukhi Institute of Technological Sciences, Narsampet, Warangal.(A.P.), India; email: nuthisudhakar@yahoo.com",,ACM Special Interest Group on Artificial Intelligence (SIGART);All India Council of Technical Education;Unitech Engineers;ACM Special Interest Group on Computer Architecture (SIGARCH),,"International Conference and Workshop on Emerging Trends in Technology 2010, ICWET 2010",26 February 2010 through 27 February 2010,"Mumbai, Maharashtra",80290,,9781605588124,,,English,"ICWET - Int. Conf. Workshop Emerg. Trends Technol., Conf. Proc.",Conference Paper,Scopus,2-s2.0-77952326690,,
,4,,"Mauro, C., Leimeister, J.M., Krcmar, H.",Service oriented device integration - An analysis of SOA design patterns,2010,Proceedings of the Annual Hawaii International Conference on System Sciences,,,5428591,,,,,10.1109/HICSS.2010.336,http://www.scopus.com/inward/record.url?eid=2-s2.0-77951742494&partnerID=40&md5=d5435e378f90ff6784c247178a1e3890,"Technische Universitaet Muenchen, Information Systems, Boltzmannstrasse 3, 85748 Garching, Germany; Universitaet Kassel, Information Systems, Nora-Platiel-Strasse 4, 34127 Kassel, Germany","Mauro, C., Technische Universitaet Muenchen, Information Systems, Boltzmannstrasse 3, 85748 Garching, Germany; Leimeister, J.M., Universitaet Kassel, Information Systems, Nora-Platiel-Strasse 4, 34127 Kassel, Germany; Krcmar, H., Technische Universitaet Muenchen, Information Systems, Boltzmannstrasse 3, 85748 Garching, Germany","Service oriented device architecture (SODA) is a promising approach for overcoming interoperability issues and especially for extending the IT support of business processes to devices. It is based on the encapsulation of devices as services, and therefore on design principles of service oriented architectures (SOA). However, there is a lack of generalized concepts that resolve SODA-specific design problems. This paper contributes to this research gap by a) identifying a set of SODA-specific design problems, b) analyzing existing SOA design patterns regarding their applicability for SODA, and c) proposing a set of new pattern candidates which resolve open SODA design problems. © 2010 IEEE.",,Business Process; Design Patterns; Design Principles; Design problems; Device architectures; Device integration; Service Oriented; Specific design; Information services; Service oriented architecture (SOA); Design,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , New York: Oxford University Press; Bohn, H., Bobek, A., Golatowski, F., SIRENA - Service Infrastructure for Real-time Embedded Networked Devices: A service oriented framework for different domains International Conference on Networking, International Conference on Systems and International Conference on Mobile Communications and Learning Technologies (ICN/ICONS/MCL 2006), 2006; Buschmann, F., (1998) Pattern-orientierte Software-Architektur: Ein Pattern-System, , Bonn: Addison-Wesley.Longmann Verlag; Conrad, S., Hasselbring, W., Koschel, A., Tritsch, R., (2006) Enterprise Application Integration - Grundlagen, Konzepte, Entwurfsmuster, Praxisbeispiele, , München: Elsevier GmbH; De Deugd, S., Carroll, R., Kelly, K.E., Millett, B., Ricker, J., SODA: Service Oriented Device Architecture (2006) Pervasive Computing, IEEE, 5, pp. 94-96; Erl, T., (2004) Servoce-Oriented Architecture - A Field Guide to Integrating XML and Web Services, , New Jersey: Pearson Education; Erl, T., (2007) SOA Principles of Service Design, , Boston: Prentice Hall International; Erl, T., (2008) Web Service Contract Design and Versioning for SOA, , Boston: Prentice Hall International; Erl, T., (2009) SOA Design Patterns, , Boston: Prentice Hall International; Erl, T., (2009) SOA Patterns - Candidate Pattern List; Fowler, M., (2003) Patterns of Enterprise Application Integration, , Boston: Pearson Education; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Massachusetts: Addison-Wesley Publishing Company; Gärtner, A., (2008) Medizinproduktesicherheit - Band 1: Medizinproduktegesetzgebung und Regelwerk, , Köln: TÜV Media; Gilart-Iglesias, V., Maciá-Pérez, F., José Mora-Gimeno, F., Berná-Martínez, J.V., Normalization of Industrial Machinery with Embedded Devices and SOA Conference on Emerging Technologies and Factory Automation (ETFA '06), 2006; Hohpe, G., Woolf, B., (2004) Enterprise Integration Patterns - Designing, Building, and Deploying Messaging Solutions, , Boston: Pearson Education, Inc; Jammes, F., Smit, H., Lastra, J.L.M., Delamer, I.M., Orchestration of service-oriented manufacturing processes 10th IEEE Conference on Emerging Technologies and Factory Automation (ETFA 2005), 2005, pp. 617-624; Krafzik, D., Banke, K., Slama, D., (2006) Enterprise SOA - Service-Oriented Architecture Best Practices, , Indiana, USA: Pearson Education; Krcmar, H., (2005) Informationsmanagement: Springer Berlin Heidelberg New York; Lesh, K., Weininger, S., Goldman, J.M., Wilson, B., Himes, G., Medical Device Interoperability - Assessing the Environment (2007) Joint Workshop on High Confidence Medical Devices, Software, and Systems and Medical Device Plug-and-Play Interoperability; Mauro, C., Sunyaev, A., Leimeister, J.M., Krcmar, H., Service-orientierte Integration medizinischer Geräte - Eine State of the Art Analyse (2009) Wirtschaftsinformatik 2009 - Business Services: Konzepte, Technologien und Anwendungen Wien, pp. 119-128; (2004) UDDI Version 3.0.2, 2009. , OASIS; Schumacher, M., (2003) Security Engineering with Patterns: Origins, Theoretical Models, and New Applications, , Berlin: Springer; Strähle, M., Ehlbeck, M., Prapavat, V., Kück, K., Franz, F., Meyer, J.-U., Towards a Service-Oriented Architecture for Interconnecting Medical Devices and Applications (2007) Joint Workshop on High Confidence Medical Devices, Software, and Systems and Medical Device Plug-and-Play Interoperability; Tanenbaum, A.S., (2009) Moderne Betriebssysteme, , München: Pearson Studium; (2004) XML Schema Part 0: Primer Second Edition - W3C Recommendation, , W3C","Mauro, C.; Technische Universitaet Muenchen, Information Systems, Boltzmannstrasse 3, 85748 Garching, Germany; email: mauro@in.tum.de",,Shidler College of Business;University of Hawai'i,,"43rd Annual Hawaii International Conference on System Sciences, HICSS-43",5 January 2010 through 8 January 2010,"Koloa, Kauai, HI",80065,15301605,9780769538693,,,English,Proc. Annu. Hawaii Int. Conf. Syst. Sci.,Conference Paper,Scopus,2-s2.0-77951742494,,
,v,,"Rasool, G., Philippow, I., Mäder, P.",Design pattern recovery based on annotations,2010,Advances in Engineering Software,41,4,,519,526,,12,10.1016/j.advengsoft.2009.10.014,http://www.scopus.com/inward/record.url?eid=2-s2.0-74449089874&partnerID=40&md5=dce101e65d36055a6470ce38b5192ec2,"Faculty of Computer Science and Automation, Software Systems/Process Informatics Group, Technical University of Ilmenau, Germany","Rasool, G., Faculty of Computer Science and Automation, Software Systems/Process Informatics Group, Technical University of Ilmenau, Germany; Philippow, I., Faculty of Computer Science and Automation, Software Systems/Process Informatics Group, Technical University of Ilmenau, Germany; Mäder, P., Faculty of Computer Science and Automation, Software Systems/Process Informatics Group, Technical University of Ilmenau, Germany","Design patterns have been widely used for developing flexible, extensible and perceptible applications to produce effective, reliable, verifiable and easily maintained software systems. The main advantage of using patterns is to take the edge of using best practices and experiences of others in solving the challenging tasks. Patterns have been extensively tested in different applications and reusing them yields the quality software. In this paper, we present a design pattern recovery approach based on annotations, regular expressions and database queries. We define the varying features of patterns and apply rules to match these features with the source code elements. Our novel approach reduces the search space and time for detecting patterns by using appropriate semantics of annotations from large legacy systems. We have tested our approach as proof of concept on motivating examples, and the obtained results are very encouraging. © 2009 Elsevier Ltd. All rights reserved.",Annotations; Design patterns; Formal specifications; Program comprehension; Reverse engineering,Best practice; Database queries; Design pattern recovery; Design Patterns; Formal Specification; Formal specifications; Program comprehension; Proof of concept; Quality software; Regular expressions; Search spaces; Software systems; Source codes; Computer software; Legacy systems; Management information systems; Reengineering; Reverse engineering; Specifications; Object oriented programming,,,,,,"Rainer, K., What architects should know about reverse engineering and reengineering (2005) Proceedings of the 5th working IEEE/IFIP conference on software architecture, pp. 6-10; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2009) Int J Softw Eng Knowl Eng (IJSEKE), 19 (6), pp. 823-855; Jing, D., Zhao, Y., Classification of design pattern traits (2007) Proceedings of 19th international conference on software engineering and knowledge (SEKE), pp. 473-476. , Bostan, USA; July; Sparx System Architect Modeling tool, , http://www.sparxsystems.com/products/ea, accessed 05.05.09; De Lucia Andrea, Deufemia Vincenzo, Gravino Carmine, Risi Michele. A two phase approach to design pattern recovery. In: Proceedings of 11th European conference on software maintenance and reengineering (CSMR'07), Amsterdam, Netherlands; 21-23 March 2007. p. 297-306Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., (2004) An approach for reverse engineering of design patterns, 4 1. , Springer-Verlag p. 55-70; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the ICSE workshop on dynamic analysis (WODA), pp. 29-32. , May; Smith, J.M., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Proceedings of the ASE, pp. 215-224. , IEEE Computer Society Press, Canada; 6-10 October; Krzysztof, S., Patrycja, W., Detection of diverse design pattern variants (2008) 15th Asia-Pacific Software Engineering Conference, pp. 25-32. , Beijing, China; 3-5 December; http://wwwcs.uni-paderborn.de/cs/fujaba, accessed 8.08.09Shi N, Olsson RA. Reverse engineering of design patterns from java source code. In: Proceedings of the 21st IEEE international conference on automated software engineering (ASE'06), 00; 2006. p. 123-34Kirasic Damir, Bash Danko. Ontology-based design pattern recognition. Lecture notes in computer science 5177/2008; 20 September 2008. p. 384-93Klaus, M., Supporting design patterns with annotations (2006) Proceedings of the 13th annual IEEE international symposium and workshop on engineering of computer based systems (ECBS'06), pp. 445-451. , Postdam, Germany; 27-30 March; Balanyi, Z., Ferenc, R., Mining design patterns from c++ source code (2003) International conference on software maintenance (ICSM'03), pp. 305-314. , Amsterdam, The Netherlands;; Niere, J., Shafer, W., Wadsack, J.P., Wendehals, L., Walsh, J., Towards pattern-based design recovery (2002) Proceedings of the international conference on software engineering (ICSE'02), pp. 338-348. , Orlando, FL, USA;; Zhu Hong, B.I., On the composition of design patterns (2008) Proceedings of the 8th international conference on quality software, pp. 27-36. , Oxford, UK; 12-13 August; Costagliola Gennaro, De Lucia Andrea, Deufemia Vincenzo, Gravino Carmine, Risi Michele. Design pattern recovery by visual language parsing. In: Proceedings of the 9th European conference on software maintenance and reengineering (CSMR'05), Manchester, UK; March 2005. p. 102-11Silva, J.C., Campos, J.C., Saraiva, J., (2007) Combining formal methods and functional strategies regarding the reverse engineering of interactive applications, 4323. , Springer-Verlag, Berlin Heidelberg p. 137-50. ISBN:978-3-540-69553-0; Kaczor, O., Gueheneuc, Y.-G., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) Proceedings of the 10th European conference on software maintenance and reengineering, Bari, Italy; 22-24, pp. 184-193. , March; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns: elements of reusable object oriented software, , Addison-Wesley Publishing Company, Reading, MA; David, H., William, P., Status report on JSR-305: Annotations for software defect detection (2007) Conference on object oriented programming systems languages and applications, pp. 799-800. , Montreal, Quebec, Canada;; Abou-Assalaeh, (2004) Tony, Ai Wei, , Survey of global regular expression print (GREP) tools; 02 March; JHotDraw StartPage, , http://www.jhotdraw.org, accessed 15.06.09; Apache Ant 1.6.2. <http://www.linuxfromscratch.org/blfs/view/6.1/general/> [accessed 24.07.09]Rasool, G., Asif, N., DRT tool (2007) Int J Softw Eng, 1 (1), pp. 67-71; Rasool, G., Asif, N., Software artifacts recovery using (2007) Proceedings of the 11th IEEE multitopic conference, pp. 1-6. , abstract regular expressions, Comsats Institute of IT Lahore Campus, Pakistan; 28-30 December; Simon, B., Marjan, H., A composite design-pattern identification technique (2005) J Inform (03505596), 29 (4), pp. 469-476","Rasool, G.; Faculty of Computer Science and Automation, Software Systems/Process Informatics Group, Technical University of IlmenauGermany; email: Ghulam.rasool@tu-ilmenau.de",,,,,,,,9659978,,AESOD,,English,Adv Eng Software,Article,Scopus,2-s2.0-74449089874,,
,1,,"Weaver, C.",Cross-filtered views for multidimensional visual analysis,2010,IEEE Transactions on Visualization and Computer Graphics,16,2,5204083,192,204,,27,10.1109/TVCG.2009.94,http://www.scopus.com/inward/record.url?eid=2-s2.0-76849094654&partnerID=40&md5=cc4c3dc19411d2e722b8468e6d61c589,"School of Computer Science, Center for Spatial Analysis, University of Oklahoma, 3100 Monitor Ave, Norman, OK 73072-7807, United States","Weaver, C., School of Computer Science, Center for Spatial Analysis, University of Oklahoma, 3100 Monitor Ave, Norman, OK 73072-7807, United States","Analysis of multidimensional data often requires careful examination of relationships across dimensions. Coordinated multiple view approaches have become commonplace in visual analysis tools because they directly support expression of complex multidimensional queries using simple interactions. However, generating such tools remains difficult because of the need to map domain-specific data structures and semantics into the idiosyncratic combinations of interdependent data and visual abstractions needed to reveal particular patterns and distributions in cross-dimensional relationships. This paper describes: 1) a method for interactively expressing sequences of multidimensional set queries by cross-filtering data values across pairs of views and 2) design strategies for constructing coordinated multiple view interfaces for cross-filtered visual analysis of multidimensional data sets. Using examples of cross-filtered visualizations of data from several different domains, we describe how cross-filtering can be modularized and reused across designs, flexibly customized with respect to data types across multiple dimensions, and incorporated into more wide-ranging multiple view designs. We also identify several important limitations of the approach. The demonstrated analytic utility of these examples suggests that cross-filtering is a suitable design pattern for instantiation in a wide variety of visual analysis tools. © 2010 IEEE.",Coordinated views; Information visualization; Interactive data exploration and discovery; Multidimensional visual analysis.,"Coordinated views; Data type; Data values; Design Patterns; Design strategies; Different domains; Information visualization; Interactive data exploration; MAP domains; Modularized; Multi-dimensional datasets; Multi-dimensional queries; Multidimensional data; Multiple dimensions; Multiple views; Visual analysis; Complexation; Coordination reactions; Data structures; Data visualization; Design; Gene expression; Information analysis; Information systems; Visualization; Data handling; algorithm; article; computer graphics; computer interface; computer simulation; cooperation; information retrieval; methodology; theoretical model; Algorithms; Computer Graphics; Computer Simulation; Cooperative Behavior; Information Storage and Retrieval; Models, Theoretical; User-Computer Interface",,,,,,"(2005) Illuminating the Path: The Research and Development Agenda for Visual Analytics, , J.J. Thomas and K.A. Cook, eds. IEEE CS., Aug; Schrodt, P.A., (1994) Event Data in Foreign Policy Analysis, pp. 145-166. , Prentice-Hall; Weaver, C.E., (2006) Improvise: A User Interface for Interactive Construction of Highly-Coordinated Visualizations, , PhD dissertation, Univ. of Wisconsin-Madison, June; McClelland, C., (1999) World Event/Interaction Survey (WEIS) Project, 1966-1978 [Computer File], , Third ICPSR ed. Univ. of Southern California, Inter-Univ. Consortium for Political and Social Research; Weaver, C., Fyfe, D., Robinson, A., Holdsworth, D.W., Peuquet, D.J., MacEachren, A.M., Visual exploration and analysis of historic hotel visits (2007) Information Visualization, 6 (1), pp. 89-103; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , first ed. Addison- Wesley Professional, Oct; Krasner, G., Pope, S., A cookbook for using the model-view- controller user interface paradigm in smalltalk-80 (1988) J. Object- Oriented Programming, 1 (3), pp. 26-49; Heer, J., Agrawala, M., Software design patterns for information visualization (2006) IEEE Trans. Visualization and Computer Graphics, 12 (5), pp. 853-860. , Sept./Oct; Chi Hsin, E.H., Riedl, J.T., An operator interaction framework for visualization systems (1998) Proc. IEEE Symp. Information Visualization, pp. 63-70. , Oct; Ahlberg, C., Williamson, C., Shneiderman, B., Dynamic queries for information exploration: an implementation and evaluation (1992) Conference on Human Factors in Computing Systems - Proceedings, pp. 619-626; North, C., Shneiderman, B., A taxonomy of multiple window coordinations (1997) Technical Report CS-TR-3854, Dept. of Computer Science, , Univ. of Maryland; Weaver, C., Patterns of coordination in improvise visualizations (2007) Proc. Conf. Visualization and Data Analysis, pp. 1-12. , Jan; Ward, M.O., XmdvTool: Integrating multiple methods for visualizing multivariate data (1994) Proc. IEEE Conf. Visualization, pp. 326-333; Fua, Y.-H., Ward, M.O., Rundensteiner, E.A., Structure-based brushes: A mechanism for navigating hierarchically organized data and information spaces (2000) IEEE Trans. Visualization and Computer Graphics, 6 (2), pp. 150-159. , Apr.-June; Weaver, C., Infovis 2007 contest entry: Cinegraph (2007) Proc. IEEE Symp. Information Visualization (Compendium), , Oct; Ahlberg, C., Spotfire: An information exploration environment (1996) ACM SIGMOD Record, 25 (4), pp. 25-29. , Dec; Stolte, C., Tang, D., Hanrahan, P., Polaris: A system for query, analysis, and visualization of multi-dimensional relational databases (2002) IEEE Trans. Visualization and Computer Graphics, 8 (1), pp. 52-65. , Jan; MacKinlay, J.D., Hanrahan, P., Stolte, C., Show Me: Automatic presentation for visual analysis (2007) IEEE Trans. Visualization and Computer Graphics, 13 (6), pp. 1137-1144. , Nov./Dec; Stasko, J., Gö Rg, C., Liu, Z., Singhal, K., Jigsaw: Supporting investigative analysis through interactive visualization (2007) Proc. IEEE Symp. Visual Analytics Science and Technology, pp. 131-138. , Oct; (2009), http://www.qlikview.com/, FebNorth, C., Conklin, N., Indukuri, K., Saini, V., Visualization schemas and a web-based architecture for custom multiple- view visualization of multiple-table databases (2002) J. Information Visualization, 1 (3-4), pp. 211-228. , Dec; Keim, D.A., Mansmann, F., Schneidewind, J., Ziegler, H., Challenges in visual data analysis (2006) Proc. Int'l Conf. Information Visualization (IV), pp. 9-16. , July; Shneiderman, B., The eyes have it: A task by data type taxonomy for information visualizations (1996) Proc. IEEE Symp. Visual Languages, pp. 336-343. , Sept; Roberts, J.C., Multiple-view and multiform visualization (2000) Proc. SPIE Conf. Visual Data Exploration and Analysis VII, pp. 176-185. , R. Erbacher, A. Pang C. Wittenbrink, and J. Roberts, eds. Jan; Ahlberg, C., Shneiderman, B., Visual information seeking: Tight coupling of dynamic query filters with starfield displays (1994) Proc. Conf. Human Factors in Computing Systems (CHI), pp. 313-317. , 479-480, Apr; Olston, C., Woodruff, A., Aiken, A., Chu, M., Ercegovac, V., Lin, M., Spalding, M., Stonebraker, M., Datasplash (1998) Proc. ACM SIGMOD, pp. 550-552. , June; Plaisant, C., The challenge of information visualization evaluation (2004) Proc. ACM Conf. Advanced Visual Interfaces (AVI), pp. 109-116. , May; Fyfe, D., (2008) Commerce and Sociability in Small-Town America: Explorations in Historical GIScience, , PhD dissertation, The Pennsylvania State Univ., Jan; Pike, W., Yarnal, B., MacEachren, A.M., Gahegan, M., Yu, C., Infrastructure for human-environment collaboration: Building a prototype for the future of science (2005) Environment, 47 (2), pp. 8-21; Elmqvist, N., Tsigas, P., A taxonomy of 3d occlusion management for visualization (2008) IEEE Trans. Visualization and Computer Graphics, 14 (5), pp. 1095-1109. , Sept./Oct; Robinson, A.C., Weaver, C., Re-visualization: Interactive visualization of the process of visual analysis (2006) Proc. GIScience Workshop Visual Analytics & Spatial Decision Support, , Sept; Lowden, B.G.T., Roec, A.N.D., The REMIT system for paraphrasing relational query expressions into natural language (1986) Proc. 12th Int'l Conf. Very Large Data Bases, pp. 365-371. , Aug; Tufte, E., (2006) Beautiful Evidence, , Graphics Press; Chen, H., Compound brushing (2003) Proc. IEEE Symp. Information Visualization, pp. 181-188. , Oct; Weaver, C., Cross-dimensional visual queries for interactive+ animated analysis of movement (2008) Proc. GIScience Workshop GeoSpatial Visual Analytics, , Sept; Collins, C., Carpendale, S., Vislink: Revealing relationships amongst visualizations (2007) IEEE Trans. Visualization and Computer Graphics, 13 (6), pp. 1192-1199. , Nov./Dec; Weaver, C., Multidimensional visual analysis using cross- filtered views (2008) Proc. IEEE Symp. Visual Analytics Science and Technology, pp. 163-170. , Oct","Weaver, C.; School of Computer Science, Center for Spatial Analysis, University of Oklahoma, 3100 Monitor Ave, Norman, OK 73072-7807, United States; email: weaver@cs.ou.edu",,,,,,,,10772626,,ITVGE,20075481,English,IEEE Trans Visual Comput Graphics,Conference Paper,Scopus,2-s2.0-76849094654,,
,3,,"Dong, J., Peng, T., Zhao, Y.",Automated verification of security pattern compositions,2010,Information and Software Technology,52,3,,274,295,,12,10.1016/j.infsof.2009.10.001,http://www.scopus.com/inward/record.url?eid=2-s2.0-75449109999&partnerID=40&md5=7030a2d834f696660c32f70d5c7412bc,"Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Dong, J., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; Peng, T., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; Zhao, Y., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Software security becomes a critically important issue for software development when more and more malicious attacks explore the security holes in software systems. To avoid security problems, a large software system design may reuse good security solutions by applying security patterns. Security patterns document expert solutions to common security problems and capture best practices on secure software design and development. Although each security pattern describes a good design guideline, the compositions of these security patterns may be inconsistent and encounter problems and flaws. Therefore, the compositions of security patterns may be even insecure. In this paper, we present an approach to automated verification of the compositions of security patterns by model checking. We formally define the behavioral aspect of security patterns in CCS through their sequence diagrams. We also prove the faithfulness of the transformation from a sequence diagram to its CCS representation. In this way, the properties of the security patterns can be checked by a model checker when they are composed. Composition errors and problems can be discovered early in the design stage. We also use two case studies to illustrate our approach and show its capability to detect composition errors. © 2009 Elsevier B.V. All rights reserved.",Design pattern; Logics; Model checking; Process algebra; Security,Automated verification; Best practice; Design guidelines; Design pattern; Design Patterns; Design stage; Large software systems; Malicious attack; Model checker; Process algebras; Secure software; Security holes; Security patterns; Security problems; Security solutions; Sequence diagrams; Software development; Software security; Software systems; Algebra; Computer software reusability; Computer software selection and evaluation; Design; Errors; Model checking; Software design; Network security,,,,,,"Paulo Alencar, Donald Cowan, Jing Dong, Carlos Lucena, A pattern-based approach to structural design composition, in: Proceedings of the IEEE 23rd Annual International Computer Software & Applications Conference, Phoenix USA, October 1999, pp. 160-165Alencar, P., Cowan, D., Lucena, C., A formal approach to architectural design patterns (1996) Proceedings of the Third International Symposium of Formal Methods Europe (FME), pp. 576-594; Barrett, G., Model checking in practice: the T9000 virtual channel processor (1998) IEEE Transactions on Software Engineering, 21 (2), pp. 69-78; Brown, F.L., Fernandez, E.B., The authenticator pattern (1999) Proceedings of the Pattern Languages of Programs (PLoP'99); Browne, M.C., Clarke, E.M., Dill, D.L., Automatic verification of sequential circuits using temporal logic (1986) IEEE Transactions on Computer, C-35 (12), pp. 1035-1044; Chinnasamy, S., Raje, R.R., Liu, Z., Specification of design patterns: An analysis (1999) Proceedings of the Seventh International Conference on Advanced Computing and Communications, pp. 300-304; Clarke, E.M., Jha, S., Marrero, W., Verifying security protocols with Brutus (2000) ACM Transactions on Software Engineering and Methodology (TOSEM), 9 (4); Dai, G., Bai, X., Zhao, C., A framework for model checking web service compositions based on BPEL4WS (2007) Proceedings of the IEEE International Conference on e-Business Engineering; Dong, J., Alencar, P., Cowan, D., Ensuring structure and behavior correctness in design composition (2000) Proceedings of the Seventh Annual IEEE International Conference and Workshop on Engineering of Computer Based Systems (ECBS), pp. 279-287. , Edinburgh UK; Dong, J., Alencar, P., Cowan, D., A behavioral analysis and verification approach to pattern-based design composition (2004) Software and Systems Modeling, 3. , Springer Verlag pp. 262-272; Dong, J., Alencar, P., Cowan, D., Automating the analysis of design component contracts (2006) Software - Practice and Experience (SPE), 36. , Wiley 27-71; Dong, J., Peng, T., Qiu, Z., Commutability of design pattern instantiation and integration (2007) Proceedings of the First IEEE & IFIP International Symposium on Theoretical Aspects of Software Engineering (TASE), , China, June; Dong, J., Peng, T., Zhao, Y., Model checking security pattern compositions (2007) Proceedings of the Seventh International Conference on Quality Software (QSIC), pp. 80-89. , Portland, Oregon, USA, October; Dwyer, M.B., Avrunin, G.S., Corbett, J.C., Patterns in property specifications for finite-state verification (1999) Proceedings of the 21st International Conference on Software Engineering, , Los Angeles, USA, May; Eden, A.H., Hirshfeld, Y., Principles in formal specification of object-oriented architectures (2001) Proceedings of the 11th CASCON, , Toronto, Canada, November; Emerson, E., Clarke, E.M., Using branching time temporal logic to synthesize synchronization skeletons (1982) Science of Computer Programming, 2, pp. 241-266; Emersion, E.A., Halpern, J.Y., 'Sometime' and 'not never' revisited: on branching versus linear time temporal logic (1986) Journal of the Association for Computing Machinery, 33 (1), pp. 151-178; Fernandez, E.B., Pelaez, J.C., Larrondo-Petrie, M.M., Security patterns for voice over IP networks (2007) Proceedings of the International Multi-Conference on Computing in the Global Information Technology (ICCGI'07); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Foster, H., Uchitel, S., Magee, J., Kramer, J., Model-based verification of web service compositions (2003) Proceedings of the 18th IEEE International Conference on Automated Software Engineering Conference, , ASE; Fu, X., Bultan, T., Su, J., Analysis of interacting BPEL web services (2004) Proceedings of the 13th International Conference on World Wide Web, pp. 621-630. , New York, USA; Holzmann, G.J., The model checker SPIN (1997) IEEE Transactions on Software Engineering, 23 (5), pp. 279-295; Jürjens, J., (2004) Secure Systems Development with UML, , Springer-Verlag, Heidelberg; Kienzle, D.M., Elder, M.C., Tyree, D., Edwards-Hewitt, J., (2002) Security Patterns Repository; McMillan, M.L., Symbolic Model Checking: An Approach to the State Explosion Problem (1992), PhD Thesis, Carnegie Mellon University, CMU-CS-92-131Meyer, B., Applying ""design by contract"" (1992) IEEE Computer, pp. 40-51; Mikkonen, T., Formalizing design pattern (1998) Proceedings of the 20th International Conference on Software Engineering, pp. 115-124; Milner, R., (1989) Communication and Concurrency. International Series in Computer Science, , Prentice Hall; Pnueli, A., Harel, E., (1988) Applications of Temporal Logic to the Specification of Real-time Systems, , Springer; Ramakrishna, Y.S., Ramakrishnan, C.R., Ramakrishnan, I.V., Smolka, S.A., Swift, T., Warren, D.S., Efficient model checking using tabled resolution (1997) Proceedings of the Nineth International Conference on Computer Aided Verification (CAV), Haifa Israel, LNCS1243, pp. 143-154. , Springer Verlag, July; Rosado, D.G., Gutierrez, C., Fernandez-Medina, E., Piattini, M., A study of security architectural patterns (2006) Proceedings of the First International Conference on Availability, Reliability and Security (ARES'06); Saeki, M., Behavioral specification of GoF design patterns with LOTOS (2000) Proceedings of the Seventh Asia-Pacific Software Engineering Conference, pp. 408-415. , APSEC, December; Schumacher, M., Fernandez-Buglioni, E., Hybertson, D., Buschmann, F., Sommerlad, P., (2006) Security Patterns: Integrating Security and Systems Engineering, , Wiley; Neelam Soundarajan, Jason O. Hallstrom, Responsibilities and rewards: specifying design patterns, in: Proceedings of the 26th International Conference on Software Engineering, May 2004, pp. 666-675Steel, C., Nagappan, R., Lai, R., (2005) Core Security Patterns: Best Practices and Strategies for J2EE, Web Services, and Identity Management, , Prentice Hall PTR; Taibi, T., Ngo, D.C.L., Formal specification of design pattern combination using BPSL (2003) Information and Software Technology (IST), 45. , Elsevier-Science pp. 157-170; Viega, J., McGraw, G., (2001) Building Secure Software: How to Avoid Security Problems the Right Way, , Addison-Wesley; Wing, J.M., Vaziri-Farahani, M., A case study in model checking software systems (1996) Science of Computer Programming, 28, pp. 273-299; Yoshioka, N., Honiden, S., Finkelstein, A., Security patterns: A method for constructing secure and efficiency inter-company coordination systems (2004) Proceedings of the Eighth IEEE International Enterprise Distributed Object Computing Conference (EDOC'04); http://www.cs.sunysb.edu/~cwbhttp://msdn.microsoft.com/en-us/library/aa480545.aspxhttp://msdn.microsoft.com/en-us/library/aa480560.aspx","Dong, J.; Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; email: jdong@utdallas.edu",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Article,Scopus,2-s2.0-75449109999,,
,3,,"Tsantalis, N., Chatzigeorgiou, A.",Identification of refactoring opportunities introducing polymorphism,2010,Journal of Systems and Software,83,3,,391,404,,14,10.1016/j.jss.2009.09.017,http://www.scopus.com/inward/record.url?eid=2-s2.0-75349106264&partnerID=40&md5=1fe8aa245b88e8fb9e3e1255aafb91af,"Department of Applied Informatics, University of Macedonia, 54006 Thessaloniki, Greece","Tsantalis, N., Department of Applied Informatics, University of Macedonia, 54006 Thessaloniki, Greece; Chatzigeorgiou, A., Department of Applied Informatics, University of Macedonia, 54006 Thessaloniki, Greece","Polymorphism is one of the most important features offered by object-oriented programming languages, since it allows to extend/modify the behavior of a class without altering its source code, in accordance to the Open/Closed Principle. However, there is a lack of methods and tools for the identification of places in the code of an existing system that could benefit from the employment of polymorphism. In this paper we propose a technique that extracts refactoring suggestions introducing polymorphism. The approach ensures the behavior preservation of the code and the applicability of the refactoring suggestions based on the examination of a set of preconditions. © 2009 Elsevier Inc. All rights reserved.",Object-oriented design; Polymorphism; Refactoring; State/Strategy design pattern,Design Patterns; Existing systems; Object-oriented design; Object-oriented programming languages; Refactorings; Source codes; Design; Polymorphism; Object oriented programming,,,,,,"Arisholm, E., Sjøberg, D.I.K., Evaluating the effect of a delegated versus centralized control style on the maintainability of object-oriented software (2004) IEEE Transactions on Software Engineering, 30 (8), pp. 521-534; Brito e Abreu, F., 1995. The MOOD metrics set. In: Proceedings of the Ninth European Conference on Object-Oriented Programming Workshop on MetricsBrito e Abreu, F., Melo, W., 1996. Evaluating the impact of object-oriented design on software quality. In: Proceedings of the Third International Software Metrics Symposium, pp. 90-99Day, M., Gruber, R., Liskov, B., Myers, A.C., Subtypes vs. where clauses: Constraining parametric polymorphism (1995) Proceedings of the 10th Annual Conference on Object-Oriented Programming Systems, Languages, and Applications, pp. 156-168; Demeyer, S., Ducasse, S., Nierstrasz, O., (2003) Object-Oriented Reengineering Patterns, , Morgan Kaufman; Demeyer, S., Refactor conditionals into polymorphism: What's the performance cost of introducing virtual calls? (2005) Proceedings of the 21st IEEE International Conference on Software Maintenance, pp. 627-630; Du Bois, B., (2006) A Study of Quality Improvements by Refactoring, , Ph.D. dissertation, University of Antwerp; Fowler, M., Beck, K., Brant, J., Opdyke, W., Roberts, D., (1999) Refactoring: Improving the Design of Existing Code, , Addison Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Horstmann, C., (2005) Violet, , http://www.horstmann.com/violet, Available from; Kerievsky, J., (2004) Refactoring to Patterns, , Addison Wesley; Martin, R.C., (2003) Agile Software Development: Principles, Patterns and Practices, , Prentice Hall; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Work experience versus refactoring to design patterns: A controlled experiment (2006) Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 12-22; Ng, T.H., Cheung, S.C., Chan, W.K., Yu, Y.T., Do maintainers utilize deployed design patterns effectively? (2007) Proceedings of the 29th International Conference on Software Engineering, pp. 168-177; Ó Cinnéide, M., Nixon, P., 1999. A methodology for the automated introduction of design patterns. In: Proceedings of the IEEE International Conference on Software Maintenance, pp. 463-472Ó Cinnéide, M., 2000. Automated Application of Design Patterns: A Refactoring Approach. Ph.D. dissertation, University of Dublin, Trinity CollegeO'Keeffe, M., Ó Cinnéide, M., 2007. Getting the most from search-based refactoring. In: Proceedings of the Genetic and Evolutionary Computation Conference, pp. 1114-1120O'Keeffe, M., Ó Cinnéide, M., Search-based refactoring for software maintenance (2008) The Journal of Systems and Software, 81 (4), pp. 502-516; Opdyke, W.F., (1992) Refactoring Object-Oriented Frameworks, , Ph.D. dissertation, University of Illinois at Urbana-Champaign; Parnas, D.L., Software aging (1994) Proceedings of the 16th International Conference on Software Engineering, pp. 279-287; Prechelt, L., Unger, B., Tichy, W.F., Brössler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), pp. 1134-1144; Trifu, A., Reupke, U., Towards automated restructuring of object oriented systems (2007) Proceedings of the 11th European Conference on Software Maintenance and Reengineering, pp. 39-48; Tsantalis, N., Chaikalis, T., Chatzigeorgiou, A., JDeodorant: Identification and removal of type-checking bad smells (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering, pp. 329-331; Van Emden, E., Moonen, L., Java quality assurance by detecting code smells (2002) Proceedings of the Ninth Working Conference on Reverse Engineering, pp. 97-106; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proceedings of the Fifth European Conference on Software Maintenance and Reengineering, pp. 77-84; Wohlin, C., Runeson, P., Höst, M., Ohlsson, M.C., Regnell, B., Wesslén, A., (2000) Experimentation in Software Engineering: An Introduction, , Kluwer Academic Publishers","Chatzigeorgiou, A.; Department of Applied Informatics, University of Macedonia, 54006 Thessaloniki, Greece; email: achat@uom.gr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-75349106264,,
,3,,"Shimomura, T., Chen, Q.L., Takahashi, M.",Extensible syntax-Oriented verifier with context-dependent recursive verification,2010,International Journal of Software Engineering and Knowledge Engineering,20,2,,233,251,,,10.1142/S0218194010004700,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953237101&partnerID=40&md5=fa360af81bf5b628d21be9ba8c8cb5ff,"Department of Information Science and Intelligent Systems, University of Tokushima, 2-1 Minamijosanjima, Tokushima, 770-8506, Japan; Course of Information Science, University of Tokushima, 2-1 Minamijosanjima, Tokushima, 770-8506, Japan; Department of Control and System Engineering, Toin University of Yokohama, 1614 Kurogane-cho, Aoba-ku, Yokohama, 225-0025, Japan","Shimomura, T., Department of Information Science and Intelligent Systems, University of Tokushima, 2-1 Minamijosanjima, Tokushima, 770-8506, Japan; Chen, Q.L., Course of Information Science, University of Tokushima, 2-1 Minamijosanjima, Tokushima, 770-8506, Japan; Takahashi, M., Department of Control and System Engineering, Toin University of Yokohama, 1614 Kurogane-cho, Aoba-ku, Yokohama, 225-0025, Japan","To develop Web applications of high quality, it is important to apply efficient frameworks to standardize the process of development in projects, or apply useful design patterns to produce the program code that can easily be enhanced. In addition to these efforts, we have to check the programs to see whether they keep various kinds of rules such as verification items for security which are common for all kinds of Web applications, and verification items for coding styles or code conventions which pertain to each project. This paper proposes a verification method for an extensible syntax-oriented verifier, and describes the implementation of its prototype system, SyntaxVerifier. SyntaxVerifier makes it possible to detect syntactical objects based on their syntactic contexts. It realizes a context-dependent recursive verification which makes it easy to dynamically trace a syntax tree in a verification process itself. © 2010 World Scientific Publishing Company.",Customaizable; Extensible; Recursive; Syntax analysis; Verification,Code conventions; Context dependent; Design Patterns; Extensible syntax; High quality; Objects-based; Program code; Prototype system; Syntax analysis; Syntax tree; Verification method; Verification process; WEB application; World Wide Web; Syntactics,,,,,,"(2004) The Apache Software Foundation: Struts, , http://jakarta.apache.org/struts/; Christensen, A.S., Moller, A., Schwartzbach, M.I., Extending Java for high-level web service construction (2003) ACM TOPLAS, 25 (6), pp. 814-875; Shimomura, T., Visual design and programming for web applications (2005) Journal of Visual Languages and Computing, 16 (3), pp. 213-230; Leff, A., Rayfield, J.T., Web-application development using the model/view/ controller design pattern (2001) Fifth International Enterprise Distributed Object Computing Conference, pp. 118-127; Metsker, S.J., Wake, W.C., (2006) Design Patterns in Java, , Addison-Wesley; Shimomura, T., Ikeda, K., Chen, Q.L., Lang, N.S., Takahashi, M., Rich component generation for web applications using custom tags (2007) Proc. of WSEAS International Conference on Computer Engineering and Applications, pp. 390-395; Shimomura, T., Ikeda, K., Chen, Q.L., Lang, N.S., Muneo, T., Visual programming for web applications that use html frame facilities (2007) Proc. of WSEAS International Conference on Computer Engineering and Applications, pp. 384-389; Shimomura, T., Chen, Q.L., Lang, N.S., Ikeda, K., Integrated laboratory network management system (2007) Proc. of the 7th WSEAS International Conference on Applied Informatics and Communications, pp. 188-193; (2006) Sun Microsystems Inc.: Code Conventions, , http://java.sun.com/docs/codeconv/; (2006), http://www.eclipse.org/, The Eclipse FoundationCastelluccia, D., Mongiello, M., Ruta, M., Totaro, R., WAVer: A model checking-based tool to verify web application design (2006) Electronic Notes in Theoretical Computer Science, 157 (1 SPEC. ISS.), pp. 61-76. , DOI 10.1016/j.entcs.2006.01.023, PII S1571066106002350; Di Sciascio, E., Donini, F.M., Mongiello, M., Piscitelli, G., Anweb: A system for automatic support to web application verification (2002) Proc. of SEKE, pp. 609-616; Pistore, M., Roveri, M., Busetta, P., Requirements-driven verification of web services (2004) Electronic Notes in Theoretical Computer Science, 105 (10), pp. 95-108; Shimomura, T., Ikeda, K., Chen, Q.L., Lang, N.S., Muneo, T., Customizable verifiers for web applications and their implementation (2007) Proc. of International Conference on Computer Engineering and Applications, pp. 396-401; Lang, N.S., Shimomura, T., Chen, Q.L., Ikeda, K., Customizable pattern-oriented verifiers for web applications (2006) WSEAS Transactions on Information Science & Applications, 4 (12), pp. 1439-1446; Shimomura, T., Lang, N.S., Ikeda, K., Extensible syntax-oriented verifier and its implementation (2008) Proc. of the IASTED International Conference on Software Engineering, pp. 298-303; (2007), http://checkstyle.sourceforge.net/, Oliver BurnGregor, D., Schupp, S., Stllint: Lifting static checking from languages to libraries (2006) Software: Practice and Experience, 36 (3), pp. 225-254; Evans, D., Guttag, J., Horning, J., Tan, Y.M., Lclint: A tool for using specifications to check code (1994) Proc. of the SIGSOFT Symposium on the Foundations of Software Engineering, pp. 87-96; Flanagan, C., Rustan, K., Leino, M., Lillibridge, M., Nelson, G., Saxe, J., Stata, R., Extended static checking for Java (2002) Proc. of the ACM SIGPLAN Conference on Programming Language Design and Implementation, pp. 234-241; Bush, W.R., Pincus, J.D., Sielaff, D.J., A static analyzer for finding dynamic programming errors (2000) Software: Practice and Experience, 30 (7), pp. 775-802; JetBrains: IntelliJ IDEA, , http://www.jetbrains.com/idea/2007","Shimomura, T.; Department of Information Science and Intelligent Systems, University of Tokushima, 2-1 Minamijosanjima, Tokushima, 770-8506, Japan; email: simomura@is.tokushima-u.ac.jp",,,,,,,,2181940,,ISEKE,,English,Int. J. Software Engineer. Knowledge Engineer.,Article,Scopus,2-s2.0-77953237101,,
,v,,"Kaczor, O., Guéhéneuc, Y.-G., Hamel, S.",Identification of design motifs with pattern matching algorithms,2010,Information and Software Technology,52,2,,152,168,,5,10.1016/j.infsof.2009.08.006,http://www.scopus.com/inward/record.url?eid=2-s2.0-70450223696&partnerID=40&md5=cac9031b2776e62a56564d65faa9dfe3,"DIRO, Université de Montréal, C.P. 6128 succursale Centre Ville, Montréal, Que. H3C 3J7, Canada","Kaczor, O., DIRO, Université de Montréal, C.P. 6128 succursale Centre Ville, Montréal, Que. H3C 3J7, Canada; Guéhéneuc, Y.-G., DIRO, Université de Montréal, C.P. 6128 succursale Centre Ville, Montréal, Que. H3C 3J7, Canada; Hamel, S., DIRO, Université de Montréal, C.P. 6128 succursale Centre Ville, Montréal, Que. H3C 3J7, Canada","Design patterns are important in software maintenance because they help in understanding and re-engineering systems. They propose design motifs, solutions to recurring design problems. The identification of occurrences of design motifs in large systems consists of identifying classes whose structure and organization match exactly or approximately the structure and organization of classes as suggested by the motif. We adapt two classical approximate string matching algorithms based on automata simulation and bit-vector processing to efficiently identify exact and approximate occurrences of motifs. We then carry out two case studies to show the performance, precision, and recall of our algorithms. In the first case study, we assess the performance of our algorithms on seven medium-to-large systems. In the second case study, we compare our approach with three existing approaches (an explanation-based constraint approach, a metric-enhanced explanation-based constraint approach, and a similarity scoring approach) by applying the algorithms on three small-to-medium size systems, JHotDraw, Juzzle, and QuickUML. Our studies show that approximate string matching based on bit-vector processing provides efficient algorithms to identify design motifs. © 2009 Elsevier B.V. All rights reserved.",Automata simulation; Bit-vector; Design motifs; Design patterns; Experimental validation; Identification of occurrences,Approximate string matching; Design motifs; Design Patterns; Design problems; Efficient algorithm; Experimental validations; Large system; Medium size; Pattern matching algorithms; Software maintenance; Vector design; Vector processing; Algorithms; Pattern matching; Research; Robots; Translation (languages); Vectors; Design,,,,,,"Koskinen, J., (2004) Software maintenance costs, web site, , http://www.cs.jyu.fi/~koskinen/smcosts.htm, September; Lientz, B.P., Swanson, E.B., Problems in application software maintenance (1981) Communications of the ACM, 24 (11), pp. 763-769. , http://portal.acm.org/citation.cfm?id=358790.358796; Biggerstaff, T.J., Mitbander, B.G., Webster, D.E., The concept assignment problem in program understanding (1993) Proceedings of the 15th International Conference on Software Engineering, pp. 482-498. , http://portal.acm.org/citation.cfm?id=257679, Basili V.R., DeMillo R.A., and Katayama T. (Eds), IEEE Computer Society Press/ACM Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Software. first ed., , Addison-Wesley; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of the 26th Conference on the Technology of Object-Oriented Languages and Systems, pp. 112-124. , http://www.iam.unibe.ch/~wuyts/publications.html, Gil J. (Ed), IEEE Computer Society Press; Quilici, A., Yang, Q., Woods, S., Applying plan recognition algorithms to program understanding (1997) Journal of Automated Software Engineering, 5 (3), pp. 347-372. , http://www-ee.eng.hawaii.edu/~alex/Research/Abstracts/ause98.html; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the Sixth International Workshop on Program Comprehension, pp. 153-160. , http://citeseer.nj.nec.com/antoniol98design.html, Tilley S., and Visaggio G. (Eds), IEEE Computer Society Press; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181. , http://www-etud.iro.umontreal.ca/ptidej/Publications/Documents/WCRE04.doc.pdf, Stroulia E., and de Lucia A. (Eds), IEEE Computer Society Press; Nikolaos Tsantalis, G.S., Chatzigeorgiou, A., Halkidis, S.T., Design pattern detection using similarity scoring (2006) Transactions on Software Engineering, 32, pp. 896-909; Gusfield, D., (1997) Algorithms on Strings, Trees and Sequences, , Cambridge University Press, Cambridge, UK; Levenshtein, V.I., Binary codes capable of correcting deletions, insertions, and reversals (1966) Soviet Physics - Doklady, 10 (8), pp. 707-710; Smith, T., Waterman, M., Identification of common molecular subsequences (1981) Journal of Molecular Biology, 147, pp. 195-197; Needlman, S., Wunsch, C., A general method applicable to the search for similarities in the amino acid sequence of two proteins (1970) Journal of Molecular Biology, 48, pp. 443-453; Ukkonen, E., Finding approximate patterns in strings (1985) Journal of Algorithms, 6, pp. 132-137; Holub, J., Simulation of NFA in approximate string and sequence matching (1997) Proceedings of the Prague Stringology Club Workshop, pp. 39-46. , 97; Bergeron, A., Hamel, S., Vector algorithms for approximate string matching (2002) International Journal of Foundation of Computer Science, 13 (1), pp. 53-66. , http://www.informatik.uni-trier.de/~ley/db/journals/ijfcs/ijfcs13.html; Myers, G., A fast bit-vector algorithm for approximate string matching based on dynamic programming (1999) Journal of the ACM, 46 (3), pp. 395-415. , http://www.portal.acm.org/citation.cfm?id=316550; Baeza-Yates, R.A., Gonnet, G.H., A new approach to text searching (1992) Communications of the ACM, 35 (10), pp. 74-82; Holub, J., Melichar, B., Implementation of nondeterministic finite automata for approximate pattern matching (1998) Proceedings of the Third International Workshop on Implementing Automata, pp. 92-99. , Champarnaud J.-M., Maurel D., and Ziadi D. (Eds), Springer-Verlag; Beyer, D., Noack, A., Lewerentz, C., Simple and efficient relational querying of software structures (2003) Proceedings of the 10th Working Conference on Reverse Engineering, pp. 216-225. , http://citeseer.ist.psu.edu/beyer03simple.html, Stroulia E., and van Deursen A. (Eds), IEEE Computer Society Press; Kaczor, O., Guéhéneuc, Y.-G., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) Proceedings of the 10th Conference on Software Maintenance and Reengineering, pp. 173-182. , http://www-etud.iro.umontreal.ca/~ptidej/Publications/Documents/CSMR06a.doc.pdf, di Lucca G.A., and Gold N. (Eds), IEEE Computer Society Press; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the Third Working Conference on Reverse Engineering, pp. 208-215. , http://www.computer.org/proceedings/wcre/7674/76740208abs.htm, Wills L.M., and Baxter I. (Eds), IEEE Computer Society Press; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceeding of 30th Conference on Technology of Object-Oriented Languages and Systems, pp. 18-32. , http://www.computer.org/proceedings/tools/0278/02780018abs.htm, Firesmith D. (Ed), IEEE Computer Society Press; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , http://www.iro.umontreal.ca/~schauer/Private/Publications/icse1999/icse1999.html, Garlan D., and Kramer J. (Eds), ACM Press; Jahnke, J.H., Schäfer, W., Zündorf, A., Generic fuzzy reasoning nets as a basis for reverse engineering relational database applications (1997) Proceedings of the Sixth European Software Engineering Conference, pp. 193-210. , http://www.uni-paderborn.de/cs/varlet/docs.html, Jazayeri M. (Ed), ACM Press; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) Proceedings of the 1st IJCAI Workshop on Modeling and Solving Problems with Constraints, pp. 57-64. , http://www-etud.iro.umontreal.ca/~ptidej/Publications/Documents/IJCAI01MSPC.doc.pdf, Bessière C. (Ed), AAAI Press; Eppstein, D., Subgraph isomorphism in planar graphs and related problems (1995) Proceedings of the Sixth Annual Symposium on Discrete Algorithms, pp. 632-640. , http://www.ics.uci.edu/~eppstein/pubs/Epp-TR-94-25.pdf, Clarkson K. (Ed), ACM Press; N. Jussien, e-Constraints: Explanation-based constraint programming, in: B. O'Sullivan, E. Freuder (Eds.), First CP workshop on User-Interaction in Constraint Satisfaction, 2001. <http://www.emn.fr/jussien/publications/jussien-WCP01.pdf>Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multi-layered framework for design pattern identification (2008) Transactions on Software Engineering, 34 (5), pp. 667-684. , http://www-etud.iro.umontreal.ca/~ptidej/Publications/Documents/TSE08.doc.pdf; Kampffmeyer, H., Zschaler, S., Finding the pattern you need: The design pattern intent ontology (2007) Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems, pp. 211-225. , http://www.springerlink.com/content/303028v312560v26/, Engels G., Opdyke B., Schmidt D.C., and Weil F. (Eds), Springer; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: putting icing on the UML cake (2004) Proceedings of the 19th Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 301-314. , http://www-etud.iro.umontreal.ca/ptidej/Publications/Documents/OOPSLA04.doc.pdf, Schmidt D.C. (Ed), ACM Press; Mens, K., Wuyts, R., D'Hondt, T., Declaratively codifying software architectures using virtualsoftware classifications (1999) Proceedings of the 30th international conference on Technology of Object-Oriented Languages and Systems, pp. 33-45. , http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=778997, Firesmith D. (Ed), IEEE Computer Society Press; Dantzig, G.B., (1963) Linear Programming and Extensions, , Princeton University Press; Eiselt, H.A., Gendreau, M., Laporte, G., Arc routing problems. Part I: The Chinese Postman problem (1994), Tech. Rep. CRT-960, Centre de Recherche sur les Transports MarchGluskov, V.M.G., The abstract theory of automata (1961) Russian Mathematical Surveys, 16, pp. 1-53; Thompson, K., Regular expression search algorithm (1968) Communications of the ACM, 11, pp. 419-422; Hopcroft, J.E., Ullman, J.D., (1979) Introduction to Automata Theory, Languages, and Computation, , Addison-Wesley; Guéhéneuc, Y.-G., Ptidej: Promoting patterns with patterns (2005) Proceedings of the First ECOOP workshop on Building a System using Patterns, , http://www-etud.iro.umontreal.ca/~ptidej/Publications/Documents/ECOOP05BSUP.doc.pdf, Fayad M.E. (Ed), Springer-Verlag; Thimbleby, H.W., The directed chinese postman problem (2003) Journal of Software - Practice and Experience, 33 (11), pp. 1081-1096. , http://www.uclic.ucl.ac.uk/harold/cpp/; Scheglov, K., Shackelford, J.-M.P., (2004) Eclipse profiler, , www.eclipsecolorer.sourceforge.net/index_profiler.html, September; Agerbo, E., Cornils, A., How to preserve the benefits of design patterns (1998) Proceedings of the 13th Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 134-143. , http://citeseer.nj.nec.com/31381.html, Chambers C. (Ed), ACM Press; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the First ICSE Workshop on Dynamic Analysis, , http://www.cs.nmsu.edu/jcook/woda2003/papers/Wendehals.pdf, Cook J.E., and Ernst M.D. (Eds), IEEE Computer Society Press; Bieman, J., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: an examination of five evolving systems (2003) Proceedings of the Ninth International Software Metrics Symposium, pp. 40-49. , http://csdl.computer.org/comp/proceedings/metrics/2003/1987/00/19870040abs.htm, Berry M., and Harrison W. (Eds), IEEE Computer Society Press; Brown, W.J., Malveau, R.C., Brown, W.H., McCormick, H.W., Hays III, W., Mowbray, T.J., (1998) Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis. first ed., , http://www.amazon.com/exec/obidos/tg/detail/-/0471197130/ref=ase_theantipatterngr/103-4749445-6141457, John Wiley and Sons","Guéhéneuc, Y.-G.; DIRO, Université de Montréal, C.P. 6128 succursale Centre Ville, Montréal, Que. H3C 3J7, Canada; email: guehene@iro.umontreal.ca",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Article,Scopus,2-s2.0-70450223696,,
,4,,"Bayley, I., Zhu, H.",Formal specification of the variants and behavioural features of design patterns,2010,Journal of Systems and Software,83,2,,209,221,,22,10.1016/j.jss.2009.09.039,http://www.scopus.com/inward/record.url?eid=2-s2.0-73149115985&partnerID=40&md5=98e2f733c16b19829cecc4dd5c4a8d98,"Department of Computing and Electronics, Oxford Brookes University, Oxford, OX33 1HX, United Kingdom","Bayley, I., Department of Computing and Electronics, Oxford Brookes University, Oxford, OX33 1HX, United Kingdom; Zhu, H., Department of Computing and Electronics, Oxford Brookes University, Oxford, OX33 1HX, United Kingdom","The formal specification of design patterns is widely recognized as being vital to their effective and correct use in software development. It can clarify the concepts underlying patterns, eliminate ambiguity and thereby lay a solid foundation for tool support. This paper further advances a formal meta-modeling approach that uses first-order predicate logic to specify design patterns. In particular, it specifies both structural and behavioural features of design patterns and systematically captures the variants in a well-structured format. The paper reports a case study involving the formal specification of all 23 patterns in the Gang of Four catalog. It demonstrates that the approach improves the accuracy of pattern specifications by covering variations and clarifying the ambiguous parts of informal descriptions. © 2009 Elsevier Inc. All rights reserved.",Design patterns; Formal specification; Graphic modeling; Predicate logic; Sequence diagrams; Variants of patterns,Design Patterns; First-order; Formal Specification; Metamodeling; Pattern specifications; Predicate logic; Sequence diagrams; Software development; Tool support; Design; Formal methods; Specifications; Formal logic,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings of the 16th IEEE International Conference on Automated Software Engineering (ASE 2001), 26-29 November, IEEE Computer Society, Coronado Island, pp. 166-173. , San Diego, CA, USA, pp; Bayley, I., Zhu, H., Formalising design patterns in predicate logic (2007) Proceedings of the Fifth IEEE International Conference on Software Engineering and Formal Methods, SEFM, pp. 25-36; Bayley, I., Zhu, H., On the composition of design patterns (2008) Proceedings of the Eighth Intenational Conference on Quality Software (QSIC'08), pp. 27-36. , Zhu, H, Ed, IEEE Computer Society, Oxford, UK, pp; Bayley, I, Zhu, H, 2008b. Specifying behavioural features of design patterns in first-order logic. In: Proceedings of the IEEE 32nd International Computer Software and Applications Conference COMPSAC 2008, pp. 203-210Berczuk, S., Finding solutions through pattern languages (1995) IEEE Computer, 27 (12), pp. 75-76. , December; Beyer, D., Noack, A., Lewerentz, C., Efficient relational calculation for software analysis (2005) IEEE Transaction of Software Engineering, 31 (2), pp. 137-149; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in Java (2005) Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering (ASE, pp. 224-232. , http://www.inf.ed.ac.uk/stark/autvdp.html, ACM Press, pp, URL; Coad, P., Object-oriented patterns (1992) Communications of the ACM, 35 (9), pp. 152-159. , (special issue on analysis and modeling in software development); Dong, J., Zhao, Y., Peng, T., Architecture and design pattern discovery techniques - a review (2007) Software Engineering Research and Practice, pp. 621-627. , Arabnia H.R., and Reza H. (Eds), CSREA Press; Eden, A.H., Formal specification of object-oriented design (2001) International Conference on Multidisciplinary Design in Engineering, , Montreal, Canada; Eden, A.H., A theory of object-oriented design (2002) Information Systems Frontiers, 4 (4), pp. 379-391; Eden, A.H., Hirshfeld, Y., Principles in formal specification of object oriented design and architecture (2001) Proceedings of the 2001 Conference of the Centre for Advanced Studies on Collaborative Research (CASCON '01), pp. 3-18. , IBM Press, pp; Eden, A.H., Yehudai, A., Gil, J., (1997) Precise specification and automatic application of design patterns, pp. 143-152. , ASE, pp; Eden, A.H., Gasparis, E., Nicholson, J., LePUS3 and Class-Z Reference Manual (2007), Technical Report CSM-474, University of Essex, UK. ISSN: 1744-8050Elaasar, M., Briand, L.C., Labiche, Y., A metamodeling approach to pattern specification (2006) Lecture Notes in Computer Science Genova, 4199, pp. 484-498. , Proceedings of Ninth International Conference on Model Driven Engineering Languages and Systems MoDELS, of, October 1-6, Springer, Italy, pp; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions of Software Engineering, 30 (3), pp. 193-206; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gasparis, E., Eden, A.H., Nicholson, J., Kazman, R., 2008a. The design navigator: charting Java programs. In: Proceedings of the 30th International Conference on Software Engineering (ICSE 2008), May 10-18, Companion Leipzig, Germany, pp. 945-946Gasparis, E., Nicholson, J., Eden, A.H., 2008b. LePUS3: an object-oriented design description language. In: Proceedings of Fifth International Conference on Diagrammatic Representation and Inference (Diagrams 2008), 5223 of Lecture Notes in Computer Science, Springer, Herrsching, Germany, pp. 364-367Guennec, A.L., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns (2000) Lecture Notes in Computer Science, 1939, pp. 482-496. , Proceedings of the Third International Conference on The Unified Modeling Language (UML), Springer, New York, UK; Huang, H., Zhang, S., Cao, J., Duan, Y., A practical pattern recovery approach based on both structural and behavioral analysis (2005) Journal in Systems Software, 75 (1-2), pp. 69-87; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering (CSMR 2008), April 1-4, IEEE, pp. 274-278. , Athens, Greece, pp; Kim, D.-K., (2004) A Meta-Modeling Approach to Specifying Patterns, , Ph.D. Thesis, Colorado State University, Fort Collins, CO, USA; Kim, D.-K., Lu, L., Inference of design pattern instances in UML models via logic programming (2006) Proceedings of the 11th International Conference on Engineering of Complex Computer Systems (ICECCS, pp. 47-56. , IEEE Computer Society, Stanford, California, USA, pp; Kim, D.-K., Shen, W., An approach to evaluating structural pattern conformance of UML models (2007) Proceedings of the 2007 ACM Symposium on Applied Computing (SAC'07), pp. 1404-1408. , Seoul, Korea. ACM Press, pp; Kim, D.-K., Shen, W., Evaluating pattern conformance of UML models: a divide-and-conquer approach and case studies (2008) Software Quality Journal, 16 (3), pp. 329-359; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented softwar (1996) Proceedings of the Third Working Conference on Reverse Engineering (WCRE'96), pp. 208-215. , IEEE Computer Society, pp; Lano, K., Bicarregui, J.C., Goldsack, S., Formalising design patterns (1996) BCS-FACS Northern Formal Methods Workshop, (1-20), p. 11. , Ilkley, UK, pp; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Lecture Notes in Computer Science, 1445, pp. 114-134. , ECOOP'98, Springer, pp; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in UML (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE'04), pp. 252-261; Maplesden, D., Hosking, J., Grundy, J., A visual language for design pattern modeling and instantiation (2001) Proceedings of IEEE International Symposium on Human-Centric Computing Languages and Environments (HCC'01), pp. 338-339; Maplesden, D., Hosking, J., Grundy, J., Design pattern modeling and instantiation using DPML (2002) Proceedings of the 40th International Conference on Tools Pacific (TOOLS Pacific). Australian Computer Society, Inc., Darlinghurst, pp. 3-11. , Australia, pp; Mikkonen, T., Formalizing design patterns (1998) Proceedings of the ICSE'98, pp. 115-124. , IEEE Computer Society, Kyoto, Japan, pp; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the 22rd International Conference on Software Engineering (ICSE, pp. 338-348. , Orlando, Florida, USA, pp; Nija Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) Proceedings of the ASE'06, pp. 123-134. , Tokyo, Japan, pp; OMG, 2004. Unified Modeling Language: Superstructure, Version 2.0, Formal/05-07-04(2007) The first international workshop on patterns languages: Addressing challenges, , http://www.engr.sjsu.edu/fayad/workshops/PLAC07, PLAC, accessed 12.08.07; Seemann, J., von Gudenberg, J.W., Pattern-based design recovery of Java software (1998) SIGSOFT '98/FSE-6: Proceedings of the Sixth ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 10-16; Taibi, T., Formalising design patterns composition (2006) Software, IEE Proceedings, 153 (3), pp. 126-153; Taibi, T., Check, D., Ngo, L., Formal specification of design patterns-a balanced approach (2003) Journal of Object Technology, 2 (4); Winn, T., Calder, P., A pattern language for pattern language structure (2003) Proceedings of the 2002 Conference on Pattern Languages of Programs (CRPIT'02), pp. 45-58. , Australia Computer Society, Inc, pp; Zdun, U., Avgeriou, P., Modelling architectural patterns using architectural primitives (2005) Proceedings of the 20th annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages and Applications (OOPLSA'05), pp. 133-146. , San Diego, California. pp; Zhu, H., Shan, L., Well-formedness, consistency and completeness of graphic models (2006) Proceedings of the UKSIM'06, pp. 47-53. , Oxford, UK, pp; Zhu, H., Shan, L., Bayley, I., Amphlett, R., A formal descriptive semantics of UML and its applications UML 2 Semantics and Applications, , in press, Lano, K, Ed, John Wiley & Sons, Inc; Zhu, H, Bayley, I, Shan, L, Amphlett, R, 2009. Tool support for design pattern recognition at model level. In: Proceedings of the IEEE 33nd International Computer Software and Applications Conference COMPSAC'09, Seattle, Washington, USA, pp. 228-233","Zhu, H.; Department of Computing and Electronics, Oxford Brookes University, Oxford, OX33 1HX, United Kingdom; email: hzhu@brookes.ac.uk",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-73149115985,,
,4,,"Shlezinger, G., Reinhartz-Berger, I., Dori, D.",Modeling design patterns for Semi-automatic reuse in system design,2010,Journal of Database Management,21,1,,29,57,,2,10.4018/jdm.2010112302,http://www.scopus.com/inward/record.url?eid=2-s2.0-75449097923&partnerID=40&md5=0c6dd3147d5766be079a87be6b3a560c,"Technion-Israel Institute of Technology, Israel; University of Haifa, Israel","Shlezinger, G., Technion-Israel Institute of Technology, Israel; Reinhartz-Berger, I., University of Haifa, Israel; Dori, D., Technion-Israel Institute of Technology, Israel","Design patterns provide reusable solutions for recurring design problems. They constitute an important tool for improving software quality. However, correct usage of design patterns depends to a large extent on the designer. Design patterns often include models that describe the suggested solutions, while other aspects of the patterns are neglected or described informally only in text. Furthermore, design pattern solutions are usually described in an Object-oriented fashion that is too close to the implementation, masking the essence of and motivation behind a particular design pattern. We suggest an approach to modeling the different aspects of design patterns and Semi-automatically utilizing these models to improve software design. Evaluating our approach on commonly used design patterns and a case study of an automatic application for composing, taking, checking, and grading analysis and design exams, we found that the suggested approach successfully locates the main design problems modeled by the selected design patterns.Copyright © 2010, IGI Global.",Conceptual modeling; Design improvement; Design patterns; Domain engineering; Model retrieval; Object-process methodology (OPM); Pattern recognition; Unified modeling language (UML),Conceptual modeling; Design improvements; Design Patterns; Domain engineering; Object-process methodology; Object-process methodology (OPM); Computer software reusability; Computer software selection and evaluation; Design; Linguistics; Multi agent systems; Pattern recognition; Unified Modeling Language; Software design,,,,,,"Abdul Jalil, M., Azman Mohd Noah, S., The difficulties of using design patterns among novices: An exploratory study (2007) Proceedings of the 2007 International Conference on Computational Science and its Applications - ICCSA 2007, pp. 97-103. , Washington, DC: IEEE Computer Society,In M. L. Gavrilova O. Gervasi (Eds.); Batra, D., Conceptual data modeling patterns: Representation and validation (2005) Journal of Database Management, 16 (2), pp. 84-106; Blomqvist, E., Fully automatic construction of enterprise ontologies using design patterns: Initial method and first experiences. (2005) On the Move to Meaningful Internet Systems 2005: CoopIS, DOA, and ODBASE, pp. 1314-1329. , LNCS 3761,Berlin-Heidelberg,Germany: Springer,In R. Meersman, Z. Tari, M-S. Hacid, J. Mylopoulus, B. Pernici, O.,Babaoglu, et al. (Eds.); Buschmann, F., Meunier, R., A system of patterns (1995) Pattern Language for Program Design, pp. 325-343. , New York: Addison-Wesley, In J. O. Coplien D. C. Schmidt (Eds.); Buschmann, F., Meunier, R., Rohnert, H., Sommerland, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , Chichester, UK: John Wiley & Sons; Dong, J., Alencar, P.S.C., Cowan, D.D., Yang, S., Composing pattern-based components and verifying correctness (2007) Journal of Systems and Software, 80 (11), pp. 1755-1769. , DOI 10.1016/j.jss.2007.03.005, PII S0164121207000817; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) IEEE Transactions on Software Engineering, 33 (7), pp. 433-453. , DOI 10.1109/TSE.2007.1012; Dori, D., (2002) Object-Process Methodology - A Holistic System Paradigm, , London: Springer; Eden, A.H., (1999) Precise Specification of Design Patterns and Tool Support in Their Application, , Unpublished PhD thesis, University of Tel Aviv; Eden, A.H., A visual formalism for object-oriented architectures (2002) Proceedings of the 6th World Conference on Integrated Design and Process Technology (IDPT'2002), , Pasadena, CA: Society for Design and Process Science,In J. C. Peterson, B. Kraemer, B. Enders (Eds.); France, R.B., Kim, D.-K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206. , doi:10.1109/TSE.2004.1271174; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading, MA: Addison-Wesley; Guennec, A.L., Sunye, G., Jezequel, J.-M., Precise modeling of design patterns (2000) «UML» 2000- The Unified Modeling Language. Advancing the Standard, pp. 482-496. , LNCS 1939 Berlin-Heidelberg, Germany: Springer, In A. Evans, S. Kent, & B. Selic (Eds.); Hahsler, M., (2003) A Quantitative Study of the Application of Design Patterns in Java, , Working Papers on Information Processing and Information Management No. 01/2003. Wien, Austria: Institute of Information Processing and Information Management; Hahsler, M., A Quantitative study of the adoption of design patterns by open source software developers (2004) Free/Open Source Software Development, , Hershey, PA: Idea Group, In S. Koch (Ed.); Helm, R., Patterns in practice (2005) Proceedings of the 10th Annual Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'2005), pp. 337-341. , New York: ACM Publishing, In R. E. Johnson & R. P. Gabriel (Eds.); Kim, D.-K., France, R., Ghosh, S., A UML-based language for specifying domain-specific patterns (2004) Journal of Visual Languages and Computing, 15 (3-4), pp. 265-289. , DOI 10.1016/j.jvlc.2004.01.004, PII S1045926X04000126, Domain-Specific Modeling with Visual Languages; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) ECOOP'98-Object Oriented Programming, pp. 114-136. , Berlin-Heidelberg, Germany: Springer,LNCS 1445; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in UML (2004) Proceedings of the 26th International Conference on Software Engineering (ICSE'04), pp. 252-261. , Washington, DC: IEEE Computer Society, In A. Finkelstein, J. Estublier, & D. S. Rosenblum (Eds.); Mapelsden, D., Hosking, J., Grundy, J., Design pattern modeling and instantiation using DPML (2002) Proceeding of TOOLS Pacific 2002 - Objects for Internet, Mobile and Embedded Applications. Conference in Research and Practice in Information Technology, 10, pp. 3-11. , Darlinghurst, Australia: ACS, In J. Noble & J. Potter (Eds.); Noble, J., Classifying relationships between object-oriented design patterns (1998) In Proceedings of the Australian Software Engineering Conference, pp. 98-108. , Washington, DC: IEEE Computer Society; Object management group (2002) UML 2.0 Superstructure FTF Convenience Document, , http://www.omg.org/docs/ptc/04-10-02.zip, Retrieved from; Object management group (2003) Meta Object Facility (MOFTM) Version 1.4, , http://www.omg.org/docs/formal/02-04-03.pdf, Retrieved from; Object venture inc (2002) Pattern and Component Markup Language, , http://www.objectventure.com/pcml.html, Retrieved from; Pickin, S., Manjarrés, A., Describing AI analysis patterns with UML (2002) «UML» 2000 - The Unified Modeling Language. Advancing the Standard, pp. 466-481. , Berlin-Heidelberg, Germany: Springer,LNCS 1939 (Eds.), In A. Evans, S. Kent, & B. Selic (Eds.); Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , DOI 10.1109/TSE.2002.1010061; Purao, S., Storey, V.C., Han, T., Improving analysis pattern reuse in conceptual design: Augmenting automated processes with supervised learning (2003) Information Systems Research, 14 (3), pp. 244-268. , doi:10.1287/isre.14.3.269.16559; Reinhartz-Berger, I., Dori, D., A reflective metamodel of object-process methodology: The system modeling building blocks (2005) Business Systems Analysis with Ontologies, pp. 130-173. , Hershey, PA: Idea Group, In P. Green & M. Rosemann (Eds.); Reinhartz-Berger, I., Sturm, A., Enhancing UML models: A domain analysis approach (2007) Journal of Database Management, 19 (1), pp. 74-94; Schmidt, D., Experience using design patterns to develop reusable object-oriented communication software (1995) Communications of the ACM, 38 (10), pp. 65-74. , doi:10.1145/226239.226255; Shalloway, A., Trott, J., (2001) Design Patterns Explained: A New Perspective on Object-Oriented Design, , Reading, MA: Addison-Wesley; Soffer, P., Structural equivalence in model-based reuse: Overcoming differences in abstract level (2005) Journal of Database Management, 16 (3), pp. 21-39; Sturm, A., Dori, D., Shehory, O., Domain modeling with object-process methodology (2006) Proceedings of the 8th International Conference on Enterprise Information Systems (ICEIS'2006), pp. 144-151. , Paphos, Cyprus: ICEIS, In Y. Manolopoulos, J. Filipe, P. Constantopoulos, & J. Cordeiro (Eds.); Systems OPCAT web site, , http://www.opcat.com/, O. P. C. A. T., Retrieved from; Taibi, T., Ngo, D.C.L., Formal specification of design patterns - A balanced approach (2003) Journal of Object Technology, 2 (4), pp. 127-140; Warmer, J., Kleppe, A., (1998) The Object Constraint Language: Precise Modeling with UML, , Reading, MA: Addison-Wesley; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) In Proceedings of the 5th Conference on Software Maintenance and Reengineering, pp. 77-84. , Los Alamitos, CA: IEEE Computer Society Press; Yacoub, S., Ammar, H., (2003) Pattern-Oriented Analysis And Design: Composing Patterns To Design Software Systems, , Boston: Addison-Wesley; Yin, R.K., (1994) Case Study Reaserch. Design and Methods, , 2nd ed. Thousand Oaks, CA: Sage; Zimmer, W., Relationships between design patterns (1995) Pattern Language for Program Design, pp. 345-364. , New York: Addison-Wesley, In J. O. Coplien & D. C. Schmidt (Eds.)","Shlezinger, G.; Technion-Israel Institute of TechnologyIsrael",,,,,,,,10638016,,,,English,J. Database Manage.,Article,Scopus,2-s2.0-75449097923,,
,??,,"Wȩgrzynowicz, P., Stencel, K.","The good, the bad, and the ugly - Three ways to use a semantic code query system",2009,"Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA",,,,821,822,,2,10.1145/1639950.1640032,http://www.scopus.com/inward/record.url?eid=2-s2.0-72249097974&partnerID=40&md5=4c1f73547421066d5bf5fc060b37e23f,"NASK Research and Academic Computer Network, Poland; Institute of Informatics, Warsaw University, Poland","Wȩgrzynowicz, P., NASK Research and Academic Computer Network, Poland; Stencel, K., Institute of Informatics, Warsaw University, Poland","D-CUBED is a semantic code query system for Java. Its focus is on capturing the semantics of an analyzed program. It provides rich support to investigate the call flow and data flow of a program by using static analysis techniques with the custom model of symbolic instances. The usage scenarios of D-CUBED include: (1) detection of design patterns with the focus on code semantics (the good), (2) discovery of bugs, including a range of security holes (the bad), (3) assessment and improvement of a design by discovering bad design and code practices (the ugly).",Automatic detection; Bad practices; Bugs; Design patterns; Semantic code query system,Automatic Detection; Bad practices; Design Patterns; Query systems; Semantic codes; Codes (symbols); Computer systems programming; Data flow analysis; Design; Java programming language; Linguistics; Semantics; Object oriented programming,,,,,,"Elnar Hajiyev, Mathieu Verbaere, Oege de Moor, and Kris de Volder. Codequest: querying source code with datalog. In OOPSLA '05: Companion to the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, pages 102-103, New York, NY, USA, 2005. ACM. ISBN 1-59593-193-7. doi: http://doi.acm.org/10.1145/1094855.1094884Edward McCormick and Kris De Volder. Jquery: finding your way through tangled code. In OOPSLA '04: Companion to the 19th annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, pages 9-10, New York, NY, USA, 2004. ACM. ISBN 1-58113-833-4. doi: http://doi.acm.org/10.1145/1028664.1028670","Wȩgrzynowicz, P.; NASK Research and Academic Computer NetworkPoland; email: patrycjaw@nask.pl",,ACM SIGPLAN,,"OOPSLA 2009 Companion - 24th Annual ACM Conference on Object-Oriented Programming, Systems, Languages and Applications, OOPSLA 2009",25 October 2009 through 29 October 2009,"Orlando, FL",78926,,9781605587660,,,English,Proc Conf Object Orient Program Syst Lang Appl OOPSLA,Conference Paper,Scopus,2-s2.0-72249097974,,
,v,,[No author name available],Finding the design pattern from the source code for developing reusable object oriented software,2009,"2nd International Conference on the Applications of Digital Information and Web Technologies, ICADIWT 2009",,,5273947,157,162,,,10.1109/ICADIWT.2009.5273947,http://www.scopus.com/inward/record.url?eid=2-s2.0-71449091668&partnerID=40&md5=81d8116bd9e2db93a186ae847aca28d3,,,One of the principal goals of object-oriented software is to improve the reusability of software components. In this paper the identification of design patterns from source code is described to improve the reusability of software. The methodology for parsing scheme to recover the design pattern from the source code is described by defining interactions between objects. Three industrial softwares are use in case study to verify the methodologies and sufficient experimental results are presented. ©2009 IEEE.,Coupling; Design methodology; Design pattern; Software metrics; Software reusability,Design Methodology; Design Patterns; Industrial software; Object oriented software; Reusability of software; Software metrics; Software reusability; Source codes; Design; Object oriented programming; Reusability; Computer software reusability,,,,,,"AI-Ahmad, W., Object-Oriented Design Patterns for Detailed Design (2006) Journal of Object Technology, 5 (2), pp. 155-169; Pree, W., Meta Patterns-A means for capturing the essentials of reusable object-oriented design (1994) ECOOP, pp. 150-162; Pree, W., Sikora, H., Design patterns for object-oriented software development (tutorial) (1997) International Conference on Software Engineering, Proceedings of the 19th international conference on Software engineering, pp. 663-664; Chidamber, S.R., Kemerer, C.F., A Metrics Suite for Object Oriented Design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; Coad, P., Yourdon, E., Object-Oriented Analysis (1991) prentice-Hall, , second edition; Azharul Hasan, K.M., Batanov, D.N., Measuring Coupling for Developing Object-Oriented Systems (2003) In Porc. ICT, pp. 325-330; Eder, J., Kappel, G., Schrefl, M., Coupling and Cohesion in Object-Oriented Systems (1994), Technical Report, University of KlagenfurtHitz, M., Montazeri, B., Measuring Coupling and Cohesion in Object-Oriented systems (1995) Proc. Int. Symposium on Applied Corporate Computing; Batanov, D.N., Arch-int, S., Business Objects and Components for Web-based Information Systems Development Proceedings of IRMA'2002 Seattle, 2002",,,,,"2nd International Conference on the Applications of Digital Information and Web Technologies, ICADIWT 2009",4 August 2009 through 6 August 2009,London,78456,,9781424444571,,,English,"Int. Conf. Appl. Digit. Inf. Web Technol., ICADIWT",Conference Paper,Scopus,2-s2.0-71449091668,,
,4,,"Khomh, F., Guéhéneuc, Y.-G., Antoniol, G.",Playing roles in design patterns: An empirical descriptive and analytic study,2009,"IEEE International Conference on Software Maintenance, ICSM",,,5306327,83,92,,7,10.1109/ICSM.2009.5306327,http://www.scopus.com/inward/record.url?eid=2-s2.0-70849083519&partnerID=40&md5=1e517c2ced5aade3d0934462ae375998,"Ptidej Team-DGIGL, École Polytechnique de Montréal, QC, Canada; SOCCER Lab.-DGIGL, École Polytechnique de Montréal, QC, Canada","Khomh, F., Ptidej Team-DGIGL, École Polytechnique de Montréal, QC, Canada; Guéhéneuc, Y.-G., Ptidej Team-DGIGL, École Polytechnique de Montréal, QC, Canada; Antoniol, G., SOCCER Lab.-DGIGL, École Polytechnique de Montréal, QC, Canada","This work presents a descriptive and analytic study of classes playing zero, one, or two roles in six different design patterns (and combinations thereof ). First, we answer three research questions showing that (1) classes playing one or two roles do exist in programs and are not negligible and that there are significant differences among the (2) internal (class metrics) and (3) external (change-proneness) characteristics of classes playing zero, one, or two roles. Second, we revisit a previous work on design patterns and changeability and show that its results were, in a great part, due to classes playing two roles. Third, we exemplify the use of the study results to provide a ranking of the occurrences of the design patterns identified in a program. The ranking allows developers to balance precision and recall.",,Design Patterns; Precision and recall; Research questions; Computer software; Computer software maintenance; Design,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th International Workshop on Program Comprehension, pp. 153-160. , IEEE Computer Society Press, June; Basili, R., Weiss, D.M., A methodology for collecting valid software engineering data (1984) IEEE Transactions on Software Engineering, 10 (6), pp. 728-738. , November; Beck, K., Johnson, R.E., Patterns generate architectures (1994) Proceedings of 8th European Conference for Object-oriented Programming, pp. 139-149. , Springer-Verlag, July; Bieman, J.M., Jain, D., Yang, H.J., OO design patterns, design structure, and program changes: An industrial case study (2001) Proceedings of the International Conference on Software Maintenance, pp. 580-589. , http://www.dsi.unifi.it/icsm2001/, November, IEEE Computer Society; Briand, L., Devanbu, P., Melo, W., An investigation into coupling measures for C++ (1997) Proceedings of the 19th International Conference on Software Engineering, pp. 412-421. , ACM Press, May; Chidamber, S.R., Kemerer, C.F., A metrics suite for object-oriented design (1993) Technical Report E53-315, MIT Sloan School of Management, , December; Cohen, J., (1988) Statistical Power Analysis for the Behavioral Sciences, , Academic Press, New York, 2nd edition; Penta, M.D., Cerulo, L., Guéhéneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) Proceedings of the 24th International Conference on Software Maintenance (ICSM), p. 10. , IEEE Computer Society Press, September-October; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-oriented Software, , Addison-Wesley, 1st edition; Guéhéneuc, Y.-G., Antoniol, G., Demima: A multi-layered framework for design pattern identification (2008) Transactions on Software Engineering (TSE), 34 (5), pp. 667-684. , September, 18 pages; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering (WCRE), pp. 172-181. , IEEE Computer Society Press, November, 10 pages; Hannemann, J., Kiczales, G., Design pattern implementation in Java and aspectJ (2002) Proceedings of the 17th Conference on Object-oriented Programming, Systems, Languages, and Applications, pp. 161-173. , ACM Press, November; Hitz, M., Montazeri, B., Measuring coupling and cohesion in object-oriented systems (1995) Proceedings of the 3rd Intermational Symposium on Applied Corporate Computing, pp. 25-27. , Texas A & M University, October; Hollander, M., Wolfe, D.A., (1999) Nonparametric Statistical Methods, , John Wiley and Sons, inc. 2nd edition; Jahnke, J.H., Zündorf, A., Rewriting poor design patterns by good design patterns (1997) Proceedings the 1st ESEC/FSE Workshop on Object-oriented Reengineering, , Distributed Systems Group, Technical University of Vienna, September, TUV-1841-97-10; Kampffmeyer, H., Zschaler, S., Finding the pattern you need: The design pattern intent ontology (2007) Proceedings of the 10th International Conference on Model Driven Engineering Languages and Systems, pp. 211-225. , Springer, September- October; Lorenz, M., Kidd, J., (1994) Object-oriented Software Metrics: A Practical Approach, , Prentice-Hall, 1st edition, July; Mccabe, T.J., Butler, C.W., Design complexity measurement and testing (1989) Communications of the ACM, 32 (12), pp. 1415-1425. , December; Mcnatt, W.B., Bieman, J.M., Co upling of design patterns: Common practices and their benefits (2001) Proceedings of the 25th Computer Software and Applications Conference, pp. 574-579. , IEEE Computer Society Press, October; Spinellis, D., A tale of four kernels (2008) Proceedings of the 30th International Conference on Software Engineering, pp. 381-390. , ACM Press, May; Khomh, F., Guéhéneuc, Y.-G., Do design patterns impact software quality positively? (2008) Proceedings of the 12th Conference on Software Maintenance and Reengineering (CSMR), , IEEE Computer Society Press, April, Short Paper. 5 pages; Tegarden, D.P., Sheetz, S.D., Monarchi, D.E., A software complexity model of object-oriented systems (1995) Decision Support Systems, 13 (3-4), pp. 241-262. , March; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) Transactions on Software Engineering, 32 (11). , November; Vokác, M., Defect frequency and design patterns: An empirical study of industrial code (2004) Transactions on Software Engineering, 30 (12), pp. 904-917","Khomh, F.; Ptidej Team-DGIGL, École Polytechnique de Montréal, QC, Canada; email: foutsekh@iro.umontreal.ca",,,,"2009 IEEE International Conference on Software Maintenance, ICSM 2009",20 September 2009 through 26 September 2009,"Edmonton, AB",78644,,9781424448289,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-70849083519,,
,v,,"Nguyen, T., Pooley, R.",Effective recognition of patterns in object-oriented designs,2009,"4th International Conference on Software Engineering Advances, ICSEA 2009, Includes SEDES 2009: Simposio para Estudantes de Doutoramento em Engenharia de Software",,,5298357,320,325,,,10.1109/ICSEA.2009.53,http://www.scopus.com/inward/record.url?eid=2-s2.0-70749113449&partnerID=40&md5=dc4048ff31a963e82cc8d0c2d8ffae77,"Computer Science, Heriot Watt University, Edinburgh, United Kingdom","Nguyen, T., Computer Science, Heriot Watt University, Edinburgh, United Kingdom; Pooley, R., Computer Science, Heriot Watt University, Edinburgh, United Kingdom","An approach to detecting object oriented design patterns in existing UML models, based on a combination of existing techniques, is described. The current work considered is reviewed briefly. These approaches all look for similarities between the models or programs for the design and the model which define the pattern. From this review, two current methods are selected that have a real ability to detect design patterns at the design level. It is shown that these can work together to improve detection rates. Finally, there are ideas on how this work can be extended to detect more patterns and anti-patterns. © 2009 IEEE.",Design patterns; Pattern detection,Anti-patterns; Design levels; Design Patterns; Detecting objects; Detection rates; Object-oriented design; Pattern detection; UML Model; Computer software; Design,,,,,,"Hervé, A.-A., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proc 16th Conf on Automated Software Engineering, pp. 166-173; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Fifth International Symposium on Software Metrics (METRICS'98), pp. 23-37; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Int Conf on Software Maintenance (ICSM,), pp. 305-314; Bergenti, F., Poggi, A., Improving UML designs using automatic design pattern detection (2000) 12th. Intl Conf on Software Engineering and Knowledge Engineering, pp. 336-343. , (SEKE 2000); Blondel, V.D., Gajardo, A., Heymans, M., Senellart, P., Van Dooren, P., A measure of similarity between graph vertices: Applications to synonym extraction and web searching (2004) SIAM Rev., 46, pp. 647-666; Brown, K., Design reverse-engineering and automated design- pattern detection in smalltalk (1996) Technical Report TR-96-07, , North Carolina State University at Raleigh; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery by visual language parsing (2005) Proc. 9th European Conference Software Maintenance and Reengineering (CSMR), pp. 102-111; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, H., Fingerprinting design patterns (2004) WCRE 2004, pp. 172-181; Harandi, M.T., Ning, J.Q., Knowledge-Based program analysis (1990) IEEE Softw., 7 (1), pp. 74-81. , Jan; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proc. 11th IWPC'03, pp. 94-103. , Portland, Oregon, USA; Kleinberg, J.M., Authoritative sources in a hyperlinked environment (1999) J. ACM, 46 (5); Prechelt, L., Kramer, C., Functionality versus practicality: Employing existing tools for recovering structural design patterns (1998) J. UCS, 4 (12), pp. 866-882; OMG, , http://www.uml.org/; Rich, C., Waters, R., (1987) The Programmer's Apprentice Project: A Research Overview, , Massachusetts Institute of Technology Technical Report; Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2003) 21st IEEE/ACM Int Conf Automated Software Engineering, pp. 123-134; Smith, J., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Automated Software Engineering 2003, pp. 215-224. , Montreal; Tonella, P., Antoniol, G., Inference of object-oriented design patterns (1995) Journal of Software Maintenance, 13 (5), pp. 309-330; Trung, N., (2007) Mining Patterns from UML Designs, , MSc dissertation, Heriot Watt, Department of Computer Science; Tsantalis, N., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-908; Vokác, M., An efficient tool for recovering design patterns from C++ code (2006) Journal of Object Technology, 5 (1), pp. 139-157; Wang, W., Tzerpos, V., Design pattern detection in eiffel systems (2005) Proc.12th Working Conference on Reverse Engineering, pp. 165-174; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proc. ICSE Workshop on Dynamic Analysis (WODA); Wenzel, S., Automatic detection of incomplete instances of structural patterns in UML class diagrams (2005) Nordic Journal of Computing, 12 (4), pp. 361-378. , pp 29-32; Zager, L.A., Verghese, G.C., Graph similarity scoring and matching (2008) Applied Mathematics Letters, 21 (1), pp. 86-94","Nguyen, T.; Computer Science, Heriot Watt University, Edinburgh, United Kingdom; email: trungngyen@hotmail.co.uk",,IARIA,,"4th International Conference on Software Engineering Advances, ICSEA 2009, Includes SEDES 2009: Simposio para Estudantes de Doutoramento em Engenharia de Software",20 September 2009 through 25 September 2009,Porto,78651,,9780769537771,,,English,"Int. Conf. Softw. Eng. Adv., ICSEA, Incl. SEDES: Simp. Estud. Doutoramento Eng. Softw.",Conference Paper,Scopus,2-s2.0-70749113449,,
,v,,"Wegrzynowicz, P., Stencel, K.",Towards a comprehensive test suite for detectors of design patterns,2009,ASE2009 - 24th IEEE/ACM International Conference on Automated Software Engineering,,,5431778,103,110,,1,10.1109/ASE.2009.85,http://www.scopus.com/inward/record.url?eid=2-s2.0-77952215241&partnerID=40&md5=93c083065ba103c8b30bcb78870e3a09,"Software R and D Department, NASK Research and Academic Computer Network, Warsaw, Poland; Institute of Informatics, Warsaw University, Warsaw, Poland","Wegrzynowicz, P., Software R and D Department, NASK Research and Academic Computer Network, Warsaw, Poland; Stencel, K., Institute of Informatics, Warsaw University, Warsaw, Poland","Detection of design patterns is an important part of reverse engineering. Availability of patterns provides for a better understanding of code and also makes analysis more efficient in terms of time and cost. In recent years, we have observed a continual improvement in the field of automatic detection of design patterns in source code. Existing approaches can detect a fairly broad range of design patterns, targeting both structural and behavioral aspects of patterns. However, it is not straightforward to assess and compare these approaches. There is no common ground on which to evaluate the accuracy of the detection approaches, given the existence of variants and specific code constructs used to implement a design pattern. We propose a systematic approach to constructing a comprehensive test suite for detectors of design patterns. This approach is applied to construct a test suite covering the Singleton pattern. The test suite contains many implementation variants of these patterns, along with such code constructs as method forwarding, access modifiers, and long inheritance paths. Furthermore, we use this test suite to compare three detection tools and to identify their strengths and weaknesses. © 2009 IEEE.",Design patterns; Detection; Test suite,Access modifiers; Automatic Detection; Code constructs; Common ground; Design Patterns; Detection approach; Detection tools; Source codes; Availability; Computer software; Detectors; Reengineering; Reverse engineering; Testing; Java programming language,,,,,,"Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., (1994) Design Patterns, , Addison-Wesley; Niere, J., Wendehals, L., (2003) An Interactive and Scalable Approach to Design Pattern Recovery, , Tech. Rep; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) ICSE '02: Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , New York, NY, USA: ACM; Niere, J., Wadsack, J.P., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) IWPC '03: Proceedings of the 11th IEEE International Workshop on Program Comprehension, p. 274. , Washington, DC, USA: IEEE Computer Society; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in java (2005) ASE '05: Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, pp. 224-232. , New York, NY, USA: ACM; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE '06: Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134. , Washington, DC, USA: IEEE Computer Society; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) IWPC, pp. 94-104. , IEEE Computer Society; Fabry, J., Mens, T., Language independent detection of object-oriented design patterns (2004) Computer Languages, Systems and Structures, 30 (1-2), pp. 21-33; Smith, J., Stotts, D., Formalized design pattern detection and software achitecture analysis (2005) Dept. of Computer Science, University of North Carolina, Tech. Rep. TR05-012; Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) ASE, pp. 166-173. , IEEE Computer Society; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) ICSM '03: Proceedings of the International Conference on Software Maintenance, p. 305. , Washington, DC, USA: IEEE Computer Society; Ferenc, R., Gustafsson, J., Müller, L., Paakki, J., Recognizing design patterns in C++ programs with integration of columbus and maisa (2002) Acta Cybern, 15 (4), pp. 669-682; Stencel, K., Wegrzynowicz, P., Detection of diverse design pattern variants (2008) APSEC '08: Proceedings of the 2008 15th Asia-Pacific Software Engineering Conference, pp. 25-32. , Washington, DC, USA: IEEE Computer Society; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE'06), October 2006, , http://cs.msi.vxu.se/papers/PLN2006a.pdf, [Online]. Available; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Software Maintenance and Reengineering, European Conference on, pp. 143-152. , vol.0; Stencel, K., Wegrzynowicz, P., Implementation variants of the singleton design pattern (2008) OTM Workshops, 5333, pp. 396-406. , ser. Lecture Notes in Computer Science, R. Meersman, Z. Tari, and P. Herrero, Eds., Springer; Wegrzynowicz, P., The Singleton Benchmark, , http://www.dcubed.pl/; Gamma, E., Eggenschwiler, T., (1996), http://www.jhotdraw.org/Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909. , DOI 10.1109/TSE.2006.112","Wegrzynowicz, P.; Software R and D Department, NASK Research and Academic Computer Network, Warsaw, Poland; email: patrycjaw@nask.pl",,IEEE;IEEE Computer Society;ACM SIGSOFT;ACM SIGART;The University of Auckland,,"24th IEEE/ACM International Conference on Automated Software Engineering, ASE2009",16 November 2009 through 20 November 2009,Auckland,80207,,9780769538914,,,English,ASE - IEEE/ACM Int. Conf. Autom. Softw. Eng.,Conference Paper,Scopus,2-s2.0-77952215241,,
,3,,"Gatrell, M., Counsell, S., Hall, T.",Design patterns and change proneness: A replication using proprietary C# software,2009,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,5328811,160,164,,5,10.1109/WCRE.2009.31,http://www.scopus.com/inward/record.url?eid=2-s2.0-73449109853&partnerID=40&md5=22c6ec6aefdc61daceb1794ee1a0d56f,"Dept. of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, United Kingdom","Gatrell, M., Dept. of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, United Kingdom; Counsell, S., Dept. of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, United Kingdom; Hall, T., Dept. of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, United Kingdom","This paper documents a study of change in commercial, proprietary software and attempts to determine whether a relationship exists between a class' propensity to change and its design context; more specifically: whether a class is a participant in a design pattern. We identify specific design patterns and their propensity for change. Design pattern participants were found to have a higher propensity to change than classes that did not participate in a design pattern, supporting an earlier study by Bieman et al.; some design patterns, such as the Adaptor, Factory Method and Singleton were found have a higher change propensity than others. © 2009 IEEE.",C#; Change; Pattern,Change patterns; Design context; Design Patterns; Paper documents; Proprietary software; Specific design; Computer software; Reverse engineering; Reengineering,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Proc. IEEE-CS Software Metrics Symp. (Metrics'98); Bieman, J., Jain, D., Yang, H., Design patterns, design structure, and program changes: An industrial case study (2001) Proc. Int. Conf. on Software Maintenance (ICSM; Bieman, J., Straw, G., Wang, H., Willard Munger, P., Alexander, R., Design Patterns and Change Proneness: An Examination of Five Evolving Systems (2003) Proc Int Software Metrics Symposium (Metrics; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) A System of Patterns, , Pattern-Oriented Software Architecture:, Wiley; Fenton, N., Pfleeger, S., (1997) Software Metrics - A Rigorous and Practical Approach, , Second Edition. Int. Thompson Computer Press, London; Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison-Wesley, Reading MA; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading MA; Grand, M., (2002) Patterns in Java: A catalog of reusable design patterns ilustrated with UML, , 2nd Edition John Wiley and Sons; Gueheneuc, Y., Hamel, S., Kaczor, O., Efficient identification of design patterns with bit-vector algorithm (2006) European Conference on Software Maintenance and Reengineering (CSMR'06), pp. 175-184. , Bari, Italy; Guéhéneuc, Y Antoniol, G., DeMIMA: A Multilayered Approach for Design Pattern Identification, IEEE Transactions on Software Engineering, 34(5), (2008), pp. 667-684Kemerer, C. and Slaughter, S., Need for more Longitudinal Studies of Software Maintenance, Empirical Soft Engineering: An Intl. Journal, 2(2), pages 109-118, 1999Kerievsky, J., (2004) Refactoring to Patterns, , Addison Wesley; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proc. Working Conf. on Reverse Engineering, pp. 208-215; Larman, C., (2002) An Introduction to OO Analysis and Design and the United Process, , Applying UML and Patterns: Second Edition. Prentice-Hall","Gatrell, M.; Dept. of Information Systems and Computing, Brunel University, Uxbridge, Middlesex, United Kingdom; email: mattgatrell@googlemail.com",,Reengineering Forum,,"16th Working Conference on Reverse Engineering, WCRE 2009",13 October 2009 through 16 October 2009,Lille,78829,10951350,9780769538679,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-73449109853,,
,4,,"Nilsson, E.G.",Design patterns for user interface for mobile applications,2009,Advances in Engineering Software,40,12,,1318,1328,,26,10.1016/j.advengsoft.2009.01.017,http://www.scopus.com/inward/record.url?eid=2-s2.0-68949163704&partnerID=40&md5=5c68a88f1906965ead4a7fc382305b18,"SINTEF ICT, Postboks 124, Blindern, N-0314 Oslo, Norway","Nilsson, E.G., SINTEF ICT, Postboks 124, Blindern, N-0314 Oslo, Norway","The topic of this paper is a collection of user interface (UI) design patterns for mobile applications. In the paper we present the structure of the patterns collection - the patterns are suggested solutions to problems that are grouped into a set of problem areas that are further grouped into three main problem areas - a structure which is valuable both as an index to identifying patterns to use, and it gives a fairly comprehensive overview of issues when designing user interfaces for mobile applications. To show the breadth of the patterns collection we present six individual problems with connected design patterns in some detail - each coming from different problem areas. They represent important and relevant problems, and are on different levels of abstraction, thus showing how patterns may be used to present problems and solutions on different levels of detail. To show the relevance and usefulness of the patterns collection for usability professionals with a mixed background, we present some relevant findings from a validation of the patterns collection. In addition to verifying the relevance and usefulness of the patterns collection, it also shows both expected and surprising correlations between background and perceived relevance and usefulness. One important finding from the validation is an indication that the patterns collection is best suited for experienced UI developers wanting to start developing mobile UIs. Using a patterns collection for documenting design knowledge and experience has been a mixed experience, so we discuss pros and cons of this. Finally, we present related work and future research. © 2009 Elsevier Ltd. All rights reserved.",Design guidelines; Mobility; Patterns collection; User interface design patterns; User interfaces for mobile applications,Connected design; Design guidelines; Design knowledge; Design Patterns; Levels of abstraction; Levels of detail; Mobile applications; Mobility; Patterns collection; Problem areas; User interface design patterns; Design; Mobile telecommunication systems; User interfaces,,,,,,"Borchers, J., (2001) A pattern approach to interaction design, , John Wiley & Sons;, ISBN:0471498289; Chung ES, Hong JI, et al. Development and evaluation of emerging design patterns for ubiquitous computing. DIS2004, ACM, Cambridge (Massachusetts, USA); 2004Deng, J., Managing UI pattern collections (2005) Proceedings of the 6th ACM SIGCHI New Zealand chapter's international conference on computer-human interaction; Van Duyne, D.K., Landay, J.A., (2004) Design patterns, course documentation; Landay, J.A., Borriello, G., Design patterns for ubiquitous computing (2003) IEEE computer, , August; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns - elements of reusable object-oriented software, , Addison-Wesley; Nilsson, E.G., Rahlff, O.-W., Mobile and stationary user interfaces - differences and similarities based on two examples (2003) Proceedings of HCI international; Nilsson, E.G., Design guidelines for mobile applications SINTEF Report, , STF90 A06003; 2005. ISBN:82-14-03820-0; Nilsson, E.G., Design patterns for user interfaces on mobile equipment (2007) Tutorial documentation, HCI international; Nilsson, E.G., Design patterns for user interfaces on mobile equipment (2008) Tutorial documentation, IASTED HCI; Nilsson, E.G., Design patterns for user interface for mobile applications (2008) Proceedings of 7th international conference on computer-aided design of user interfaces, , CADUI; Nilsson, E.G., Floch, J., Model-based user interface adaptation (2006) Comput Graph, 30 (5), pp. 692-701; Rahlff, O.-W., SINTEF report, , State of the art in using context in mobile information systems, A2299; 2007. ISBN:978-82-14-04069-2; Rolfsen, R.K., SINTEF report, , State of the art in form-based mobile user interface design and configuration, A2300; 2007. ISBN:978-82-14-04070-8; Roth, J., Patterns of mobile interaction (2002) Person Ubiquit Comput, 6 (4); Vraalsen, F., Holter, T., A multimodal context aware mobile maintenance terminal for noisy environments IFIP mobile information systems (MOBIS '04); Vraalsen, F., SINTEF report, , State of the art in design of mobile user interfaces, STF90 A05014; 2005. ISBN:82-14-03648-8; van Welie, M., van der Veer, G.C., Pattern languages in interaction design: Structure and organization (2003) Proceedings of interact","Nilsson, E.G.; SINTEF ICT, Postboks 124, Blindern, N-0314 Oslo, Norway; email: egn@sintef.no",,,,,,,,9659978,,AESOD,,English,Adv Eng Software,Article,Scopus,2-s2.0-68949163704,,
,4,,"Fernandes, D.D., Cardoso, F.R.M., Montini, D.Á., Dias, L.A.V., Moreira, G.D.S.P., Da Cunha, A.M.",Final inspection for design pattern homologation using a real time embedded software in a production line,2009,ITNG 2009 - 6th International Conference on Information Technology: New Generations,,,5070827,1428,1435,,,10.1109/ITNG.2009.196,http://www.scopus.com/inward/record.url?eid=2-s2.0-77951127141&partnerID=40&md5=b6b5d4c987315299d0292711294b0144,"Instituto Tecnológico de Aeronáutica - ITA, Brazil","Fernandes, D.D., Instituto Tecnológico de Aeronáutica - ITA, Brazil; Cardoso, F.R.M., Instituto Tecnológico de Aeronáutica - ITA, Brazil; Montini, D.Á., Instituto Tecnológico de Aeronáutica - ITA, Brazil; Dias, L.A.V., Instituto Tecnológico de Aeronáutica - ITA, Brazil; Moreira, G.D.S.P., Instituto Tecnológico de Aeronáutica - ITA, Brazil; Da Cunha, A.M., Instituto Tecnológico de Aeronáutica - ITA, Brazil","This paper summarizes a research process applied to Final Inspection (FI) and Causal Analysis for Problems Resolution (CAR) using a Real Time Embedded Software Component in a Production Line. It uses C++ language in an IBM-Rational Rose Real Time (RRRT) environment. It tackles the creation of a consistent homologation process to eliminate components' errors, imperfections, and defects even before design patterns' publications in a library. Its major contribution is the construction of an FI artifact for a software component related to CAR. It proposes an industrial model for an FI process of design patterns' homologation using an Integrated Computer Aided Software Engineering Environment (I-CASE-E). It considers a design pattern that was identified in a project, described, stored in a library, and successfully reused in another project. The use of Rational Unified Process (RUP) has helped teams of undergrad and graduate students from the Brazilian Aeronautics Institute of Technology (Instituto Tecnológico de Aeronáutica - ITA) to develop their components, during the second semester of 2007. The RUP utilization has provided a fertile scenario to create and apply design pattern concepts. At the end, different Computer Software Components (CSC) were homologated with their attributes and generic methods allowing reusability. © 2009 IEEE.",CAR; Design pattern; FI; Real time embedded software component; Test,C++ language; Car designs; Causal analysis; Design Patterns; Generic method; Graduate students; Industrial models; Production line; Rational unified process; Real time; Real-time embedded software; Research process; Software component; Computer aided software engineering; Design; Embedded software; Information technology; Reusability; Computer software reusability,,,,,,"Cunha, A., CE-235 Real-time Embedded Systems Lecture Notes, , http://www.ita.br/~cunha, Available in: Accessed on December 2007; (2003) DEV470 - Mastering Rational Rose Real Time - Student Material, 1. , http://www-128.ibm.com/com/developerworks/rational/library/content/ 03July/1000/1155/_umlmodeling.pdf, Rational Software Corporation, Available in: Accessed on December 2007; Christopher, A., (1977) A Pattern Language, , USA: Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , 1. ed. USA: Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (2005) Design Patterns, , Addison-Wesley; Selic, B., Rumbaugh, J., Using UML for Modeling Complex Real-Time Systems, , http://www-128.ibm, Available in: Accessed on October 2006; (2006) Operational Process for Iterative Development (Unified Process), , TCS, Tata Consultancy Services, Version 1.0 Integrated Quality Management System IQMS, Air India Building Mumbai, India, October; CMMi® for Development (CMMI-DEV), , http://www.sei.cmu.edu/publicatons/documents/06.reports/06tr008.html, Version 1.2, CMU/SEI-2006-TR-008, Available in website: Accessed on August 2006; Cummings, Haag, McCubbrey, Pinsonneault, Donovan, (2006) Sistemas de Informação de Administração para a Informação Envelhecem, , Toronto, McGraw-colina Ryerson; UML, , http://www.omg.org/gettingstarted/what_is_uml.htm, Available: Accessed on December 2007; Jacobson, I., Rumbaugh, J., (1999) The Unified Software Development Process, , Addison Wesley Logman; Rational Unified Process, , http://www-128.ibm.com/developerworks/rational/library/may05/brown/index. html, Rational Software Corporation Available on: Accessed on December 2007; Seliec, B., Gullekson, G., Ward, P., (1994) Real-Time Object-Oriented Modeling, , John Wiley & Sons; Booch, G., (1999) Object-oriented Analysis and Design with Applications, , Benjamin/Cummings; Philips, R.E., (1988) Special Report CMU/SEI-94-SR-3 - Example of Process Representation in ETVX, , www.seicmu.edu/pub/docments/94.reports/pdf/sr03.94.pdf, Available in website on June 17, 2007: 2004","Fernandes, D. D.; Instituto Tecnológico de Aeronáutica - ITABrazil",,Premier Hall for Advancing Science and Engineering,,"6th International Conference on Information Technology: New Generations, ITNG 2009",27 April 2009 through 29 April 2009,"Las Vegas, NV",79848,,9780769535968,,,English,ITNG - Int. Conf. Inf. Technol.: New Gener.,Conference Paper,Scopus,2-s2.0-77951127141,,
,4,,"Nisanbayev, Y., Na, H., Lim, D., Ko, F.",Designing an electronic medical records system using design patterns,2009,ACM International Conference Proceeding Series,403,,,1410,1415,,,10.1145/1655925.1656185,http://www.scopus.com/inward/record.url?eid=2-s2.0-74949119759&partnerID=40&md5=e190b4860593f1def90d71fede580b85,"Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea","Nisanbayev, Y., Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea; Na, H., Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea; Lim, D., Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea; Ko, F., Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea","In the recent decades the importance of the information systems (IS) has been steadily growing. Nowadays most of the operations that imply complex manipulations with data and storage of large volumes of data are being automated through the use of various IS. At the heart of all the Medical Information Systems lie Electronical Medical Records (EMR) systems, they store and process data about patients. Developing an efficient EMR system would considerably improve the performance of the physicians' work and free more time for actual patient treatment rather than paperwork. Design Patterns have gained a widespread recognition in object-oriented community. They provided proven solutions to many of the design problems faced by software engineers. This paper is focused on developing a solid analytical base and initial simulator for an efficient Electronic Medical Records Systems using Design Patterns. We have tried to use the Design Patterns and various UML design techniques to propose an easilyextensible and reusable design for the system. This research should serve as a firm step towards the development of complete efficient EMR system. Copyright © 2009 ACM.",Design patterns; EMR (Electronic Medical Records); HIS (Healthcare Information System); UML,Design Patterns; Design problems; Electronic medical record; EMR systems; Health care information system; Medical information system; Medical record; Object oriented; Process data; Reusable design; Software engineers; UML design; Complexation; Design; Electric relays; Health care; Medical computing; Information systems,,,,,,"Fowler, M., Scott, K., (1999) UML Distilled Second Edition A Brief Guide to the Standard Object Modeling Language, , Addison Wesley; Naiburg, E., Maksimchuk, R., (2001) UML for Database Design, , Addison Wesley; Reynolds-Haertle, R., OOP with Microsoft visual basic (2002) NET and Microsoft Visual C# Step by Step, , Microsoft Press, Redmond; Riordan, R., (2005) Designing Effective Database System, , Addison Wesley Professional; Skidmore, S., Eva, M., (2004) Introducing Systems Development, , Palgrave Macmillan: New York; Gusev, A., Romanov, F., Dudanov, I., Medical information systems: Market analysis (2005) PC WEEK/RE, 509 (47), pp. 32-37; Andreeva, N., Vladimirova, S., Gavrilov, A., Reznikov, R., Real economical effect brought by Information Systems in the hospitals (2006) Proceedings of Medsoft-2006, pp. 43-46. , Second International Forum on Medical Information Systems, Moscow; (2006) More Physicians Using Electronic Medical Records, , http://www.cdc.gov/od/oc/media/pressrel/a060721.htm, CDC, USA CDC's National Center for Health Statistics; (2006) Introduction to the Health Care Industry, , http://www.plunkettresearch.com/industries/healthcare/healthcaretrends/ tabid/294/default.aspx, Plunkett research, ltd. Introduction to the health care industry, health expenditures and services in the U.S; (2003) Benefits of EMR, , http://msdc.com/EMR-Benefits.htm, Medical Systems Development Corporation, Available from Internet; Chhanabhai, P., Holt, A., Health care consumers, security and electronic health records (2006) The Information Science Discussion Paper Series, , http://eprints.otago.ac.nz/191/1/dp2006-01.pdf, University of Otago Health Care Review Online, March 2006; Zvarova, J., Hanzlicek, P., Spidlen, J., Electronic health record in cardiology: Pilot application in the Czech Republic (2002) MIST2002 Proceedings, pp. 10-13. , Taiwan, John Wiley & Sons Pte Ltd; Hillestad, R., Bigelow, J., Bower, A., Girosi, F., Meili, R., Scoville, R., Taylor, R., Can electronic medical record systems transform healthcare? Potential health benefits, savings, and costs (2005) Health Affairs, 24 (5), pp. 1103-1117. , Sept/Oct 2005; Wang, S., A cost-benefit analysis of electronic medical records in primary care (2003) The American Journal of Medicine-Elsevier, 114 (5), pp. 397-403; Hing, E.S., Burt, C.W., Woodwell, D.A., Electronic medical record use by office-based physicians and their practices: United States, 2006 (2007) Advance Data, (393), pp. 1-8; Miller, R.H., Sim, I., Physicians' use of electronic medical records: Barriers and solutions (2004) Health Affairs, 23 (2), pp. 116-126; Haux, R., Health information systems - Past, present, future (2006) International Journal of Medical Informatics-Elsevier, 75 (3-4), pp. 282-299","Nisanbayev, Y.; Department of Computer Science, Dongguk University, 707 Seokjang-dong, Gyeongju, South Korea; email: yerboln@gmail.com",,ETRI;KISTI;AICIT,,"2nd International Conference on Interaction Sciences: Information Technology, Culture and Human, ICIS 2009",24 November 2009 through 26 November 2009,Seoul,79215,,9781605587103,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-74949119759,,
,4,,"Brusk, J., Björk, S.",Gameplay design patterns for game dialogues,2009,"Breaking New Ground: Innovation in Games, Play, Practice and Theory - Proceedings of DiGRA 2009",,,,,,8,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873400831&partnerID=40&md5=ce5929a9fd44e02cca69c2bf18292832,"Dept. of Game Design, Gotland University, 621 67 Visby, Sweden; Interaction Design Unit, Chalmers University of Technology, 412 96 Göteborg, Sweden","Brusk, J., Dept. of Game Design, Gotland University, 621 67 Visby, Sweden; Björk, S., Interaction Design Unit, Chalmers University of Technology, 412 96 Göteborg, Sweden","Dialogues are natural models for human communication and have also been used to model interaction within computer games. In this paper, we look at current models of dialogues from within the field of computational linguistics and explore their usefulness of games, and especially for the design of gameplay through interaction with nonplaying characters in games. This is done by analyzing several examples of computer-based games and similar playful activities, both to see which models of dialogues are used but also to suggest possible ways of expanding gameplay through using other dialogue models. Uses of existing models for dialogues within games are identified but an additional model, the Game State-based approach to dialogues, is introduced. The possible implications of the changes in gameplay are described through the use of gameplay design patterns, offering a way to encode design knowledge explicitly and link that knowledge to other gameplay design pattern collections. © 2009 Authors & Digital Games Research Association (DiGRA).",Dialogue systems; Gameplay patterns,Computer game; Current models; Design knowledge; Design Patterns; Dialogue models; Dialogue systems; Gameplay; Human communications; Model interaction; Natural models; Computational linguistics; Interactive computer graphics; Speech processing; Game theory,,,,,,"Allen, J.F., Byron, D.K., Dzikovska, M., Ferguson, G., Galescu, L., Stent, A., (2001) Towards Conversational Human-Computer Interaction, , AI Magazine; Allwood, J., (1992) On Dialogue Cohesion. Gothenburg Papers in Theoretical Linguistics 65, , Dept of Linguistics, University of Gothenburg; Austin, J.L., (1962) How to Do Things with Words, , second ed. Harvard University Press, Cambridge, Massachusetts; Bethesda Softworks LLC: The Elder Scrolls III: Morrowind (2003)Bethesda Softworks LLC: The Elder Scrolls IV: Oblivion (2006)Björk, S., Holopainen, J., (2005) Patterns in Game Design, , Charles River Media, Hingham; Brusk, J., Lager, T., Developing natural language enabled games in scxml (2008) Journal of Advanced Computational Intelligence and Intelligent Informatics-Special Issue on Intelligence Techniques in Computer Games and Simulations, 12 (2), pp. 156-163; Brusk, J., Dialogue management for social game characters using statecharts (2008) Proceedings of ACM SIGCHI International Conference on Advances in Computer Entertainment Technology (ACE 2008), pp. 219-222. , Yokohama, Japan; Bunt, H., Context and dialogue control (1994) Think Quarterly, 3, pp. 19-31; Cassell, J., Sullivan, J., Prevost, S., Churchill, E.F., (2000) Embodied Conversational Agents, , MIT Press; Demiurge Studios [Bioware]: Mass Effect (pc version) (2008)Flycht-Eriksson, A., Jönsson, A., Merkel, M., Sundblad, H., (2003) Ontology-driven Information-providing Dialogue Systems, , Tampa, Florida, USA; Harel, D., (1987) Statecharts: A Visual Formalism for Complex Systems, , Science of Computer Programming 8, North-Holland; Infocom: ZORK I: The Great Underground Empire (1980)Jurafsky, D., Martin, J.H., (2000) Speech and Language Processing: An Introduction to Natural Language Processing, Computational Linguistics and Speech Recognition, , Prentice Hall Series in Artificial Intelligence. Prentice Hall, Upper Saddle River, NJ 07458; Lankoski, P., Björk, S., (2007) Gameplay Design Patterns for Believable Non-player Characters, , Situated Play: Proceedings of DiGRA 2007 Conference; Lankoski, P., Björk, S., Gameplay design patterns for social networks and conflict (2007) Proceedings of Game Design and Technology Workshop 2007; Lankoski, P., Björk, S., (2008) Character-Driven Game Design: Characters, Conflict, and Gameplay, , Paper presentation at GDTW, Sixth International Conference in Game Design and Technology; LukasArts: Grim Fandango (1998)LukasArts: Monkey Island (1990)Mateas, M., Stern, A., A behavior language: Joint action and behavioral idioms (2004) Life-like Characters. Tools, Affective Functions and Applications, , Prendinger, H. and Ishizuka, M. (eds), Springer; Mateas, M., Stern, A., (2003) Façade: An Experiment in Building A Fully-realized Interactive Drama, , Game Developers Conference: Game Design Track; Sacks, H., Schegloff, E.A., Jefferson, G., A simplest systematics for the organization of turn-taking for conversation (1974) Language, 50 (4), pp. 696-735; Prendinger, H., Ishizuka, M., (2004) Life-Like Characters: Tools, Affective Functions, and Applications, , Springer; Saygin, A.P., Cicekli, I., Akman, V., (2000) Turing Test: 50 Years Later. Minds and Machines 10, pp. 463-518. , 4 (November),. Kluwer Academic Publishers; Smith, R., (1995) Spoken Natural Language Dialog Systems: A Practical Approach, , Oxford University Press; Splash Damage: Enemy Territory: Quake Wars. (2007)Swartout, W., Gratch, J., Hill, R., Hovy, E., Marsella, S., Rickel Traum, J.D., Toward virtual humans (2006) AI Magazine, 27, p. 1; Swain, C., The augmented conversation engine-A system for achieving believable conversation in games and interactive stories (2008) Proceedings of ACM SIGCHI International Conference on Advances in Computer Entertainment Technology (ACE 2008), pp. 213-218. , ACM; Weizenbaum, J., Eliza-A computer program for the study of natural language communication between man and machine (1966) Communications of the ACM Archive 9, pp. 36-45. , 1 (January); Wittgenstein, L., (1953) Philosophical Investigations, , Blackwell Publishing","Brusk, J.; Dept. of Game Design, Gotland University, 621 67 Visby, Sweden; email: jenny.brusk@hgo.se",,,,"4th Digital Games Research Association International Conference: Breaking New Ground: Innovation in Games, Play, Practice and Theory, DiGRA 2009",1 September 2009 through 4 September 2009,London,95301,,,,,English,"Break. New Ground: Innov. Games, Play, Pract. Theory - Proc. DiGRA",Conference Paper,Scopus,2-s2.0-84873400831,,
,1,,"Ma, L., Huang, Z., Wu, Q.",Extracting common design patterns from a set of solid models,2009,CAD Computer Aided Design,41,12,,952,970,,10,10.1016/j.cad.2009.05.007,http://www.scopus.com/inward/record.url?eid=2-s2.0-71649095493&partnerID=40&md5=37c75e83c08d0b9124633df404833147,"School of Mechanical Science and Engineering, Huazhong University of Science and Technology, China","Ma, L., School of Mechanical Science and Engineering, Huazhong University of Science and Technology, China; Huang, Z., School of Mechanical Science and Engineering, Huazhong University of Science and Technology, China; Wu, Q., School of Mechanical Science and Engineering, Huazhong University of Science and Technology, China","In mechanical design, designers often consciously or unconsciously create some engineering-rich local shape structures repeatedly in parts by combining regular design features. Identification of these local structures with high appearance frequencies is helpful for design-rule mining, design feature library customization and model data compression. In this paper, an approach is developed for extracting common local structures as design patterns from a set of B-rep models. Here, B-rep models are first transformed into a representation of Volume Relational Graphs (VRG), in which each volume is generated from a face shell in a boundary partition of a solid along specially selected cutting loops. Then, two kinds of code, Face Shape Code (FSC) and Face Location Code (FLC), are introduced to describe shapes of the volumes. After this, based on equality of the codes between volumes, isomorphic subgraphs among VRGs are identified as design patterns with a greedy search method, whose objective is to find precise expressions in the patterns for the original solid models. © 2009 Elsevier Ltd. All rights reserved.",Design pattern extraction; Graph-based pattern search; Partial shape matching; Shape descriptor; Solid decomposition,Design Patterns; Graph-based; Partial shape matching; Pattern search; Shape descriptors; Solid decompositions; Data compression; Structural design,,,,,,"Han, J., Pratt, M., Regli, W.C., Manufacturing feature recognition from solid models: A status report (2000) IEEE Transaction on Robotics and Automation, 16 (6), pp. 782-796; Huang, Z., Xie, B., Ma, L., Wei, X., Feature conversion based on decomposition and combination of swept volumes (2006) Computer-Aided Design, 38 (8), pp. 857-873; Cardone, A., Gupta, S.K., Karnik, M.V., A survey of shape similarity assessment algorithms for product design and manufacturing applications (2003) ASME Journal of Computing and Information Science in Engineering, 3 (2), pp. 109-118; Iyer, N., Jayanti, S., Lou, K., Kalyanaraman, Y., Ramani, K., Three-dimensional shape searching: State-of-the-art review and future trends (2005) Computer-Aided Design, 37 (5), pp. 509-530; Joshi, S., Chang, T.C., Graph-based heuristics for recognition of machined features from a 3D solid model (1988) Computer-Aided Design, 20 (2), pp. 58-66; Gao, S., Shah, J.J., Automatic recognition of interacting machining features based on minimal condition subgraph (1998) Computer-Aided Design, 30 (9), pp. 727-739; Hilaga, M., Shinagawa, Y., Kohmura, T., Kunii, T.L., Topology matching for fully automatic similarity estimation of 3d shapes (2001) Computer graphic proceedings, annual conference series, pp. 203-212. , ACM SIGGRPAH, Los Angeles; Bespalov, D., Regli, W.C., Shokoufandeh, A., Reeb graph based shape retrieval for CAD (2003) Proceedings of the 2003 ASME design engineering technical conferences, , Chicago, Illinois; Sundar, H., Silver, D., Gagvani, N., Dickinson, S., Skeleton based shape matching and retrieval (2003) Proceedings of shape model and applications, , Seoul, Korea; Gao, W., Gao, S.M., Liu, Y.S., Bai, J., Hu, B.K., Multiresolutional similarity assessment and retrieval of solid models based on DBMS (2006) Computer-Aided Design, 38, pp. 985-1001; Cicirello, V., Regli, W.C., Machining feature-based comparisons of mechanical parts (2001) Proceedings of shape modeling international, pp. 176-185; Ramesh, M., Yip-Hoi, D., Dutta, D., Feature based shape similarity measurement for retrieval of mechanical parts (2001) ASME Journal of Computing and Information Science in Engineering, 1, pp. 245-256; Cardone, A., Gupta, S.K., Deshmukh, A., Karnik, M., Machining feature-based similarity assessment algorithms for prismatic machined parts (2006) Computer-Aided Design, 38, pp. 954-972; Huang, Z., Yip-Hoi, D., High-level machining feature recognition using feature relationship graph (2002) Computer-Aided Design, 34 (8), pp. 561-582; Inokuchi, A., Washio, T., Motoda, H., Complete mining of frequent patterns from graphs: Mining graph data (2003) Machine Learning, 50 (3), pp. 321-354; Kuramochi, M., Karypis, G., Frequent subgraph discovery (2001) Proceedings of the 2001 IEEE international conference on data mining, pp. 313-320; Yan, X., Han, J., gSpan, Graph-based substructure pattern mining (2002) Proceedings of the 2002 IEEE international conference on data mining, pp. 721-724; Matsuda, T., Horiuchi, T., Motoda, H., Washio, T., Extension of graph-based induction for general graph structured data (2000) LNAI, 1805, pp. 420-431. , knowledge discovery and data mining: Current issues and new applications, Springer Verlag; Cook, D.J., Holder, L.B., Graph-based data mining (2000) IEEE Intelligent Systems, 15 (2), pp. 32-41; Lu, Y., Gadh, R., Tautges, T.J., Feature based hex meshing methodology: Feature recognition and volume decomposition (2001) Computer-Aided Design, 33 (3), pp. 221-231; Gadh, R., Prinz, F.B., Reduction of geometric forms using the differential depth filter (1992) Computer-Aided Design, 24 (11), pp. 583-598","Huang, Z.; School of Mechanical Science and Engineering, Huazhong University of Science and TechnologyChina; email: zdhuang@hust.edu.cn",,,,,,,,104485,,CAIDA,,English,CAD Comput Aided Des,Article,Scopus,2-s2.0-71649095493,,
,v,,"Alnusair, A., Zhao, T.",Towards a model-driven approach for reverse engineering design patterns,2009,CEUR Workshop Proceedings,531,,,,,15,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84888099185&partnerID=40&md5=b8d168c5497be4a46b821ee93da04c62,"University of Wisconsin-Milwaukee, United States","Alnusair, A., University of Wisconsin-Milwaukee, United States; Zhao, T., University of Wisconsin-Milwaukee, United States","The size and complexity of software systems is rapidly in- creasing. Meanwhile, the ability to understand and maintain such systems is decreasing almost as fast. Model Driven Engineering (MDE) promotes the notion of modeling to cope with software complexity; in this paper we report on our research that utilizes ontological modeling for understanding complex software systems. We focus the discussion on recovering design pattern information from source code. We thus argue that an effective recovery approach needs to utilize semantic reasoning to properly match an ontological representation of both: conceptual source code knowledge and design pattern descriptions. Since design patterns can take different forms when implemented in code, we argue that hard-coding their descriptions limits the exibility and usability of a detection mechanism.",Design patterns; Ontology; OWL; Program understanding; Reverse engineering; Semantic reasoning; Semantic web,Complex software systems; Design Patterns; Model driven approach; Model-driven Engineering; Ontological representation; OWL; Program understanding; Semantic reasoning; Computational complexity; Computer software; Reverse engineering; Semantic Web; Weaving; Ontology,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Chikofsky, E.J., Cross, J.H., Reverse engineering and design recovery: A taxonomy (1990) IEEE Software, 7 (1), pp. 13-17; Berners-Lee, T., Hendler, J., Lassila, O., The semantic web (2001) Scientific American, 284 (5), pp. 34-43; Sirin, E., Parsia, B., Grau, B.C., Kalyanpur, A., Kartz, Y., Pellet: A practical OWL-DL reasoner (2007) Web Semantics: Science Services and Agents on the World Wide Web, 5 (2); Knublauch, H., Fergerson, R.W., Noy, N.F., Musen, M.A., The protégé OWL plugin: An open development environment for semantic web applications (2004) Third International Semantic Web Conference (ISWC 2004), pp. 229-243; Design Pattern Ontolgies; and An Automatically Generated Ontology from Parsing the JHotDraw Application Framework, , http://www.cs.uwm.edu/~alnusair/ontologies, Source Code Representation Ontology (SCRO); Motik, B., Grau, B.C., Sattler, U., Structured objects in OWL: Representation and reasoning (2008) 17th International Conference on World Wide Web, pp. 555-564; McBride, B., Jena: A semantic web toolkit (2002) IEEE Internet Computing, 6 (6), pp. 55-59; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-132; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Behavioral pattern identification through visual language parsing and code instrumentation (2009) European Conference on Software Maintenance and Reengineerig (CSMR'09), pp. 99-108; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (2006) 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-132; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of TOOLS USA '98, pp. 112-124; Dietrich, J., Elgar, C., A formal description of design patterns using OWL (2005) Proceedings of the 2005 Australian Software Engineering Conference, pp. 243-250; Kirasić, D., Basch, D., Ontology-based design pattern recognition (2008) 12th International Conference on Knowledge-Based and Intelligent Information and Engineering Systems (KES'08), pp. 384-393",University of Wisconsin-MilwaukeeUnited States,,,,"2nd International Workshop on Transforming and Weaving Ontologies in Model Driven Engineering, TWOMDE 2009",4 October 2009 through 4 October 2009,"Denver, CO",100979,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84888099185,,
,v,,"Arcelli, F., Perin, F., Raibulet, C., Ravani, S.",JADEPT: Dynamic analysis for behavioral design pattern detection,2009,"ENASE 2009 - 4th International Conference on Evaluation of Novel Approaches to Software Engineering, Proceedings",,,,95,106,,6,,http://www.scopus.com/inward/record.url?eid=2-s2.0-74549206044&partnerID=40&md5=7af52abac23f0d5b2e76a0eeeee1ae57,"Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy","Arcelli, F., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy; Perin, F., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy; Raibulet, C., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy; Ravani, S., Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy","In the context of reverse engineering, the recognition of design patterns provides additional information related to the rationale behind the design. This paper presents our approach to the recognition of design patterns based on dynamic analysis of Java software. The idea behind our approach is to identify a set of rules capturing information necessary to identify a design pattern instance. Rules are characterized by weights indicating their importance in the detection of a specific design pattern. The core behavior of each design pattern may be described through a subset of these rules forming a macrorule. Macrorules define the main traits of a pattern. JADEPT (JAva DEsign Pattern deTector) is our software for design pattern identification based on this idea. It captures static and dynamic aspects through a dynamic analysis of the software by exploiting the JPDA (Java Platform Debugger Architecture). The extracted information is stored in a database. Queries to the database implement the rules defined to recognize design patterns. The tool has been validated with positive results on different academic implementations of design patterns and on systems as JADEPT itself.",,Core behaviors; Debuggers; Design Patterns; Java platforms; Java software; ON dynamics; Set of rules; Specific design; Static and dynamic; Computer software selection and evaluation; Detectors; Dynamic analysis; Java programming language; Program debugging; Reengineering; Reverse engineering; Software design,,,,,,"Arcelli, F., Masiero, S., Raibulet, C., Tisato, F., A Comparison of Reverse Engineering Tools based on Design Pattern Decomposition (2005) Proceedings of the IEEE Australian Software Engineering Conference, pp. 262-269; Arcelli, F., Perin, F., Raibulet, C., Ravani, S.: Behavioral Design Pattern Detection through Dynamic Analysis. In Proceedings of the 4th International Workshop on Program Comprehension through Dynamic Analysis - Tech. Report TUD-SERG-2008-036. (2008) 11-16Bergenti, F., Poggi, A., Improving UML Designs Using Automatic Design Pattern Detection (2000) Proceedings of the 12th International Conference on Software Engineering and Knowledge Engineering; Byte-Code Engineering Library (BCEL), http://jakarta.apache.org/bcel/Cooper, J.W., (1998) The design pattern Java companion, , Addison-Wesley; Demeyer, S., Mens, K., Wuyts, R., Guéhéneuc, Y.-G., Zaidman, A., Walkinshaw, N., Aguiar, A., Ducasse, S:.Workshop on Object-Oriented Reengineering (2005)Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of reusable object-oriented software, , Addison Wesley, Reading MA, USA; Guéhéneuc, Y.-G., Douence, R., Jussien, N., No Java without Caffeine. A Tool for Dynamic Analysis of Java Programs (2002) Proceedings of the 17th IEEE International Conference on Automated Software Engineering, pp. 117-126; Guéhéneuc, Y.G., PTIDEJ: Promoting Patterns with Patterns (2005) Proceedings of the 1st ECOOP Workshop on Building Systems using Patterns, , Springer-Verlag; Heuzeroth, D., Holl, T., Löwe, W., Combining Static and Dynamic Analyses to Detect Interaction Patterns (2002) Proceedings the 6th World Conference on Integrated Design and Process Technology; Nickel, U., Niere, J., Zündorf, A., The FUJABA Environment (2000) Proceedings of the 22nd International Conference on Software Engineering, pp. 742-745; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards Pattern-Based Design Recovery (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 338-348; Perin, F., (2007) Dynamic analysis to detect the design patterns in Java: Gathering information with JPDA, , MSc Thesis, University of Milano-Bicocca, Milan; Ravani, S., (2007) Dynamic analysis for Design Pattern detecting on Java code: Information relationship modelling, , MSc Thesis, University of Milano-Bicocca, Milan; Pettersson, N., Measuring Precision for Static and Dynamic Design Pattern Recognition as a Function of Coverage (2005) Proceedings of the Workshop on Dynamic Analysis, ACM SIGSOFT Software Engineering Notes, 30 (4), pp. 1-7; Shawky, D.M., Abd-El-Hafiz, S.K., El-Sedeek, A.-L., A Dynamic Approach for the Identification of Object-oriented Design Patterns (2005) Proceedings of the IASTED Conf. on Software Engineering, pp. 138-143; Shi, N., Olsson, R.A., Reverse Engineering of Design Patterns from Java Source Code (2006) Proceedings of the 21st IEEE/ACM International Conference on Automated Software Engineering, pp. 123-134; Smith, J.M., Stotts, D., Elemental Design Patterns: A Formal Semantics for Composition of OO Software Architecture (2002) Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop, 183; Smith, J., McC, Stotts, D., SPQR: Flexible Automated Design Pattern Extraction From Source Code (2003) Proceedings of the 2003 IEEE International Conference on Automated Software Engineering, pp. 215-224; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection Using Similarity Scoring (2006) In IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Verkamo, A.I., Gustafsson, J., Nenonen, L., Paakki, J., Design patterns in performance prediction (2000) Proceedings of the ACM Second International Workshop on Software and Performance, pp. 143-144; Wendehals, L., Improving Design Pattern Instance Recognition by Dynamic Analysis (2003) Proceedings of the ICSE 2003 Workshop on Dynamic Analysis, pp. 29-32; Zaidman, A., Hamou-Lhadj, A., Greevy, O., Program Comprehension through Dynamic Analysis (1912) Proceedings of the 1st International Workshop on Program Comprehension through Dynamic Analysis Tech. Rep, , 2005","Arcelli, F.; Università degli Studi di Milano-Bicocca, DISCo - Dipartimento di Informatica Sistemistica e Comunicazione, Ed. U14, Viale Sarca, 336, 20126, Milan, Italy",,,,ENASE 2009 - 4th International Conference on Evaluation of Novel Approaches to Software Engineering,9 May 2009 through 10 May 2009,Milan,79063,,9789898111982,,,English,"ENASE - Int. Conf. Eval. Novel Approaches Softw. Eng., Proc.",Conference Paper,Scopus,2-s2.0-74549206044,,
,3,,"Craft, B., Cairns, P.",Sketching sketching: Outlines of a collaborative design method,2009,People and Computers XXIII Celebrating People and Technology - Proceedings of HCI 2009,,,,65,72,,4,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84858851872&partnerID=40&md5=316a6cf9f66933d4ce021880f47c5370,"London Knowledge Lab., 23-29 Emerald Street, London WC1N 3QS, United Kingdom; University of York, Heslington, York, YO10 5DD, United Kingdom","Craft, B., London Knowledge Lab., 23-29 Emerald Street, London WC1N 3QS, United Kingdom; Cairns, P., University of York, Heslington, York, YO10 5DD, United Kingdom","In this paper, we describe three key areas in the literature where sketching has been seen as being beneficial to designers. We applied this knowledge in the user interface design of a visualization system, conducting a qualitative study using sketching and design patterns. Our findings help to identify why sketching was useful in this context and we relate these to the literature on the efficacy of sketching in the design process. © 2009 The Author.",Collaborative design; Sketching; Visualization,Collaborative design; Design Patterns; Design process; Qualitative study; Sketching; User interface designs; Visualization system; Flow visualization; User interfaces; Visualization; Design,,,,,,"Laseau, P., (2000) Graphic Thinking for Architects and Designers, , Wiley; Lawson, B., (2005) How Designers Think, Fourth Edition: The Design Process Demystified, , Architectural Press; Buxton, B., (2007) Sketching User Experiences: Getting the Design Right and the Right Design, , Morgan Kaufmann; Schütze, S., Römer, Support value of sketching in the design process (2003) Research in Engineering Design, 14, pp. 89-97. , May; Lugt, R.V.D., Functions of sketching in design idea generation meetings (2002) Proceedings of the 4th Conference on Creativity \& Cognition, pp. 72-79. , Loughborough, UK: ACM; Heiser, J., Tversky, B., Silverman, M., Sketches for and from collaboration (2004) Visual and Spatial Reasoning in Design, 3, pp. 69-78; Landay, J.A., Myers, B.A., Interactive sketching for the early stages of user interface design (1995) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 43-50. , Denver, Colorado, United States: ACM Press/Addison-Wesley Publishing Co; Plimmer, B., Apperley, M., Computer-aided sketching to capture preliminary design (2002) Proceedings of the Third Australasian Conference on User Interfaces, 7, pp. 9-12. , Melbourne, Victoria, Australia: Australian Computer Society, Inc; Fallman, D., Design-oriented human-computer interaction (2003) Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 225-232. , Ft. Lauderdale, Florida, USA: ACM; Tversky, B., Sketches for design and design of sketches (2003) Human Behavior in Design: Individuals, Teams, Tools, pp. 79-86; Goel, V., (1995) Sketches of Thought, , The MIT Press; Suwa, M., Tversky, B., How do designers shift their focus of attention in their own sketches? (1997) Reasoning with Diagrammatic Representations: Papers from the 1997 AAAI Spring, pp. 102-108. , Technical Report FS9703; Goldschmidt, G., The dialectics of sketching (1991) Creativity Research Journal, 4, pp. 123-143; Suwa, M., Tversky, B., Seeing into sketches: Regrouping parts encourages new interpretations (2001) Visual and Spatial Reasoning in Design, 2, pp. 207-291; Schon, D.A., (1991) The Reflective Practitioner: How Professionals Think in Action, , Ashgate; Robbins, E., (1997) Why Architects Draw, , The MIT Press; Card, S.K., MacKinlay, J., Shneiderman, B., (1999) Readings in Information Visualization: Using Vision to Think, , Morgan Kaufmann; Craft, B., Cairns, P., Beyond guidelines: What can we learn from the visual information seeking mantra? (2005) Information Visualisation, 2005. Proceedings. Ninth International Conference on, pp. 110-118; Ware, C., (2008) Visual Thinking: For Design, , Morgan Kaufmann; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Longman Publishing Co., Inc; Borchers, J., (2001) A Pattern Approach to Interaction Design, , Wiley; Dearden, A., Finlay, J., (2006) Pattern Languages in HCI: A Critical Review, , May; Wilkins, B., (2003) MELD: A Pattern Supported Methodology for Visualization Design; Baskerville, R., Investigating information systems with action research (1999) Communications of the Association for Information Systems, 2. , Article 19, October; Checkland, P., Holwell, S., (1998) Information, Systems and Information Systems: Making Sense of the Field, , John Wiley; Fléchais, I., (2005) Designing Secure and Usable Systems, , PhD Dissertation, University College London, UK; Corbin, J.M., Strauss, A.C., (2007) Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory, , Sage Publications, Inc; Monk, A.F., New approaches to theory in HCI: How should we judge their acceptability? (1990) Proceedings of the IFIP TC13 Third Interational Conference on Human-Computer Interaction, pp. 1055-1058. , North-Holland Publishing Co; Elliott, G.J., Jones, E., Barker, P., A grounded theory approach to modelling learnability of hypermedia authoring tools (2002) Interacting with Computers, 14, pp. 547-574. , Oct; Kaplan, B., Duchon, D., Combining qualitative and quantitative methods in information systems research: A case study (1988) MIS Quarterly, 12, pp. 571-586. , Dec; Turner, B., The use of grounded theory for the qualitative analysis of organizational behaviour (1983) Journal of Management Studies, 20, pp. 333-348. , Jul; Craft, Cairns, Using sketching to aid the collaborative design of information visualisation software - A case study (2006) Human Work Interaction Design: Designing for Human Work, , http://dx.doi.org/10.1007/978-0-387-36792-7_6","Craft, B.; London Knowledge Lab., 23-29 Emerald Street, London WC1N 3QS, United Kingdom; email: thatbrock@gmail.com",,Microsoft Research;BCS;University of Cambridge;Vodafone;Red Gate Software,,"23rd Annual Conference on Human Computer Interaction, HCI 2009",1 September 2009 through 5 September 2009,Cambridge,89519,,9781906124878,,,English,People Comput. Celebrating People Technol. - Proc. HCI,Conference Paper,Scopus,2-s2.0-84858851872,,
,3,,"Pang, C., Vyatkin, V.",Systematic closed-loop modelling in IEC 61499 function blocks: A case study,2009,IFAC Proceedings Volumes (IFAC-PapersOnline),13,PART 1,,199,204,,5,10.3182/20090603-3-RU-2001.0264,http://www.scopus.com/inward/record.url?eid=2-s2.0-77956603536&partnerID=40&md5=d9ee96a8eae4e9050a0dcad1d38368a6,"University of Auckland, New Zealand","Pang, C., University of Auckland, New Zealand; Vyatkin, V., University of Auckland, New Zealand","In industrial automation, verification and validation using closed-loop plant-controller models is getting recognized as the way to verify the controller's logic and the resulting controlled object's behaviour. To tackle the issues preventing wide adoption of closed-loop verification, a model-integrated design framework supporting structural model development and verification has been recently proposed. This work presents a follow-up case study of the proposed model design methodology following the Model-View-Control design pattern to develop closed-loop models using IEC 61499 function blocks. In particular, this paper tries to identify and address the generic issues of closed-loop modelling and the issues specific to IEC 61499 function block model development. © 2009 IFAC.",Discrete-event simulation; Formalisms and modelling techniques,Closed-loop; Closed-loop model; Controlled objects; Design frameworks; Design Patterns; Discrete events; Function Block; IEC 61499; Industrial automation; Model design; Modelling techniques; Structural models; Verification and validation; Computer simulation; Controllers; Design; Industrial applications; Manufacture; Model structures; Standards; Mathematical models,,,,,,"Black, G., Vyatkin, V., Intelligent component-based automation of baggage handling systems with IEC 61499 (2009) IEEE Transactions on Automation Science and Engineering, 6. , in print; Christensen, J.H., Design patterns for systems engineering with IEC 61499 (2000) Conference on Verteilte Automatisierung - Modelle und Methoden für Entwurf, Verifikation, Engineering und Instrumentierung., pp. 63-71. , DÖSCHNER, C. (Ed.) Magdeburg, Germany; Ebel, F., Pany, M., Schwarzenberger, D., Sigel, A., (2006) FESTO Distributing Station Manual, , Denkendorf; Hanisch, H.-M., Lüder, A., Modular modeling of closed-loop systems (2000) Colloquium on Petri Net Technologies for Modeling Communication Based Systems., pp. 103-126. , Berlin, Germany; (2005) Function Blocks for Industrial-process Measurement and Control Systems - Part 1: Architecture, , INTERNATIONAL ELECTROTECHNICAL COMMISSION Geneva, International Electrotechnical Commission; Sünder, C., Zoitl, A., Dutzler, C., Functional structure-based modeling of automation systems (2006) International Journal of Manufacturing Research, 1, pp. 405-420; (2008) FBench - Open Source Function Block Engineering Tool, , http://oooneida-fbench.sourceforge.net/, THE UNIVERSITY OF AUCKLAND [Online]; Vyatkin, V., Hanisch, H.M., Design of controllers aiming at plug-and-play engineering of automated systems from mechatronic components (2006) Annual Conference on Italian Automation Society (ANIPLA), , Rome; Vyatkin, V., Intelligent mechatronic components: Control system engineering using an open distributed architecture (2003) IEEE Conference on Emerging Technologies and Factory Automation (ETFA '03), 2, pp. 227-284; Vyatkin, V., Hanisch, H.M., Cheng, P., Chia-Han, Y., Closed-loop modeling in future automation system engineering and validation (2009) Systems, Man, and Cybernetics, Part C: Applications and Reviews, 39, pp. 17-28. , IEEE Transactions on","Pang, C.; University of AucklandNew Zealand; email: cpan024@aucklanduni.ac.nz",,Honeywell,,"13th IFAC Symposium on Information Control Problems in Manufacturing, INCOM'09",3 June 2009 through 5 June 2009,Moscow,85836,14746670,9783902661432,,,English,IFAC Proc. Vol. (IFAC-PapersOnline),Conference Paper,Scopus,2-s2.0-77956603536,,
,1,,"Pfoh, J., Schneider, C., Eckert, C.",A formal model for virtual machine introspection,2009,Proceedings of the ACM Conference on Computer and Communications Security,,,,1,9,,20,10.1145/1655148.1655150,http://www.scopus.com/inward/record.url?eid=2-s2.0-74049126468&partnerID=40&md5=2ea6a8195b7ec1828e6b0b160ac589d2,"Department of Computer Science, Technische Universität München, Munich, Germany","Pfoh, J., Department of Computer Science, Technische Universität München, Munich, Germany; Schneider, C., Department of Computer Science, Technische Universität München, Munich, Germany; Eckert, C., Department of Computer Science, Technische Universität München, Munich, Germany","Virtual machine introspection (VMI) describes the method of monitoring and analyzing the state of a virtual machine from the hypervisor level. In this paper, we present a formal discussion of the development of VMI-based security applications. We begin by identifying three major challenges that all VMI-based security applications must overcome. The main contribution of our work is the definition of a formal model for describing VMI techniques. This model is broken down in such a way that allows for thorough discussion of any VMI approach with regard to each of the three challenges. Then, we specify three design patterns for interpreting state information using our model. We argue that these patterns are complete, that is, they cover all possible methods for state interpretation. The properties of all patterns are thoroughly discussed so that the pros and cons of their application may be fully understood. Finally, we describe and discuss an ideal VMI-based intrusion detection system using our model and begin to detail the practical implications in building such a system. Copyright 2009 ACM.",Formalization; Introspection; Intrusion detection; Security; Virtualization,Broken down; Design Patterns; Formal model; Hypervisor; In-buildings; Introspection; Intrusion Detection Systems; Security application; State information; Virtual machine introspection; Virtual machines; Virtualizations; Computer crime; Network security; Intrusion detection,,,,,,"D. Barbaŕa, J. Couto, S. Jajodia, L. Popyack, and N. Wu. ADAM: Detecting intrusions by data mining. In In Proceedings of the IEEE Workshop on Information Assurance and Security, pages 11-16, 2001Bishop, C.M., (2006) Pattern Recognition and Machine Learning, , Springer; Chen, P.M., Noble, B.D., When virtual is better than real (2001) HOTOS '01: Proceedings of the Eighth Workshop on Hot Topics in Operating Systems, p. 133. , Washington, DC, USA, IEEE Computer Society; T. Garfinkel and M. Rosenblum. A virtual machine introspection based architecture for intrusion detection. In In Proc. Network and Distributed Systems Security Symposium, pages 191-206, 2003Hay, B., Nance, K., Forensics examination of volatile system data using virtual introspection (2008) SIGOPS Oper. Syst. Rev, 42 (3), pp. 74-82; Hoglund, G., Butler, J., (2006) Rootkits, , Addison Wesley; Jiang, X., Wang, X., Xu, D., Stealthy malware detection through VMM-based ""out-of-the-box"" semantic view reconstruction (2007) CCS '07: Proceedings of the 14th ACM conference on Computer and communications security, pp. 128-138. , New York, NY, USA, ACM; Jones, S.T., Arpaci-Dusseau, A.C., Arpaci-Dusseau, R.H., Antfarm: Tracking processes in a virtual machine environment (2006) ATEC '06: Proceedings of the annual conference on USENIX '06 Annual Technical Conference, pp. 1-1. , Berkeley, CA, USA, USENIX Association; Jones, S.T., Arpaci-Dusseau, A.C., Arpaci-Dusseau, R.H., VMM-based hidden process detection and identification using lycosid (2008) VEE '08: Proceedings of the fourth ACM SIGPLAN/SIGOPS international conference on Virtual execution environments, pp. 91-100. , New York, NY, USA, ACM; A. Kivity, Y. Kamay, D. Laor, U. Lublin, and A. Liguori. kvm: the linux virtual machine monitor. In Proceedings of the Linux Symposium, 1, pages 225-230, Ottawa, Ontario, Canada, June 2007Lee, W., Stolfo, S., Data mining approaches for intrusion detection (1998) Proceedings of the Seventh USENIX Security Symposium (SECURITY '98), , Jan; Litty, L., Lagar-Cavilla, H.A., Lie, D., Hypervisor support for identifying covertly executing binaries (2008) SS'08: Proceedings of the 17th conference on Security symposium, pp. 243-258. , Berkeley, CA, USA, USENIX Association; Litty, L., Lie, D., Manitou: A layer-below approach to fighting malware (2006) ASID '06: Proceedings of the 1st workshop on Architectural and system support for improving software dependability, pp. 6-11. , New York, NY, USA, ACM; Mukkamala, S., Janoski, G., Sung, A., Intrusion detection using neural networks and support vector machines (2002) Proceedings of the 2002 International Joint Conference on Neural Networks, 2, pp. 1702-1707; Szor, P., (2005) The Art of Computer Virus Research and Defense, , Symantec Press","Pfoh, J.; Department of Computer Science, Technische Universität München, Munich, Germany; email: pfoh@in.tum.de",,ACM SIGSAC,,"1st ACM Workshop on Virtual Machine Security, VMSec '09, Co-located with the 16th ACM Computer and Communications Security Conference, CCS'09",9 November 2009 through 13 November 2009,"Chicago, IL",78982,15437221,9781605587806,,,English,Proc ACM Conf Computer Commun Secur,Conference Paper,Scopus,2-s2.0-74049126468,,
,1,,"Hoffmann, H., Agarwal, A., Devadas, S.",Partitioning strategies: Spatiotemporal patterns of program decomposition,2009,Proceedings of the IASTED International Conference on Parallel and Distributed Computing and Systems,,,,126,135,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-77952366740&partnerID=40&md5=c0fbb1b67bb4c593c19f6d8ecd9b5ce4,"Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, United States","Hoffmann, H., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, United States; Agarwal, A., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, United States; Devadas, S., Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, United States","We describe four partitioning strategies, or patterns, used to decompose a serial application into multiple concurrently executing parts. These partitioning strategies augment the commonly used task and data parallel patterns by recognizing that applications are spatiotemporal in nature. Therefore, data and instruction decomposition are further distinguished by whether the partitioning is done in the spatial or in temporal dimension. Thus, we arrive at four decomposition strategies: spatial data partitioning (SDP), temporal data partitioning (TDP), spatial instruction partitioning (SIP), and temporal instruction partitioning (TIP), and catalog the benefits and drawbacks of each. In addition, the practical use of this work is demonstrated by applying these strategies, and combinations thereof, to implement several different parallelizations of a multicore H.264 encoder for high-definition video.",Design patterns; H.264 encoding; Parallel software engineering,Data parallel; Decomposition strategy; Design Patterns; H.264 encoders; High-definition videos; Multi core; Parallel software; Parallelizations; Partitioning strategies; Practical use; Program decomposition; Spatial data; Spatiotemporal patterns; Temporal Data; Temporal dimensions; Computer software; Fuzzy control; Encoding (symbols),,,,,,"Blackford, L.S., Choi, J., Cleary, A., Petitet, A., Whaley, R.C., Demmel, J., Dhillon, I., Walker, D., ScaLAPACK: A portable linear algebra library for distributed memory computers - Design issues and performance (1996) Supercomputing '96: Proceedings of the 1996 ACM/IEEE Conference on Supercomputing; Buck, I., Foley, T., Horn, D., Sugerman, J., Fatahalian, K., Houston, M., Hanrahan, P., Brook for GPUs: Stream computing on graphics hardware (2004) ACM TRANSACTIONS on GRAPHICS, 23, pp. 777-786; Butts, J.A., Sohi, G.S., Characterizing and predicting value degree of use (2002) MICRO, pp. 15-26; Chen, Y.-K., Tian, X., Ge, S., Girkar, M., Towards efficient multi-level threading of H.264 encoder on Intel hyperthreading architectures (2004) Parallel and Distributed Processing Symposium, 2004. Proceedings. 18th International, , April; Flynn, M.J., Very high-speed computing systems (1966) Proceedings of the IEEE, 54 (12). , Dec; Gordon, M., Thies, W., Amarasinghe, S., Exploiting coarse-grained task, data, and pipeline parallelism in stream programs (2006) International Conference on Architectural Support for Programming Languages and Operating Systems; Gordon, M., Thies, W., Karczmarek, M., Lin, J., Meli, A.S., Leger, C., Lamb, A.A., Amarasinghe, S., A stream compiler for communicationexposed architectures (2002) International Conference on Architectural Support for Programming Languages and Operating Systems; High Performance Fortran language specification Technical Report CRPC-TR92225, , High Performance Fortran Forum, version 1.0; http://threadingbuildingblocks.org/, Intel Threading Building Blocks 2.1 for Open SourceSupra-linear packet processing performance with Intel multi-core processors (2006) Technical Report, , Intel; ITU-T. H.264: Advanced video coding for generic audiovisual servicesJacobs, T., Chouliaras, V., Mulvaney, D., Threadparallel MPEG-4 and H.264 coders for system-on-chip multi-processor architectures (2006) International Conference on Consumer Electronics, , Jan; Jung, B., Lee, H., Won, K.-H., Jeon, B., Adaptive slicelevel parallelism for real-time H.264/AVC encoder with fast inter mode selection (2007) Multimedia Systems and Applications X.; Keutzer, K., Mattson, T., Our Pattern Language (OPL): A design pattern language for engineering (parallel) software (2009) ParaPLoP: Workshop on Parallel Programming Patterns; Lea, D., (1996) Concurrent Programming in Java: Design Principles and Patterns; Liu, L.-K., Kesavarapu, S., Connell, J., Jagmohan, A., Hoon Leem, L., Paulovicks, B., Sheinin, V., Yeo, H., Video analysis and compression on the STI Cell Broadband Engine processor ICME.; Massingill, B.L., Mattson, T.G., Sanders, B.A., A pattern language for parallel application programs (research note) (2000) Euro-Par '00: Proceedings from the 6th International Euro-Par Conference on Parallel Processing, pp. 678-681. , London, UK, Springer-Verlag; Mattson, T., Sanders, B., Massingill, B., (2004) Patterns for Parallel Programming; Rodriguez, A., Gonzalez, A., Malumbres, M.P., Hierarchical parallelization of an H.264/AVC video encoder (2006) PARELEC '06: Proceedings of the International Symposium on Parallel Computing in Electrical Engineering; Siu, S., Simone, M.D., Goswami, D., Singh, A., Design patterns for parallel programming Proceedings of the 1996 International Conference on Parallel and Distributed Processing Techniques and Applications; Snir, M., http://www.cs.uiuc.edu/homes/snir/PPP/Sun, S., Wang, D., Chen, S., A highly efficient parallel algorithm for H.264 encoder based on macro-block region partition (2007) HPCC '07: Proceedings of the 3rd International Conference on High Performance Computing and Communications; Theobald, K., Gao, G.R., Hendren, L.J., Speculative execution and branch prediction on parallel machines (1993) In Conference Proceedings, 1993 International Conference on Supercomputing; Van De Geijn, R., (1997) Using PLAPACK-Parallel Linear Algebra Package, , MIT Press, Cambridge, MA; X264, , http://www.videolan.org/x264.html","Hoffmann, H.; Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of TechnologyUnited States; email: Hank@csail.mit.edu",,,,"21st IASTED International Conference on Parallel and Distributed Computing and Systems, PDCS 2009",2 November 2009 through 4 November 2009,"Cambridge, MA",80285,10272658,9780889868113,,,English,Proc. IASTED INt. Conf. Parall. Distrib. Comput. Syst.,Conference Paper,Scopus,2-s2.0-77952366740,,
,v,,"Zhu, H., Bayley, I., Shan, L., Amphlett, R.",Tool support for design pattern recognition at model level,2009,Proceedings - International Computer Software and Applications Conference,1,,5254256,228,233,,10,10.1109/COMPSAC.2009.37,http://www.scopus.com/inward/record.url?eid=2-s2.0-70449688308&partnerID=40&md5=b0d96b94babf3ca177fb5a6b36428bd1,"School of Technology, Oxford Brookes University, Oxford OX33 1HX, United Kingdom; Dept. of Computer Science, National University of Defense Technology, Changsha, China","Zhu, H., School of Technology, Oxford Brookes University, Oxford OX33 1HX, United Kingdom; Bayley, I., School of Technology, Oxford Brookes University, Oxford OX33 1HX, United Kingdom; Shan, L., Dept. of Computer Science, National University of Defense Technology, Changsha, China; Amphlett, R., School of Technology, Oxford Brookes University, Oxford OX33 1HX, United Kingdom","Given the rapid rise of model-driven software development methodologies, it is highly desirable that tools be developed to support the use of design patterns in this context. This paper presents such a tool, called LAMBDES-DP, with UML diagrams as the software design models. Its theoretical foundation is a descriptive semantics of UML in first order logic, and the design patterns are formally specified in the same language. The tool uses the LAMBDES system to translate the UML diagrams into their descriptive semantics and invokes the theorem prover SPASS to decide whether the design conforms to a pattern. Our experiments show that our tool has significantly lower rates of false positive and false negative errors compared with existing tools. © 2009 IEEE.",,Descriptive semantics; Design Patterns; False negative errors; False positive; First order logic; Model-Driven Software Development; Software design model; Theorem provers; Theoretical foundations; Tool support; Tool use; UML diagrams; Computer software; Design; Pattern recognition; Semantics; Word processing; Software design,,,,,,"Bayley, I., Zhu, H., Formalising design patterns in predicate logic Proc. of SEFM'07, pp. 25-36; Bayley, I., Zhu, H., On the composition of design patterns Proc. of QSIC'08, pp. 27-36; Bayley, I., Zhu, H., Specifying behavioural features of design patterns in first order logic Proc. of COMPSAC'08, pp. 203-210; Beyer, D., Noack, A., Lewerentz, C., Efficient relational calculation for software analysis (2005) IEEE TSE, 31 (2), pp. 137-149; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in Java Proc. of ASE'05, pp. 224-232; Dong, J., Zhao, Y., Peng, T., Architecture and design pattern discovery techniques - A review (2007) Software Engineering Research and Practice, pp. 621-627. , H. R. Arabnia and H. Reza (eds.), CSREA Press; Eden, A.H., Formal specification of object-oriented design (2001) International Conference on Multidisciplinary Design in Engineering, , Nov; Eden, A.H., A theory of object-oriented design (2002) Information Systems Frontiers, 4 (4), pp. 379-391; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE TSE, 30 (3), pp. 193-206; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guennec, A.L., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns Proc. of UML 2000, pp. 482-496. , LNCS1939, Springer; Huang, H., Zhang, S., Cao, J., Duan, Y., A practical pattern recovery approach based on both structural and behavioral analysis (2005) J. Syst. Softw., 75 (1-2), pp. 69-87; Kim, D.-K., France, R.B., Ghosh, S., Song, E., A role-based metamodeling approach to specifying design patterns Proc. of COMPSAC'03, pp. 452-457; Kim, D.-K., Lu, L., Inference of design pattern instances in UML models via logic programming Proc. of ICECCS'06, pp. 47-56; Kim, D.-K., Shen, W., An approach to evaluating structural pattern conformance of UML models Proc. of SAC'07, pp. 1404-1408; Kim, D.-K., Shen, W., Evaluating pattern conformance of UML models: A divide-and-conquer approach and case studies (2008) Software Quality Journal, 16 (3), pp. 329-359; Kodituwakku, S.R., Bertok, P., Pattern categories: A mathematical approach for organizing design patterns Proc. of CRPIT'02, pp. 63-73. , Australia Computer Society; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in objectoriented software Proc. of WCRE'96, pp. 208-215; Lano, K., Bicarregui, J.C., Goldsack, S., Formalising design patterns (1996) Proc. of BCS-FACS Northern Formal Methods Workshop, , Sept; Lauder, A., Kent, S., Precise visual specification of design patterns Proc. of ECOOP'98, pp. 114-134. , LNCS 1445, Springer; Mak, J., Choy, C., Lun, D., Precise modeling of design patterns in UML Proc. of ICSE'04, pp. 252-261; Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using DPML Proc. of CRPIT '02, pp. 3-11. , Australian Computer Society; Mikkonen, T., Formalizing design patterns Proc. of ICSE'98, pp. 115-124; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery Proc. of ICSE'02, pp. 338-348; Shi, N., Olsson, R., Reverse engineering of design patterns from Java source code Proc. of ASE'06, pp. 123-134; Shan, L., Zhu, H., A formal descriptive semantics of UML Proc. of ICFEM, pp. 375-396; Taibi, T., Formalising design patterns composition (2006) Software,IEE Proceedings, 153 (3), pp. 126-153. , June; Taibi, T., Check, D., Ngo, L., Formal specification of design patterns-a balanced approach (2003) Journal of Object Technology, 2, p. 4. , July-August; Vokac, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE TSE, 30 (12), pp. 904-917; Zdun, U., Avgeriou, P., Modelling architectural patterns using architectural primitives Proc. of OOPLSA'05, pp. 133-146","Zhu, H.; School of Technology, Oxford Brookes University, Oxford OX33 1HX, United Kingdom; email: hzhu@brookes.ac.uk",,IEEE;IEEE Computer Society,,"2009 33rd Annual IEEE International Computer Software and Applications Conference, COMPSAC 2009",20 July 2009 through 24 July 2009,"Seattle, WA",78413,7303157,9780769537269,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-70449688308,,
,3,,"Schreiner, A.T., Heliotis, J.E.",A discipline of tree processing,2009,"Proceedings of the 7th International Conference on Principles and Practice of Programming in Java, PPPJ 2009",,,1596668,85,90,,,10.1145/1596655.1596668,http://www.scopus.com/inward/record.url?eid=2-s2.0-70449629820&partnerID=40&md5=f8fd028c7f2661d6bf0d010ca9e28291,"Rochester Institute of Technology, 102 Lomb Memorial Drive, Rochester, NY 14623-5608, United States","Schreiner, A.T., Rochester Institute of Technology, 102 Lomb Memorial Drive, Rochester, NY 14623-5608, United States; Heliotis, J.E., Rochester Institute of Technology, 102 Lomb Memorial Drive, Rochester, NY 14623-5608, United States","This paper discusses a set of new tools to facilitate the implementation of language processors in Java. First, by decoupling recognition based on grammars from tree building based on semantic actions we can choose to represent grammars in BNF or EBNF, and to parse based on LL, LR, or functional engines, and still completely control how trees represent structured input. Second, we use a Java custom annotation to generate tree factories, thus encouraging a more functional approach to backend processing by tree transformation. Third, we replace the traditional visitor design pattern in the backend by a more rule-oriented approach using inheritance on tree node classes for pattern matching. Taken together, language implementation turns into a problem of tree creation and transformation with concise, Java-based notations to focus on the algorithms. Copyright 2009 ACM.",Parser generators; Tree manipulation,Back-end processing; Design Patterns; Functional approach; Language processors; New tools; Parser generators; Semantic action; Tree nodes; Tree processing; Tree transformation; Linguistics; Pattern matching; Java programming language,,,,,,"Aho, A.V., Kernighan, B.W., Weinberger, P.J., (1988) The AWK Programming Language, , ISBN 0-201-07981-X; Bravenboer, M., Kalleberg, K. T., Vermaas, R., and Visser, E., Stratego/XT 0.17. A Language and Toolset for Program Transformation. Science of Computer Programming, 72(1-2):52-70, June 2008. Special issue on experimental software and toolkits. Web site http://strategoxt.org/http://www.w3.org/TR/xslt, Clark, James, XSL Transformations, Version 1.0, 1999http://www.w3.org/TR/xpath, Clark, James, DeRose, Steve, XML Path Language XPath, Version 1.0, 1999Darcy, J., (2006) JSR 269: Pluggable Annotation Processing API, , http://www.jcp.org/en/jsr/detail?id=269; (1996) The Catalog of Compiler Construction Tools, , http://catalog.compilertools.net, Fraunhofer Institute For Computer Architecture And Software Technology; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, pp. 331-344. , ISBN 0-201-63361-2; Heliotis, J.E., Schreiner, A.T., (2009), 15. , http://www.cs.rit.edu/~ats/projects/lp2/doc/xv/packagesummary.html, XML Visitor GeneratorHudson, S., Flannery, F.C., Ananian, S., (1996), http://www2.cs.tum.edu/projects/cup, CUP parser generatorJohnson, S.C., Lesk, M.E., Language Development Tools (1978) The Bell System Technical Journal, 57 (6), pp. 245-265. , ISBN 0-13-938532-0, July-August; Klein, G., (1999) classgen, , http://classgen.sourceforge.net; Metamata, (1997) JavaCC and JJTree (parser generator), , http://nlp.stanford.edu/nlp/javadoc/javaccdocs; Parr, T.J., Quong, R.W., A Predicated-LL(k) Parser Generator (1995) Software Practice and Experience, 25 (7), pp. 789-810. , ANTLR; Schreiner, Axel T., el, Expression Language, 2005, http://www.cs.rit.edu/~ats/projects/el/doc/Schreiner, Axel T., jay, LALR(1) parser generator, 2006, http://www.cs.rit.edu/~ats/projects/lp/doc/jay/packagesummary.htmlSchreiner, Axel T., lp, Language Processing (tutorial), 2005, http://www.cs.rit.edu/~ats/projects/lp/doc/Schreiner, A.T., (2008) oops3, , http://www.cs.rit.edu/~ats/projects/oops3/doc, Object-oriented parser system; Schreiner, Axel T., pj2, Compiler frontend generator, 2009, http://www.cs.rit.edu/~ats/projects/lp2/doc/pj2/packagesummary.htmlSchreiner, Axel T., vig, Visitor generator, 2008, http://www.cs.rit.edu/~ats/projects/lp2/doc/vig/packagesummary.htmlSchreiner, Axel T., wcs, Web compiler service, 2008, http://www.cs.rit.edu/~ats/projects/lp2/doc/wcs/packagesummary.html(2004) Sun Microsystems, Annotation Processing Tool, , http://java.sun.com/j2se/1.5.0/docs/guide/apt; (2009) Comparison of parser generators, , http://en.wikipedia.org/wiki/Comparison-of-parser-generators","Schreiner, A. T.; Rochester Institute of Technology, 102 Lomb Memorial Drive, Rochester, NY 14623-5608, United States; email: ats@cs.rit.edu",,University of Calgary;iCORE;Sun microsystems;Ridge Soft,,"7th International Conference on Principles and Practice of Programming in Java, PPPJ 2009",27 August 2009 through 28 August 2009,"Calgary, AB",77918,,9781605585987,,,English,"Proc. Int. Conf. Princ. Pract. Program. Java, PPPJ",Conference Paper,Scopus,2-s2.0-70449629820,,
,1,,"Baek, S.-J., Kim, J., Song, Y.-J.",Process mining based on specification slicing for dynamic reconfiguration,2009,"Proceedings of the 2009 International Conference on Computational Science and Its Applications, ICCSA 2009",,,5260959,51,55,,,10.1109/ICCSA.2009.21,http://www.scopus.com/inward/record.url?eid=2-s2.0-70449673403&partnerID=40&md5=fb72408ee7fa1e8ea63ad6d8e7e571aa,"Department of Computer Engineering, Kyung Hee University, 1 Seocheon, Giheung, Yongin, Gyeonggi 446-701, South Korea","Baek, S.-J., Department of Computer Engineering, Kyung Hee University, 1 Seocheon, Giheung, Yongin, Gyeonggi 446-701, South Korea; Kim, J., Department of Computer Engineering, Kyung Hee University, 1 Seocheon, Giheung, Yongin, Gyeonggi 446-701, South Korea; Song, Y.-J., Department of Computer Engineering, Kyung Hee University, 1 Seocheon, Giheung, Yongin, Gyeonggi 446-701, South Korea","Companies faced with rapid changes in market environment and uncertain demands of consumers are actively making investments in the information system and it is expediting the growth of the market for workflow which automates the work process. The concept of workflow mining is required for designing and supporting the business process focusing on productivity enhancement. The existing workflow mining technology was designed to extract business process redesign information from simple database fields or create a process model by collecting, identifying, and analyzing log information from the system that it could not be dynamically reconfigured by exploring the process flow suitable for new requests made on business process. This study suggests data extraction algorithm helpful to dynamic reconfiguration by analyzing semantic relationship based on specification slicing technique so that the new service requests given by the user are dynamically reflected in the initial workflow scenario without interrupting the workflow service in operations.",Design pattern; Dynamic reconfiguration; Process mining,Business Process; Business process redesign; Data extraction; Design Patterns; Dynamic re-configuration; Log information; Market environment; New services; Process flows; Process mining; Process model; Productivity enhancement; Rapid changes; Semantic relationships; Uncertain demand; Work process; Workflow mining; Workflow services; Dynamic models; Management; Specifications; Mining,,,,,,"Aalst Van Der, W.M.P., Reijers, H.A., Weijters, A.J.M.M., Dongen, B.F., Van, B.F., Alves De Medeiros, A.K., Song, M.S., Verbeek, H.M.W., Business process mining : An industrial application (2007) Information System, 32 (5), pp. 713-732; Van Der Aalst, W.M.P., Weijters, A.J.M.M., Process mining: A research agenda (2004) Computers in Industry, 53 (3), pp. 231-244; Agrawal, R., Gunopulos, D., Leymann, F., Mining process models from work-flow logs (1998) 6th International Conference on Extending Database Technology, pp. 469-483; Cook, J.E., Wolf, A.L., Discovering models of software processes from event based data (1998) ACM Transactions on Software Engineering and Methodology, 7 (3), pp. 215-249; Aalst, W.M.P., Van Der Weijters, A.J.M.M., Maruster, L., Workflow mining : Discovering process models from event logs (2004) IEEE Transcations on Knowledge and Data Engineering, 16 (9), pp. 1128-1142; Aalst, W.M.P., Van Der Medeiros De, A.K.A., Weijters, A.J.M.M., Genetic process mining (2005) Lecture Notes in Computer Science, 3536, pp. 48-69; Medeiros De, A.K.A., Weijters, A.J.M.M., Aalst Van Der, W.M.P., Genetic process mining : A basic approach and its challenges (2006) Lecture Notes In Computer Science, 3812, pp. 203-215; Chung, S.Y., Kwon, S.T., A process mining using association rule and sequence pattern (2008) Journal of the Society of Korea Industrial and Systems Engineering, 31 (2), pp. 104-111. , June; Yoon, K.S., Chung, I.S., Lee, W.K., Specification-Based program slicing and its applications (2001) Systems Architecture, 47, pp. 427-443. , May","Baek, S. -J.; Department of Computer Engineering, Kyung Hee University, 1 Seocheon, Giheung, Yongin, Gyeonggi 446-701, South Korea; email: croso@khu.ac.kr",,,,"2009 International Conference on Computational Science and Its Applications, ICCSA 2009",29 June 2009 through 2 July 2009,Yongin,78439,,9780769537016,,,English,"Proc. Int. Conf. Comput. Sci. Appl., ICCSA",Conference Paper,Scopus,2-s2.0-70449673403,,
,1,,"Calvo, R.A.",Incorporating affect into educational design patterns and frameworks,2009,"Proceedings - 2009 9th IEEE International Conference on Advanced Learning Technologies, ICALT 2009",,,5194254,377,381,,3,10.1109/ICALT.2009.88,http://www.scopus.com/inward/record.url?eid=2-s2.0-70449338475&partnerID=40&md5=b281e41d49a9be822996e26be18836fe,"School ofElectrical andlnformationEngineering, University of Sydney, Australia","Calvo, R.A., School ofElectrical andlnformationEngineering, University of Sydney, Australia","In this paper we aim to bring together research in affective computing and educational design. We review the literature and describe the design of a methodological and technical framework for studying pedagogical designs that are informed by the affective state of learners. The proposed framework integrates techniques for affect recognition using physiology and text, and describes an approach to studying the affective dynamics of collaborative activities. We aim for this exploratory work to improve our understanding of how to best design group learning activities, and then to communicate these outcomes in the form of educational design patterns. © 2009 IEEE.",,Affect recognition; Affective Computing; Affective state; Collaborative activities; Design Patterns; Group learning; Character recognition; Design; Education,,,,,,"Damasio, A., (1995) Descartes' Error: Emotion, Reason, and the Human Brain: Harper Perennial; Dragon, T., Arroyo, I., Woolf, B.P., Burleson, W., Kaliouby, R.E., Eydgahi, H., Viewing student affect and learning through classroom observation and physical sensors (2008) Intelligent Turing Systems; Forgas, J.P., (2000) Feeling and Thinking: The Role of Affect in Social Cognition, , Cambridge University Press; D'Mello, S., Picard, R., Graesser, A., Toward an affect-sensitive autotutor (2007) IEEE Intelligent Systems, 22, pp. 53-61; Burleson, W., Picard, R., Gender-specific approaches to developing emotionally intelligent learning companions (2007) IEEE Intelligent Systems, 22, pp. 62-69; Forgas, Joseph, P., Affect and cognition (2008) Perspectives on Psychological Science, 3, pp. 94-101; Beale, R., Peter, C., (2008) Affect and Emotion in Human-Computer Interaction: From Theory to Applications, 4868. , Springer; Duda, R., Hart, P., Stork, D., (2000) Pattern Classification (2nd Edition), , Wiley- Interscience; Lichtenstein, A., Oehme, A., Kupschick, S., Jrgensohn, T., Comparing two emotion models for deriving affective states from physiological data (2008) Affect and Emotion in Human-Computer Interaction, pp. 35-50; Picard, R.W., Vyzas, E., Healey, J., Toward machine emotional intelligence: Analysis of affective physiological state (2001) Pattern Analysis and Machine Intelligence, IEEE Transactions on, 23, pp. 1175-1191; Kim, K., Bang, S., Kim, S., Emotion recognition system using short-term monitoring of physiological signals (2004) Medical and Biological Engineering and Computing, 42, pp. 419-427; Donate, G., Bartlett, M.S., Hager, J.C., Ekman, P., Sejnowski, T.J., Classifying facial actions (1999) IEEE Pattern Analysis and Mach. Intelligence, 21, pp. 974-989; Turani, A., Calvo, R.A., Beehive: A software application for synchronous collaborative learning (2006) Campus Wide Information Systems, 23, pp. 196-209; Lang, P.J., Greenwald, M., Bradley, M.M., Hamm, A.O., Looking at pictures: Evaluative, facial, visceral, and behavioral responses (1993) Psychophysiology, 30, pp. 261-274; Boehner, K., Depaula, R., Dourish, P., Sengers, P., How emotion is made and measured (2007) International Journal of Human- Computer Studies, 65, pp. 275-291; Valitutti, A., Strapparava, C., Stock, O., Lexical resources and semantic similarity for affective evaluative expressions generation (2005) Affective Computing and Intelligentlnteraction, pp. 474-481; Storm, C., The english lexicon of interpersonal affect: Love, etc (2005) Cognition and Emotion, 19; Yi, J., Nasukawa, T., Bunescu, R., Niblack, W., Sentiment analyzer: Extracting sentiments about a given topic using natural language processing techniques (2003) Data Mining, 2003. ICDM 2003. Third IEEE International Conference on, pp. 427-434; Wilson, T., Wiebe, J., Hoffmann, P., Recognizing contextual polarity in phrase- level sentiment analysis (2005) HLT '05: Proceedings of the Conference on Human Language Technology and Empirical Methods in Natural Language Processing, pp. 347-354. , Vancouver, British Columbia, Canada; Lee, J.M., Calvo, R.A., Scalable document classification (2005) Intelligent Data Analysis, 9, pp. 4-29; Agrawal, R., Srikant, R., Mining sequential patterns (1995) International Conference on Data Engineering (ICDE95), pp. 3-14","Calvo, R. A.; School ofElectrical andlnformationEngineering, University of SydneyAustralia; email: rafa@ee.usyd.edu.au",,IEEE Computer Society;IEEE Technical Committee on Learning Technology,,"2009 9th IEEE International Conference on Advanced Learning Technologies, ICALT 2009",15 July 2009 through 17 July 2009,Riga,78349,,9780769537115,,,English,"Proc. - IEEE Int. Conf. Adv. Learn. Technol., ICALT",Conference Paper,Scopus,2-s2.0-70449338475,,
,v,,"Washizaki, H., Fukaya, K., Kubo, A., Fukazawa, Y.",Detecting design patterns using source code of before applying design patterns,2009,"Proceedings of the 2009 8th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2009",,,5223175,933,938,,4,10.1109/ICIS.2009.209,http://www.scopus.com/inward/record.url?eid=2-s2.0-70350716568&partnerID=40&md5=a92cdb3f21bedc81d185b0e61561220a,"Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan; GRACE Center, National Institute of Infomatics, 2-1-2 Hitotsubashi, Chiyoda-ku, Tokyo 101-8430, Japan","Washizaki, H., Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan, GRACE Center, National Institute of Infomatics, 2-1-2 Hitotsubashi, Chiyoda-ku, Tokyo 101-8430, Japan; Fukaya, K., Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan; Kubo, A., Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan; Fukazawa, Y., Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan","Detecting design patterns from object-oriented program source-code can help maintainers understand the design of the program. However, the detection precision of conventional approaches based on the structural aspects of patterns is low due to the fact that there are several patterns with the same structure. To solve this problem, we propose an approach of design pattern detection using source-code of before the application of the design pattern. Our approach is able to distinguish different design patterns with similar structures, and help maintainers understand the design of the program more accurately. Moreover, our technique reveals when and where the target pattern has been applied in an ordered series of revisions of the target program. Our technique is useful to assess what kinds of patterns increase what kinds of quality characteristics such as the maintainability. © 2009 IEEE.",,Conventional approach; Design Patterns; Object-oriented program; Quality characteristic; Source codes; Structural aspects; Target patterns; Information science; Maintainability; Design,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proc. 24th International Conference on Software Engineering; Blewitt, A., Bundy, A., Stark, L., Automatic verification of design patterns in Java (2005) Proceedings of the 20th International Conference on Automated Software Engineering; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32, p. 11; Dong, J., Sun, Y., Zhao, Y., Design pattern detection by template matching (2008) Proc. ACM Symposium on Applied Computing; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proc. ICSE Workshop on Dynamic Analysis; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) Proc. 21st IEEE/ACM International Conference on Automated Software Engineering; Hahsler, M., A quantitative study of the adoption of design patterns by open source software developers (2005) Free/Open Source Software Development, , Idea Group; Canonical Form, , http://c2.com/cgi/wiki?CanonicalForm, The portland pattern repository; Kerievsky, J., (2004) Refactoring to Patterns, , Addison- Wesley; Badros, G., JavaML: A markup language for Java source code (2000) Proceedings of the 9th International World Wide Web Conference on Computer Networks; (1999) TheWorldWideWeb Consortium (W3C) Recommendation, , http://www.w3.org/TR/xpath/, Xml path language (XPath) version 1.0; Freeman, E., Freeman, E., Bates, B., Sierra, K., (2004) Head First Design Patterns, , O'Reilly Media; Martin, R., (2002) Agile Software Development: Principles, Patterns, and Practices, , Prentice Hall; Metsker, S., (2002) Design Patterns Java Workbook, , Addison Wesley Professional; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; McCabe, T.J., A complexity measure (1976) IEEE Transactions on Software Engineering, 2 (4), pp. 308-320","Washizaki, H.; Department of Computer Science and Engineering, Waseda University, 3-4-1 Ohkubo, Shinjuku-ku, Tokyo 169-8555, Japan; email: washizaki@waseda.jp",,"IEEE Computer Society;International Association for;Computer and Information Science, ACIS",,"8th IEEE/ACIS International Conference on Computer and Information Science, ICIS 2009",1 June 2009 through 3 June 2009,Shanghai,78070,,9780769536415,,,English,"Proc. IEEE/ACIS Int. Conf. Comput. Inform. Sci., ICIS",Conference Paper,Scopus,2-s2.0-70350716568,,
,v,,"Kniesel, G., Binun, A.",Standing on the shoulders of giants - A data fusion approach to design pattern detection,2009,IEEE International Conference on Program Comprehension,,,5090044,208,217,,6,10.1109/ICPC.2009.5090044,http://www.scopus.com/inward/record.url?eid=2-s2.0-70349998980&partnerID=40&md5=34f4948e462cb4d8464ec9b33f0cabbd,"University of Bonn, Institute for Computer Science III, Römerstr. 164, D-53117 Bonn, Germany","Kniesel, G., University of Bonn, Institute for Computer Science III, Römerstr. 164, D-53117 Bonn, Germany; Binun, A., University of Bonn, Institute for Computer Science III, Römerstr. 164, D-53117 Bonn, Germany","Identification of design patterns can deliver important information to designers. Therefore, automated design pattern detection (DPD) is highly desirable when it comes to understanding unknown code. In this paper, we present the results of evaluating five existing DPD tools on various Java projects. These results motivate our proposal of a novel DPD approach based on data fusion. It combines design pattern candidate sets coming from different tools implementing different DPD techniques. We show that a design pattern can be a witness for the existence of another pattern. Our approach is able (1) to provide correct diagnostics even if the inputs from the evaluated tools were partly wrong and (2) to detect patterns instances not identified by the individual tools. For the Decorator, Visitor and Observer pattern, the witness-based approach yields better precision and recall than provided by any single tool. In particular, it detects 24 out of 30 instances of these patterns missed in our experiments by the evaluated tools. We also found that on the analyzed instances of the Bridge, Mediator and Facade pattern data fusion could not improve results, demonstrating that research into improvements of the basic detection techniques is still necessary. © 2009 IEEE.",,Automated design; Candidate sets; Design Patterns; Detection technique; Pattern datum; Precision and recall; Data fusion; Information fusion; Design,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) ASE'01, p. 166. , San Diego, USA, Nov, IEEE Computer Society; Arcelli, F., Masiero, S., Raibulet, C., Elemental design patterns recognition in java (2005), 0:196-205A. De Lucia, V. Deufemia, C. Gravino, and M. Risi. A two phase approach to design pattern recovery. In CSMR '07, pages 297-306, Washington, DC, USA, 2007. IEEE Computer SocietyDong, J., Lad, D.S., Zhao, Y., Dp-miner: Design pattern discovery using matrix (2007) ECBS'07, pp. 371-380. , Washington, USA, IEEE Computer Society; Dong, J., Zhao, Y., Peng, T., A review of design pattern mining techniques (2008) IJSEKE; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns, , Addison Wesley; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) IJCAI'01, pp. 57-64. , Seattle, USA, Aug, AAAI Press; Kaczor, O., Guéhéneuc, Y.-G., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) CSMR'06, pp. 175-184. , Washington, USA, IEEE Computer Society; G. Kniesel and A. Binun. Witnessing Patterns: A Data Fusion Approach to Design Pattern Detection. Technical report IAI-TR-2009-01, ISSN 0944-8535, CS Department III, Uni.Bonn, Germany, Jan. 2009. http://www.cs.uni-bonn.de/~gk/ papers/IAI-TR-2009-01.pdfJ. K.-Y. Ng, Y.-G. Guéhéneuc, and G. Antoniol. Identification of behavioral and creational design patterns through dynamic analysis. JSME, 0(0):0, 2009. submittedNiere, J., Wadsack, J.P., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) IWPC'03, p. 274. , Washington, USA, IEEE Computer Society; Penta, M.D., Cerulo, L., Guéhéneuc, Y.-G., Antoniol, G., An empirical study of the relationships between design pattern roles and class change proneness (2008) ICSM, pp. 217-226. , IEEE; Poshyvanyk, D., Guéhéneuc, Y.-G., Marcus, A., Antoniol, G., Rajlich, V., Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval (2007) IEEE TSE, 33 (6), pp. 420-432; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) ASE'06, pp. 123-134. , Washington, USA, IEEE Computer Society; Smith, J., Stotts, D., An elemental design pattern catalog. Technical Report tr02-040, The University of North Carolina, CS Department (2003), DecSmith, J., Stotts, D., Spqr: Flexible automated design pattern extraction from source code (2003) ASE'03, , IEEE; Tonella, P., Antoniol, G., Object oriented design pattern inference (1999) ICSM'99, p. 230. , Washington, USA, IEEE Computer Society; Tsantalis, N., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE TSE, 32 (11), pp. 896-909; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) WODA'03, , Portland, USA, IEEE Computer Society; Wendehals, L., (2007) Struktur- und Verhaltensbasierte Entwurfsmustererkennung, , Phd thesis, Universität Paderborn, Institut für Informatik, September; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) WODA'06, pp. 33-40. , New York, USA, ACM; Zimmer, W., Relationships between design patterns (1995) Pattern Languages of Program Design, pp. 345-364. , Addison-Wesley","Kniesel, G.; University of Bonn, Institute for Computer Science III, Römerstr. 164, D-53117 Bonn, Germany; email: gk@iai.uni-bonn.de",,,,"2009 IEEE 17th International Conference on Program Comprehension, ICPC '09",17 May 2009 through 19 May 2009,"Vancouver, BC",77832,,9781424439973,,,English,IEEE Int. Conf. Program Comprehension,Article,Scopus,2-s2.0-70349998980,,
,1,,"Draper, G.M., Livnat, Y., Riesenfeld, R.F.",A survey of radial methods for information visualization,2009,IEEE Transactions on Visualization and Computer Graphics,15,5,4770098,759,776,,66,10.1109/TVCG.2009.23,http://www.scopus.com/inward/record.url?eid=2-s2.0-68549125210&partnerID=40&md5=507d3ba91b25e4c851362015ad45fefc,"Brigham Young University Hawaii, Department of Computer and Information Sciences, BYUH 1956, 55-220 Kulanui St, Laie, HI 96762, United States; University of Utah, Scientific Computing and Imaging Institute, 3750 WEB, 72 S Central Campus Drive, Salt Lake City, UT 84112, United States; University of Utah, School of Computing, 50 S Central Campus Dr. #3190, Salt Lake City, UT 84112, United States","Draper, G.M., Brigham Young University Hawaii, Department of Computer and Information Sciences, BYUH 1956, 55-220 Kulanui St, Laie, HI 96762, United States; Livnat, Y., University of Utah, Scientific Computing and Imaging Institute, 3750 WEB, 72 S Central Campus Drive, Salt Lake City, UT 84112, United States; Riesenfeld, R.F., University of Utah, School of Computing, 50 S Central Campus Dr. #3190, Salt Lake City, UT 84112, United States","Radial visualization, or the practice of displaying data in a circular or elliptical pattern, is an increasingly common technique in information visualization research. In spite of its prevalence, little work has been done to study this visualization paradigm as a methodology in its own right. We provide a historical review of radial visualization, tracing it to its roots in centuries-old statistical graphics. We then identify the types of problem domains to which modern radial visualization techniques have been applied. A taxonomy for radial visualization is proposed in the form of seven design patterns encompassing nearly all recent works in this area. From an analysis of these patterns, we distill a series of design considerations that system builders can use to create new visualizations that address aspects of the design space that have not yet been explored. It is hoped that our taxonomy will provide a framework for facilitating discourse among researchers and stimulate the development of additional theories and systems involving radial visualization as a distinct design metaphor. © 2006 IEEE.",Information visualization; Interactive data exploration and discovery; Multivariate visualization; Visualization techniques and methodologies,Design considerations; Design metaphors; Design Patterns; Design spaces; Historical review; Information visualization; Interactive data exploration and discovery; Multivariate visualization; Problem domain; Radial visualization; Statistical graphics; System builders; Visualization techniques and methodologies; Computer graphics; Design; Information analysis; Information systems; Taxonomies; Visualization; Data visualization,,,,,,"Andrews, K., Heidegger, H., Information Slices: Visualising and Exploring Large Hierarchies Using Cascading, Semi-Circular Discs (1998) Proc. InfoVis Late Breaking Hot Topic Papers, pp. 9-12; Ankerst, M., Keim, D.A., Kriegel, H.-P., Circle Segments: A Technique for Visually Exploring Large Multidimensional Data Sets (1996) Proc. IEEE Visualization Conf., Hot Topic Session; Barlow, T., Neville, P., A Comparison of 2D Visualizations of Hierarchies (2001) Proc. IEEE Information Visualization Conf. (InfoVis '01), pp. 131-138; Baron, M.E., A Note on the Historical Development of Logic Diagrams: Leibniz, Euler and Venn (1969) The Math. Gazette: The J. Math. Assoc, 53 (384), pp. 113-125. , May; Berendonck, C.V., Jacobs, T., Bubbleworld: A New Visual Information Retrieval Technique (2003) Proc. Asia-Pacific Symp. Information Visualisation (APVis '03), pp. 47-56; Bertin, J., (1984) Semiology of Graphics, , Univ. of Wisconsin Press; Bertini, E., Hertzog, P., Lalanne, D., SpiralView: Towards Security Policies Assessment through Visual Correlation of Network Resources with Evolution of Alarms (2007) Proc. IEEE Symp. Visual Analytics Science and Technology (VAST '07), 2, pp. 139-146. , Oct; Brandes, U., Kenis, P., Wagner, D., Communicating Centrality in Policy Network Drawings (2003) IEEE Trans. Visualization and Computer Graphics, 9 (2), pp. 241-253. , Apr.-June; Brewer, I., MacEachren, A.M., Abdo, H., Gundrum, J., Otto, G., Collaborative Geographic Visualization: Enabling Shared Understanding of Environmental Processes (2000) Proc. IEEE Information Visualization Conf. (InfoVis '00), pp. 137-141; Burch, M., Diehl, S., Timeradartrees: Visualizing Dynamic Compound Digraphs (2008) Proc. 10th Joint Eurographics/IEEE-VGTC Symp. Visualization (EuroVis); Callahan, J., Hopkins, D., Weiser, M., Shneiderman, B., An Empirical Comparison of Pie vs. Linear Menus (1988) Proc. Special Interest Group on Computer-Human Interaction Conf. Human Factors in Computing Systems, pp. 95-100; Carlis, J.V., Konstan, J.A., Interactive Visualization of Serial Periodic Data (1998) Proc. 11th Ann. ACM Symp. User Interface Software and Technology (UIST, pp. 29-38. , 98, pp; Carpano, M.-J., Automatic Display of Hierarchized Graphs for Computer-Aided Decision Analysis (1980) IEEE Trans. Systems, Man, and Cybernetics, SMC-10 (11), pp. 705-715. , Nov; Carpendale, S., Agarawala, A., Phyllotrees: Harnessing Natures Phyllotactic Patterns for Tree Layout (2004) Proc. IEEE Information Visualization Conf. (InfoVis '04), p. 3. , p. p; Cava, R.A., Luzzardi, P.R.G., Freitas, C.M.D.S., The Bifocal Tree: A Technique for the Visualization of Hierarchical Information Structures (2002) Proc. Workshop Human Factors in Computer Systems (IHC); Chuah, M.C., Dynamic Aggregation with Circular Visual Designs (1998) Proc. IEEE Information Visualization Conf. (InfoVis, pp. 35-43. , 98, pp; Cockburn, A., Revisiting 2D vs 3D Implications on Spatial Memory (2004) Proc. Fifth Conf. Australasian User Interface, pp. 25-31; Cugini, J., Piatko, C., Laskowski, S., Interactive 3D Visualization for Document Retrieval (1996) Proc. Workshop New Paradigms in Information Visualization and Manipulation, ACM Conf. Information and Knowledge Management (CIKM); Daisy 2003, , http://www.daisy.co.uk, Daisy Analysis Ltd, Nov. 2007; Dragicevic, P., Huot, S., SpiraClock: A Continuous and Non-Intrusive Display for Upcoming Events (2002) Proc. Extended Abstracts on Human Factors in Computing Systems (CHI '02), pp. 604-605; Draper, G., Livnat, Y., Riesenfeld, R., A Visual Query Language for Correlation Discovery and Management (2008) Proc. Second Ann. Visual and Iconic Language Conf. (VaIL '08), pp. 14-23; Draper, G.M., Riesenfeld, R.F., Interactive Fan Charts: A Space-Saving Technique for Genealogical Graph Exploration (2008) Proc. Eighth Ann. Workshop Technology for Family History and Genealogical Research; Draper, G.M., Riesenfeld, R.F., Who Votes for What? A Visual Query Language for Opinion Data (2008) IEEE Trans. Visualization and Computer Graphics, 14 (6), pp. 1197-1204. , Nov./Dec; Eades, P., Drawing Free Trees (1992) Bull. of the Inst. of Combinatorics and its Applications, pp. 10-36; Elmqvist, N., Stasko, J., Tsigas, P., DataMeadow: A Visual Canvas for Analysis of Large-Scale Multivariate Data (2007) Proc. IEEE Symp. Visual Analytics Science and Technology (VAST '07), 2, pp. 187-194. , Oct; Elmqvist, N., Tsigas, P., A Taxonomy of 3D Occlusion Management for Visualization (2008) IEEE Trans. Visualization and Computer Graphics, 14 (5), pp. 1095-1109. , Sept./Oct; Fitts, P.M., The Information Capacity of the Human Motor System in Controlling the Amplitude of Movement (1954) J. Experimental Psychology, pp. 381-391; Fitzmaurice, G., Khan, A., Pieké, R., Buxton, B., Kurtenbach, G., Tracking Menus (2003) Proc. 16th Ann. ACM Symp. User Interface Software and Technology (UIST '03), pp. 71-79; Foresti, S., Agutter, J., Livnat, Y., Moon, S., Erbacher, R., Visual Correlation of Network Alerts (2006) IEEE Computer Graphics and Applications, 26 (2), pp. 48-59. , Mar./Apr; Galloway, J., Simoff, S.J., Network Data Mining: Methods and Techniques for Discovering Deep Linkage between Attributes (2006) Proc. Third Asia-Pacific Conf. Conceptual Modelling (APCCM '06), pp. 21-32; Gross, M., Sprenger, T., Finger, J., Visualizing Information on a Sphere (1997) Proc. IEEE Information Visualization Conf. (InfoVis, pp. 11-16. , 97, pp; Grünbaum, B., Mathematical Challenges in Escher's Geometry (1985) M.C. Escher, pp. 53-67. , Art and Science, H.S.M. Coxeter, M. Emmer, R. Penrose, and M.L. Teuber, eds, pp, North Holland; Havre, S., Hetzler, E., Perrine, K., Jurrus, E., Miller, N., Interactive Visualization of Multiple Query Results (2001) Proc. IEEE Information Visualization Conf. (InfoVis '01), pp. 105-112; Hetzler, B., Whitney, P., Martucci, L., Thomas, J., Multi-Faceted Insight through Interoperable Visual Information Analysis Paradigms (1998), pp. 137-144. , 161P. Hoffman, G. Grinstein, K. Marx, I. Grosse, and E. Stanley, DNA Visual and Analytic Data Mining, Proc. Eighth Conf. Visualization, pp. 437-ff., 1997Holten, D., Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data (2006) Proc. IEEE Information Visualization Conf. (InfoVis '06), pp. 741-748; Hong, J.Y., DAndries, J., Richman, M., Westfall, M., Zoomol-ogy: Comparing Two Large Hierarchical Trees (2003) Proc. Poster Compendium of IEEE Information Visualization; Howell, M., Filelight, , http://www.methylblue.com/filelight, Aug. 2007; Huot, S., Lecolinet, E., SpiraList: A Compact Visualization Technique for One-Handed Interaction with Large Lists on Mobile Devices (2006) Proc. Fourth Nordic Conf. Human-Computer Interaction (NordiCHI '06), pp. 445-448; Inselberg, A., Dimsdale, B., Parallel Coordinates: A Tool for Visualizing Multi-Dimensional Geometry (1990) Proc. IEEE Visualization Conf, pp. 361-378; Isenberg, P., Carpendale, S., Interactive Tree Comparison for Co-Located Collaborative Information Visualization (2007) IEEE Trans. Visualization and Computer Graphics, 13 (6), pp. 1232-1239. , Nov./Dec; Ishihara, M., Misue, K., Tanaka, J., Ripple Presentation for Tree Structures with Historical Information (2006) Proc. Asia Pacific Symp. Information Visualization (APVIS '06), pp. 153-160; Jankun-Kelly, T., Ma, K.-L., Moiregraphs: Radial Focus+Con-text Visualization and Interaction for Graphs with Visual Node (2003) Proc. IEEE Information Visualization Conf. (InfoVis '03), pp. 59-66; Jeong, C.-S., Pang, A., Reconfigurable Disc Trees for Visualizing Large Hierarchical Information Space (1998) Proc. IEEE Information Visualization Conf. (InfoVis, pp. 19-25. , 98, pp; Johnson, B., Shneiderman, B., Tree-Maps: A Space-Filling Approach to the Visualization of Hierarchical Information Structures (1991) Proc. Second IEEE Conf. Visualization, pp. 284-291; Johnson, B.S., Treemaps: Visualizing Hierarchical and Categorical Data, (1993), PhD thesis, Univ. of MarylandKandogan, E., Visualizing Multi-Dimensional Clusters, Trends, and Outliers Using Star Coordinates (2001) Proc. Seventh ACM SIGKDD Int'l Conf. Knowledge Discovery and Data Mining, pp. 107-116; Keim, D.A., Information Visualization and Visual Data Mining (2002) IEEE Trans. Visualization and Computer Graphics, 8 (1), pp. 1-8. , Jan.-Mar; Keim, D.A., Mansmann, F., Schneidewind, J., Schreck, T., Monitoring Network Traffic with Radial Traffic Analyzer (2006) Proc. IEEE Symp. Visual Analytics Science and Technology (VAST '06), pp. 123-128; Keim, D.A., Schneidewind, J., Sips, M., CircleView: A New Approach for Visualizing Time-Related Multidimensional Data Sets (2004) Proc. Working Conf. Advanced Visual Interfaces (AVI '04), pp. 179-182; Kurtenbach, G., Buxton, W., The Limits of Expert Performance Using Hierarchic Marking Menus (1993) Proc. Computer-Human Interaction (CHI, pp. 482-487. , 93, pp; Lamping, J., Rao, R., Laying Out and Visualizing Large Trees using a Hyperbolic Space (1994) Proc. Seventh Ann. ACM Symp. User Interface Software and Technology (UIST, pp. 13-14. , 94, pp; Lamping, J., Rao, R., The Hyperbolic Browser: A Focus+Con-text Technique Based on Hyperbolic Geometry for Visualizing Large Hierarchies (1996) J. Visual Languages and Computing, 7, pp. 33-55; Lamping, J., Rao, R., Pirolli, P., A Focus+Context Technique Based on Hyperbolic Geometry for Visualizing Large Hierarchies (1995) Proc. Special Interest Group on Computer-Human Interaction (SIGCHI) Conf. One Human Factors in Computing Systems, pp. 401-408; Livnat, Y., Agutter, J., Moon, S., Erbacher, R.F., Foresti, S., A Visualization Paradigm for Network Intrusion Detection (2005) Proc. IEEE Workshop Information Assurance and Security, pp. 30-37; Livnat, Y., Agutter, J., Moon, S., Foresti, S., Visual Correlation for Situational Awareness (2005) Proc. IEEE Information Visualization Conf. (InfoVis '05), pp. 95-102; Mackinlay, J.D., Robertson, G.G., DeLine, R., Developing Calendar Visualizers for The Information Visualizer (1994) Proc. Seventh Ann. ACM Symp. User Interface Software and Technology (UIST, pp. 109-118. , 94, pp; Merriam-Webster, , http://www.m-w.com, Merriam-Webster, Inc, Online Dictionary, Aug. 2007; Mohammadi-Aragh, M.J., Jankun-Kelly, T., Moiretrees: Visualization and Interaction for Multi-Hierarchical Data (2005) Proc. EuroGraphics - IEEE VGTC Symp. Visualization, pp. 59-66. , K.W. Brodlie, D.J. Duke, and K.I. Joy, eds, pp; Munzner, T., H3: Laying Out Large Directed Graphs in 3D Hyperbolic Space (1997) Proc. IEEE Information Visualization Conf. (InfoVis, pp. 2-10. , 97, pp; Nightingale, F., (1858) Notes on Matters Affecting the Health, Efficiency, and Hospital Administration of the British Army: Founded Chiefly on the Experience of the Late War, , Harrison and Sons; Northway, M.L., (1967) A Primer of Sociometry, , second ed. Univ. of Toronto Press; W. Playfair, The Statistical Breviary; Shewing, on a Principle Entirely New, the Resources of Every State and Kingdom in Europe. Wallis, 1801Pousman, Z., Stasko, J., A Taxonomy of Ambient Information Systems: Four Patterns of Design (2006) Proc. Working Conf. Advanced Visual Interfaces (AVI '06), pp. 67-74; Purchase, H., Which Aesthetic Has the Greatest Effect on Human Understanding? (1997) Proc. Fifth Int'l Symp. Graph Drawing (GD, pp. 248-261. , 97, pp; Reggiani, M.G., Marchetti, F.E., A Proposed Method for Representing Hierarchies (1989) IEEE Trans. Systems, Man, and Cybernetics, 18 (1), pp. 2-8. , Jan; Robertson, G.G., Mackinlay, J.D., Card, S.K., Cone Trees: Animated 3D Visualizations of Hierarchical Information (1991) Proc. Special Interest Group on Computer-Human Interaction (SIGCHI) Conf. One Human Factors in Computing Systems, pp. 189-194; Rubine, D., Specifying Gestures by Example (1991) Proc. ACM SIGGRAPH, pp. 329-337. , 91, pp; Salton, G., Allan, J., Buckley, C., Singhal, A., Automatic Analysis, Theme Generation, and Summarization of MachineReadable Texts (1994) Science, 264 (5164), pp. 1421-1426; Spence, I., No Humble Pie: The Origins and Usage of a Statistical Chart (2005) J. Educational and Behavioral Statistics, 30 (4), pp. 353-368; Spence, R., (2001) Information Visualization, pp. 85-88. , first ed, pp, ACM Press; Spoerri, A., RankSpiral: Toward Enhancing Search Results Visualizations (2004) Proc. IEEE Information Visualization Conf. (InfoVis); Stasko, J., Zhang, E., Focus+Context Display and Navigation Techniques for Enhancing Radial, Space-Filling Hierarchy Visualizations (2000) Proc. IEEE Information Visualization Conf. (InfoVis '00), pp. 57-65; Suntinger, M., Obweger, H., Schiefer, J., Gröller, M.E., The Event Tunnel: Interactive Visualization of Complex Event Streams for Business Process Pattern Analysis (2008) Proc. IEEE Pacific Visualization Symp. (PacificVIS '08), pp. 111-118. , Mar; Tavanti, M., Lind, M., 2D vs. 3D, Implications on Spatial Memory (2001) Proc. IEEE Information Visualization Conf. (InfoVis '01), pp. 139-145; Teoh, S.T., Ma, K.-L., RINGS : A Technique for Visualizing Large Hierarchies (2002) Proc. Int'l Symp. Graph Drawing, pp. 268-275; Visual Thesaurus, , http://www.visualthesaurus.com, Thinkmap, Inc, Aug. 2007; Tominski, C., Abello, J., Schumann, H., Axes-Based Visualizations with Radial Layouts (2004) Proc. ACM Symp. Applied Computing (SAC '04), pp. 1242-1247; Torres, R.S., Silva, C.G., Medeiros, C.B., Rocha, H.V., Visual Structures for Image Browsing (2003) Proc. 12th Int'l Conf. Information and Knowledge Management (CIKM '03), pp. 49-55; Vliegen, R., van Wijk, J.J., van der Linden, E.-J., Visualizing Business Data with Generalized Treemaps (2006) Proc. IEEE Information Visualization Conf. (InfoVis '06), pp. 789-796; Vogel, H., A Better Way to Construct the Sunflower Head (1979) Math. Biosciences, 44, pp. 179-189; Weber, M., Alexa, M., Müller, W., Visualizing Time-Series on Spirals (2001) Proc. IEEE Information Visualization Conf. (InfoVis '01), pp. 7-13; Wilkinson, L., (1999) The Grammar of Graphics (Statistics and Computing), , first ed. Springer; Wu, Y., Takatsuka, M., Visualizing Multivariate Network on the Surface of a Sphere (2006) Proc. Asia-Pacific Symp. Information Visualization (APVIS); Yang, J., Ward, M.O., Rundensteiner, E.A., InterRing: An Interactive Tool for Visually Navigating and Manipulating Hierarchical Structures (2002) Proc. IEEE Information Visualization Conf. (InfoVis '02), pp. 77-84; Yee, K.-P., Fisher, D., Dhamija, R., Hearst, M., Animated Exploration of Dynamic Graphs with Radial Layout (2001) Proc. IEEE Information Visualization Conf. (InfoVis '01), pp. 43-50; Yi, J.S., ah Kang, Y., Stasko, J.T., Jacko, J.A., Toward a Deeper Understanding of the Role of Interaction in Information Visualization (2007) IEEE Trans. Visualization and Computer Graphics, 13 (6), pp. 1224-1231. , Nov./Dec; Yip, B., Goyette, S., Madden, C., Visualising Internet Traffic Data with Three-Dimensional Spherical Display (2005) Proc. Asia-Pacific Symp. Information Visualization (APVis '05), pp. 153-158","Draper, G. M.; Brigham Young University Hawaii, Department of Computer and Information Sciences, BYUH 1956, 55-220 Kulanui St, Laie, HI 96762, United States; email: gmd2@byuh.edu",,,,,,,,10772626,,ITVGE,,English,IEEE Trans Visual Comput Graphics,Conference Paper,Scopus,2-s2.0-68549125210,,
,1,,"Mushenski, C.B.",Analysis and modeling of servo motor controls in military vehicle control systems update,2009,SAE International Journal of Commercial Vehicles,1,1,,25,40,,,10.4271/2008-01-0774,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953199788&partnerID=40&md5=758a7ef38fee4f844dc06639ac9b3520,"PM-MGV Common Systems, U.S.Army, TACOM-Warren, United States","Mushenski, C.B., PM-MGV Common Systems, U.S.Army, TACOM-Warren, United States","This paper covers further analysis of various concepts that are used to implement Servo Motor Control in military vehicular control systems. A survey of existing ""hard real-time"" servo controls and applicable design patterns is presented. These design patterns along with their critical parameters are identified and described. Potential solutions are created from combinations of design patterns and parameter choices. The solutions are modeled with plausible parameters to identify parameter sensitivities. As the modeling progresses, the solutions frequency responses, sensitivities and functional performance are also evaluated. This update paper concludes with a summary of architectural guidelines.",,Analysis and modeling; Analysis of various; Critical parameter; Design Patterns; Functional performance; Hard real-time; Parameter choice; Parameter sensitivities; Potential solutions; Servo control; Servo motor control; Vehicular control; Control system synthesis; Control systems; Design; Frequency response; Military vehicles; Control system analysis,,,,,,"Führer, T., Müller, B., Dieterle, W., Hartwich, F., Hugel, R., Walther, M., Time Triggered Communication On CAN; TTA Group, TTP - Frequently Asked QuestionsWijnberg, J.H., (2002) Prototyping the Real-time'HOTnet' Network Protocol On Ethernet, , April; Redell, O., (2003) Response Time Analysis For Implementation of Distributed Control Systems; Kraut, H., (2003) Signalverarbeitung Mittels Eines Neuronalen Netzwerkes Für Einen Smart Sensor, , February; CANopen Product Guide 2003; CIADecotignie, J.-D., (2005) Real-Time System II Real-Time Networking Ethernet; Janssen, D., (2005) Als Antriebsbus Geeignet, Weil, , March; Nilsson, J., Real-Time Control Systems With Delays; IAONA Handbook Industrial Ethernet In Third Addition, , Industrial Automation Open Networking Alliance; Johnson, D., US Army On Rotorcraft; Lincoln, B., (2003) Jitter Compensation In Digital Control System, , March; Loay, K.L., Bugmann, G., (2003) Compensating Intermittent Delay Visual Feedback In Robot Navigation; Mauerer, W., (2004) Linux Kernelarchitekur - Konzepte, Stukturen Und Algorithmen Von Kernel 2.6; Torre, A.J., Mushenski, C., (2006) SAE 2006-01-1170: Analysis and Modeling of Servo Motor Control In Military Vehicle Control Systems, , April","Mushenski, C. B.; PM-MGV Common Systems, U.S.Army, TACOM-WarrenUnited States",,,,,,,,1946391X,,,,English,SAE Int. J. Commer. Veh.,Article,Scopus,2-s2.0-77953199788,,
,v,,"Guéhéneuc, Y.-G., Guyomarc'h, J.-Y., Sahraoui, H.",Improving design-pattern identification: A new approach and an exploratory study,2009,Software Quality Journal,18,1,,145,174,,9,10.1007/s11219-009-9082-y,http://www.scopus.com/inward/record.url?eid=2-s2.0-72549091441&partnerID=40&md5=bb08eaeac9f5c65a86a96d2411a8c39a,"Ptidej Team, École Polytechnique de Montréal, Montréal, QC, Canada; GEODES, DIRO, Université de Montréal, Montréal, QC, Canada","Guéhéneuc, Y.-G., Ptidej Team, École Polytechnique de Montréal, Montréal, QC, Canada; Guyomarc'h, J.-Y., GEODES, DIRO, Université de Montréal, Montréal, QC, Canada; Sahraoui, H., GEODES, DIRO, Université de Montréal, Montréal, QC, Canada","The identification of occurrences of design patterns in programs can help maintainers to understand the program design and implementation. It can also help them to make informed changes. Current identification approaches are limited to complete occurrences, are time- and resource-consuming, and lead to many false positives. We propose to combine a structural and a numerical approach to improve the identification of complete and incomplete occurrences of design patterns. We develop a structural approach using explanation-based constraint programming and we enhance this approach using experimentally built numerical signatures. We show that the use of numerical signatures improves the identification of complete and incomplete occurrences in terms of performance and precision. © Springer Science+Business Media, LLC 2009.",Design patterns; Explanation-based constraint programming; Exploratory study; Metrics; Program understanding,Constraint programming; Design Patterns; Exploratory studies; Metrics; Program understanding; Computer programming; Constraint theory; Java programming language,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings of the 16th Conference on Automated Software Engineering (ASE), pp. 166-173. , In D. Richardson, M. Feather, & M. Goedicke (Eds.), November 2001, IEEE Computer Society Press; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th International Workshop on Program Comprehension, pp. 153-160. , In S. Tilley & G. Visaggio (Eds.), IEEE Computer Society Press; Bansiya, J., (1998) Automating Design-Pattern Identification. Dr. Dobb's Journal, , http://www.ddj.com/184410578; Bayardo Jr., R.J., Miranker, D.P., A complexity analysis of space-bounded learning algorithms for the constraint satisfaction problem (1996) Proceedings of the 13th national conference on artificial intelligence, pp. 298-304. , D., Weld, B., Clancey, AAAI Press, The MIT Press; Beyer, D., Noack, A., Lewerentz, C., Efficient relational calculation for software analysis (2005) Transactions on Software Engineering, 31 (2), pp. 137-149; Bieman, J., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) Proceedings of the 9th International Software Metrics Symposium, pp. 40-49. , In M. Berry & W. Harrison (Eds.), IEEE Computer Society Press; Boehm, B., Software engineering (1976) IEEE Transactions on Computers, 25 (12), pp. 1226-1241; Briand, L., Devanbu, P., Melo, W., An investigation into coupling measures for C++ (1997) Proceedings of the 19th International Conference on Software Engineering, pp. 412-421. , In Adrion W. R. (Ed.), ACM Press; Briand, L.C., Daly, J.W., Wüst, J.K., A unified framework for cohesion measurement (1997) Proceedings of the 4th International Software Metrics Symposium, pp. 43-53. , In S. L. Pfleeger & L. Ott (Eds.), IEEE Computer Society Press; Brown, K., Design reverse-engineering and automated design pattern detection in Smalltalk (1996) Technical Report TR-96-07, , Department of Computer Science, University of Illinois at Urbana-Champaign; Chidamber, S.R., Kemerer, C.F., A metrics suite for object-oriented design (1993) Technical Report E53-315, , MIT Sloan School of Management; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceeding of 30th Conference on Technology of Object-Oriented Languages and Systems, pp. 18-32. , In D. Firesmith (Ed.), IEEE Computer Society Press; Corbi, T.A., Program understanding: Challenge for the 1990's (1989) IBM Systems Journal, 28 (2), pp. 294-306; Eppstein, D., Subgraph isomorphism in planar graphs and related problems (1995) Proceedings of the 6th Annual Symposium on Discrete Algorithms, pp. 632-640. , In K. Clarkson (Ed.), ACM Press; Fabry, J., Mens, T., Language-independent detection of object-oriented design patterns (2004) Computer Languages, Systems, and Structures, 30 (1-2), pp. 21-33; Gamma, E., Eggenschwiler, T., (1998) JHotDraw, , http.members.pingnet.ch/gamma/JHD-5.1.zip; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns-Elements of Reusable Object-Oriented Software, , (1st ed.). Addison-Wesley; Guéhéneuc, Y.-G., Albin-Amiot, H., Using design patterns and constraints to automate the detection and correction of inter-class design defects (2001) Proceedings of the 39th Conference on the Technology of Object-Oriented Languages and Systems (TOOLS USA), pp. 296-305. , In Q. Li, R. Riehle, G. Pour, & B. Meyer (Eds.), IEEE Computer Society Press; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: Putting icing on the UML cake (2004) Proceedings of the 19th Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), pp. 301-314. , In D. C. Schmidt (Ed.), ACM Press; Guéhéneuc, Y.-G., Antoniol, G., DeMIMA: A multi-layered framework for design pattern identification (2008) Transactions on Software Engineering (TSE), 34 (5), pp. 667-684; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) Proceedings of the 1st IJCAI Workshop on Modeling and Solving Problems with Constraints, pp. 57-64. , In C. Bessière (Ed.), AAAI Press; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering (WCRE), pp. 172-181. , In E. Stroulia & A. de Lucia, (Eds.), IEEE Computer Society Press; Heuzeroth, D., Holl, T., Löwe, W., Combining static and dynamic analyses to detect interaction patterns (2002) Proceedings the 6th World Conference on Integrated Design and Process Technology, , In H. Ehrig, B. J. Krämer, & A. Ertas (Eds.), Society for Design and Process Science; Hitz, M., Montazeri, B., Measuring coupling and cohesion in object-oriented systems (1995) Proceedings of the 3rd Intermational Symposium on Applied Corporate Computing, pp. 25-27. , Texas A& M University; Jahnke, J.H., Zündorf, A., Rewriting poor design patterns by good design patterns (1997) Proceedings the 1st ESEC/FSE Workshop on Object-Oriented Reengineering, , In S. Demeyer & H. C. Gall (Eds.), Distributed Systems Group, Technical University of Vienna. TUV-1841-97-10; Junker, U., (2001) QUICKXPLAIN: Detection for Arbitrary Constraint Propagation Algorithms, , Technical report, Ilog SA; Jussien, N., Barichard, V., The PaLM system: Explanation-based constraint programming (2000) Proceedings of TRICS: Techniques for Implementing Constraint Programming Systems, pp. 118-133. , In N. Beldiceanu, W. Harvey, M. Henz, F. Laburthe, E. Monfroy, T. Müller, L. Perron, & C. Schulte (Eds.), School of Computing, National University of Singapore, Singapore. TRA9/00; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , In D. Garlan & J. Kramer (Eds.), ACM Press; Kohavi, R., A study of cross-validation and bootstrap for accuracy estimation and model selection (1995) In Proceedings of the 14th International Joint Conference on Artificial Intelligence, pp. 1137-1145. , Morgan Kaufmann; Koskinen, J., (2004) Software Maintenance Costs, , http://users.jyu.fi/~koskinen/smcosts.htm; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , In L. M. Wills & I. Baxter (Eds.), IEEE Computer Society Press; Labuthe, F., Choco: Implementing a CP kernel (2000) Proceedings of the 1st Workshop on Techniques for Implementing Constraint Programming Systems, , CP'00 at Singapore; Lorenz, M., Kidd, J., (1994) Object-oriented software metrics: A practical approach, , (1st ed.). Prentice-Hall; Ng, K.-Y., Guéhéneuc, Y.-G., Identification of behavioral and creational design patterns through dynamic analysis (2007) Proceedings of the 3rd International Workshop on Program Comprehension Through Dynamic Analysis (PCODA), pp. 34-42. , In A. Zaidman, A. Hamou-Lhadj, & O. Greevy (Eds.), Delft University of Technology. TUD-SERG-2007-022; Quilici, A., Yang, Q., Woods, S., Applying plan recognition algorithms to program understanding (1997) Journal of Automated Software Engineering, 5 (3), pp. 347-372; Scheglov, K., Shackelford, J.-M.P., (2004) Eclipse Profiler, , http://eclipsecolorer.sourceforge.net/index_profiler.html; Schiex, T., Verfaillie, G., Nogood recording for static and dynamic constraint satisfaction problems (1994) International Journal of Artificial Intelligence Tools, 3 (2), pp. 187-207; Spinellis, D., (2003) Code Reading: The open Source Perspective, , (1st ed.). Addison Wesley; Stone, M., Cross-validatory choice and assessment of statistical predictions (1974) Journal of the Royal Statistical Society Series B: Statistical Methodology, 36, pp. 111-147; Straw, G.B., (2004) Detecting Design Pattern use in Software Designs, , Master's thesis, Colorado State University; Tegarden, D.P., Sheetz, S.D., Monarchi, D.E., A software complexity model of object-oriented systems (1995) Decision Support Systems, 13 (3-4), pp. 241-262; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) Transactions on Software Engineering, 32 (11), pp. 896-909; Wilde, N., Faster reuse and maintenance using software reconnaissance (1994) Technical Report CSE-301, , Software Engineering Research Center; Witten, I.H., Frank, E., (1999) Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations, , (1st ed.). Morgan Kaufmann; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of the 26th Conference on the Technology of Object-Oriented Languages and Systems, pp. 112-124. , In J. Gil (Ed.), IEEE Computer Society Press","Guéhéneuc, Y.-G.; Ptidej Team, École Polytechnique de Montréal, Montréal, QC, Canada; email: yann-gael.gueheneuc@polymtl.ca",,,,,,,,9639314,,,,English,Softw. Qual. J.,Article,Scopus,2-s2.0-72549091441,,
,v,,"He, C., Li, Z., He, K.",Identification and extraction of design pattern information in Java program,2008,"Proc. 9th ACIS Int. Conf. Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2008 and 2nd Int. Workshop on Advanced Internet Technology and Applications",,,4617473,828,834,,,10.1109/SNPD.2008.29,http://www.scopus.com/inward/record.url?eid=2-s2.0-57749197821&partnerID=40&md5=7a28f717af18d69c0ea0a04b3963e378,"State Key Laboratory of Software Engineering, Wuhan University, China; Computer School of Science and Engineering, Wuhan Institute of Technology, China","He, C., State Key Laboratory of Software Engineering, Wuhan University, China, Computer School of Science and Engineering, Wuhan Institute of Technology, China; Li, Z., Computer School of Science and Engineering, Wuhan Institute of Technology, China; He, K., State Key Laboratory of Software Engineering, Wuhan University, China","Instantiation information of the design pattern which exists in the design model is always lost in the program, so the comprehension and reversion of the program become very difficult. We have proposed an approach to identify the design pattern information based on Java annotations. This approach defines the meta model of the design pattern, and uses Java annotation technology to annotate these meta information in the program. Two typical applications of this approach are presented: (i) visualization of the pattern instantiation information in the program; (ii) automatic checking of the structural properties of the pattern instance. These two Examples are used to illustrate this approach. © 2008 IEEE.",,Applications; Artificial intelligence; Computer programming languages; Computer software; Design; Information retrieval systems; Internet; Real time systems; Software engineering; Technical presentations; Design models; Design patterns; Meta informations; Meta models; Pattern instantiations; Typical applications; Java programming language,,,,,,"Gamma, E., Helm, R., Vlissides, J., (2001) Design Patterns: Elements of Reusable Object Oriented Software, , TOKYO: SOFT BANK PUBLISHING; HE Cheng-Wan, HE Ke-Qing. A Role-Based Approach to Design Pattern Modeling and Implementation. Journal of Software, 17, No. 4, April 2006, pp. 68$5T□Guennec, A.L., Sunye, G., Jezequel, J.M., Precise Modeling of Design Patterns (2000) Proceeding of the Unified Modeling Language 2000 (UML2000). UK: LNCS Springer, pp. 482-496. , Evans, A, Kent, S, Selic, B, eds; Jing D. UML Extensions for Design Pattern Compositions. Journal of Object Technology, 2002, 1(5): 149-161. http://www.jot.fm/issues/issue 200211/article3(2001) Unified Modeling Language Specification, , http://www.omg.org, Version 1.4; Dong, J., Yang, S., Visualizing Design Patterns With A UML Profile (2003), Technical Report UTDCS-11-03, Computer Science Department, University of Texas at DallasSanada, Y., Adams, R., Representing Design Patterns and Frameworks in UML Towards a Comprehensive Approach[J] (2002) JOURNAL OF OBJECT TECHNOLOGY, 1 (2), pp. 143-154; Riehle, D., Describing and Composing Patterns Using Role Diagrams (1996) Proceedings of the 1996 Ubilab Conference, pp. 137-152; Lauder, A., Kent, S., Precise Visual Specification of Design Patterns (1998) ECOOP, pp. 114-134; The Java Tutorials: Annotaions, , http://java.sun.com/docs/books/tutorial/java/javaOO/annotations.html; Object Constraint Language Specification, , http://www.omg.org/technology/documents/formal/ocl.htm, Object Management Group, Inc; Yacoub, S.M., Hany H. Ammar: UML Support for Designing Software Systems as a Composition of Design Patterns. In UML 2001 - The Unified Modeling Language. Modeling Languages, Concepts, and Tools, pages 149-165, Springer (2001) LNCS, 2185; Mapelsden, D., John Hosking, J.G., Design Pattern Modelling and Instantiation using DPML (2002) Proceedings of the Tools, , Pacific, CRPIT Press; Torchiano, M., Documenting Pattern Use in Java Programs (2002) IEEE Int. Conference on Software Maintenance (ICSM, , Montreal; Meffert, K., Supporting Design Patterns with Annotations (2006) 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems (ECBS'06), pp. 437-445","He, C.; State Key Laboratory of Software Engineering, Wuhan UniversityChina; email: hechengwan@hotmail.com",,Int. Association for Computer and Information Science (ACIS);National Electronics and Computer Technology Center (NECTEC);Commission of Higher Education (CHE);Thailand Convention and Exhibition Bureau (TCEB),,"9th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, SNPD 2008 in conjunction with 2nd International Workshop on Advanced Internet Technology and Applications, AITA 2008",6 August 2008 through 8 August 2008,Phuket,74795,,9780769532639,,,English,"Proc. ACIS Int. Conf. Softw. Eng., Artif. Intell., Networking Parallel/Distrib. Comput., SNPD conjunction Int. Workshop Adv.",Conference Paper,Scopus,2-s2.0-57749197821,,
,??,,"Fülöp, L.J., Hegedus, P., Ferenc, R., Gyimóthy, T.",Towards a benchmark for evaluating reverse engineering tools,2008,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,4656431,335,336,,2,10.1109/WCRE.2008.18,http://www.scopus.com/inward/record.url?eid=2-s2.0-57749202034&partnerID=40&md5=39488844467c2324ceeafda51d94422c,"University of Szeged, Department of Software Engineering","Fülöp, L.J., University of Szeged, Department of Software Engineering; Hegedus, P., University of Szeged, Department of Software Engineering; Ferenc, R., University of Szeged, Department of Software Engineering; Gyimóthy, T., University of Szeged, Department of Software Engineering","In this paper we present work in progress towards implementing a benchmark called BEFRIEND (BEnchmark For Reverse engInEering tools workiNg on source coDe), with which the outputs of reverse engineering tools can be evaluated and compared easily and efficiently. Such tools are e.g. design pattern miners, duplicated code detectors and coding rule violation checkers. BEFRIEND supports different kinds of tool families, programming languages and software systems, and it enables the users to define their own evaluation criteria. © 2008 IEEE.",Benchmark; Reverse engineering tools; Tool evaluation,Benchmark; Coding rules; Design patterns; Evaluation criterions; Programming languages; Software systems; Work in progresses; Computer software; Engineering; Programming theory; Reengineering; Reverse engineering,,,,,,"Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and Evaluation of Clone Detection Tools (2007) IEEE Transactions on Software Engineering, 33, pp. 577-591; Fülöp, L.J., Ferenc, R., Gyimóthy, T., Towards a Benchmark for Evaluating Design Pattern Miner Tools (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering (CSMR 2008), , IEEE Computer Society, Apr; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection (2006) First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE'06), , October; The Trac, , http://trac.edgewall.org, Home; Wagner, S., Jurjens, J., Koller, C., Trischberger, P., (2005) Comparing bug finding tools with reviews and tests, pp. 40-55. , Proceedings of 17th International Conference on Testing of Communicating Systems TestCom'05, Springer","Fülöp, L. J.; University of Szeged, Department of Software EngineeringHungary; email: flajos@inf.u-szeged.hu",,Reengineering Forum;Fonds de la Recherche Scientifique;Universiteit Antwerpen;Universita degli Studi del Sannio,,"15th Working Conference on Reverse Engineering, WCRE 2008",15 October 2008 through 18 October 2008,Antwerp,74521,10951350,769534295,9780769534299,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-57749202034,
,4,,"Díaz, P., Aedo, I., Rosson, M.B.",Visual representation of web design patterns for end-users,2008,Proceedings of the Workshop on Advanced Visual Interfaces AVI,,,,408,411,,6,10.1145/1385569.1385645,http://www.scopus.com/inward/record.url?eid=2-s2.0-57349167474&partnerID=40&md5=93ab86b8b64cfffbfac925639bf44577,"Laboratorio DEI, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Madrid, Spain; Information Sciences and Technology, Pennsylvania State University, State College, PA, United States","Díaz, P., Laboratorio DEI, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Madrid, Spain; Aedo, I., Laboratorio DEI, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Madrid, Spain; Rosson, M.B., Information Sciences and Technology, Pennsylvania State University, State College, PA, United States","In this paper, we discuss the use of visual representations of web design patterns to help end-users and casual developers to identify the patterns they can apply in a specific project. The main goal is to promote design knowledge reuse by facilitating the identification of the right patterns, taking into account that these users have little or no knowledge about web design, and certainly not about design patterns, and that each pattern might include some trade-offs users should consider to make more rational decisions. Copyright 2008 ACM.",Design patterns; Goal-oriented design; Web design,World Wide Web; Design knowledge reuses; Design patterns; Goal-oriented design; Visual representations; Web design; Web designs; Design,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional; Alexander, C., (1979) The timeless way of building, , Oxford University Press, New York; van Duyne, D.K., Landay, J.A., Hong, J.I., (2002) The design of sites, , Addison-Wesley; Blakley, B., Heath, C., Security design patterns (2004), Technical report. The Open GroupGraham, I., (2003) A pattern language for web usability, , Addison-Wesley. Tavel, P; Bolchini, D., (2002) Hypermedia Design Patterns Repository, , http://www.designpattern.lu.unisi.ch; van Melie, M., (2006) Web design patterns, , http://www.welie.com/patterns; Chung, E.S., Hong, J.I., Lin, J., Prabaker, M.K., Landay, J.A., Liu, A.L., (2004) Development and evaluation, , of; Chung, L., Nixon, B.A., Yu, A., Mylopoulos, J., (2000) Non-Functional Requirements in Software Engineering, , Kluwer Academic Publishers; Borchers, J.O., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons; Tidwell, J., (2006) UI Patterns and Techniques, , http://timetripper.com/uipatterns; Kampffmeyer, H., Zschaler, S., Finding the Pattern You Need: The Design Pattern Intent Ontology (2007) LNCS, 4735, pp. 211-225. , Model Driven Engineering Languages and Systems; Weiss, M., Pattern-Driven Design of Agent Systems: Approach and Case Study (2003) Proc. of CATSE; dino2.dei.inf.uc3m.es/hyperpatternsMontero, S., Díaz, P., Aedo, I., From requirements to implementations: A model-driven approach for web development (2007) European Journal of Information Systems, 16 (4), pp. 407-419","Díaz, P.; Laboratorio DEI, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Madrid, Spain; email: pdp@inf.uc3m.es",,DMI - Universita di Salerno;Sapienza Universita di Roma;Dipartimento ICT;AICA;CNR;Microsoft,,"Working Conference on Advanced Visual Interfaces, AVI 08",28 May 2008 through 30 May 2008,Naples,74431,,,,,English,Proc Workshop Adv Visual Interfaces,Conference Paper,Scopus,2-s2.0-57349167474,,
,4,,"Ramirez, A.J., Cheng, B.H.C.",Design patterns for monitoring adaptive ULS systems,2008,"International Conference on Software Engineering - Proceedings of the 2nd International Workshop on Ultra-Large-Scale Software-Intensive Systems, ULSSIS'08",,,,69,72,,3,10.1145/1370700.1370719,http://www.scopus.com/inward/record.url?eid=2-s2.0-57349195117&partnerID=40&md5=3c64963f6d9ddde13be16a014b7c2c4d,"Michigan State University, Department of Computer Science and Engineering, East Lansing, MI 48824, United States","Ramirez, A.J., Michigan State University, Department of Computer Science and Engineering, East Lansing, MI 48824, United States; Cheng, B.H.C., Michigan State University, Department of Computer Science and Engineering, East Lansing, MI 48824, United States","As applications grow in size and complexity, and computing infrastructure continues to evolve, it is increasingly difficult to build a system that satisfies all requirements and constraints that might arise during its lifetime. As a result, there is increasing need for the software to adapt to new requirements and environmental conditions after the software has been deployed. Autonomic computing refers to a system that monitors itself based on high-level objectives and achieves, with minimal human guidance, self-management, and self-configuration. While progress has been made recently in applying rigorous development techniques to autonomic software, self-monitoring has received little attention. This paper describes a preliminary investigation into identifying design patterns associated with the self-monitoring aspects of autonomic computing systems. Copyright 2008 ACM.",Autonomic computing; Modeling; Monitoring,Autonomic computing; Computing infrastructures; Design patterns; Development techniques; Environmental conditions; Human guidances; Life-times; Modeling; Self managements; Arsenic; Java programming language; Large scale systems; Software engineering; Technical presentations; Computer systems,,,,,,"http://www.cern.ch/lcg, LHC computing grid projectAndreozzi, S., Bortoli, N.D., Fantinel, S., Ghiselli, A., Rubini, G.L., Tortone, G., Vistoli, M.C., Gridice: A monitoring service for grid systems (2005) Future Gener. Comput. Syst, 21 (4), pp. 559-571; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley Professional, January; Garlan, D., Schmerl, B., Chang, J., Using gauges for architecture-based monitoring and adaptation (2001) Working Conference on Complex and Dynamic Systems Architecture, , Brisbane, Australia; Goldsby, H.J., Cheng, B.H.C., McKinley, P.K., Knoester, D.B., Ofria, C.A., Digital evolution of behavioral models for autonomic systems (2008) To appear in: ICAC'08: Proceedings of the 5th IEEE International Conference on Autonomic Computing; Huang, A.-C., Garlan, D., Schmerl, B., Rainbow: Architecture-based self-adaptation with reusable infrastructure (2004) ICAC '04: Proceedings of the First International Conference on Autonomic Computing, , IEEE Computer Society; Kephart, J., Chess, D., The vision of autonomic computing (2003) IEEE Computer, 36 (41-50); Kircher, M., Jain, P., (2004) Pattern-Oriented, Software Architecture: Patterns for Resource Management, , John Wiley & Sons; M. L. Massie, B. N. Chun, and D. E. Culler. The ganglia distributed monitoring system: Design, implementation and experienceZhang, J., Cheng, B.H.C., Model-based development of dynamically adaptive software (2006) ICSE '06: Proceeding of the 28th international conference on Software engineering, pp. 371-380. , New York, NY, USA, ACM Press","Ramirez, A. J.; Michigan State University, Department of Computer Science and Engineering, East Lansing, MI 48824, United States; email: ramir105@cse.msu.edu",,,,"2nd International Workshop on Ultra-Large-Scale Software-Intensive Systems, ULSSIS'08",10 May 2008 through 11 May 2008,Leipzig,74447,,9781605580265,,,English,"Int. Conf. Softw. Eng. - Proc. Int. Workshop on Ultra-Large-Scale Softw.-Intensive Syst., ULSSIS",Conference Paper,Scopus,2-s2.0-57349195117,,
,4,,"Rubart, J.",Hypermedia design patterns,2008,"HYPERTEXT'08: Proceedings of the 19th ACM Conference on Hypertext and Hypermedia, HT'08 with Creating'08 and WebScience'08",,,,243,244,,1,10.1145/1379092.1379146,http://www.scopus.com/inward/record.url?eid=2-s2.0-57349190110&partnerID=40&md5=c46b3d370ac35953ecf2b9183d1597ae,"Arvato Services, Gütersloh, Germany","Rubart, J., Arvato Services, Gütersloh, Germany","This poster aims at motivating the hypermedia community to identify and describe hypermedia patterns focusing on software design. Design patterns support a shared vocabulary and a shared understanding about design models. In addition, they facilitate reusing prior experience for new designs. An example hypermedia design pattern is provided.",Design patterns; Hypermedia models; Linking.,Design; Hypertext systems; Design models; Design patterns; Hypermedia; Hypermedia designs; Hypermedia models; Linking.; New designs; Shared understandings; Software design,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , Oxford University Press, New York; Bernstein, M., Patterns of Hypertext (1998) Proceedings of Hypertext'98, pp. 21-29. , ACM Press; Conklin, J. and Begeman, M.L. gIBIS: a hypertext tool for exploratory policy discussion. In: Proceedings of CSCW'88, 1988, 140-152De Bra, P., Houben, G., Kornatsky, Y., An Extensible Data Model for Hyperdocuments (1992) Proceedings of Hypertext '92, pp. 222-231. , ACM Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Halasz, F., Schwartz, M., The Dexter hypertext reference model (1994) Communications of the ACM, 37 (2), pp. 30-39; Macedo, A.A., Pimentel, M.D.G., Antonio, J., An Infrastructure for Open Latent Semantic Linking (2002) Proceedings of Hypertext'02, pp. 107-116. , ACM Press; (2004) Resource Description Framework (RDF) Primer, pp. W3C. , http://www.w3.org/TR/rdf-primer, Manola, F. and Miller, E, editors; Millard, D.E., Moreau, L., Davis, H.C., and Reich, S. FOHM: A Fundamental Open Hypertext Model for Investigating Interoperability between Hypertext Domains. In: Proceedings of Hypertext'00, ACM Press, 2000, 93-102Narnard, J., Narnard, M., Using Structured Types to incorporate Knowledge in Hypertext (1991) Proceedings of Hypertext'91, pp. 329-343. , ACM Press; Narnard, M., Narnard, J., King, P., IUHM, A., Hypermedia-Based Model for Integrating Open Services, Data and Metadata (2003) Proceedings of Hypertext '03, pp. 128-137. , ACM Press; Nürnberg, P. J., Leggett, J. J., and Schneider, E. R. As We Should Have Thought. In: Proceedings of Hypertext'97, ACM Press, 1997, 96-101Reich, S., Wiil, U.K., N̈rnberg, P.J., Davis, H.C., Grønbaek, K., Anderson, K.M., Millard, D.E., Haake, J.M., Addressing interoperability in open hypermedia: The design of the open hypermedia protocol (1999) The New Review of Hypermedia and Multimedia, 5. , Taylor Graham; Rubart, J., Haake, J.M., Tietze, D.A., Wang, W., Organizing Shared Enterprise Workspaces Using Component-Based Cooperative Hypermedia (2001) Proceedings of Hypertext'01, pp. 73-82. , ACM Press; Whitehead Jr., E.J., Uniform Comparison of Data Models Using Containment Modeling (2002) Proceedings of Hypertext'02, pp. 182-191. , ACM Press; Wiil, U.K., Hicks, D.L., Nürnberg, P.J., Multiple Open Services: A New Approach to Service Provision in Open Hypermedia Systems (2001) Proceedings of Hypertext'01, pp. 83-92. , ACM Press","Rubart, J.; Arvato Services, Gütersloh, Germany; email: info@jessicarubart.de",,ACM SIGWEB,,"HYPERTEXT'08: 19th ACM Conference on Hypertext and Hypermedia 2008, HT'08",19 June 2008 through 21 June 2008,"Pittsburgh, PA",74411,,9781595939852,9781595939852,,,English,"Conf. Hypertext Hypermedia - Proc. ACM Conf. Hypertext Hypermedia, HT Creating WebScience",Conference Paper,Scopus,2-s2.0-57349190110,
,4,,"Jalil, M.A., Noah, S.A., Idris, S.",Assisting students in applying design pattern solution,2008,"Proceedings - International Symposium on Information Technology 2008, ITSim",1,,4631594,,,,,10.1109/ITSIM.2008.4631594,http://www.scopus.com/inward/record.url?eid=2-s2.0-57349187762&partnerID=40&md5=e432f6fe87e35bcf443fc9c7bc5deb8b,"Dept. of Computer Science, Faculty of Science and Technology, UMT, 21030 Terengganu, Malaysia; Dept. of Information Science, Faculty of Information Science and Technology, UKM, 43600 Selangor, Malaysia; Dept. of Computer Science, Faculty of Information Science and Technology, UKM, 43600 Selangor, Malaysia","Jalil, M.A., Dept. of Computer Science, Faculty of Science and Technology, UMT, 21030 Terengganu, Malaysia; Noah, S.A., Dept. of Information Science, Faculty of Information Science and Technology, UKM, 43600 Selangor, Malaysia; Idris, S., Dept. of Computer Science, Faculty of Information Science and Technology, UKM, 43600 Selangor, Malaysia","Design patterns represent true and tried solutions to software design problems that kept recurring under different contexts. While the benefits of design patterns have been acknowledged by many, it is not intuitive for students to readily select and use applicable pattern solutions. This paper therefore looks closely at the problems associated with pattern application and proposes a design of a support tool that could aid students in performing such a task. The tool is designed under a problem-solving environment and comprises of three major components; the user interface, the domain module and the problem / solution module. Guidance is given in the form of feedback to help students recognise and correct any errors they made, and as a mean to ensure that they are on the right track. © 2008 IEEE.",,Design; Information technology; Students; User interfaces; Design patterns; Domain modules; Support tools; Software design,,,,,,"Alphonce, C., Casperson, M., Decker, A., Killer ""Killer Examples"" for design patterns (2007) Proceedings of the ACM SIGSE'07, , March 7-10, Kentucky, USA; Baghaei, N., Mitrovic, A., Irwin, W., Problem-Solving Support in a Constraint-based Tutor for UML Class Diagrams (2006) Tech. Inst. Cognition and Learning, 4; Beck, K., Coplien, J., Crocker, R., Dominick, L., Industrial Experience with Design Patterns (1996) Proceedings of the 18th International Conference on Software Engineering, pp. 103-114. , March; Berdun, L., Pace, J.A.D., Amandi, A., Campo, M., Assisting Novice software designers by an expert designer agent (2008) Expert Systems with Applications, 34; Bergenti, F., Poggi, A., (2000) Improving UML Design Using Automatic Design Pattern Detection, , http://citeseer.ist.psu.edu/bergenti00improving.html; Borchers, J.O., A Pattern Approach to Interaction Design (2000) Proceedings of the 3rd Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques, pp. 369-378. , New York; Clancy, M., Linn, M., Patterns and Pedagogy (1999) Proceedings of the 30th ACM Technical Symposium on Computer Science Education, pp. 37-42. , March; Cline, M., The Pros and Cons of Adopting and Applying Design Patterns in the Real World (1996) Communication of the ACM, 99 (10), pp. 47-49. , October; Coelho, W., Murphy, G., ClassCompass: A Software Design Mentoring System (2007) ACM Journal on Education Resources in Computing, 7 (1); Della, L., Clark, D., Teaching Object-Oriented Development with Emphasis on Pattern Application (2000) Proceedings of the 2000 Australian Computing Education, pp. 56-63. , December; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gorfu, Y., Smith, R., Guerra, A., Odeyemi, O., Web Content Management Patterns (2006) Proceedings of the Pattern Languages of Programming Conference; Gomes, P., Pereira, F.C., Paiva, P., Seco, N., Carreiro, P., Ferreira, J.L., Bento, C., (2002) Using CBR for Automation of Software Design Patterns, pp. 534-548. , Craw, S. & Preece, A, Eds, Springer-Verlag Berlin Heidelberg; Jalil, M., Noah, S.A., The Difficulties of Using Design Patterns among Novices: An Exploratory Study (2007) Proceedings of the IEEE International Computational Science and Its Application (ICCSA'07); Jeremic, Z., Devedžic, V., Design Pattern ITS: Student Model Implementation (2004) Proceedings of the IEEE International Conference on Advanced Learning Technologies (ICALT'04); Murray, S., Ryan, J., Pahl, C., A Tool-Mediated Cognitive Apprenticeship Approach for a Computer Engineering Course (2003) Proceedings of the IEEE International Conference on Advanced Learning Technologies (ICALT'03); Nevison, C., Wells, B., Teaching Objects Early and Design Patterns in Java Using Case Studies (2003) Proceedings of the 8th Annual Conference on Innovation and Technology in computer Science Education (ITiCSE'030); Ó Cinnéide, M. & Tynan R., A Problem-Based Approach to Teaching Design Patterns. Inroads, SIGSE Bulletin, 36, No. 4, 2004Ohlsson, S., Learning from Performance Errors (1996) Psychological Review, 103 (2), pp. 241-262; Or-Bach, R., Lavy, I., Cognitive Activities of Abstraction in Object-Orientation: An Empirical Study (2004) Inroads. The SIGCSE Bulletin, 36 (2); Ouyang, Y., Explaining Design Patterns through One Application (2002) Proceedings of the 32nd ASEE/IEE Frontiers in Education Conference, , Boston, MA; Proulx, V.K., Programming patterns and design patterns in the introductory computer science course (2000) Proceedings of the 31st SIGCSE Technical Symposium on Computer Science Education, pp. 80-84. , New York: ACM Press; Robbin, J.E., Design Critiquing System, , http://www.ics.uci.edu, available at; Rossi, G., Schwabe, D., Garrido, A., Design Reuse in Hypermedia Applications Development (1997) In the Proceedings of the ACM Conference on Hypertext, , UK; Shalloway, A., Trott, J., (2001) Design Patterns Explained: A New Perspective on Object-Oriented Design, , Addison-Wesley; Schmolitzky, A., A laboratory for teaching OO language and design concepts with teachlets (2005) Proceedings of the OOPSLA 2005, , California, USA; Weir, S. B., An investigation of significant technical factors affecting the learning and using of design patterns., Thesis of Master of Science, Utah State University, USA, 2006Wick, M.R., Teaching Design Patterns in CS1: A Closed Laboratory Sequence based on the Game of Life (2005) Proceedings of the ACM SIGCSE'05, , Missouri, USA","Jalil, M. A.; Dept. of Computer Science, Faculty of Science and Technology, UMT, 21030 Terengganu, Malaysia; email: masita@umt.edu.my",,IEEE,,"International Symposium on Information Technology 2008, ITSim",26 August 2008 through 29 August 2008,Kuala Lumpur,74115,,9781424423286,,,English,"Proc. - Int. Symp. Inf. Technol., ITSim",Conference Paper,Scopus,2-s2.0-57349187762,,
,v,,"Arcelli, F., Tosi, C., Zanoni, M.",Can design pattern detection be useful for legacy system migration towards SOA?,2008,Proceedings - International Conference on Software Engineering,,,1370932,63,68,,6,10.1145/1370916.1370932,http://www.scopus.com/inward/record.url?eid=2-s2.0-57049155581&partnerID=40&md5=d05a572259a98ce079b48a2181bcd746,"Università degli Studi di Milano-Bicocca, Via Bicocca degli Arcimboldi, 8, I-20126, Milan, Italy","Arcelli, F., Università degli Studi di Milano-Bicocca, Via Bicocca degli Arcimboldi, 8, I-20126, Milan, Italy; Tosi, C., Università degli Studi di Milano-Bicocca, Via Bicocca degli Arcimboldi, 8, I-20126, Milan, Italy; Zanoni, M., Università degli Studi di Milano-Bicocca, Via Bicocca degli Arcimboldi, 8, I-20126, Milan, Italy","Legacy systems maintenance involves different decisions, often very complex and sometimes requiring high costs and time. Hence studying and applying the right system modernization technique becomes very important for systems evolution. One of the solutions often adopted to modernize a system is the possibility to migrate it towards a SOA architecture. A lot of works in the literature have been done in this direction, which propose methodologies that provide some kind of migration strategy. In the migration process one of the main tasks is related to system comprehension. We often have to analyze not well documented systems, where it is difficult to identify the components which could become services or to recognize the possible problems we could face during the migration process. Software architecture reconstruction is certainly a relevant key activity, which is used for these purposes. In this paper we explore if design pattern detection could be also useful in the migration process: knowing that some design patterns have been applied in the system could give relevant hints to take decisions during migration. Copyright 2008 ACM.",Design; Experimentation,Administrative data processing; Cobalt; Computer software maintenance; Computer systems; Design; Management information systems; Modernization; Process engineering; Real time systems; Software architecture; Software engineering; Technical presentations; Architecture reconstructions; Can designs; Design pattern detections; Design patterns; Experimentation; High costs; Main tasks; Migration processes; Migration strategies; SOA architectures; System migrations; Systems evolutions; Legacy systems,,,,,,"Code migration planning and assessment workbench for visual basic. Web site, , http://www.alphaworks.ibm.com/tech/compass; Codelogic. Web site, , http://www.logicexplorers.com/index.html; Doxygen. Web site, , http://www.stack.nl/~dimitri/doxygen; Sa4j: Structural analysis for java. Web site, , http://www.alphaworks.ibm.com/tech/sa4j; Soa: Oo and so - how you gonna get there? Web site, , http://blogs.sun.com/alur/entry/soa-oo-or-so; Software evolution and reverse engineering lab, , http://essere.disco.unimib.it, at university of milano bicocca. Web site; Swag kit. Web site, , http://www.swag.uwaterloo.ca/swagkit; Arcelli, F., Raibulet, C., Program comprehension and design pattern recognition: An experience report (2006) ECOOP 2006 International Workshop on Object-Oriented Reengineering (WOOR 2006), , Nantes, France; Arcelli, F., Raibulet, C., Guéhéneuc, Y.-G., Smith, J., Design pattern detection for reverse engineering (2006) Proceedings, of the DPDJ4RE Workshop, co-located event with IEEE WCRE 2006 Conference, , Benevento, Italy; Arcelli, F., Tosi, C., Zanoni, M., Maggioni, S., Cristina, L., Ubezio, L., Metrics and architecture recognition plug-in for eclipse Technical report, Universita' degli Studi Milano Bicocca, 2006Bierhoff, K., Grechanik, M., Liongosari, E.S., Architectural mismatch in service-oriented architectures (2007) SDSOA'07: IEEE Proceedings of the International Workshop on Systems Development in SOA Environments, , Washington, DC, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns: Elements of reusable object-oriented software, , Addison-Wesley Professional; Huston, V., Design patterns, , http://www.vincehuston.org/dp, Web site; Kontogiannis, K., Lewis, G.A., Smith, D.B., Litoiu, M., Muller, H., Schuster, S., Stroulia, E., The landscape of service-oriented systems: A research perspective (2007) SDSOA'07: IEEE Proceedings of the International Workshop on Systems Development in SOA Environments, p. 1. , Washington, DC, USA; Lanza, M., (2003) Object oriented Reverse Engineering, , PhD thesis, University of Berna; Lewis, G., Morris, E., Smith, D., O'Brien, L., Service-oriented migration and reuse technique (smart) (2005) STEP'05: Proceedings of the 13th IEEE International Workshop on Software Technology and Engineering Practice, pp. 222-229. , Washington, DC, USA; Newcomb, P., Architecture-driven modernization (adm) (2005) WORE'05: IEEE Proceedings of the 12th Working Conference on Reverse Engineering, p. 237. , Washington, DC, USA; O'Brien, L., Smith, D., Lewis, G., Supporting migration to services using software architecture reconstruction (2005) Software Technology and Engineering Practice, 2005. 13th IEEE International Workshop on, pp. 81-91. , 24-25 Sept; Pollet, D., Ducasse, S., Poyet, L., Alloui, I., Cimpan, S., Verjus, H., Towards a process-oriented software architecture reconstruction taxonomy (2007) CSMR'07: IEEE Proceedings of the 11th European Conference on Software Maintenance and Reengineering, pp. 137-148. , Washington, DC, USA; Sartipi, K., Kontogiannis, K., (2005) Managing Corporate Information Systems Evolution and Maintenance, chapter Software architecture analysis and reconstruction, , Idea Group Publishing; Snell, J., Web services programming tips and tricks: Learn simple, practical web services design patterns (2004) Web site, (PART 2). , http://www.ibm.com/developerworks/library/ws-tip-altdesign2, October; Stoermer, C., O'Brien, L., Verhoef, C., Practice patterns for architecture reconstruction (2002) WCRE'02: IEEE Proceedings of the Ninth Working Conference on Reverse Engineering (WCRE'02), p. 151. , Washington, DC, USA","Arcelli, F.; Università degli Studi di Milano-Bicocca, Via Bicocca degli Arcimboldi, 8, I-20126, Milan, Italy; email: arcelli@disco.unimib.it",,,,"30th International Conference on Software Engineering, ICSE 2008 - 2nd International Workshop on Systems Development in SOA Environments, SDSOA 2008",11 May 2008 through 11 May 2008,Leipzig,74382,2705257,9781605580296,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-57049155581,,
,4,,"Bishop, J.",Language features meet design patterns: Raising the abstraction bar,2008,Proceedings - International Conference on Software Engineering,,,,1,7,,,10.1145/1370164.1370166,http://www.scopus.com/inward/record.url?eid=2-s2.0-79951596182&partnerID=40&md5=b4ee9bfeff21f3d0d43ab1096256bec9,"Computer Science Department, University of Pretoria, Pretoria 0002, South Africa","Bishop, J., Computer Science Department, University of Pretoria, Pretoria 0002, South Africa","In the context of software engineering, abstraction is the means by which we move from layer to layer in the realization of the solution to a large problem. It has been recognized for over a decade that design patterns are one of the key mechanisms for implementing reliable and maintainable software. This paper explores where they fit in in the software ""food chain"". In particular, it examines how advances in language design can narrow the gap for implementing design patterns. Examples are given of syntax features in C# 3.0 (extension methods and LINQ) as well as of library methods (Serialize) in terms of which pattern implementations become easier to produce and reproduce. The challenges that face design pattern implementation are discussed and the promise of reusable design patterns examined. © 2008 ACM.",C# 3.0; Design patterns; Language features; LINQ,C# 3.0; Design patterns; Food chain; Language design; Language features; LINQ; Reusable design; Abstracting; Java programming language; Software engineering; Design,,,,,,"Arnout, K., Meyer, B., Pattern componentization: The factory example (2006) Innovations in Systems and Software Engineering, 2 (2), pp. 65-79. , DOI 10.1007/s11334-006-0001-0; Baumgartner, G., Läufer, K., Russo, V.F., On the interaction of object-oriented design patterns and programming languages (1996) Technical Report, CSR-TR-96-020, , Purdue University; Bishop, J.M., The effect of data abstraction on loop programming techniques (1990) IEEE Trans. on Software Engineering, 16 (4), pp. 389-402. , April; Bishop, J., (2008) C# 3.0 Design Patterns, , O'Reilly, Sebastapol, CA; Bosch, J., Design patterns & frameworks: On the issue of language support proc (1997) Workshop on Language Support for Design Patterns and Object-oriented Frameworks (LSDF), pp. 133-136. , ECOOP; Bosch, J., Design patterns as language constructs (1998) Journal of Object-oriented Programming, 11 (2), pp. 18-32; Chambers, C., Bill, H., Vlissides, J., (2000) A Debate on Language and Tool Support for Design Patterns Proc. 27th ACM SIGPLAN-SIGACT POPL Symposium, pp. 277-289; Elton, C.S., Animal ecology (1927) Reprinted Several Times, , 1st edn Sidgwick and Jackson, London e.g. 2001 by The University of Chicago Press, ISBN 0-226-20639-4; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Boston, MA; Gil, J., Lorenz, D.H., Design Patterns vs. Language Design (1998) LECTURE NOTES IN COMPUTER SCIENCE, (1357), pp. 108-111. , Onject-Oriented Technology: ECOOP'97 Workshop Reader; Hannemann, J., Kiczales, G., Design pattern implementation in java and AspectJ OOPSLA 2002, pp. 161-173; Kramer, J., Orit, H., Summary of an ICSE 2006 workshop: The role of abstraction in software engineering (2006) ACM SIGSOFT Software Engineering Notes, 31 (6), pp. 38-39. , November; Kramer, J., Is abstraction the key to computing? (2007) Communications of the ACM, 50 (4), pp. 37-42. , DOI 10.1145/1232743.1232745; Meyer, B., Arnout, K., Componentization: The visitor example (2006) Computer, 39 (7), pp. 23-30. , DOI 10.1109/MC.2006.227; Rugaber, S., Cataloguing design abstractions (2006) ROA '06, pp. 11-17. , Shanghai, China, May","Bishop, J.; Computer Science Department, University of Pretoria, Pretoria 0002, South Africa; email: jbishop@cs.up.ac.za",,"Assoc. Comput. Mach., Spec. Interest Group;Softw. Eng. (ACM SIGSOFT)",,"2nd Workshop on The Role of Abstraction in Software Engineering, ROA'08",10 May 2008 through 18 May 2008,Leipzig,83797,2705257,,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-79951596182,,
,v,,"Sartipi, K., Hu, L.",Behavior-driven design pattern recovery,2008,"Proceedings of the 9th IASTED International Conference on Software Engineering and Applications, SEA 2008",,,,179,185,,3,,http://www.scopus.com/inward/record.url?eid=2-s2.0-74549208000&partnerID=40&md5=ffe497bfbce86065647db9e5cf1095fc,"Department or Computing and Software, McMaster University, Hamilton, ON, Canada","Sartipi, K., Department or Computing and Software, McMaster University, Hamilton, ON, Canada; Hu, L., Department or Computing and Software, McMaster University, Hamilton, ON, Canada","In this paper, we present an approach for enhancing program understanding and reusability through a behavior-driven design pattern recovery process. In this context, incorporating behavioral features would characterize the approach as a goal-driven and scalable pattern recovery process. The proposed technique consists of a feature-oriented dynamic analysis and a two-phase design pattern detection process. The dynamic analysis operates on the system's scenario-driven execution traces and produces a mapping between features and their implementation at class level. For the two-phase design pattern detection, we employ approximate matching and structural matching algorithms to identify the instances of the target design pattern that is described using our proposed Pattern Description Language (PDL). The correspondence between system features and identified design pattern instances can facilitate the construction of more reusable and configurable software components to be maintained. We have implemented an Eclipse plug-in toolkit and have conducted experimentation on three versions of JHotDraw systems to evaluate our approach.",Behavior feature; Design pattern detection; Dynamic analysis; Feature-specific scenario; Pattern matching,Approximate matching; Behavior feature; Behavioral features; Class level; Configurable; Design pattern recovery; Design Patterns; Execution trace; Feature-oriented; Pattern description; Pattern recovery; Phase design; Plug-ins; Program understanding; Scenario patterns; Software component; Structural matching algorithms; System features; Target design; Computer software reusability; Dynamic analysis; Object oriented programming; Pattern matching; Reusability; Software engineering; Design,,,,,,"(2006) Jhotdraw start page, , http://www.jhotdraw.org; (2006) The eclipse test and performance tools platform, , http://www.eclipse.org/tptp; http://sourceforge.net/projects/conexp, Formal concept analysis toolkit version 1.0.1Agrawal, R., Srikant, R., Mining sequential patterns (1995) IEEE ICDE '95, pp. 3-14. , Washington, DC, USA; Albin-Amiot, H., (2001) Instantiating and detecting design patterns: Putting bits and pieces together; Antoniol, G., Design pattern recovery in object-oriented software (1998) IEEE IWPC '98, pp. 153-160; Balanyi, Z., Ferenc, R., Mining design patterns from c++ source code (2003) IEEE ICSM '03, p. 305. , Washington, DC, USA; Dong, J., Lad, D.S., Zhao, Y., Dp-miner: Design pattern discovery using matrix (2007) Proceedings of IEEE ECBS' 07), pp. 371-380. , Washington, DC, USA; Eisenbarth, T., Koschke, R., Simon, D., Derivation of feature component maps by means of concept analysis (2001) IEEE CSMR'01; El-Ramly, M., Stroulia, E., Sorenson, P., Recovering software requirements from system-user interaction traces (2002) SEKE '02, pp. 447-454. , New York, NY, USA; Gamma, E., (1995) Design patterns: Elements of reusable object-oriented software, , Addison-Wesley Longman Publishing Co, Inc, Boston, MA, USA; Ganter, B., Wille, R., (1999) Formal Concept Analysis: Mathematical Foundations, , Springer Verla; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) IEEE WCRE'04, pp. 172-181. , Washington, DC, USA; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) IEEE WCRE'96, pp. 208-215; Lucia, A.D., A two phase approach to design pattern recovery (2007) IEEE CSMR'07, pp. 297-306. , Amsterdam, Netherlands; Sartipi, K., Safyallah, H., Application of execution pattern mining and concept lattice analysis on software structure evaluation (2006) SEKE, pp. 302-308; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2006) IEEE ASE '06, pp. 123-134. , Washington, DC, USA; Tsantalis, N., Design pattern detection using similarity scoring (2006) IEEE TSE, pp. 896-909; Wang, W., Tzerpos, V., Design pattern detection in eiffel systems (2005) IEEE WCRE'05, pp. 165-174; Zaidman, A., Applying webmining techniques to execution traces to support the program comprehension process (2005) IEEE CSMR'05, pp. 134-142","Sartipi, K.; Department or Computing and Software, McMaster University, Hamilton, ON, Canada; email: sartipi@mcmaster.ca",,Int. Assoc. Sci. Technol. Dev. (IASTED);Technical Committee on Software Engineering,,"9th IASTED International Conference on Software Engineering and Applications, SEA 2008",16 November 2008 through 18 November 2008,"Orlando, FL",79202,,9780889867765,,,English,"Proc. IASTED Int. Conf. Softw. Eng. Appl., SEA",Conference Paper,Scopus,2-s2.0-74549208000,,
,v,,"Czibula, I.G., Şerban, G.",Hierarchical clustering based design patterns identification,2008,"International Journal of Computers, Communications and Control",3,SPL. ISS.,,248,252,,5,,http://www.scopus.com/inward/record.url?eid=2-s2.0-77951179376&partnerID=40&md5=1c45e4578699d29d3283dbe564e37919,"BabeŞ-Bolyai University, Department of Computer Science 1, M. Kogǎlniceanu Street, 400084, Cluj-Napoca, Romania","Czibula, I.G., BabeŞ-Bolyai University, Department of Computer Science 1, M. Kogǎlniceanu Street, 400084, Cluj-Napoca, Romania; Şerban, G., BabeŞ-Bolyai University, Department of Computer Science 1, M. Kogǎlniceanu Street, 400084, Cluj-Napoca, Romania","Design patterns have attracted significant attention in software engineering in the last period. An important reason behind this is that design patterns are potentially useful in both development of new, and comprehension of existing object-oriented design, especially for large legacy systems without sufficient documentation. That is why the problem of design patterns identification is very important. Automating the detection of design pattern instances could be of significant help to the process of reverse engineering large software systems. In this paper we aim at introducing a search based approach for identifying instances of design patterns in a software system. An experimental evaluation of our approach is also provided.©2006-2008 by CCC Publications - Agora University Ed. House.",Clustering; Design patterns; Searching,,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., (1998) Using metrics to identify design patterns in object-oriented software, pp. 23-34. , In Proc. of the Fifth International Symposium on Software Metrics - METRICS'98; Bieman, J.M., Kang, B.-K., Measuring design-level cohesion (1998) Software Engineering, 24 (2), pp. 111-124; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley Publishing Company, USA; Jain, A.K., Murty, M.N., Flynn, P.J., Data clustering: a review (1999) ACM Computing Surveys, 31 (3), pp. 264-323; Kontogiannis, K., de Mori, R., Merlo, E., Galler, M., Bernstein, M., Pattern matching for clone and concept detection (1996) Automated Software Engineering, 3 (1-2), pp. 77-108; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) In WCRE '96: Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE '96), pp. 208-215. , Washington, DC, USA, IEEE Computer Society; Rich, E., Knight, K., (1991) Artificial Intelligence, , McGraw Hill, New York, 2nd edition; Serban, G., Czibula, I., (2007) On evaluating software systems design, 17 (1), pp. 55-66. , Studia Universitatis ""Babes-Bolyai"", Informatica; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) In Proc. of the ICSE 2003 Workshop on Dynamic Analysis (WODA), pp. 29-32","Czibula, I.G.; BabeŞ-Bolyai University, Department of Computer Science 1, M. Kogǎlniceanu Street, 400084, Cluj-Napoca, Romania; email: istvanc@cs.ubbcluj.ro",,,,,,,,18419836,,,,English,Int. J. Comput. Commun. Control,Article,Scopus,2-s2.0-77951179376,,
,v,,"Sandhu, P.S., Singh, P.P., Verma, A.K.",Evaluating quality of software systems by design patterns detection,2008,"Proceedings - 2008 International Conference on Advanced Computer Theory and Engineering, ICACTE 2008",,,4736913,3,7,,1,10.1109/ICACTE.2008.205,http://www.scopus.com/inward/record.url?eid=2-s2.0-62949100488&partnerID=40&md5=c7e23c0673548c8a55720dcb53e6fd1f,"Rayat and Bahra Institute of Engineering and Bio-Technology, Mohali, India; Computer Science and Engineering Department, Thapar University, Patiala, India","Sandhu, P.S., Rayat and Bahra Institute of Engineering and Bio-Technology, Mohali, India; Singh, P.P., Computer Science and Engineering Department, Thapar University, Patiala, India; Verma, A.K., Computer Science and Engineering Department, Thapar University, Patiala, India","Software industry demands the development of products at a very fast rate with most effective solutions. For this reason most of the components are desired to be reused again and again. Use of Design Patterns can speed up the process of product development by providing the pre-tested footsteps to follow. Design patterns show their effectiveness from Design phase to maintenance. Design patterns can be analyzed for their quality which is the most necessary aspect of any software structure. This is a metric based study of the design patterns by proposing suitable metrics that are suitable for all the patterns. Higher is the quality of the used design pattern higher will be the quality of the product, with more flexibility towards change and maintenance. We can further extend the paper by determining most suitable design patterns for a problem to solve by providing highly reusable solutions. © 2008 IEEE.",,Design patterns; Design phase; Effective solutions; Fast rates; Quality of softwares; Software industries; Software structures; Speed-up; Computer software maintenance; Design; Maintainability; Product development; Project management; Computer software selection and evaluation,,,,,,"Agebro, E., Cornils, A., How to preserve the benefits of Design Patterns (1998) Proceedings of OOPLSA, pp. 134-143; Arnout, K., Meyer, B., Pattern componentization: The factory example (2006) Innovations in Systems and Software Technology: A NASA Journal, 2 (2), pp. 65-79. , July; Bosch, J., Design Patterns as Language Constructs (1998) Journal of Object-Oriented Programming, 11 (2), pp. 18-32; Bosch, J., Design Patterns & Frameworks: On the Issue of Language Support Proceedings of the Workshop on Language Support for Design Patterns and Object-Oriented Frameworks (LSDF), (ECOOP 1997), pp. 133-136; Budinski, F., Finnie, M., Yu, P., Vlissides, J., Automatic code generation from design patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171; Chambers, C., Harrison, B., Vlissides, J.O., A Debate on Language and Tool Support for Design Patterns (2000) Proceedings of the 27th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 277-289; Gamma, E., Helm, R., Johnson, R., Vlissides, J.O., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Boston, MA: Addison-Wesley; Gil, J., Lorenz, D.H., Design Patterns vs. Language Design Proceedings of the Workshop on Language Support for Design Patterns and Object-Oriented Frameworks (LSDF), (ECOOP 1997), pp. 108-111; James W. Cooper, C# Design patterns: A tutorial, Addison-Wesley Professional, 2003 EditionSchmidt, D., Using Design Patterns to DevelopReusable Object-Oriented Communication Software (1995) Communications of the ACM, 38 (10), pp. 65-74; Tanit Talbi, Bertrand Meyer and Emmanuel Stapf. A metric framework for object-oriented development Publication Date: 2001 on page(s):164-172, Meeting Date:07/29/2001-08/03/2001, Location: Santa Barbara, CA,USA,ISBN:0-7695-1251-8, References Cited: 3Chidamber, S.R., Kemerer, C.F., Towards a Metrics Suite for Object Oriented Design (1991) Proceedings conference Object Oriented Programming Systems, Languages, and Applications (OOPSLA'91), 26 (11), pp. 197-211; Chidamber, S.R., Kemerer, C.F., A Metric Suite for Object Oriented Design (1994) IEEE Trans. on Software Engineering, 20, pp. 476-549","Sandhu, P. S.; Rayat and Bahra Institute of Engineering and Bio-Technology, Mohali, India; email: parvinder.sandhu@gmail.com",,,,"2008 International Conference on Advanced Computer Theory and Engineering, ICACTE 2008",20 December 2008 through 22 December 2008,Phuket,75551,,9780769534893,,,English,"Proc. - Int. Conf. Adv. Comput. Theory Eng., ICACTE",Conference Paper,Scopus,2-s2.0-62949100488,,
,v,,"Lee, H., Youn, H., Lee, E.",A design pattern detection technique that Aids reverse engineering,2008,International Journal of Security and its Applications,2,1,,1,12,,6,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84863005173&partnerID=40&md5=33b1793cfbad4e73357e55fff2b53c42,"School of Information and Communication Engineering, Sungkyunkwan University, South Korea","Lee, H., School of Information and Communication Engineering, Sungkyunkwan University, South Korea; Youn, H., School of Information and Communication Engineering, Sungkyunkwan University, South Korea; Lee, E., School of Information and Communication Engineering, Sungkyunkwan University, South Korea","If software design-patterns could be captured and reused then this would be very helpful to reverse-engineering often practiced by those who develop and who maintain software. The ad-hoc nature and informality of this reverse-engineering process however, makes the discovery of these patterns not straightforward. Moreover, a high false positive rate results from trying to detect these design-patterns. Although several static and dynamic analysis approaches have been proposed to overcome these difficulties, each technique cannot be used separately because of different reasons. And, even if this were possible, each technique in isolation cannot address detection of all of the important patterns. We propose a new taxonomy of GoF design patterns that can guide the reverse-engineering process. This new approach not only combines static analysis with dynamic analysis but also adds what we call the implementation-specific analysis. Using it we demonstrate that the reverse engineering process is faster and more accurate.",,Design Patterns; False positive rates; Reverse engineering process; Static and dynamic analysis; Static analysis; Reverse engineering,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., (1998) Design Pattern Recovery in Object-Oriented Software, , 6th International Workshop on Program Comprehension; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Shi, N., Olsson, R., (2006) Reverse Engineering of Design Patterns from Java Source Code, , The 21st IEEE/ACM International Conference on Automated Software Engineering; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic Design Pattern Detection (2003) Proc. of the 11th IEEE International Workshop on Program Comprehension; Wendehals, L., Improving Design Pattern Instance Recognition by Dynamic Analysis (2003) Proc. of the ICSE 2003 Workshop on Dynamic Analysis; Niere, J., Wadsack, J., Wendehals, L., (2001) Design Pattern Recovery Based on Source Code Analysis with Fuzzy Logic, , Technical Report, Univ. of Paderborn; Brown, K., (1997) Design Reverse-Engineering and Automated Design Pattern Detection in Smalltalk, , http://www.omg.org/technology/xml/index.htm, Master Thesis, University of Illinois at Urbana-Champaign; http://wwwcs.uni-paderborn.de/cs/fujaba/index.html, FUJABAYoun, H., (2005) Next Generation Agent Development Supporting Tool: Case Study, , SERA; Pettersson, N., (2005) Measuring precision for static and dynamic design pattern recognition as a function of coverage, , ICSE 2005 Workshop on Dynamic Analysis; http://download.java.net/jdk6/docs/jdk/api/jpda/jdi/overview-summary.html, JDI","Lee, H.; School of Information and Communication Engineering, Sungkyunkwan UniversitySouth Korea; email: hakjinlee@ece.skku.ac.kr",,,,,,,,17389976,,,,English,Int. J. Secur. Appl.,Article,Scopus,2-s2.0-84863005173,,
,3,,"Zhang, T., Xiao, X., Qian, L.",Modeling object-oriented framework with Z,2008,"Proceedings - International Symposium on Computer Science and Computational Technology, ISCSCT 2008",2,,4731595,165,170,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-62349098687&partnerID=40&md5=1a1767208f763840725b13b63006bed0,"School of Computer Science, Fudan University, Shanghai, China","Zhang, T., School of Computer Science, Fudan University, Shanghai, China; Xiao, X., School of Computer Science, Fudan University, Shanghai, China; Qian, L., School of Computer Science, Fudan University, Shanghai, China","Object-oriented framework is increasingly recognized as an efficient reuse mechanism in software development, but for its intrinsic abstract and complex, it is still difficult to develop for framework designer and instantiate for framework user, this is partly due to the lack of formal framework modeling language guiding the framework developer, user and tool builder. We propose a formal way to model framework in Z so that framework can be modeled in a precise, modular and compositional manner. This approach also supports framework extension and composition. Design patterns are closely related to framework. We unify the modeling of design pattern, framework and their relationship so that design patterns can be referenced by framework smoothly. © 2008 IEEE.",Design pattern; Object-oriented framework; Z notation,Design Patterns; Formal framework; Model framework; Modeling languages; Object-oriented frameworks; Reuse mechanism; Software development; Z notation; Computer science; Computer software reusability; Formal methods; Object oriented programming; Reusability; Design,,,,,,"Bosch, M.M., Fayad, M.E., Framework Integration Problems, Causes, Solutions Communications of the ACM, 42 (10), pp. 80-87. , Pages; Bouassida, N., Ben-Abdallah, H., Gargouri, F., Hamadou, A.B., Formalizing the Framework Design Language F-UML Proceedings of the First International Conference on Software Engineering and Formal Methods (SEFM'03); Antkiewicz, M., Czarnecki, K., Framework-Specific Modeling Languages with round-trip engineering', MoDELS (2006) Lecture Notes in Computer Science, 4199, pp. 692-706; Eclipse Foundation: Eclipse. Available at http://www.eclipse.org/(2006)Spivey, J.M., (1992) The Z Notation, , Programming Research Group, University of Oxford; Griffiths, A., An extended Semantic Foundation For Object-Z (1996) Proceedings of Asia-Pacific Software Engineering Conference; (2007) Unified Modeling Language, Superstructure, V2.1.2, OMG, , http://www.omg.org/docs/formal/07-11-02.pdf; Kim, S., Carrington, D., Using Integrated Metamodeling to Define OO Design Patterns with Object-Z and UML Proceedings of the 11th Asia-Pacific Software Engineering Conference, pp. 257-264. , Pages; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns: Elements of reusable object-oriented systems, , Addison-Wesley; [W. Pree, Hot-Spot-Driven Framework Development? Technical report?http://www.softwareresearch.net/site/publications/J016.pdf[Davide Brugali, Katia Sycara, 'Frameworks and Pattern Languages: an Intriguing Relationship', ACM Computing Surveys (CSUR), 32, Issue 1es, Article No. 2 (March 2000)Riehle, D., Gross, T., Role Model Based Framework Design and Integration ACM SIGPLAN Notices, pp. 117-133. , Pages; Fayad, M.E., Johnson, R.E., (2000) Domain-Specific Application Frameworks: Frameworks Experience by Industry, , John Wiley & Sons; Berenbach, B., Wolf, T., A unified requirements model; integrating features, use cases, requirements, requirements analysis and hazard analysis (2007) International Conference on Global Software Engineering(ICGSE","Zhang, T.; School of Computer Science, Fudan University, Shanghai, China; email: ztiange@fudan.edu.cn",,,,"International Symposium on Computer Science and Computational Technology, ISCSCT 2008",20 December 2008 through 22 December 2008,Shanghai,75531,,9780769534985,,,English,"Proc. - Int. Symp. Comput. Sci. Comput. Technol., ISCSCT",Conference Paper,Scopus,2-s2.0-62349098687,,
,3,,"Nejati, S., Sabetzadeh, M., Chechik, M., Uchitel, S., Zave, P.",Towards compositional synthesis of evolving systems,2008,Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering,,,,285,296,,4,10.1145/1453101.1453143,http://www.scopus.com/inward/record.url?eid=2-s2.0-77950478186&partnerID=40&md5=63b07a421f365ce24d41e2f491211e91,"University of Toronto, Toronto, Canada; U. of Buenos Aires, Argentina; Imperial College London, United Kingdom; AT and T Labs-Research, Florham Park, United States","Nejati, S., University of Toronto, Toronto, Canada; Sabetzadeh, M., University of Toronto, Toronto, Canada; Chechik, M., University of Toronto, Toronto, Canada; Uchitel, S., U. of Buenos Aires, Argentina, Imperial College London, United Kingdom; Zave, P., AT and T Labs-Research, Florham Park, United States","Synthesis of system configurations from a given set of features is an important and very challenging problem. This paper makes a step towards this goal by describing an efficient technique for synthesizing pipeline configurations of feature-based systems. We identify and formalize a design pattern that is commonly used in featurebased development. We show that this pattern enables compositional synthesis of feature arrangements. In particular, the pattern allows us to add or remove features from an existing system without having to reconfigure the system from scratch. We describe an implementation of our technique and evaluate its applicability and effectiveness using a set of telecommunication features from AT&T, arranged within the DFC architecture. © 2008 ACM.",Behavioural Design Patterns; Feature-Based Development; I/O Automata; Pipelines; Synthesis,Compositional synthesis; Design Patterns; Evolving systems; Existing systems; Feature-based; I/O Automata; Pipeline configuration; System configurations; Computer software; Design; Pipelines; Translation (languages); Synthesis (chemical),,,,,,"Batory, D., Feature-oriented programming and the AHEAD tool suite (2004) Proceedings of ICSE'04, pp. 702-703; Betin-Can, A., Bultan, T., Lindvall, M., Lux, B., Topp, S., Application of design for verification with concurrency controllers to air traffic control software (2005) Proceedings of ASE'05, pp. 14-23; Blom, J., Jonsson, B., Kempe, L., Using temporal logic for modular specification of telephone services (1994) Proceedings of FIW'94, pp. 197-216; Braithwaite, K., Atlee, J., Towards automated detection of feature interactions (1994) Proceedings of FIW'94, pp. 36-59; Brand, D., Zafiropulo, P., On communicating finite-state machines (1983) J. ACM, 30 (2), pp. 323-342; Brooks, R., A robust layered control system for a mobile robot (1986) IEEE J. of Robotics and Automation, pp. 2-27; Bruns, G., Foundations for features (2005) Proceedings of FIW'05, pp. 3-11; Cheng, B., Stephenson, R., Berenbach, B., Lessons learned from automated analysis of industrial uml class models (An Experience Report) (2005) Proceedings of MoDELS'05, pp. 324-338; Clarke, E., Grumberg, O., Peled, D., (1999) Model Checking, , MIT Press; Cobleigh, J., Giannakopoulou, D., Pasareanu, C., Learning assumptions for compositional verification (2003) Proceedings of TACAS'03, pp. 331-346; Dominguez, A.J., Day, N., Compositional reasoning for port-based distributed systems (2005) Proceedings of ASE'05, pp. 376-379; Emerson, A., Kahlon, V., Reducing model checking of the many to the few (2000) Proceedings of CADE'00, pp. 236-254; Emerson, A., Namjoshi, K., Reasoning about rings (1995) Proceedings of POPL'95, pp. 85-94; Felty, A., Namjoshi, K., Feature specification and automated conflict detection (2003) ACM TOSEM, 12 (1), pp. 3-27; Fisler, K., Krishnamurthi, S., Decomposing verification by features (2005) Proceedings of VSTTE'05; Fu, X., Bultan, T., Su, J., Analysis of interacting BPEL Web services (2004) Thirteenth International World Wide Web Conference Proceedings, WWW2004, pp. 621-630. , Thirteenth International World Wide Web Conference Proceedings, WWW2004; Hall, R., Feature combination and interaction detection via foreground/background models (2000) Computer Networks, 32 (4), pp. 449-469; Harrison, W., Ossher, H., Tarr, P., Kruskal, V., Tip, F., CAT: A toolkit for assembling concerns (2002) Technical Report RC22686, IBM Research; Hay, J., Atlee, J., Composing features and resolving interactions (2000) Proceedings of FSE'00, pp. 110-119; Jackson, D., (2006) Software Abstractions Logic, Language, and Analysis, , The MIT Press; Jackson, M., Zave, P., Distributed feature composition: A virtual architecture for telecommunications services (1998) IEEE TSE, 24 (10), pp. 831-847; Laburthe, F., Jussien, N., The Choco Constraint Programming System, , http://choco-solver.net/; Larsen, K.G., Steffen, B., Weise, C., A constraint oriented proof methodology based on modal transition systems (1995) LECTURE NOTES IN COMPUTER SCIENCE, (1019), pp. 17-40. , Tools and Algorithms for the Construction and Analysis of Systems; Li, H., Krishnamurthi, S., Fisler, K., Verifying cross-cutting features as open systems (2002) Proceedings of FSE'02, pp. 89-98; Li, H., Krishnamurthi, S., Fisler, K., Modular verification of open features using three-valued model checking (2005) J. of Automated Softw. Eng., 12 (3), pp. 349-382; Lynch, N., Tuttle, M., Hierarchical correctness proofs for distributed algorithms (1987) Proceedings of PODC'87, pp. 137-151; Magee, J., Kramer, J., (2006) Concurrency: State Models and Java Programming, , 2nd Edition Wiley; Mehlitz, P.C., Penix, J., Design for verification with dynamic assertions (2005) Proceedings of the 2005 29th Annual IEEE/NASA Software Engineering Workshop, SEW'05, 2005, pp. 285-292. , DOI 10.1109/SEW.2005.23, 1521217, Proceedings of the 2005 29th Annual IEEE/NASA Software Engineering Workshop, SEW'05; Milner, R., (1989) Communication and Concurrency, , Prentice-Hall, New York; Nejati, S., (2007) Translating BoxTalk Models to I/O Automata, , http://www.cs.toronto.edu/_shiva/synthesis/; Plath, M., Ryan, M., Feature integration using a feature construct (2001) Science of Computer Programming, 41 (1), pp. 53-84; Pnueli, A., In transition from global to modular temporal reasoning about programs (1985) Logic and Models of Concurrent Systems, pp. 123-144; Pomakis, K., Atlee, J., Reachability analysis of feature interactions: A progress report (1996) Proceedings of ISSTA'96, pp. 216-223; Prehofer, C., Feature-oriented programming: A fresh look at objects (1997) Proceedings of ECOOP'97, pp. 419-443; Sharygina, N., Browne, J., Kurshan, R.P., A formal object-oriented analysis for software reliability: Design for verification (2001) Proceedings of FASE'01, pp. 318-332; Shaw, M., Garlan, D., (1996) Software Architecture: Perspectives on An Emerging Discipline, , Prentice-Hall, Inc; Zave, P., FAQ Sheet on Feature Interaction, , http://www.research.att.com/_pamela/faq.html; Zave, P., Jackson, M., A call abstraction for component coordination (2002) Elect. Notes in Theor. CS, 66 (4); Zimmer, A., (2007) Prioritizing Features Through Categorization: An Approach to Resolving Feature Interactions, , PhD thesis, University of Waterloo","Nejati, S.; University of Toronto, Toronto, Canada; email: shiva@cs.toronto.edu",,ACM SIGSOFT,,"16th ACM SIGSOFT International Symposium on the Foundations of Software Engineering, SIGSOFT 2008/FSE-16",9 November 2008 through 14 November 2008,"Atlanta, GA",79694,,9781595939951,,,English,Proc ACM SIGSOFT Symp Found Software Eng,Conference Paper,Scopus,2-s2.0-77950478186,,
,4,,"Alshaikh, Z., Boughton, C.",Context centralised method for software architecture: A pattern evolutionary approach,2008,"Doctoral Consortium on Software and Data Technologies - Proceedings of the Doctoral Consortium on Software and Data Technologies, DCSOFT 2008; In Conjunction with ICSOFT 2008",,,,86,97,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-58049151019&partnerID=40&md5=122fe53d0ec8d0d6db8bb2c555441e73,"Department of Computer Science, Australian National University, Canberra, Australia","Alshaikh, Z., Department of Computer Science, Australian National University, Canberra, Australia; Boughton, C., Department of Computer Science, Australian National University, Canberra, Australia","Context plays an important role in various analysis and design methods in software engineering, and is typically exemplified within data flow diagrams and (sometimes) design patterns. However, we believe that context within software engineering has been largely limited to identifying system boundaries for the scoping of work. In this paper we introduce an approach where the notion of context plays a central role during the analysis, architecture and design phases of software development, providing greater meaning and understanding. Accordingly, we provide a definition of context and how it relates to requirements, architecture and design and then propose a method of requirements elicitation/analysis based on context and its inherent properties for reducing ambiguity, increasing understanding and enabling greater communication. We extend the ideas to include the building of architectures and designs based on context-pattern evolution.",,Data flow analysis; Design; Software architecture; Software engineering; Analysis and designs; Data flow diagrams; Design patterns; Design phases; Evolutionary approaches; Identifying systems; Pattern evolutions; Scoping; Software developments; Architectural design,,,,,,"Albus, J.S., A reference model architecture for intelligent systems design (1992) An Introduction to Intelligent and Autonomous Control, pp. 57-64. , Antsaklis, P. J. and Passino, K. M, editors, Boston, MA. Kluwer Academic Publishers; Alexander, C., (1964) Notes on Thensis of Form, , Harvard University Press; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Alexander, C., The origins of pattern theory: The future of the theory, and the generation of a living world (1999) IEEE Software, pp. 71-82; Alexander, C., Ishikawa, S., with Max, Jacobson, M.S., Fiksdahl-King, I., Angel, S., (1977) A pattern language : Towns, buildings, construction, , Oxford University Press; Alshaikh, Z., Boughton, C., The context dynamics matrix (2008), To be publishedBachmann, F., Bass, L., Klein, M., and Shelton, C. (2005). Designing software architectures to achieve quality attribute requirements. In IEE Proc.-Softw, 152, page 153:165. IEEBass, L., Bergey, J., Clements, P., Merson, P., Ozkaya, I., Sangwan, R., A comparison of requirements specification methods from a software architecture perspective (2006), Technical report, Software Engineering Institute, Carnegie MellonBosch, J., (2000) Design & use of software architectures, , Addison-Wesley, London; Bübl, F., Balser, M., Tracing cross-cutting requirements via context-based constraints (2005) CSMR '05: Proceedings of the Ninth European Conference on Software Maintenance and Reengineering, pp. 80-90. , Washington, DC, USA. IEEE Computer Society; Buschmann, F., Henney, K., Schmidt, D.C., (2007) Software-Oriented Software Architecture On Patterns and Pattern Languages, , John Wiley & Sons, Ltd; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture A System of Patterns, , John Wiley & Sons; DeMarco, T., (1979) Structured Analysis and System Specification, , Yourdon Press Upper Saddle River, NJ, USA; Dey, A.K., Understanding and using context (2001) Personal and Ubiquitous Computing, 5, pp. 4-7; Dilley, R., (1999) The Problem of Context, , Berghan Books; Flint, S., (2006) Aspect-Oriented Thinking An approach to bridging the disciplinary divides, , PhD thesis, Australian National University; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns Elements of Reusable Object-Oriented Software, , Addison Wesley; Hatley, D.J., Pirbhai, I.A., (1988) Strategies for Real-Time System Specification, , Dorset House; Kazman, R., Bass, L., Klein, M., Lattanze, T., Northrop, L., A basis for analyzing software architecture analysis methods (2005) Software Quality Journal, 13, pp. 329-355; Kazman, R., Bass, L., Webb, M., Abowd, G., Saam: A method for analyzing the properties of software architectures (1994) ICSE '94: Proceedings of the 16th international conference on Software engineering, pp. 81-90. , Los Alamitos, CA, USA. IEEE Computer Society Press; Mellor, S.J., Balcer, M.J., Executable UML A foundation for Model-Driven Architecture (2002) The Addison-Wesley Object Technology Series; Potts, C. and Bruns, G. (1988). Recording the reasons for design decisions. In ICSE '88: Proceedings of the 10th international conference on Software engineering, pages 418-4-27, Los Alamitos, CA, USA. IEEE Computer Society PressPotts, C., Hsi, I., Abstraction and context in requirements engineering: Toward a synthesis (1997) Annals of Software Engineering, 3, pp. 23-61; Scharfstein, B.-A., (1989) The Dilemma of Context, , NYUPress; van Lamsweerde, A., Requirements engineering in the year 00: A research perspective (2000) icse, pp. 5-19; Ward, P.T., Mellor, S.J., (1986) Structured Development for Real-time Systems, , Yourdon Press; Wiegers, K.E., (2003) Software Requirements, , Microsoft Press; Yourdon, E., (1989) Modern Structured Analysis, , Prentice-Hall International Editions","Alshaikh, Z.; Department of Computer Science, Australian National University, Canberra, Australia; email: ziyad.alshaikh@anu.edu.au",,,,"Doctoral Consortium on Software and Data Technologies, DCSOFT 2008; In Conjunction with ICSOFT 2008",5 July 2008 through 8 July 2008,Porto,74932,,9789898111548,,,English,Proc. Doctoral Consort. Softw. Data Technol. - DCSOFT; In Conjunction ICSOFT,Conference Paper,Scopus,2-s2.0-58049151019,,
,3,,"Fülöp, L.J., Hegedus, P., Ferenc, R.",BEFRIEND - A benchmark for evaluating reverse engineering tools,2008,"Periodica Polytechnica, Electrical Engineering",52,3-4,,153,162,,2,10.3311/pp.ee.2008-3-4.04,http://www.scopus.com/inward/record.url?eid=2-s2.0-79955728179&partnerID=40&md5=f4dff5f2cf9f7aa5053459a31cf2a307,"University of Szeged, Department of Software Engineering, Hungary","Fülöp, L.J., University of Szeged, Department of Software Engineering, Hungary; Hegedus, P., University of Szeged, Department of Software Engineering, Hungary; Ferenc, R., University of Szeged, Department of Software Engineering, Hungary","Reverse engineering tools analyze the source code of a software system and produce various results, which usually point back to the original source code. Such tools are e.g. design pattern miners, duplicated code detectors and coding rule violation checkers. Most of the time these tools present their results in different formats, which makes them very difficult to compare. In this paper, we present work in progress towards implementing a benchmark called BEFRIEND (BEnchmark For Reverse englnEering tools workiNg on source coDe) with which the outputs of reverse engineering tools can be easily and efficiently evaluated and compared. It supports different kinds of tool families, programming languages and software systems, and it enables the users to define their own evaluation criteria. Furthermore, it is a freely available web-application open to the community. We hope that in the future it will be accepted and used by the community members to evaluate and compare their tools with each other. © Periodica Polytechnica 2008.",Benchmark; Code clones; Design patterns; Reverse engineering tools; Tool evaluation,Benchmark; Code clone; Coding rule; Design patterns; Evaluation criteria; Programming language; Reverse engineering tools; Software systems; Source codes; Work in progress; Computer software; Reverse engineering; Equipment,,,,,,"Ayewah, N., Pugh, W., Morgenthaler, J., Penlx, J., Zhou, Y., Evaluating static analysis defect warnings on production software (2007) Paste'07: Proceedings of the 7th Acm Sigplan-sigsoft Workshop on Program Analysis for Software Tools and Engineering, pp. 1-8. , ACM, DOI 10.1145/1251535.1251536, to appear in print; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proceedings of the 19th International Conference on Software Maintenance (icsm 2003), pp. 305-314. , IEEE Computer Society, September, DOI 10.1109/ICSM.2003.1235436, to appear in print; The Bauhaus Homepage, , http://www.bauhaus-Stuttgart.de, available at; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and evaluation of clone detection tools (2007) IEEE Transactions on Software Engineering, 33 (9), pp. 577-591. , DOI 10.1109/TSE.2007.70725; Burd, E., Bailey, J., Evaluating clone detection tools for use during preventative maintenance (2002) Proceedings of the 2th International Workshop on Source Code Analysis and Manipulation (scam 2002), p. 3643. , IEEE Computer Society, DOI 10.1109/SCAM.2002.1134103, to appear in print; The CCFinder Homepage, , http://www.ccfinder.net/, available at; The Design Pattern Detection Tool Homepage, , http://java.uom.gr-nikos/pattern-detection.html, available at; Ferenc, R., Gustafsson, J., Muller, L., Paakki, J., Recognizing design patterns in C++ programs with the integration of Columbus and Maisa (2002) Acta Cybernetica, 15 (4), pp. 669-682; Fowler, M., Beck, K., Brant, J., Opdyke, W., Roberts, D., (1999) Refactoring: Improving the Design of Existing Code, , Addison-Wesley Pub Co, ISBN ISBN 0-201-48567-2; Fulop, L.J., Ferenc, R., Gyimothy, T., Towards a benchmark for evaluating design pattern miner tools (2008) Proceedings of the 12th European Conference on Software Maintenance and Reengineering (csmr 2008), , IEEE Computer Society, April, DOI 10.1109/CSMR.2008.4493309, to appear in print; Fülöp, L.J., Hegedüs, P., Ferenc, R., Gyimóthy, T., Towards a benchmark for evaluating reverse engineering tools (2008) Tool Demonstrations of the 15th Working Conference on Reverse Engineering (were 2008), , October, DOI 10.1109/WCRE.2008.18, to appear in print; Gamma, E., Helm, R., Johnson, R., Vlissldes, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Pub Co, ISBN ISBN 0-201-63361-2; Pettersson, N., Lowe, W., Nivre, J., (2006) On Evaluation of Accuracy in Pattern Detection. First International Workshop on Design Partem Detection for Reverse Engineering (dpd4re'06), , http://cs.msi.vxu.se/papers/PLN2886a.pdf, October; Rutar, N., Almazan, C.B., Foster, J.S., A comparison of bug finding tools for Java (2004) Proceedings - International Symposium on Software Reliability Engineering, ISSRE, pp. 245-256. , ISSRE 2004 Proceedings; 15th International Symposium on Software Reliability Engineering; Rysselbergne, F.V., Demeyer, S., Evaluating clone detection techniques (2003) Proceedings of the International Workshop on Evolution of Large Scale Industrial Software Applications, , citeseer.ist.psu.edu/vanrysselberghe63evaluating.html, 2003; Van Rysselberghe, F., Demeyer, S., Evaluating clone detection techniques from a refactoring perspective (2004) Proceedings - 19th International Conference on Automated Software Engineering, ASE 2004, pp. 336-339. , Proceedings - 19th International Conference on Automated Software Engineering, ASE 2004; Sim, S.E., Easterbrook, S., Holt, R.C., Using benchmarking to advance research: A challenge to software engineering (2003) Proceedings of the Twenty-fifth International Conference on Software Engineering (icse'03), pp. 74-83. , IEEE Computer Society, May, DOI 10.1109/ICSE.2003.1201189, to appear in print; Sim, S.E., (2003) A Theory of Benchmarking with Applications to Software Reverse Engineering, , Ph. D. Thesis; The Simian Homepage, , http://www.redhillconsulting.com.au/products/simian/, available at; Wagner, S., Delssenboeck, F., Aichner, M., Wimmer, J., Schwalb, M., An evaluation of two bug pattern tools for Java (2008) Proceedings of the 1st Ieee International Conference on Software Testing, Verification and Validation, pp. 1-8. , icst, ACM, 2008, DOI 10.1109/ICST.2008.63, to appear in print; Wagner, S., Jurjens, J., Koller, C., Trischberger, P., Comparing bug finding tools with reviews and tests (2005) Lecture Notes in Computer Science, 3502, pp. 40-55. , Testing of Communicating Systems: 17th IFIP TC6/WG 6.1 International Conference, TestCom 2005. Proceedings; Wagner, S., A literature survey of the quality economics of defect-detection techniques (2006) ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering, 2006, pp. 194-203. , DOI 10.1145/1159733.1159763, ISCE'06 - Proceedings of the 5th ACM-IEEE International Symposium on Empirical Software Engineering","Fülöp, L. J.; University of Szeged, Department of Software EngineeringHungary; email: flajos@inf.u-szeged.hu",,,,,,,,3246000,,PPYTA,,English,Period Polytech Electr Eng,Article,Scopus,2-s2.0-79955728179,,
,4,,"Scharffe, F., Euzenat, J., Fensel, D.",Towards design patterns for ontology alignment,2008,Proceedings of the ACM Symposium on Applied Computing,,,,2321,2325,,7,10.1145/1363686.1364236,http://www.scopus.com/inward/record.url?eid=2-s2.0-56749169826&partnerID=40&md5=68a01c59e68e006c4b5270b788f10334,"University of Innsbruck, Austria; INRIA, Grenoble, France","Scharffe, F., University of Innsbruck, Austria; Euzenat, J., INRIA, Grenoble, France; Fensel, D., University of Innsbruck, Austria","Aligning ontologies is a crucial and tedious task. Matching algorithms and tools provide support to facilitate the task of the user in defining correspondences between ontologies entities. However, automatic matching is actually limited to the detection of simple one to one correspondences to be further refined by the user. We propose in this paper the use of correspondence patterns as a tool to assist the design of ontology alignments. Based on existing research on patterns in the fields of software and ontology engineering, we propose a pattern template as an helper to develop a correspondence patterns library. We give ways towards the representation of patterns using an appropriate correspondence representation formalism: the Alignment Ontology. Copyright 2008 ACM.",,Alignment; Engineering research; Automatic matching; Correspondence patterns; Design patterns; Matching algorithms; Ontology alignments; Ontology engineerings; Representation formalisms; Ontology,,,,,,"Christopher Alexander, S.I., Silverstein, M., A Pattern Language (1977) Center for Environmental Structure Series, 2. , of, Oxford University Press, New York, New York, USA; Bechhofer, S., Frank van Harmelen, J.H., Horrocks, I., McGuinness, D.L., Patel-Schneider, P.F., Andrea Stein, L., (2004), OWL web ontology language reference. Technical report, W3C, 2004. W3C Recommendation 10 FebruaryBlomqvist, E., Sandkuhl, K., Patterns in ontology engineering: Classification of ontology patterns (2005) ICEIS, 3, pp. 413-416; Borgida, A., Serafini, L., Distributed description logics: Assimilating information from peer sources (2003) Journal of Data Semantics, 1, pp. 153-184; Paolo Bouquet, Fausto Giunchiglia, Frank van Harmelen, Luciano Serafini, and Heiner Stuckenschmidt. Cowl: Contextualizing ontologies. In Second International Semantic Web Conference (ISWC-200S), LNCS 2870, pp. 164-179, Springer Verlag, 2003., 2003Jos de Bruijn, H.L., Polleres, A., Fensel, D., The web service modeling language: An overview (2006) Lecture Notes in Computer Science, 4011, pp. 590-604. , Proceedings of the 3rd European Semantic Web Conference ESWC2006, number in, Budva, Montenegro, June, Springer-Verlag; Clark, P., Thompson, J., Porter, B., Knowledge patterns (2000) KR2000: Principles of Knowledge Representation and Reasoning, pp. 591-600. , Anthony G. Cohn, Fausto Giunchiglia, and Bart Selman, editors, San Francisco, Morgan Kaufmann; Jos de Bruijn, Douglas Foxvog, and Kerstin Zimmermann. Ontology mediation patterns library v1. Deliverable D4.3.1, SEKT project (IST-2003-506826), 2004Euzenat, J., An API for ontology alignment (2004) Proc. 3rd international semantic web conference, Hiroshima (JP), pp. 698-712; Jérôme Euzenat, François Scharffe, and Antoine Zimmerman. D2.2.10: Expressive alignment language and implementation. Project deliverable 2.2.10, Knowledge Web NoE (FP6-507482), 2007Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley Pub; Gangemi, A., Ontology design patterns for semantic web content (2005) International Semantic Web Conference, pp. 262-276; Klein, M., Combining and relating ontologies: An analysis of problems and solutions (2001) Workshop on Ontologies and Information Sharing; Mädche, A., Motik, B., Silva, N., Volz, R., MAFRA - a mapping framework for distributed ontologies (2002) Proceedings of the International Conference on Knowledge Engineering and Knowledge Management (EKAW), pp. 235-250; Miles, A., Ban, B., Skos core vocabulary (2005), Technical report, World Wide Web Consortium W3CPolleres, A., Scharffe, F., Schindlauer, R., Sparql++ for mapping between rdf vocabularies (2007) ODBASE, On the Move Federated Conferences (to appear); Rosengard, J.-M., Ursu, M.F., Ontological representations of software patterns (2004), 3215(2007) François Scharffe. Omwg d7: Ontology mapping language, , http://www.omwg.org/TR/d7; François Scharffe and Jos de Bruijn. A language to specify mappings between ontologies. In Proc. of the Internet Based Systems IEEE Conference (SITIS05), 2005François Scharffe, Jos de Bruijn, and Douglas Foxvog. Ontology mediation patterns library v2. Deliverable D4.3.2, SEKT project (IST-2003-506826), 2005Staab, S., Erdmann, M., Maedche, A., Engineering ontologies using semantic patterns (2001) Proceedings of the IJCAI-01 Workshop on E-Business & the Intelligent Web, , A. Preece &. D. O'Leary, editor, Seattle, WA, USA, August 5","Scharffe, F.; University of InnsbruckAustria; email: francois.scharffe@uibk.ac.at",,ACM Special Interest Group on Applied Computing (ACM SIGAPP),,"23rd Annual ACM Symposium on Applied Computing, SAC'08",16 March 2008 through 20 March 2008,"Fortaleza, Ceara",74316,,9781595937537,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-56749169826,,
,1,,"Moallemi, M., Wainer, G.",Design of Persian tapestry in CD++,2008,"Proceedings of the 2008 Spring Simulation Multiconference, SpringSim'08",,,11,,,,,10.1145/1400549.1400699,http://www.scopus.com/inward/record.url?eid=2-s2.0-70249123478&partnerID=40&md5=eeaa8901c091c5a085d0629c136f2b14,"Dept. of Systems and Computer Engineering, Carleton University Centre of Visualization and Simulation (V-Sim), 1125 Colonel By Dr., Ottawa, ON, Canada","Moallemi, M., Dept. of Systems and Computer Engineering, Carleton University Centre of Visualization and Simulation (V-Sim), 1125 Colonel By Dr., Ottawa, ON, Canada; Wainer, G., Dept. of Systems and Computer Engineering, Carleton University Centre of Visualization and Simulation (V-Sim), 1125 Colonel By Dr., Ottawa, ON, Canada","DEVS is a formal modeling and simulation (M & S) framework based on generic dynamic system concepts. Cell-DEVS is a formalism for cell-divided models based on DEVS. Cellular automata can be used to model tapestries by implementing them as a 3-D cell space. In this work we simulate some models of Persian tapestry by Cell-DEVS formalism, considering each cell as a knot in tapestry. There are three planes (tapestry plane, front plane and rear plane) each containing n by n cells. The final shape of tapestry is represented in the tapestry plane. We simulate variety of design patterns with different sizes of tapestries to illustrate simple to complex designs. The simulator used in this work is CD++, an M & S toolkit that implements DEVS and Cell-DEVS theories. The results of the simulation are presented in 2D environment with CD++ modeler.",Cellular automata; DEVS; Persian tapestry,Cell spaces; Cell-DEVS; Complex designs; Design Patterns; DEVS; Different sizes; Dynamic Systems; Formal modeling; Persian tapestry; Persians; Cell membranes; Cellular automata; Data storage equipment; Dynamical systems; Fabrics; Pattern recognition systems; Robots; Three dimensional; Translation (languages); Simulators,,,,,,"ZEIGLER, B., KIM, T., PRAEHOFER, H., (2000) Theory of Modeling and Simulation, , Academic Press; Wolfram, S., Theory and applications of cellular automata (1986) Advances Series on Complex Systems, 1. , World Scientific. Singapore; The Use of Cellular Automata in the Classroom, Lilly, H.A.; Supercomputing, 1995. Proceedings of the IEEE/ACM SC95 ConferenceWAINER, G., GIAMBIASI, N., Timed Cell-DEVS: Modeling and simulation of cell spaces (2001) Discrete Event Modeling & Simulation: Enabling Future Technologies, , Springer-Verlag; WAINER, G., CD++: A toolkit to define discrete-event models (2002) Software, Practice and Experience, 32 (3), pp. 1261-1306. , November; Warner, G. et al. CD++ A tool for DEVS and Cell-DEVS Modeling and Simulation. User's Guide. Draft. August 2004Wilson Venhola. Visualization of Complex Simulations: A DEVS Visualization Tool. B.A Report. Department of Systems and Computer Engineering-Carleton University","Moallemi, M.; Dept. of Systems and Computer Engineering, Carleton University Centre of Visualization and Simulation (V-Sim), 1125 Colonel By Dr., Ottawa, ON, Canada; email: moallemi@sce.carleton.ca",,Society for Modeling and Simulation International,,"2008 Spring Simulation Multiconference, SpringSim'08",14 April 2008 through 17 April 2008,"Ottawa, ON",76713,,1565553195,9781565553194,,,English,"Proc. Spring Simul. Multiconference, SpringSim",Conference Paper,Scopus,2-s2.0-70249123478,
,v,,"Guéhéneuc, Y.-G., Antoniol, G.",DeMIMA: A multilayered approach for design pattern identification,2008,IEEE Transactions on Software Engineering,34,5,,667,684,,73,10.1109/TSE.2008.48,http://www.scopus.com/inward/record.url?eid=2-s2.0-54249161556&partnerID=40&md5=401b448be7e595d27fd83a4096fcf671,"Département d'Informatique et Recherche Opérationnelle, Université de Montréal, C.P. 6128, succ. Centre Ville, Montréal, QC H3C 3J7, Canada; Département d'Informatique, École Polytechnique de Montréal, C.P. 6079, succ. Centre Ville, Montréal, QC H3C 3A7, Canada","Guéhéneuc, Y.-G., Département d'Informatique et Recherche Opérationnelle, Université de Montréal, C.P. 6128, succ. Centre Ville, Montréal, QC H3C 3J7, Canada; Antoniol, G., Département d'Informatique, École Polytechnique de Montréal, C.P. 6079, succ. Centre Ville, Montréal, QC H3C 3A7, Canada","Design patterns are important in object-oriented programming because they offer design motifs, elegant solutions to recurrent design problems, which improve the quality of software systems. Design motifs facilitate system maintenance by helping to understand design and implementation. However, after implementation, design motifs are spread throughout the source code and are thus not directly available to maintainers. We present DeMIMA, an approach to identify semi-automatically micro-architectures that are similar to design motifs in source code and to ensure the traceability of these micro-architectures between implementation and design. DeMIMA consists of three layers: two layers to recover an abstract model of the source code, including binary class relationships, and a third layer to identify design patterns in the abstract model. We apply DeMIMA to five open-source systems and, on average, we observe 34 percent precision for the considered 12 design motifs. Through the use of explanation-based constraint programming, DeMIMA ensures 100 percent recall on the five systems. We also apply DeMIMA on 33 industrial components. © 2008 IEEE.",Design patterns; Interclass relationships; Maintenance traceability,Abstracting; Codes (symbols); Computer programming; Constraint theory; Design; Maintenance; Object oriented programming; Abstract models; Binary class relationships; Constraint programmings; Design motifs; Design patterns; Design problems; Industrial components; Interclass relationships; Multilayered approaches; Object-oriented programmings; Quality of softwares; Source codes; Source systems; System maintenances; Two layers; Architectural design,,,,,,"Merriam-Webster, , www.merriam-webster.com, Online Dictionary, Mar. 2003; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Software, , first ed. Addison-Wesley; K. Beck and R.E. Johnson, Patterns Generate Architectures, Proc. Eighth European Conf. for Object-Oriented Programming, M. Tokoro and R. Pareschi, eds., pp. 139-149, http://citeseer.nj.nec.com/27318.html, July 1994Rich, C., Waters, R.C., The Programmer's Apprentice (1990) ACM Press Frontier Series and Addison-Wesley, , first ed, Jan; R. Wuyts, Declarative Reasoning About the Structure of Object-Oriented Systems, Proc. 26th Conf. Technology of Object-Oriented Languages and Systems, J. Gil, ed., pp. 112-124, http://www.iam.unibe.ch/~wuyts/publications.html, Aug. 1998Y.-G. Guéhéneuc and H. Albin-Amiot, Recovering Binary Class Relationships: Putting Icing on the UML Cake, Proc. 19th Conf. Object-Oriented Programming, Systems, Languages, and Applications, D.C. Schmidt, ed., pp. 301-314, http://www.iro.umontreal.ca/ptidej/Publications/Documents/ OOPSLA04.doc.pdf, Oct. 2004Y.-G. Guéhéneuc, R. Douence, and N. Jussien, No Java without Caffeine - A Tool for Dynamic Analysis of Java Programs, Proc. 17th Conf. Automated Software Eng., W. Emmerich and D. Wile, eds., pp. 117-126, http://www.iro.umontreal.ca/~ptidej/ Publications/Documents/ASE02.doc.pdf, Sept. 2002Y.-G. Guéhéneuc and N. Jussien, Using Explanations for Design-Patterns Identification, Proc. First IJCAI Workshop Modeling and Solving Problems with Constraints, C. Bessière, ed., pp. 57-64, http://www.iro.umontreal.ca/ptidej/Publications/ Documents/IJCAI01MSPC.doc.pdf, Aug. 2001J. Bansiya, Automating Design-Pattern Identification, Dr. Dobb's J., http://www.ddj.com/articles/1998/9806/9806a/ 9806a.htm?topic=patterns, June 1998T. Richner and S. Ducasse, Recovering High-Level Views of Object-Oriented Applications from Static and Dynamic Information, Proc. Seventh Int'l Conf. Software Maintenance, H. Yang and L. White, eds., pp. 13-22, http://www.computer.org/proceedings/icsm/0016/ 00160013abs.htm, Aug. 1999D. Jackson and M.C. Rinard, Software Analysis: A Roadmap, Proc. 22nd Int'l Conf. Software Eng., Future of Software Eng. Track, M. Jazayeri and A. Wolf, eds., pp. 133-145, http://sdg.lcs.mit.edu/%20dnj/talks/roadmap/, June 2000P. Tonella and A. Potrich, Reverse Engineering of the UML Class Diagram from C++ Code in Presence of Weakly Typed Containers, Proc. Int'l Conf. Software Maintenance, G. Canfora and A.A.A.-V. Maryhauser, eds., pp. 376-385, http://www.computer.org/proceedings/icsm/ 1189/11890376abs.htm, Nov. 2001Thomas, D., Reflective Software Engineering - From MOPS to AOSD (2002) J. Object Technology, 1 (4), pp. 17-26. , http://www.jot.fm/jot/issues/issue_2002_09/column1/index.html, Sept; Gyimóthy, T., Ferenc, R., Siket, I., Empirical Validation of Object Oriented Metrics on Open Source Software for Fault Prediction (2005) IEEE Trans. Software Eng, 31 (10), pp. 897-910. , http://csdl2.computer.org/dl/trans/ts/2005/10/e0897.pdf, Oct; J.H. Jahnke, W. Schäfer, and A. Zündorf, Generic Fuzzy Reasoning Nets as a Basis for Reverse Engineering Relational Database Applications, Proc. Sixth European Software Eng. Conf., M. Jazayeri, ed., pp. 193-210, http://www.uni-paderborn.de/cs/varlet/ docs.html, Sept. 1997J. Niere, J.P. Wadsack, and A. Zündorf, Recovering UML Diagrams from Java Code Using Patterns, Proc. Second Workshop Soft Computing Applied to Software Eng., J.H. Jahnke and C. Ryan, eds., pp. 89-97, http://trese.cs.utwente.nl/scase/scase-2/ Proceedings.pdf, Feb. 2001J. Niere, J.P. Wadsack, and L. Wendehals, Handling Large Search Space in Pattern-Based Reverse Engineering, Proc. 11th Int'l Workshop Program Comprehension, K. Wong and R. Koschke, eds., pp. 274-280, http://portal.acm.org/citation.cfm?id=857020, May 2003D. Jackson and A. Waingold, Lightweight Extraction of Object Models from Bytecode, Proc. 21st Int'l Conf. Software Eng., D. Garlan and J. Kramer, eds., pp. 194-202, http://sdg.lcs.mit.edu/dnj/, May 1999UML v1.5 Specification, , http://www.omg.org/cgi-bin/doc?formal/03-03-01, Mar. 2003; J. Noble and J. Grundy, Explicit Relationships in Object-Oriented Development, Proc. 18th Conf. Technology of Object-Oriented Languages and Systems, B. Meyer, ed., pp. 211-226, http:// citeseer.nj.nec.com/noble95explicit.html, Nov. 1995F. Civello, Roles for Composite Objects in Object-Oriented Analysis and Design, Proc. Eighth Conf. Object-Oriented Programming, Systems, Languages, and Applications, A. Paepcke, ed., pp. 376-393, http://www.it.bton.ac.uk/staff/frc/papers/aboops93.html, Sept. 1993S. Ducasse, M. Blay-Fornarino, and A.-M. Pinna-Dery, A Reflective Model for First Class Dependencies, Proc. 10th Conf. Object-Oriented Programming, Systems, Languages, and Applications, F. Manola, ed., pp. 265-280, http://www.iam.unibe.ch/~ducasse/WebPages/ Publications.html, Oct. 1995Wills, L., Automated Program Recognition by Graph Parsing, (1992), PhD dissertation, Massachusetts Inst. of TechnologyJ. Niere, W. Schäfer, J.P. Wadsack, L. Wendehals, and J. Welsh, Towards Pattern-Based Design Recovery, Proc. 24th Int'l Conf. Software Eng., M. Young and J. Magee, eds., pp. 338-348, http://portal.acm.org/citation.cfm?id=581382, May 2002C. Krämer and L. Prechelt, Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software, Proc. Third Working Conf. Reverse Eng., L.M. Wills and I. Baxter, eds., pp. 208-215, http://www.computer.org/ proceedings/wcre/7674/76740208abs.htm, Nov. 1996B. Kullbach and A. Winter, Querying as an Enabling Technology in Software Reengineering, Proc. Third Conf. Software Maintenance and Reengineering, P. Nesi and C. Verhoef, eds., pp. 42-50, http:// www.computer.org/proceedings/csmr/0090/00900042abs.htm, Mar. 1999R.K. Keller, R. Schauer, S. Robitaille, and P. Pagé Pattern-Based Reverse-Engineering of Design Components, Proc. 21st Int'l Conf. Software Eng., D. Garlan and J. Kramer, eds., pp. 226-235, http://www.iro.umontreal.ca/~schauer/Private/ Publications/icse1999/icse1999.html, May 1999J.H. Jahnke and A. Zündorf, Rewriting Poor Design Patterns by Good Design Patterns, Proc. First ESEC/FSE Workshop Object-Oriented Reengineering, S. Demeyer and H.C. Gall, eds., http://www.iam.unibe.ch/~famoos/ESEC97/, Distributed Systems Group, Technical Univ. of Vienna, UV-1841-97-10, Sept. 1997G. Antoniol, R. Fiutem, and L. Cristoforetti, Design Pattern Recovery in Object-Oriented Software, Proc. Sixth Int'l Workshop Program Comprehension, S. Tilley and G. Visaggio, eds., pp. 153-160, http://citeseer.nj.nec.com/antonio198design.html, June 1998J. Seemann and J.W. von Gudenberg, Pattern-Based Design Recovery of Java Software, Proc. Fifth Int'l Symp. Foundations of Software Eng. B. Scherlis, ed., pp. 10-16, http://www.informatik. uni-trier.de/~ley/db/indices/a-tree/s/Seemann:JOchen.html, Nov. 1998D. Eppstein, Subgraph Isomorphism in Planar Graphs and Related Problems, Proc. Sixth Ann. Symp. Discrete Algorithms, K. Clarkson, ed., pp. 632-640, www.ics.uci.edu/~eppstein/pubs/ Epp-TR-94-25.pdf, Jan. 1995N. Pettersson and W. Löwe, Efficient and Accurate Software Pattern Detection, Proc. 13th Asia Pacific Software Eng. Conf., P. Jalote, ed., pp. 317-326, http://ieeexplore.ieee.org/xpls/ abs_all.jsp?isnumber=4137387&arnumber=4137433&count= 65&index=43, Dec. 2006Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design Pattern Detection Using Similarity Scoring (2006) IEEE Trans. Software Eng, 32 (11). , Nov; Brown, K., Design Reverse-Engineering and Automated Design Pattern Detection in Smalltalk, (1996), http://citeseer.nj.nec.com/context/734211/0, Technical Report TR-96-07, Dept. of Computer Science, Univ. of Illinois at Urbana-Champaign, JulyG. Hedin, Language Support for Design Patterns Using Attribute Extension, Proc. First ECOOP Workshop Language Support for Design Patterns and Frameworks, J. Bosch and S. Mitchell, eds., Springer, pp. 137-140, http://www.cs.lth.se/Research/ProgEnv/LSDF.html, June 1997H. Albin-Amiot and Y.-G. Guéhéneuc, Meta-Modeling Design Patterns: Application to Pattern Detection and Code Synthesis, Proc. First ECOOP Workshop Automating Object-Oriented Software Development Methods, P. van den Broek, P. Hruby, M. Saeki, G. Sunyé, and B. Tekinerdogan, eds., http://www.iro.umontreal.ca/~ptidej/Publications/Documents/ ECOOP01AOOSDM. doc.pdf, Centre for Telematics and Information Technology, Univ. of Twente, tR-CTIT-01-35, Oct. 2001Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An Approach for Reverse Engineering of Design Patterns (2005) Software and System Modeling, 4 (1), pp. 55-70. , http://www.springerlink.com/content/0dn4pmqh5uhnbk69, Feb; D. Heuzeroth, T. Holl, and W. Löwe, Combining Static and Dynamic Analyses to Detect Interaction Patterns, Proc. Sixth World Conf. Integrated Design and Process Technology, H. Ehrig, B.J. Krämer, and A. Ertas, eds., http://www.info.uni-karlsruhe. de/publications.php/bib=281, June 2002Y.-G. Guéhéneuc A Systematic Study of UML Class Diagram Constituents for Their Abstract and Precise Recovery, Proc. 11th Asia-Pacific Software Eng. Conf., D.-H. Bae and W.C. Chu, eds., pp. 265-274, http://www.iro.umontreal.ca/~ptidej/ Publications/Documents/APSEC04.doc.pdf, Nov.-Dec. 2004A. Donovan, A. Kiezun, M.S. Tschantz, and M.D. Ernst, Converting Java Programs to Use Generic Libraries, Proc. 19th Conf. Object-Oriented Programming Systems, Languages, and Applications, D. Schmidt, ed., pp. 15-34, http://portal.acm.org/citation.cfm?id =1035292.1028979, Oct. 2004N. Jussien and V. Barichard, The PaLM System: Explanation-Based Constraint Programming, Proc. Techniques for Implementing Constraint Programming Systems, N. Beldiceanu, W. Harvey, M. Henz, F. Laburthe, E. Monfroy, T. Müller, L. Perron, and C. Schulte, eds., pp. 118-133, Sept. 2000, School of Computing, Nat'l Univ. of Singapore, tRA9/00N. Jussien, e-Constraints: Explanation-Based Constraint Programming, Proc. First CP Workshop User-Interaction in Constraint Satisfaction B. O'Sullivan and E. Freuder, eds., http:// www.emn.fr/jussien/publications/jussien-WCP01.pdf, Dec. 2001Gamma, E., Eggenschwiler, T., (1998) JHotDraw, , http://members.pingnet.ch/gamma/JHD-5.1.zip; Frakes, W.B., Baeza-Yates, R., (1992) Information Retrieval: Data Structures and Algorithms, , Prentice Hall; J. Bieman, G. Straw, H. Wang, P.W. Munger, and R.T. Alexander Design Patterns and Change Proneness: An Examination of Five Evolving Systems, Proc. Ninth Int'l Software Metrics Symp., M. Berry and W. Harrison, eds., pp. 40-49, http://csdl.computer.org/comp/ proceedings/metrics/2003/1987/00/19870040abs.htm, Sept. 2003Antoniol, G., Casazza, G., di Penta, M., Fiutem, R., Object-Oriented Design Patterns Recovery (2001) J. Systems and Software, 59, pp. 181-196. , http://web.soccerlab.polymtl.ca/~antoniol/publications/index.html, Nov; Y.-G. Guéhéneuc, H. Sahraoui, and F. Zaidi, Fingerprinting Design Patterns, Proc. 11th Working Conf. Reverse Eng., E. Stroulia and A. de Lucia, eds., pp. 172-181, http://www.iro.umontreal.ca/~ptidej/Publications/Documents/ WCRE04.doc.pdf, Nov. 2004Fowler, M., (2002) Patterns of Enterprise Application Architecture, , http://www.amazon.com/Patterns-Enterprise-Application-Architecture-Martin/dp0321127420, first ed. Addison-Wesley Professional, Nov","Guéhéneuc, Y.-G.; Département d'Informatique et Recherche Opérationnelle, Université de Montréal, C.P. 6128, succ. Centre Ville, Montréal, QC H3C 3J7, Canada; email: guehene@iro.umontreal.ca",,,,,,,,985589,,IESED,,English,IEEE Trans Software Eng,Article,Scopus,2-s2.0-54249161556,,
,v,,"Abd-El-Hafiz, S.K., Shawky, D.M., El-Sedeek, A.-L.",Recovery of object-oriented design patterns using static and dynamic analyses,2008,International Journal of Computers and Applications,30,3,,220,233,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-52649180055&partnerID=40&md5=cf542836c778f3ea80f78ede915dd688,"Engineering Mathematics Department, Faculty of Engineering, Cairo University, Giza 12211, Egypt","Abd-El-Hafiz, S.K., Engineering Mathematics Department, Faculty of Engineering, Cairo University, Giza 12211, Egypt; Shawky, D.M., Engineering Mathematics Department, Faculty of Engineering, Cairo University, Giza 12211, Egypt; El-Sedeek, A.-L., Engineering Mathematics Department, Faculty of Engineering, Cairo University, Giza 12211, Egypt","Maintenance is undoubtedly an effort-consuming activity in the software process. The discovery of a collection of high level building blocks, such as design patterns, in a software artifact represents an important step in program understanding and, hence, can be extremely useful during maintenance. This paper presents a new approach that combines static and dynamic analyses to improve the precision and efficiency of recovering object-oriented design patterns. First, we recover pattern candidates, which adhere to the static structure of different patterns. The static recovery algorithms utilize new abstractions, called basic units, to improve the static identification efficiency. Then, two static constraints are enforced on the recovered candidates to improve the identification precision. Finally, we apply dynamic analysis through profiling to further improve the precision. For each pattern, only relevant methods, which characterize its dynamic behaviour, are traced. The overall analysis approach is automated and evaluated on several large-scale open-source case studies. Results of the case studies and the comparisons demonstrate the improved precision and efficiency of the presented approach.",Design patterns; Dynamic analysis; Object-oriented analysis; Reverse engineering; Static analysis,Analysis approach; Case studies; Design patterns; Dynamic behaviours; High level building blocks; Identification precision; New approaches; Object oriented designs; Object-oriented analysis; Open sources; Program understanding; Reverse engineering; Software processing; Static analysis; Static and dynamic; Static constraints; Static identification; Static recovery; Static structures; BASIC (programming language); Computer software maintenance; Electric load shedding; Enhanced recovery; Maintainability; Maintenance; Software design; Structural members; Systems analysis; Dynamic analysis,,,,,,"Gamma, E., Helm, F., Johnson, R., (1995) L.J. Vlissides, Design patterns: Elements of reusable object oriented software, , Boston: Addison-Wesley; Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-605; Shawky, D.M., Abd-El-Hafiz, S.K., El-Sedeek, A.-L., A clustering approach for the identification of object-oriented design patterns (2004) Proc. IEEE Int. Conf. on Electrical, Electronic and Computer Engineering, pp. 295-298. , Cairo, Egypt; Shawky, D.M., Abd-El-Hafiz, S.K., El-Sedeek, A.-L., A dynamic approach for the identification of object-oriented design patterns (2005) Proc. IASTED Conf. on Software Engineering, pp. 138-143. , Innsbruck, Austria; Shull, F., Melo, W.L., Basili, V.R., An inductive method for discovering design patterns from object-oriented software systems (1996), Technical Report, Dept. of Computer Science, University of Maryland, College Park, MDAntoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Proc. 5th Int. Symp. on Software Metrics, pp. 23-34. , Oxford, UK; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000) Proc. Int. Conf. on Software Reuse: Advances in Software Reusability, pp. 318-335. , Vienna, Austria; Schauer, R., Keller, R., Pattern visualization for software comprehension (1998) Proc. 6th Int. Workshop on Program Comprehension, pp. 4-12. , Ischia, Italy; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse-engineering of design components (1999) Proc. Int. Conf. on Software Engineering, pp. 226-235. , Los Angeles, CA, USA; Philippow, I., Streitferdt, D., Riebish, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Journal of Software and System Modeling, 4 (1), pp. 55-79; Baxter, D., Yahin, A., Moura, L., Sant'Anna, M., Bier, L., Clone detection using (1998) Proc. Int. Conf. on Software Maintenance, pp. 368-377. , abstract syntax trees, Bethesda, MD, USA; Tonella, P., Antoniol, G., Inference of object-oriented design patterns (2001) Journal of Software Maintenance and Evolution: Research and Practice, 13 (5), pp. 309-330; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proc. 3rd Working Conf. on Reverse Engineering, pp. 208-215. , Monterey, CA, USA; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proc. 26th Conf. on the Technology of Object-Oriented Languages and Systems, pp. 112-124. , Santa Barbara, CA, USA; Mens, T., Tourwe, T., A declarative evolution framework for object-oriented design patterns (2001) Proc. Int. Conf. on Software Maintenance, pp. 570-579. , Florence, Italy; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) Proc. 1 st IJCAI Workshop on Modeling and Solving Problems with Constraints, pp. 57-64; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proc. 11th Working Conf. on Reverse Engineering, pp. 172-181. , Seattle, WA, USA; Seeman, J., von Gudenberg, J.W., Pattern-based design recovery of Java software (1998) Proc. 6th Int. Symp. on Foundations of Software Engineering, pp. 10-16. , Delft, The Netherlands; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proc. 24th Int. Conf. on Software Engineering, pp. 338-348. , Lake Buena Vista, Florida, USA; Niere, J., Wendehals, L., Zündorf, A., An interactive and scalable approach to design pattern recoveryb (2003), Technical Report, Dept. of Computer Science, University of Paderborn, Pader-born, GermanyBalanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proc. Int. Conf. on Software Maintenance, pp. 305-315. , Amsterdam, The Netherlands; Ferenc, R., Beszdes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) Proc. Int. Conf. on Software Maintenance, pp. 295-304. , Budapest, Hungary; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32 (11), pp. 896-909; Feng, T., Jiachen, W., Ming, X., Design pattern detection from Java software (2005) Proc. IASTED Int. Conf. on Software Engineering, pp. 174-180. , Innsbruck, Austria; Kaczor, O., Gueheneuc, Y., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) Proc. 10th European Conf. on Software Maintenance and Reengineering, pp. 175-184. , Bari, Italy; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery by visual language parsing (2005) Proc. 9th European Conf. on Software Maintenance and Reengineering, pp. 102-111; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Case studies of visual language based design patterns recovery (2006) Proc. Conf. on Software Maintenance and Reengineering, pp. 165-174. , Bari, Italy; Richner, T., Ducasse, S., Recovering high-level views of object-oriented applications from static and dynamic information (1999) Proc. Int. Conf. on Software Maintenance, pp. 13-22. , Oxford, UK; Heuzeroth, D., Mandel, S., Löwe, W., Generating design pattern detectors from pattern specifications (2003) Proc. 18th Int. Conf. on Automated Software Engineering, pp. 245-249. , Montreal, Quebec, Canada; Heuzeroth, D., Holl, T., Hogstrom, G., Löwe, W., Automatic design pattern detection (2003) Proc. Int. Workshop on Program Comprehension, pp. 94-104. , Portland, Oregon, USA; Wang, W., Tzerpos, V., Design pattern detection in Eiffel systems (2005) Proc. Working Conf. on Reverse Engineering, pp. 165-174. , Pittsburgh, PA, USA; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proc. ICSE 2003 Workshop on Dynamic Analysis, pp. 29-32. , Portland, Oregon, USA; Wendehals, L., Specifying patterns for dynamic pattern instance recognition with UML 2.0 sequence diagrams (2004) Proc. 6th Workshop on Software Reengineering, pp. 63-64. , Bad Honnef, Germany; Meyer, M., Wendehals, L., Selective tracing for dynamic analyses (2005) Proc. of the 1 st Workshop on Program Comprehension through Dynamic Analysis, pp. 33-37. , Pittsburgh, PA, USA; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) Workshop on Dynamic Analysis, pp. 43-49. , St. Louis, Missouri, USA; Kung, D., Hsia, P., A reverse engineering approach for software testing of object-oriented programs (1999) Proc. IEEE Symp. on Application-Specific Systems and Software Engineering and Technology, pp. 42-49. , Richardson, TX, USA; Shawky, D.M., (2005) A combined static and dynamic approach for the recovery of object-oriented design patterns, doctoral, , thesis, Engineering Mathematics Dept, Faculty of Engineering, Cairo University, Giza, Egypt","Abd-El-Hafiz, S.K.; Engineering Mathematics Department, Faculty of Engineering, Cairo University, Giza 12211, Egypt; email: salwahafiz@link.net",,,,,,,,1206212X,,IJCAF,,English,Int J Comput Appl,Article,Scopus,2-s2.0-52649180055,,
,4,,"Kouskouras, K.G., Chatzigeorgiou, A., Stephanides, G.",Facilitating software extension with design patterns and Aspect-Oriented Programming,2008,Journal of Systems and Software,81,10,,1725,1737,,13,10.1016/j.jss.2007.12.807,http://www.scopus.com/inward/record.url?eid=2-s2.0-48649107712&partnerID=40&md5=d8e6258dc5c91fd9e0b31c598cbc055d,"Department of Applied Informatics, University of Macedonia, 156 Egnatia Street, 54006 Thessaloniki, Greece","Kouskouras, K.G., Department of Applied Informatics, University of Macedonia, 156 Egnatia Street, 54006 Thessaloniki, Greece; Chatzigeorgiou, A., Department of Applied Informatics, University of Macedonia, 156 Egnatia Street, 54006 Thessaloniki, Greece; Stephanides, G., Department of Applied Informatics, University of Macedonia, 156 Egnatia Street, 54006 Thessaloniki, Greece","Software products, especially large applications, need to continuously evolve, in order to adapt to the changing environment and updated requirements. With both the producer and the customer unwilling to replace the existing application with a completely new one, adoption of design constructs and techniques which facilitate the application extension is a major design issue. In the current work we investigate the behavior of an object-oriented software application at a specific extension scenario, following three implementation alternatives with regards to a certain design problem relevant to the extension. The first alternative follows a simplistic solution, the second makes use of a design pattern and the third applies Aspect-Oriented Programming techniques to implement the same pattern. An assessment of the three alternatives is attempted, both on a qualitative and a quantitative level, by identifying the additional design implications needed to perform the extension and evaluating the effect of the extension on several quality attributes of the application. © 2008 Elsevier Inc. All rights reserved.",Aspect-Oriented Programming; Design patterns; Maintainability; Object-oriented design; Software metrics,Computer software selection and evaluation; Object oriented programming; Software architecture; Aspect-Oriented Programming; Changing environments; Design implications; Design patterns; Design problems; Maintainability; Object-oriented design; Object-oriented software; Quality attributes; Quantitative level; Software extension; Software metrics; Software products; Software design,,,,,,"Bengtsson, P., Lassing, N., Bosch, J., Vliet, H., Architecture-level modifiability analysis (2004) Journal of Systems and Software, 69 (1-2), pp. 129-147; Booch, G., (1994) Object Oriented Analysis and Design with Applications. second ed., , The Benjamin/Cummings Publishing Company; Chidamber, S.R., Kemerer, C.F., A metrics suite for object-oriented design (1994) Proceedings IEEE Transaction on Software Engineering, 20 (6), pp. 476-493; Colyer, A., Clement, A., Harley, G., Webster, M., (2004) Eclipse AspectJ: Aspect-oriented Programming with AspectJ and the Eclipse AspectJ Development Tools, , Addison Wesley Professional, Reading MA; Fowler, M., (1999) Refactoring Improving the Design of Existing Code, , Addison Wesley, Boston, MA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley, Reading, MA; Garcia, A., Sant'Anna, C., Figueiredo, E., Kulesza, U., Lucena, C., Staa, A., 2005. Modularizing design patterns with aspects: a quantitative study. In: Proceedings of the 4th International Conference on Aspect Oriented Software Development, Chicago, Illinois USA, pp. 3-14Guide to the Software Engineering Book of Knowledge (SWEBOK), Version 2004, <http://www.swebok.org>Hannemann, J., Kiczales, G., 2002. Design pattern implementation in Java and AspectJ. In: Proceedings of OOPSLA'02, Seattle, Washington USA, pp. 161-173Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C., Loingtier, J., Irwin, J., 1997. Aspect oriented programming. In: Proceedings of ECOOP'97, LNCS 1241, Finland, pp. 220-242Kulesza, U., Sant'Anna, C., Garcia, A., Coelho, R., Staa, A., Lucena, C., 2006. Quantifying the effects of aspect-oriented programming: a maintenance study. In: 22nd IEEE International Conference on Software Maintenance (ICSM'06), September 2006, pp. 223-233Martin, R.C., (2003) Agile Software Development: Principles, Patterns, and Practices, , Prentice Hall, Upper Saddle River, NJ; Muraki, T., Saeki, M., 2001. Metrics for applying GOF design patterns in refactoring processes. In: International Conference on Software Engineering, Proceedings of the 4th International Workshop on Principles of Software Evolution, Session 2, Vienna, Austria, pp. 27-36Nordberg, M.E., 2001. Aspect-oriented indirection - beyond object-oriented design patterns. In: OOPSLA 2001 Workshop ""Beyond Design: Patterns (mis)used"", October 2001Papapetrou, A., Papadopoulos, A.G., 2004. Aspect Oriented Programming for a component based real life application: a case study. In: Proceedings of the 2004 ACM symposium on Applied computing, SESSION: Software engineering: applications, practices tools (SE), Nicosia, Cyprus, pp. 1554-1558Pressman, R.S., (2004) Software Engineering, A Practitioner's Approach. sixth ed., , Mc Graw Hill Inc, New York; Sant'Anna, C., Garcia, A., Chavez, C., Lucena, C., Staa, A., 2003. On the reuse and maintenance of aspect-oriented software: an assessment framework. In: Proceedings of Brazilian Symposium on Software Engineering (SBES'03), Manaus, Brazil, pp. 19-34Sommerlad, P., Rüedi, M., 1998. Do-it-yourself reflection. In: Proceedings of the 3rd European Conference on Pattern Languages of Programming and Computing, Bad Irsee, GermanyTarr, P., Ossher, H., Harrison, W., Sutton Jr., S.M., 1999. N Degrees of separation: multi-dimensional separation of concerns. In: Proceedings of the 21st International Conference on Software Engineering, ICSE'99, LA, California, pp. 107-119The AspectJ Project, 2007. <http://www.eclipse.org/aspectj>Tsang, S.L., Clarke, S., Baniassad, E., 2004. An evaluation of aspect-oriented programming for Java-based real-time systems development. In: Proceedings of the IEEE 7th International Symposium on Object-Oriented Real-Time Distributed Computing, pp. 291-300","Kouskouras, K.G.; Department of Applied Informatics, University of Macedonia, 156 Egnatia Street, 54006 Thessaloniki, Greece; email: kkous@otenet.gr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-48649107712,,
,v,,"Dong, J., Sun, Y., Zhao, Y.",Compound record clustering algorithm for design pattern detection by decision tree learning,2008,"2008 IEEE International Conference on Information Reuse and Integration, IEEE IRI-2008",,,4583034,226,231,,3,10.1109/IRI.2008.4583034,http://www.scopus.com/inward/record.url?eid=2-s2.0-51949109571&partnerID=40&md5=4d960c9e3dea277bfe0ff20873bf2682,"Computer Science Department, University of Texas at Dallas, Richardson, TX 75083, United States; American Airlines, 4333 Amon Carter Blvd, Fort Worth, TX 76155, United States","Dong, J., Computer Science Department, University of Texas at Dallas, Richardson, TX 75083, United States; Sun, Y., American Airlines, 4333 Amon Carter Blvd, Fort Worth, TX 76155, United States; Zhao, Y., Computer Science Department, University of Texas at Dallas, Richardson, TX 75083, United States","Recovering design patterns applied in a system can help refactoring the system. Machine learning algorithms have been successfully applied in mining data patterns. However, one of the main obstacles of applying them for design pattern detection is the difficulty of collecting training examples. Unlike other applications, a design pattern instance typically includes a group of classes with certain relationships. Thus, the possible combinations of the group of classes can be enormous which results in huge training sets making the application of machine learning algorithms impracticable. In this paper, we propose an innovative method using matrix transformations to cluster the training examples. Our method can significantly reduce the size of training examples, thus making it possible to be efficiently applied in machine learning algorithm. ©2008 IEEE.",Decision tree; Design pattern; Detection; Machine learning; Training example,Arsenic compounds; Artificial intelligence; Chlorine compounds; Clustering algorithms; Decision making; Decision theory; Decision trees; Education; Information use; Learning systems; Real time systems; Robot learning; Trees (mathematics); Data patterns; Decision tree; Decision tree learning; Design pattern; Design pattern detection; Design patterns; Detection; Information re-use; Innovative methods; International conferences; Machine learning; Machine-learning algorithms; Matrix transformations; Refactoring; Training example; Training sets; Learning algorithms,,,,,,"Cappe, O., Moulines, E., Ryden, T., (2005) Inference in Hidden Markov Models, , Springer, ISBN 0-387-40264-0; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design Pattern Discovery Using Matrix (2007) the Proceedings of the Fourteenth Annual IEEE International Conference on Engineering of Computer Based Systems, , USA, March; Dong, J., Sun, Y., Zhao, Y., Design Pattern Detection By Template Matching (2008) the Proceedings of the 23rd Annual ACM Symposium on Applied Computing (SAC), , Ceará, Brazil, March; Dong, J., Yang, S., Zhang, K., Visualizing Design Patterns in Their Applications and Compositions (2007) IEEE Transaction on Software Engineering (TSE), 33 (7), pp. 433-453. , July; Dong, J., Zhao, Y., Peng, T., Architecture and Design Pattern Discovery Techniques - A Review (2007) Proceedings of International Conference on Software Engineering Research and Practice (SERP), , USA, June; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design Pattern Mining Enhanced by Machine Learning 21st IEEE International Conference on Software Maintenance (ICSM'05), pp. 295-304; Gueheneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting Design Patterns (2004) Proc. 11th Working Conf. on Reverse Eng. (WCRE'04), , Nov; Kothari, R., Dong, M., (2000) Decision Trees for Classification: A Review and some new results, , University of Cincinnati; T. M. Mitchell, Machine Learning Chapter 3, p52-p78. 1997, ISBN 0070428077Pachter, L., Sturmfels, B., (2005) Algebraic Statistics for Computational Biology, , Cambridge University Press, ISBN 0-521-85700-7; Quinlan, J.R., (1986) Induction of Decision Trees, , ISBN 0885-6125; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design Pattern Detection Using Similarity Scoring (2006) IEEE transaction on software engineering, 32 (11). , November; Java.awt resource information, , http://java.sun.com/j2se/1.5.0/docs/guide/awt/index.html, September 2006; JHotDraw Start Page, , http://www.jhotdraw.org; Testing Resources for Extreme Programming, , http://www.junit.org","Dong, J.; Computer Science Department, University of Texas at Dallas, Richardson, TX 75083, United States; email: jdong@utdallas.edu",,"IEEE Systems, Man and Cybernetics Society (IEEE SMC)",,"2008 IEEE International Conference on Information Reuse and Integration, IEEE IRI-2008",13 July 2008 through 15 July 2008,"Las Vegas, NV",73563,,9781424426607,,,English,"IEEE Int. Conf. Inf. Reuse Integr., IEEE IRI",Conference Paper,Scopus,2-s2.0-51949109571,,
,4,,"Bayley, I., Zhu, H.",Specifying behavioural features of design patterns in first order logic,2008,Proceedings - International Computer Software and Applications Conference,,,4591558,203,210,,6,10.1109/COMPSAC.2008.67,http://www.scopus.com/inward/record.url?eid=2-s2.0-51949115546&partnerID=40&md5=4b58e0892074c3631abec1ce143d6ee6,"Department of Computing, Oxford Brookes University, Wheatley, Oxfordshire, OX33 1HX, United Kingdom","Bayley, I., Department of Computing, Oxford Brookes University, Wheatley, Oxfordshire, OX33 1HX, United Kingdom; Zhu, H., Department of Computing, Oxford Brookes University, Wheatley, Oxfordshire, OX33 1HX, United Kingdom","The formal specification of design patterns is widely recognised as being vital to their effective and correct use in software development. It can clarify the concepts underlying patterns, eliminate ambiguity and thereby lay a solid foundation for tool support. This paper further advances an approach that uses first order predicate logic to specify design patterns by capturing the dynamic behaviour represented in sequence diagrams. A case study of all 23 patterns in the Gang of Four catalogue demonstrates that it can not only capture dynamic features but also simplify the specification of structural properties. © 2008 IEEE.",,Computer applications; Computers; Formal logic; Formal methods; Software design; Word processing; Case studies; Design patterns; Dynamic behaviours; Dynamic features; First order logic; First orders; Formal specifications; Predicate logics; Sequence diagrams; Software development; Structural properties; Tool supports; Computer software,,,,,,"Bayley, I., Zhu, H., Formalising design patterns in predicate logic (2007) Proc. SEFM'07, , London; Bayley, I., Zhu, H., Specifying behavioural features of design patterns (2008), Tech. Report DOC-TR-08-01, Dept. of Comp, Oxford Brookes Univ, Oxford, UKBerczuk, S., Finding solutions through pattern languages (1995) IEEE Computer, 27 (12), pp. 75-76. , Dec; Coad, P., Object-oriented patterns (1992) Communications of the ACM, 35 (9), pp. 152-159. , September; Eden, A.H., Formal specification of object-oriented design (2001) Int. Conf. on Multidisciplinary Design in Engineering, , Montreal, Canada, November; Eden, A.H., A theory of object-oriented design (2002) Information Systems Frontiers, 4 (4), pp. 379-391; France, R.B., Kim, D.-K., Ghosh, S., Song, E., A uml-based pattern specification technique (2004) IEEE Trans. Softw. Eng, 30 (3), pp. 193-206; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guennec, A.L., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns (1939) LNCS, pp. 482-496. , Proc. UML'02, Springer; Kodituwakku, S.R., Bertok, P., Pattern categories: A mathematical approach for organizing design patterns (2003) Proc. CRPTT'02, pp. 63-73. , Melbourne, Australia, June, Australia Computer Society, Inc; Lano, K., Bicarregui, J.C., Goldsack, S., Formalising design patterns (1996) BCS-FACS Northern Formal Methods Workshop, , September; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) LNCS, 1445, pp. 114-134. , Proc. ECOOP'98, Springer; J. K. H. Mak, C. S. T. Choy, and D. P. K. Lun. Precise modeling of design patterns in uml. In Proc. ICSE'04, 252-261, 2004Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using dpml (2002) Proc. CRPIT '02, pp. 3-11. , Australian Comp. Society; T. Mikkonen. Formalizing design patterns. In Proc. ICSE'98, 115-124. IEEE CS, April 1998Nija Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) Proc. ASE'06, pp. 123-134. , September; OMG. Unified modeling language: Superstructure, version 2.0, formal/05-07-04PLAC', (2007) The first international workshop on patterns languages: Addressing challenges, , http://www.engr.sjsu.edu/fayad/workshops/PLAC07, Accessed on 12 Sept. 2007 2007; Taibi, T., Formalising design patterns composition (2006) IEE Proc. on Software, 153 (3), pp. 126-153. , June; Taibi, T., Check, D., Ngo, L., Formal specification of design patterns-a balanced approach (2003) Journal of Object Technology, 2 (4). , July-August; Winn, T., Calder, P., A pattern language for pattern language structure (2003) Proc. CRPIT'02, pp. 45-58. , Australia Computer Society, Inc, June; Zdun, U., Avgeriou, P., Modelling architectural patterns using architectural primitives (2005) Proc. OOPLSA '05, pp. 133-146; Zhu, H., Shan, L., Well-formedness, consistency and completeness of graphic models (2006) Proc. UK-SIM'06, pp. 47-53. , April","Bayley, I.; Department of Computing, Oxford Brookes University, Wheatley, Oxfordshire, OX33 1HX, United Kingdom",,,,"32nd Annual IEEE International Computer Software and Applications Conference, COMPSAC 2008",28 July 2008 through 1 August 2008,Turku,73583,7303157,9780769532622,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-51949115546,,
,v,,"Czibula, I.G., Czibula, G.",Identifying design patterns in object-oriented software systems using unsupervised learning,2008,"2008 IEEE International Conference on Automation, Quality and Testing, Robotics, AQTR 2008 - THETA 16th Edition - Proceedings",3,,4588942,347,352,,,10.1109/AQTR.2008.4588942,http://www.scopus.com/inward/record.url?eid=2-s2.0-51949116570&partnerID=40&md5=8ac5cec7b0a571883ba686c92cbfde1f,"Department of Computer Science, Babeş-Bolyai University","Czibula, I.G., Department of Computer Science, Babeş-Bolyai University; Czibula, G., Department of Computer Science, Babeş-Bolyai University","Design patterns offer timeless and elegant solutions to common problems in software design. From a program-understanding and a reverse engineering perspective the discovery of patterns in a software artifact (design or code) represents a step in the program understanding process. It would be useful to find instances of design patterns especially in designs where they were not used explicitly or where their use is not documented, as this could improve the maintainability of software. Clustering is considered the most important unsupervised learning problem. The aim of clustering methods is to differentiate groups (classes or clusters) inside a given set of objects. In this paper we introduce a hierarchical clustering based approach in order to localize instances of design patterns in existing software systems. We also provide an experimental evaluation of our approach, illustrating its advantages in comparison with similar existing approaches. ©2008 IEEE.",,Clustering methods; Common problems; Design patterns; Engineering perspective; Experimental evaluations; Hier-archical clustering; International conferences; Learning problems; Object-oriented software systems; Program understanding; Software systems; Automation; Chlorine compounds; Computer software; Computer software selection and evaluation; Flow of solids; Hierarchical systems; Industrial engineering; Maintainability; Object oriented programming; Process engineering; Reengineering; Reverse engineering; Robotics; Technology; Unsupervised learning; Software design,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of REusable Object Oriented Software, , Addison-Wesley Publishing Company, USA; Han, J., (2005) Data Mining: Concepts and Techniques, , San Francisco, CA, USA: Morgan Kaufmann Publishers Inc; Jain, A.K., Dubes, R.C., (1988) Algorithms for clustering data, , Upper Saddle River, NJ, USA: Prentice-Hall, Inc; Jain, A.K., Murty, M.N., Flynn, P.J., Data clustering: A review (1999) ACM Computing Surveys, 31 (3), pp. 264-323; Rich, E., Knight, K., (1991) Artificial Intelligence, , 2nd ed. New York: McGraw Hill; Uml page, http://www.omg.org/technology/documents/formal/uml.htmKontogiannis, K., de Mori, R., Merlo, E., Galler, M., Bernstein, M., Pattern matching for clone and concept detection (1996) Automated Software Engineering, 3 (1-2), pp. 77-108; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE '96), pp. 208-215. , Washington, DC, USA: IEEE Computer Society; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Proceedings of the Fifth International Symposium on Software Metrics (METRICS'98), pp. 23-34; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the 24th International Conference on Software Engineering (ICSE '02), pp. 338-348. , New York, NY, USA: ACM Press; Niere, J., Wadsack, J.P., Wendehals, L., Handling large search space in pattern-based reverse engineering (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension (IWPC '03), p. 274. , Washington, DC, USA: IEEE Computer Society; Niere, M.M.J., Wendehals, L., User-driven adaption in rule-based pattern recognition (2004)Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the ICSE 2003 Workshop on Dynamic Analysis (WODA), pp. 29-32","Czibula, I. G.; Department of Computer Science, Babeş-Bolyai UniversityRomania; email: istvanc@cs.ubbcluj.ro",,"IEEE Computer Society - Test Technology Technical Council;Technical University of Cluj-Napoca;IPA - R and D Inst. Autom., Cent. Technol. Transfer Cluj-Napoca;Romanian Government - National Authority for Scientific Research;Thomson France",,"52008 IEEE International Conference on Automation, Quality and Testing, Robotics, AQTR 2008 - THETA 16th Edition",22 May 2008 through 25 May 2008,Cluj-Napoca,73564,,9781424425778,,,English,"IEEE Int. Conf. Autom., Qual. Test., Rob., AQTR - THETA Ed. - Proc.",Conference Paper,Scopus,2-s2.0-51949116570,,
,4,,"Izurieta, C., Bieman, J.M.",Testing consequences of grime buildup in object oriented design patterns,2008,"Proceedings of the 1st International Conference on Software Testing, Verification and Validation, ICST 2008",,,4539544,171,179,,3,10.1109/ICST.2008.27,http://www.scopus.com/inward/record.url?eid=2-s2.0-50649118111&partnerID=40&md5=5d1d949ed4df5d04d4ccb28654656703,"Department of Computer Science, Colorado State University, Fort Collins, CO 80525, United States","Izurieta, C., Department of Computer Science, Colorado State University, Fort Collins, CO 80525, United States; Bieman, J.M., Department of Computer Science, Colorado State University, Fort Collins, CO 80525, United States","Evidence suggests that as software ages the original realizations of design patterns remain in place, and participants in design pattern realizations accumulate ""grime"" - non-pattern-related code. This research examines the consequences that grime buildup has on the testability of general purpose design patterns. Test cases put in place during the design phase and initial implementation of a project can become ineffective as the system matures. The evolution of a design due to added functionality or defect fixing increases the coupling and dependencies between many classes that must be tested. We show that as systems age, the growth of grime and the appearance of anti-patterns increase testing requirements. Early recognition and removal of grime and anti-patterns can potentially improve system testability. © 2008 IEEE.",,Computer networks; Computer software selection and evaluation; Design; Java programming language; Verification; Design patterns; Test ability; Verification and validation; Pattern recognition systems,,,,,,"(2006) Altova, , http://www.altova.com; Baudry, B., Sunye, G., Improving the Testability of UML Class Diagrams. First International Workshop on Testability Assessment, 2004 (2004) IWoTA 2004. Proceedings, pp. 70-80. , Nov; Baudry, B., Traon, Y., Sunye, G., Testability Analysis of a UML Class Diagram (2002) Software Metrics Symposium, pp. 54-63. , Ottawa, Canada. June; Baudry, B., Traon, Y., Sunye, G., Jezequel, J.M., Measuring and Improving Design Patterns Testability (2003) 9th International Software Metrics Symposium, pp. 50-59. , September; Baudry, B., Traon, Y., Sunye, G., Jezequel, J.M., Towards a Safe Use of Design Patterns to Improve OO Software Testability Proceedings of the 12th International Symposium on Software Reliability Engineering, ISSRE '01, p. 324; Binder, R.V., (2000) Testing Object Oriented Systems. Models, Patterns, and Tools, , Addison-Wesley Publishers; Brown, W.J., Malveau, R.C., McCormick, H.W., Mowbray, T.J., Anti Patterns (1998) Refactoring Software, Architectures, and Projects in Crisis, , John Wiley and Sons, Inc; (2006) Curve Expert 1.3 Statistical Software. A Curve Fitting System for Windows. v1.38, , http://curveexpert.webshop.biz; Eick, S.G., Graves, T.L., Karr, A.F., Marron, J.S., Mockus, A., Does Code Decay? Assessing the Evidence from Change Management Data (2001) IEEE Transactions on Software Engineering, 27 (1), pp. 1-12; France, R., Kim, D.K., Song, E., Ghosh, S. Metarole-Based Modeling Language (RBML) Specification V1.0Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, Reading MA; Izurieta, C., Bieman, J.M., How Software Designs Decay: A Pilot Study of Pattern Evolution (2007) 1st ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, ESEM '07, , Madrid, Spain, September; JRefactory Opens Source Software. http://jrefactory.sourceforge.net [14] Parnas, D.L. Software Aging. Invited Plenary Talk. 16th International Conference ICSE 1994, pp. 279-287, May 1994Tsai, W.T, Tu, Y, Shao, W, Ebner, E. Testing Extensible Design Patterns in Object-Oriented Frameworks through Scenario Templates. 23 rd Annual International Computer Software and Applications Conference, 1999. COMPSAC apos;99. Proceedings. Issue, 1999 Page(s):166-171http://en.wikipedia.org/wiki/Software_rot","Izurieta, C.; Department of Computer Science, Colorado State University, Fort Collins, CO 80525, United States; email: cizuriet@colostate.edu",,IEEE Computer Society;DNV;The Research Council of Norway;IBM;IEEE,,"1st International Conference on Software Testing, Verification and Validation, ICST 2008",9 April 2008 through 11 April 2008,Lillehammer,73350,,076953127X,9780769531274,,,English,"Proc. Int. Conf. Softw. Test., Verif. Validation, ICST",Conference Paper,Scopus,2-s2.0-50649118111,
,v,,"Fülöp, L.J., Ferenc, R., Gyimóthy, T.",Towards a benchmark for evaluating design pattern miner tools,2008,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,4493309,143,152,,15,10.1109/CSMR.2008.4493309,http://www.scopus.com/inward/record.url?eid=2-s2.0-50249154920&partnerID=40&md5=9047fba5a95c751c5a6f7b507acecba9,"University of Szeged, Department of Software Engineering","Fülöp, L.J., University of Szeged, Department of Software Engineering; Ferenc, R., University of Szeged, Department of Software Engineering; Gyimóthy, T., University of Szeged, Department of Software Engineering","Recovering design pattern usage in source code is a very difficult task. Several tools are described in the literature for this purpose, but there is little work invested in evaluating them. The main reason for this is the lack of an approved benchmark for these tools. In this paper we present work in progress towards creating a benchmark, called DEEBEE (DEsign pattern Evaluation BEnchmark Environment), for evaluating and comparing design pattern miner tools. It is programming language, tool, pattern and software independent, and it is open to the community and freely available. Currently, the benchmark database contains the results of three tools: Columbus (C++), Maisa (C++), and Design Pattern detection Tool (Java). The tools were evaluated on reference implementations of patterns and on open source software (Mozilla, NotePad++, JHotDraw, JRefactory and JUnit). Additionally, instances recovered by researchers are added from NotePad++ as well. Some recovered patterns are already verified by experienced developers. This work is the first step in building a large reference database of design pattern usage in open source software and we expect that researchers will join us in this effort. © 2008 IEEE.",Benchmark; Design pattern mining; Design patterns; Tool comparison; Tool evaluation,Benchmark; Columbus; Design pattern detection; Design pattern mining; Design patterns; European; Mozilla; Open source software; Programming languages; Reference database; Source coding; Tool comparison; Tool evaluation; Work-in-progress; BASIC (programming language); Computer programming; Computer programming languages; Computer software maintenance; Computer software selection and evaluation; Database systems; Maintenance; Miners; Open systems; Real time systems; Reengineering; Software design; Computer software,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and Detecting Design Patterns: Putting Bits and Pieces Together (2001) 16th International Conference on Automated Software Engineering (ASE'01), pp. 166-173. , IEEE Computer Society, Nov; Antoniol, G., Fiutem, R., Cristoforetti, L., Using Metrics to Identify Design Patterns in Object-Oriented Software (1998) Proceedings of the Fifth International Symposium on Software Metrics (METRICS98), pp. 23-34. , IEEE Computer Society, Nov; Balanyi, Z., Ferenc, R., Mining Design Patterns from C++ Source Code (2003) Proceedings of the 19th International Conference on Software Maintenance (ICSM 2003), pp. 305-314. , IEEE Computer Society, Sept; Bellon, S., Koschke, R., Antoniol, G., Krinke, J., Merlo, E., Comparison and Evaluation of Clone Detection Tools (2007) IEEE Transactions on Software Engineering, 33, pp. 577-591; Beszédes, A., Ferenc, R., Gergely, T., Gyimóthy, T., Lóki, G., Vidács, L., CSiBE Benchmark: One Year Perspective and Plans (2004) Proceedings of the 2004 GCC Developers' Summit, pp. 7-15. , June; Beyer, D., Lewerentz, C., CrocoPat: Efficient pattern analysis in object-oriented programs (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension (IWPC 2003), pp. 294-295. , IEEE Computer Society; Costagliola, G., Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Design Pattern Recovery by Visual Language Parsing (2005) Proceedings of the 9th Conference on Software Maintenance and Reengineering (CSMR'05), pp. 102-111. , IEEE Computer Society, Mar; CSIBE Homepage. http://www.csibe.orgDesign Pattern Benchmark, , http://www.inf.u-szeged.hu/designpatterns, Home; The Design Pattern Detection tool, , http://java.uom.gr/~nikos/pattern-detection.html, Home; Ferenc, R., Beszédes, A., Tarkiainen, M., Gyimóthy, T., Columbus - Reverse Engineering Tool and Schema for C++ (2002) Proceedings of the 18th International Conference on Software Maintenance (ICSM 2002), pp. 172-181. , IEEE Computer Society, Oct; http://www.frontendart.com, FrontEndART Software LtdFülöp, L., Gyovai, T., Ferenc, R., Evaluating C++ Design Pattern Miner Tools (2006) Proceedings of the 6th International Workshop on Source Code Analysis and Manipulation (SCAM2006), pp. 127-136. , IEEE Computer Society, Sept; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns : Elements of Reusable Object-Oriented Software, , Addison-Wesley Pub Co; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design patterns identification (2001) Proceedings of IJCAI Workshop on Modelling and Solving Problems with Constraints, pp. 57-64. , Aug; Guéhéneuc, Y.-G., Mens, K., Wuyts, R., A Comparative Framework for Design Recovery Tools (2006) Proceedings of the 10th Conference on Software Maintenance and Reengineering (CSMR'06), pp. 123-134. , IEEE Computer Society, Mar; The JHotDraw, , http://www.jhotdraw.org, Home; The JRefactory, , http://jrefactory.sourceforge.net, Home; The JUnit, , http://www.junit.org, Home; Kaczor, O., Guéhéneuc, Y.-G., Hamel, S., Efficient Identification of Design Patterns with Bit-vector Algorithm (2006) Conference on Software Maintenance and Reengineering (CSMR'06), pp. 175-184. , IEEE Computer Society; Kraemer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE'96), pp. 208-215. , Nov; The Licor, , http://prog.vub.ac.be/research/DMP/soul/soul2.html, Home; The Mozilla, , http://www.mozilla.org, Home; The NotePad++ Homepage. http://notepad-plus.sourceforge.net/Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A., Software Metrics by Architectural Pattern Mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress), pp. 325-332; Pettersson, N., Löwe, W., Nivre, J., On evaluation of accuracy in pattern detection (2006) First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE'06), , October; The Ptidej, , http://www.ptidej.net, Home; Sim, S.E., (2003) A Theory of Benchmarking with Applications to Software Reverse Engineering, , PhD thesis, University of Toronto; Sim, S.E., Easterbrook, S., Holt, R.C., Using Bench-marking to Advance Research: A Challenge to Software Engineering (2003) Proceedings of the Twenty-fifth International Conference on Software Engineering (ICSE'03), pp. 74-83. , IEEE Computer Society, May; Sim, S.E., Holt, R.C., Easterbrook, S., On Using a Benchmark to Evaluate C++ Extractors (2002) Proceedings of the Tenth International Workshop on Program Comprehension (IWPC'02), pp. 114-123. , IEEE Computer Society, Jun; Sim, S.E., Storey, M.-A.D., A Structured Demonstration of Program Comprehension Tools (2000) Proceedings of the Seventh Working Conference on Reverse Engineering (WCRE'OO), pp. 184-193. , IEEE Computer Society, Nov; Sim, S.E., Storey, M.-A.D., Winter, A., A Structured Demonstration of Five Program Comprehension Tools: Lessons Learnt (2000) Proceedings of the Seventh Working Conference on Reverse Engineering (WCRE'OO), pp. 210-212. , IEEE Computer Society, Nov; Tonella, P., Antoniol, G., Object oriented design pattern inference (1999) Proceedings of the International Conference on Software Maintenance (ICSM '99), pp. 230-238. , IEEE Computer Society; The Trac, , http://trac.edgewall.org, Home; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design Pattern Detection Using Similarity Scoring (2006) IEEE Transactions on Software Engineering, 32, pp. 896-909. , Nov","Fülöp, L. J.; University of Szeged, Department of Software EngineeringHungary; email: fiajos@inf.u-szeged.hu",,Reengineering Forum (REF),,CSMR 2008 - 12th European Conference on Software Maintenance and Reengineering,1 April 2008 through 4 April 2008,Athens,73135,15345351,9781424421572,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-50249154920,,
,4,,"Dietrich, J., Kemp, E.",Tool support for teaching design patterns,2008,"Proceedings of the Australian Software Engineering Conference, ASWEC",,,4483208,200,208,,1,10.1109/ASWEC.2008.4483208,http://www.scopus.com/inward/record.url?eid=2-s2.0-50249174438&partnerID=40&md5=3fc3f28366fb1ece8922d34634cc5a43,"Massey University, Institute of Information Sciences and Technology, Te Kura Putaiao O Hangarau-a-Mohiotanga, Palmerston North, New Zealand","Dietrich, J., Massey University, Institute of Information Sciences and Technology, Te Kura Putaiao O Hangarau-a-Mohiotanga, Palmerston North, New Zealand; Kemp, E., Massey University, Institute of Information Sciences and Technology, Te Kura Putaiao O Hangarau-a-Mohiotanga, Palmerston North, New Zealand","Design patterns are programming language and project independent design artefacts that are widely used by professional software engineers. They represent best practise software design. However, the fact that design patterns are highly abstract makes it difficult for undergraduate students to understand and apply them. In this paper, we present DPLab, a tool we have developed to assist students in recognising and comprehending design patterns. © 2008 IEEE.",,BASIC (programming language); Computer programming languages; Computer software; Optical engineering; Software engineering; Students; Technology; Australian Software Engineering Conference; Design patterns; Independent design; Professional software; Programming languages; Tool supports; Undergraduate students; Software design,,,,,,"LOM: IEEE 1484.12.1 2002 standard for learning object metadataSoftware Engineering 2004. Curriculum guidelines for undergraduate degree programs in software engineering. A of the computing curricula series SE2004Bloom, B.S., (1956) Taxonomy of Educational Objectives, , David McKay Co Inc, New York; Dean, M., Schreiber, G., OWL web ontology language reference (2004) W3C recommendation, W3C. , February; Dietrich, J., Elgar, C., Towards a web of patterns (2007) Web Semant, 5 (2), pp. 108-116; Gamma, E., Beck, K., (2003) Contributing to Eclipse: Principles, Patterns, and Plugins, , Addison Wesley Longman Publishing Co, Inc, Redwood City, CA, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns: Elements of reusable object-oriented software, , Addison-Wesley Longman Publishing Co, Inc, Boston, MA, USA; Gray, N.A.B., Teaching object orientation: Patterns and reuse (1996) ASWEC '96: Pmceedings of the 1996 Australian Software Engineering Conference (ASWEC '96), p. 72. , Washington, DC, USA, IEEE Computer Society; Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using dpml (2002) CRPIT '02: Proceedings of the Fortieth International Conference on Tools Pacific, pp. 3-11. , Darlinghurst, Australia, Australia, Australian Computer Society, Inc; Nguyen, D.Z., Wong, S.B., Oop in introductory cs: Better students through abstraction (2001) Proceedings of the Fifth Workshop on and Tools for Assimilating Object-Oriented Concepts, OOPSLA0I, , Tumpa, Florida; Shalloway, A., Trott, J., Design Patterns Explained: A New Perspective on Object-Oriented Design (2004) Software Patterns Series, , 2nd Edition, Addison-Wesley Professional; Sterkin, A., Teaching design patterns (2006) FECS, pp. 167-176. , H. R. Arabnia, editor, CSREA Press; Stuurman, S., Florijn, G., Experiences with teaching design patterns (2004) ITiCSE '04: Pmceedings of the 9th annual SIGCSE conference on Innovation and technology in computer science education, pp. 151-155. , New York, NY, USA, ACM Press; Warren, I., Teaching patterns and software design (2005) ACE '05: Pmceedings of the 7th Australasian conference on Computing education, pp. 39-49. , Darlinghurst, Australia, Australia, Australian Computer Society, Inc","Dietrich, J.; Massey University, Institute of Information Sciences and Technology, Te Kura Putaiao O Hangarau-a-Mohiotanga, Palmerston North, New Zealand; email: j.b.dietrich@massey.ac.nz",,,,"19th Australian Software Engineering Conference, ASWEC 2008",25 March 2008 through 28 March 2008,"Perth, WA",73114,,769531008,9780769531007,,,English,Proc Aust Software Eng Conf ASWEC,Conference Paper,Scopus,2-s2.0-50249174438,
,4,,"Kim, D.-K., Shen, W.",Evaluating pattern conformance of UML models: A divide-and-conquer approach and case studies,2008,Software Quality Journal,16,3,,329,359,,15,10.1007/s11219-008-9048-5,http://www.scopus.com/inward/record.url?eid=2-s2.0-48449087708&partnerID=40&md5=56cd5e1ba14b4c80e23c350b35f91050,"Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; Department of Computer Science, Western Michigan University, Kalamazoo, MI 49008, United States","Kim, D.-K., Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; Shen, W., Department of Computer Science, Western Michigan University, Kalamazoo, MI 49008, United States","A design pattern is realized in various forms depending on the context of the applications. There has been intensive research on detecting pattern instances in models and in implementations. However, little work addresses variations of pattern realization. This paper describes an approach for evaluating conformance of pattern variations. This approach uses a divide-and-conquer strategy to evaluate the structural conformance of a UML class diagram to the solution of a design pattern. A design pattern is specified in an extension of the UML that defines the pattern in terms of roles. To demonstrate the approach, we use the Visitor pattern and two case studies of a price calculator and a word processor. We also present a prototype tool that supports the approach. © 2008 Springer Science+Business Media, LLC.",Design pattern; Pattern conformance; RBML; UML,Design Patterns; Divide and conquer; Divide-and-conquer approach; Pattern conformance; RBML; Structural conformance; UML; UML class diagrams; Unified Modeling Language; Research,,,,,,"Albano, A., Bergamini, R., Ghelli, G., Orsini, R., An object data model with roles (1993) Proceedings of the 19th Conference on Very Large Databases, pp. 39-51. , Los Altos, CA: Morgan Kaufman; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th International Workshop on Program Comprehension (IWPC), pp. 153-160. , Ishia, Italy; Aoyama, M., Evolutionary patterns of design and design patterns (2000) Proceedings of International Symposium on Principles of Software Evolution, pp. 110-116. , Kanazawa, Japan; Aversano, L., Canfora, G., Cerulo, L., An empirical study on the evolution of design patterns (2007) Proceedings of the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 385-394. , Dubrovnik, Croatia; Bachman, C.W., Daya, M., The role concept in data models (1977) International Conference on Very Large Databases, pp. 464-476. , Tokyo, Japan; Bergenti, F., Poggi, A., Improving UML design using automatic design pattern detection (2000) Proceedings of the 12th International Conference on Software Engineering and Knowledge Engineering (SEKE), pp. 336-343. , Chicago, Illinois; Brown, K., (1996) Design Reverse-Engineering and Automated Design Pattern Detection in SmallTalk, , Master's thesis, Department of Computer Engineering, North Carolina State University; Costagliola, G., Lucia, A.D., Deufemia, D., Gravino, C., Risi, M., Design pattern recovery by visual language parsing (2005) Proceedings of the 9th European Conference on Software Maintainance and Reengineering, pp. 102-111. , Manchester, UK; Dahchour, M., Pirotte, A., Zimanyi, E., A generic role model for dynamic objects (2002) Proceedings of the 14th Advanced Information Systems Engineering International Conference, CAiSE '02, pp. 643-658. , Toronto, Canada; Dong, J., Yang, S., Zhang, K., Visualizing design patterns in their applications and compositions (2007) IEEE Transactions on Software Engineering, 33, pp. 433-453. , 7; Eden, A., (1999) Precise Specification of Design Patterns and Tool Support in Their Application, , PhD thesis, University of Tel Aviv, Israel; France, R., Ghosh, S., Song, E., Kim, D., A metamodeling approach to pattern-based model refactoring (2003) IEEE Software, Special Issue on Model Driven Development, 20, pp. 52-58. , 5; France, R., Kim, D., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions on Software Engineering, 30, pp. 193-206. , 3; Frank, U., Delegation: An important concept for the appropriate design of object models (2000) Journal of Object Oriented Programming, 13, pp. 13-18. , 3; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Gottlob, G., Michael, S., Rock, B., Extending object-oriented systems with roles (1996) ACM Transactions on Information Systems, 14, pp. 268-296. , 3; Grand, M., (2002) Patterns in Java, Volume 1, Second Edition-A Catalog of Reusable Design Patterns Illustrated with UML, , Wiley; Guennec, A.L., Sunye, G., Jezequel, J., Precise modeling of design patterns (2000) Proceedings of the 3rd International Conference on the Unified Modeling Language (UML), pp. 482-496. , York, UK; Halpin, T., Business rules and object role modeling (1996) Database Programming and Design, 9, pp. 66-72. , 10; Heuzeroth, D., Holl, T., Ḧogstr̈om, G., Löwe, W., Automatic Design Pattern Detection (2003) Proceedings of the 11th IEEE International Workshop Program Comprehension, pp. 94-103. , Portland, Oregon; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , Los Angeles, California; Kim, D., (2004) A Meta-Modeling Approach to Specifying Patterns, , PhD thesis, Colorado State University, Fort Collins, CO; Kim, D., Taibi, T., The role-based metamodeling language for specifying design patterns (2007) Design Pattern Formalization Techniques, , Idea Group Inc Hershey, Pennsylvania; Kim, D., France, R., Ghosh, S., Song, E., A role-based metamodeling approach to specifying design patterns (2003) Proceedings of the 27th IEEE Annual International Computer Software and Applications Conference(COMPSAC), pp. 452-457. , Dallas, Texas; Kim, D., Khawand, C.E., An approach to precisely specifying the problem domain of design patterns (2007) Journal of Visual Languages and Computing, , doi: 10.1016/j.jvlc.2007.02.009; Kim, D., Metha, P., Gokhal, P., Describing access control patterns using roles (2006) Proceedings of Pattern Languages of Programming Conference (PLoP), , Portland, Oregon; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , Monterey, California; Lamport, L., The temporal logic of actions (1994) ACM Transactions on Programming Languages and Systems, 16, pp. 872-923. , 3; Lano, K., Bicarregui, J., Goldsack, S., Formalising design patterns (1996) Proceedings of the 1st BCS-FACS Northern Formal Methods Workshop, , Electronic Workshops in Computer Science. Ilkely, UK; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of the 12th European Conference on Object-Oriented Programming, pp. 114-136. , Brussels, Belgium; Mai, Y., De, C.M., A pattern language to visitors (2001) Proceedings of the 8th Annual Conference of Pattern Languages of Programs (PLoP), , Monticello, Illinois; Mikkonen, T., Formalizing design patterns (1998) Proceedings of the 20th International Conference on Software Engineering (ICSE), pp. 115-124. , Kyoto, Japan; (2003) Unified Modeling Language. Version 1.5, , http://www.omg.org, The Object Management Group; Pernici, B., Objects with roles (1991) Proceedings of the Conference on Office Information Systems, pp. 25-27. , Cambridge, MA; Philippow, I., Streitferdt, D., Riebisch, M., Riebisch, M., Coplien, J.O., Streitferdt, D., Design pattern recovery in architectures for supporting product line development, application (2003) Modelling Variability for Object-oriented Product Lines, pp. 42-57. , BookOnDemand Publ. Co Norderstedt, Germany; Reenskaug, T., Wold, P., Lehne, O.A., (1996) Working with Objects: The OORAM Software Engineering Method, , Manning/Prentice Hall; Riehle, D., (2000) Framework Design: A Role Modeling Approach, , http://www.riehle.org, PhD thesis, Eidgenossische Technische Hochschule Zurich, No. 13509; Riehle, D., The perfection of informality: Tools, templates, and patterns (2003) Cutter IT Journal, 16, pp. 22-26. , 9; (2001) Information Technology-Open Distributed Processing-Reference Model: Enterprise Language, , RM-ODP Technical Report ISO/IEC, 15414, ITU-T Recommendations X.911, Amendment1: Additional text, ISO; Sciore, E., Object specialization (1989) ACM Transactions on Information Systems, 7, pp. 103-122. , 2; Shen, W., Low, W.L., Using abstract state machines to support UML model instantiation checking (2005) Proceedings of the IASTED International Conference on Software Engineering, pp. 100-105. , Innsbruck, Austria; Shull, F., Melo, W.L., Basili, V.R., (1996) An Inductive Method for Discovering Design Patterns from Object-Oriented Software Systems, , Technical Report UMIACS-TR-96-10, University of Maryland; Steimann, F., On the representation of roles in object-oriented and conceptual modelling (2000) Data and Knowledge Engineering, 35, pp. 83-106. , 1; Steimann, F., Role = Interface: A merger of concepts (2001) Journal of Object-Oriented Programming, 14, pp. 23-32. , 4; Stein, L.A., Zdonik, S.B., (1989) Clovers: The Dynamic Behavior of Types and Instances, , Technical Report CS-89-42, Department of Computer Science, Brown University, Providence, RI; Tokuda, L., Batory, D., (1995) Automated Software Evolution Via Design Pattern Transformations, , Technical Report CS-TR-95-06, University of Texas at Austin; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32, pp. 896-909. , 11; Vokac, M., An efficient tool for recovering design patterns from C++ code (2006) Journal of Object Technology, 5 (1), pp. 139-157; Warmer, J., Kleppe, A., (2003) The Object Constraint Language Second Edition: Getting Your Models Ready for MDA, , Addison Wesley; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of Workshop on Dynamic Analysis (WODA), pp. 29-32. , Portland, Oregon; Wieringa, R., Jonge, W.D., (1991) The Identification of Objects and Roles: Object Identifier Revisited, , Technical Report lR-267, Vrije University, Amsterdam; Zdun, U., Avgeriou, P., Modeling architectural patterns using architectural primitives (2005) Proceedings of the 20th Annual ACM SIGPLAN Conference on Object Oriented Programming, Systems, Languages, and Applications, pp. 133-146. , San Diego, CA; Zhao, C., Kong, J., Zhang, K., Design pattern evolution and verification using graph transformation (2007) Proceedings of the 40th Annual Hawaii International Conference on System Sciences, pp. 290a. , Big Island, Hawaii","Kim, D.-K.; Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; email: kim2@oakland.edu",,,,,,,,9639314,,,,English,Softw. Qual. J.,Conference Paper,Scopus,2-s2.0-48449087708,,
,3,,"Yusof, Y., Rana, O.F.",Combining structure and function-based descriptors for component retrieval in software digital libraries,2008,Integrated Computer-Aided Engineering,15,4,,279,296,,6,,http://www.scopus.com/inward/record.url?eid=2-s2.0-50249153383&partnerID=40&md5=8e63fc279e97fe56ebeaf1585e8a411d,"Graduate Department of Computer Sciences, College of Arts and Sciences, Universiti Utara Malaysia, 06010 UUM Sintok, Kedah, Malaysia; School of Computer Science, Cardiff University, Cardiff CF24 3AA, Wales, United Kingdom","Yusof, Y., Graduate Department of Computer Sciences, College of Arts and Sciences, Universiti Utara Malaysia, 06010 UUM Sintok, Kedah, Malaysia; Rana, O.F., School of Computer Science, Cardiff University, Cardiff CF24 3AA, Wales, United Kingdom","In software development, it is often desirable to re-use existing software components. Currently, a number of repositories of components are available - generally including program source code, but finding the ones that can be re-used for an application is a challenging task. Program source code may be viewed as a form of data, containing both structure and function; it is therefore important to make use of this information in representing programs in the repository. We propose to combine the functional and structural information to facilitate software component search and retrieval. The proposed model reveals how functional and structural descriptors are identified and combined into a single representation. The functional descriptors are identified by extracting selected terms from program source code and a weighting scheme is adopted to differentiate the importance of terms. Structural descriptors that comprise of information generated based on structural relationships, such as design patterns and software metrics, are extracted from a program to be added as program descriptors. In order to retrieve components that are relevant to a given query, the use of similarity measurement based on the vector model and data distribution are investigated. The experiments undertaken on program retrieval indicate that the use of a combination of functional and structural descriptors is better than using functional descriptors on their own. Furthermore, programs retrieved using the proposed approach are less complex and easy to maintain. © 2008 - IOS Press.",,Chlorine compounds; Codes (standards); Codes (symbols); Digital libraries; Image classification; Ketones; Libraries; Reusability; Software design; Challenging task; Component retrieval; Data distributions; Descriptors; Design patterns; Similarity measurements; Software components; Software development; Software metrics; Source coding; Structural descriptors; Structural informations; Structural relationships; Vector modeling; Weighting schemes; Computer software reusability,,,,,,"Sourceforge, , http://sourceforge.net, last accessed on September 12, 2007; http://www.spss.com, last accessed on September 12, 2007Atkinson, S., Duke, R., A methodology for behavioural retrieval from class libraries (1994), Technical Report 94-28, Software Verification Research Centre, Department of Computer Science, The University of Queensland, Australia, SeptemberBiggerstaff, T.J., Mitbander, B.G., Webster, D.F., Program understanding and the concept assignment problem (1994) Communications of the ACM, 37 (5), pp. 72-83. , May; Billhardt, H., Borrajo, D., Maojo, V., A context vector model for information retrieval (2002) J Am Soc Inf Sci Technol, 53 (3), pp. 236-249; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493. , June; Etzkorn, L.H., Davis, C.G., Automatically identifying reusable oo legacy code (1997) IEEE Computer, 30 (10), pp. 66-71. , October; L.H. Etzkorn, W.E.H. Jr. and C.G. Davis, Automated reusability quality analysis of oo legacy software, Information and Software Technology 43 (2001), 295-308Fairley, R.E., (1986) Software Engineering Concepts, , McGraw-Hill, Inc, New York, NY, USA; Fenton, N.E., (1994) Software Metrics: A Rigorous Approach, , Chapman & Hall; Fischer, B., (2001) Deduction-Based Software Component Retrieval, , PhD thesis, Faculty of Mathematics and Informatics, University of Passau, Germany, June; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading, Massachusetts; Girardi, M.R., Ibrahim, B., Automatic Indexing of Software Artifacts (1994) Proceedings of 3rd. International Conference on Software Reuse, pp. 24-32. , Rio de Janeiro, Brazil; Glover, A., Code Improvement through Cyclomatic Complexity, , http://www.onjava.com/pub/a/onjava/2004/06/16/ccunittest.html, last accessed on September 12, 2007; Google code search, , http://www.google.com/codesearch; Hull, D., Using Statistical Testing in the Evaluation of Retrieval Experiments (1993) SIGIR '93: Proceedings of the 16th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 329-338. , New York, NY, USA, ACM Press; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-Based Reverse-engineering of Design Components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , Los Angeles, California; Kitchenham, B., Pfleeger, S.L., The elusive target (1996) IEEE Software, 13 (1), pp. 12-21. , Software quality:, January; Koders search engine, , http://www.koders.com; Lai, S.-T., Yang, C.-C., A Software Metric Combination Model for Software Reuse (1998) APSEC '98: Proceedings of the 5th Asia Pacific Software Engineering Conference, pp. 70-77. , Washington, DC, USA, IEEE Computer Society; Lecroq, T., Sequence Comparison, , http://www-igm.univ-mlv.fr/lecroq/seqcomp, last accessed on September 12, 2007; Li, S., Tahvildari, L., Jcomp: A Reuse-Driven Componen-tization Framework for Java Applications (2006) Proceedings of the 14th IEEE International Conference on Program Comprehension, pp. 264-267. , Athens,Greece, June; Li, T., Zhu, S., Ogihara, M., Using discriminant analysis for multi-class classification: An experimental investigation (2006) Knowledge Information System, 10 (4), pp. 453-472; Marcus, A., Sergeyev, A., Rajlich, V., Maletic, J.I., An Information Retrieval Approach to Concept Location in Source Code (2004) WCRE '04: Proceedings of the 11th Working Conference on Reverse Engineering (WCRE'04), pp. 214-223. , Washington, DC, USA, IEEE Computer Society; Mili, A., Mili, R., Mittermeir, R.T., Storing and retrieving software components: A refinement based system IEEE Transactions on Software Engineering, 23 (7). , July1994, 445-460; Mili, A., Mili, R., Mittermeir, R.T., A survey of software reuse libraries (1998) Annals of Software Engineering, 5, pp. 349-414; Niere, J., Schfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards Patternbased Design Recovery (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , ACM Press; Niu, H., Park, Y., An Execution-Based Retrieval of Object-Oriented Components (1999) ACM-SE 37: Proceedings of the 37th annual Southeast regional conference (CD-ROM), p. 18. , New York, NY, USA, ACM Press; U. of Waikato, Weka. http://www.cs.waikato.ac.nz/ml/weka. last accessed on September 12, 2007Pallant, J., (2004) SPSS Survival Manual, pp. 53-54. , chapter 6, Open University Press; Podgurski, A., Pierce, L., Retrieving reusable software by sampling behavior (1993) ACM Trans Softw Eng Methodol, 2 (3), pp. 286-303; Prieto-Diaz, R., Domain analysis: An introduction (1990) ACM SIG-SOFT Software Engineering Notes, 15 (2), pp. 47-54. , April; A.M. Project, Metrics. http://maven.apache.org/reference/ metrics.html. last accessed on September 12, 2007Qian, G., Sural, S., Gu, Y., Pramanik, S., Similarity between Euclidean and Cosine Angle Distance for Nearest Neighbor Queries (2004) SAC '04: Proceedings of the 2004 ACM symposium on Applied computing, pp. 1232-1237. , New York, NY, USA, ACM Press; Riel, A.J., (1996) Object-Oriented Deisgn Heuristics, , Addison-Wesley Longman Publishing; Rosenberg, L., Hammer, T., Shaw, J., Software Metrics and Reliability (1998) Proceedings of the 9th International Symposium, , Germany; Rotaru, O.P., Dobre, M., Reusability Metrics for Software Components (2005) In The third ACS/IEEE International Conference on Computer System and applications, pp. 24-31. , Cairo,Egypt; Salehie, M., Li, S., Tahvildari, L., A Metric-Based Heuristic Framework to Detect Object-Oriented Design Flaws (2006) Proceedings of the 14th IEEE International Conference on Program Comprehension, pp. 159-168. , Athens, Greece, June; Salton, G., Lesk, M.E., Computer evaluation of indexing and text processing (1968) J ACM, 15 (1), pp. 8-36; Santanul, P., Atul, P., A framework for source code search using program patterns (1994) IEEE Transaction on Software Engineering, 20 (6), pp. 463-475; Shi, N., Olsson, R.A., Reverse Engineering of Design Patterns from Java Source Code (2006) ASE '06: Proceedings of the 21st IEEE International Conference on Automated Software Engineering (ASE'06), pp. 123-134. , Washington, DC, USA, IEEE Computer Society; Smith, J.M., Stotts, D., Spqr: Flexible Automated Design Pattern Extraction from Source Code (2003) Proceedings 18th IEEE International Conference on Automated Software Engineering, pp. 215-224. , October; Soboroff, I., Nicholas, C., Cahan, P., Ranking Retrieval Systems without Relevance Judgments (2001) SIGIR '01: Proceedings of the 24th annual international ACM SIGIR conference on Research and development in information retrieval, pp. 66-73. , New York, NY, USA, ACM Press; Sommerville, I., (2004) Software Engineering, (7th edition), chapter Software Reuse, , Addison-Wesley; Washizaki, H., Fukazawa, Y., Software Reuse: Methods, Techniques and Tools, chapter Component-Extraction-Based Search System for Object-Oriented Programs (2004) Lecture Notes in Computer Science, pp. 254-263. , Springer Berlin/Heidelberg; Waters, R.C., The programmer's apprentice: A session with kbemacs (1985) IEEE Trans Softw Eng, 11 (11), pp. 1296-1320; Wills, L.M., (1992) Automated, , Program Recognition by Graph Parsing, Master's thesis, Massachusetts Institute of Technology; Yang, Y., Zhang, W., Zhang, X., Shi, J., A Weighted Ranking Algorithm for Facet-Based Component Retrieval System (2006) ACST'06: Proceedings of the 2nd IASTED international conference on Advances in computer science and technology, pp. 274-279. , Anaheim, CA, USA, ACTA Press; Yao, H., Etzkorn, L.H., Virani, S., Automated classification and retrieval of reusable software components (2008) Journal of American Society for Information Science and Technology, 59 (4), pp. 613-627; Ye, Y., (2001) Supporting Component-Based Software Development with Active Component Repository Systems, , Phd thesis, Department of Computer Science, University of Colorado; Ye, Y., Fischer, G., Supporting Reuse by Delivering Task-Relevant and Personalized Information (2002) ICSE 2002: Proceedings of the 24th International Conference on Software Engineering, pp. 513-523. , New York, NY, USA, ACM Press; Zaremski, A.M., Wing, J.M., Signature Matching: A Key to Reuse (1993) Proceedings of SIGSOFT, pp. 7-10. , Los Angeles, California","Rana, O. F.; School of Computer Science, Cardiff University, Cardiff CF24 3AA, Wales, United Kingdom; email: o.f.rana@cs.cardiff.ac.uk",,,,,,,,10692509,,ICAEE,,English,Integr. Comput. Aided Eng.,Conference Paper,Scopus,2-s2.0-50249153383,,
,4,,"Pribeanu, C., Vanderdonckt, J.",A transformational approach for pattern-based design of user interfaces,2008,"Proceedings - 4th International Conference on Autonomic and Autonomous Systems, ICAS 2008",,,4488321,47,54,,3,10.1109/ICAS.2008.36,http://www.scopus.com/inward/record.url?eid=2-s2.0-50149109270&partnerID=40&md5=1ef3fcad59efafe15a4eab5111bccdc5,"Nat. Institute for Research and Development in Informatics (ICI), Bd.Mareşal Averescu Nr.8-10, 011455 Bucharest, Romania; Université Catholique de Louvain, Louvain School of Management, Place des Doyens, 1, B-1348 Louvain-la-Neuve, Belgium","Pribeanu, C., Nat. Institute for Research and Development in Informatics (ICI), Bd.Mareşal Averescu Nr.8-10, 011455 Bucharest, Romania; Vanderdonckt, J., Université Catholique de Louvain, Louvain School of Management, Place des Doyens, 1, B-1348 Louvain-la-Neuve, Belgium","A pattern-based approach to user interface development is presented that is explicitly based on artifacts contained in a task and a domain models. Exploiting a task model or a domain model in isolation may lead to patterns that are not user-centered. By combining the exploitation of both models at the same time with priority lead to identifying interaction patterns in a systematic way. Types of relationships in these models help in structuring interaction patterns, that are in turn transformed into design patterns for information systems. © 2008 IEEE.",,Flow interactions; Query languages; Autonomous systems; Design patterns; Domain modeling; Information systems; Interaction patterns; International conferences; Task modeling; Transformational approach; User-centered; User interfaces,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press, New York; Bayle, E., Bellamy, R., Casaday, G., Erickson, T., Fincher, S., Grinter, B., Gross, B., Thomas, J., Putting It All Together: Towards a Pattern Language for Interaction Design, Summary Report of the CHI'97 Workshop (1998) SIGCHI Bulletin, 30 (1). , http://sigchi.org/bulletin/1998.1/erickson.html, Jan, Accessible at; Bodart, F. and Vanderdonckt, J., On the Problem of Selecting Interaction Objects, Proc. of BCS Conf. HCI'94 People and Computers IX (Glasgow, 23-26 August 1994), G. Cockton, S.W. Draper, G.R.S. Weir (eds.), Cambridge University Press, Cambridge, 1994, pp. 163-178Card, S.K., Moran, T.P., Newell, A., (1983) The Psychology of Human-Computer Interaction, , Lawrence Erlbaum Associates, Hillsdale; Chaffin, R., Herrmann, D.J., Winston, M.E., An empirical taxonomy of part-whole relations: Effects of part-whole type on relation identification (1988) Language and Cognitive processes, 3 (1), pp. 17-48; Furtado, E., Furtado, J.J.V., Silva, W.B., Rodrigues, D.W.T., Taddeo, L.S., Limbourg, Q., Vanderdonckt, J., An Ontology-Based Method for Universal Design of User Interfaces (2001) Proc. of Workshop on Multiple User Interfaces over the Internet: Engineering and Applications Trends MUI, , http://www.cs.concordia.ca/~faculty/seffah/ihm2001/papers/furtado.pdf, A. Seffah, T. Radhakrishnan, G. Canals eds, Lille, 10 September 2001. Accessible at; Paternò, F., (1999) Model-based design and evaluation of interactive applications, , Springer-Verlag, Berlin; Pisano, A., Shirota, Y., Iizawa, A., Automatic generation of graphical user interfaces for interactive database applications (1993) Proc. of CIKM, pp. 344-355. , 93, ACM Press, New York; Storey, V., Understanding Semantic Relationships (1993) VLDB Journal, 2, pp. 455-488; Mahemoff, M.J., Johnston, L.J., Principles for a Usability-Oriented Pattern Language (1998) Proc. of OZCHI, 98, pp. 132-139. , IEEE Press, Los Alamitos; Vanderdonckt, J., Gillo, X., Visual Techniques for Traditional and Multimedia Layouts (1994) Proc. of 2nd ACM Workshop on Advanced Visual Interfaces AVI'94 (Bari, 1-4, pp. 95-104. , June, T. Catarci, M.F. Costabile, S. Levialdi, G. Santucci eds, ACM Press, New York; van Welie, M., van der Veer, G.C., Eliëns, A., Patterns as Tools for User Interface Design (2000) Proc. of TFWWG, , J. Vanderdonckt, Ch. Farenc eds, Springer-Verlag, London; Winston, M.E., Chaffin, R., Herrmann, D., A taxonomy of part-whole relations (1987) Cognitive Science, 11, pp. 417-444","Pribeanu, C.; Nat. Institute for Research and Development in Informatics (ICI), Bd.Mareşal Averescu Nr.8-10, 011455 Bucharest, Romania; email: pribeanu@ici.ro",,IARIA,,"4th International Conference on Autonomic and Autonomous Systems, ICAS 2008",16 March 2008 through 21 March 2008,Gosier,73215,,769530931,9780769530932,,,English,"Proc. - Int. Conf. Autom. Auton. Syst., ICAS",Conference Paper,Scopus,2-s2.0-50149109270,
,3,,"Scott, M.H., Haukaas, T.",Software framework for parameter updating and finite-element response sensitivity analysis,2008,Journal of Computing in Civil Engineering,22,5,,281,291,,9,10.1061/(ASCE)0887-3801(2008)22:5(281),http://www.scopus.com/inward/record.url?eid=2-s2.0-49749100824&partnerID=40&md5=aeca7663d972c7b57a7674ec8540af10,"ASCE; School of Civil and Construction Engineering, Oregon State Univ., Corvallis, OR 97331, United States; Dept. of Civil and Environmental Engineering, Univ. of British Columbia, Vancouver, BC V6T 1Z4, Canada","Scott, M.H., ASCE, School of Civil and Construction Engineering, Oregon State Univ., Corvallis, OR 97331, United States; Haukaas, T., Dept. of Civil and Environmental Engineering, Univ. of British Columbia, Vancouver, BC V6T 1Z4, Canada","The finite-element software framework OpenSees is extended with parameter updating and response sensitivity capabilities to support client applications such as reliability, optimization, and system identification. Using software design patterns, member properties, applied loadings, and nodal coordinates can be identified and repeatedly updated in order to create customized finite-element model updating applications. Parameters are identified using a Chain of Responsibility software pattern, where objects in the finite-element model forward a parameterization request to component objects until the request is handled. All messages to identify and update parameters are passed through a Facade that decouples client applications from the finite-element domain of OpenSees. To support response sensitivity analysis, the Strategy design pattern facilitates multiple approaches to evaluate gradients of the structural response, whereas the Visitor pattern ensures that objects in the finite-element domain make the proper contributions to the equations that govern the response sensitivity. Examples demonstrate the software design and the steps taken by representative finite-element model updating and response sensitivity applications. © 2008 ASCE.",Computer programming; Computer software; Finite element method; Nonlinear analysis; Optimization; Parameters; Sensitivity analysis; Structural reliability,Applications.; Client applications; Computer programming; Computer software; Design patterns; Finite element modelling; Finite elements; Finite-element softwares; Nodal coordinates; Nonlinear analysis; Optimization; Parameters; Response sensitivity; Response sensitivity analysis; Software design patterns; Software frameworks; Structural reliability; Structural responses; System identification; Finite element method; Ontology; Reliability; Software architecture; Software design; Software reliability; Sensitivity analysis,,,,,,"(2006) ABAQUS/standard User's Manual-Version 6.6, , http://www.hks.com, ABAQUS, Inc.., Pawtucket, R.I; Archer, G.C., Fenves, G., Thewalt, C., (1999) A New Object-oriented Finite-element Analysis Architecture, 70, pp. 63-75. , "" Comput. Struct., (1); Baugh, J.W., Rehak, D.R., (1992) Data Abstraction in Engineering Software Development, 6, pp. 282-301. , J. Comput. Civ. Eng., (3); Conte, J.P., Vijalapura, P.K., Meghalla, M., (2003) Consistent Finite-element Response Sensitivity Analysis, 129, pp. 1380-1393. , "" J. Eng. Mech., (12); Fenves, G.L., (1990) Object-oriented Programming for Engineering Software Development, 6, pp. 1-15. , Eng. Comput., (1); Forde, B.W.R., Foschi, R.O., Stiemer, S.F., (1990) Object-oriented Finite-element Analysis, 34, pp. 355-374. , "" Comput. Struct., (3); Franchin, P., (2004) Reliability of Uncertain Inelastic Structures under Earthquake Excitation, 130, pp. 180-191. , J. Eng. Mech., (2); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Reading, Mass; Gil, L., Bugeda, G., (2001) A C++ Object-oriented Programming Strategy for the Implementation of the Finite-element Sensitivity Analysis for A Nonlinear Structural Material Model, 32, pp. 927-935. , Adv. Eng. Software, (12); Haukaas, T., Der Kiureghian, A., (2005) Parameter Sensitivity and Importance Measures in Nonlinear Finite-element Reliability Analysis, 131, pp. 1013-1026. , J. Eng. Mech., (10); Haukaas, T., Der Kiureghian, A., (2007) Methods and Object-oriented Software for FE Reliability and Sensitivity Analysis with Application to A Bridge Structure, 21, pp. 151-163. , J. Comput. Civ. Eng., (3); He, X., Moaveni, B., Conte, J.P., Restrepo, J.I., Elgamal, A., (2006) Damage Identification of A Seven-story Reinforced Concrete Shear Wall Building Tested on the UCSD-NEES Shake Table, , "" 4th World Conf. on Structural Control and Monitoring, San Diego, Calif; Kleiber, M., Antunez, H., Hien, T.D., Kowalczyk, P., (1997) Parameter Sensitivity in Nonlinear Mechanics, , Wiley, New York; Lee, H.H., Arora, J.S., (1991) Object-oriented Programming for Engineering Applications, 7, pp. 225-235. , Eng. Comput., (4); Liu, P.L., Der Kiureghian, A., (1991) Optimization Algorithms for Structural Reliability, 9, pp. 161-177. , Struct. Safety, (3); MacKerle, J., (2004) Object-oriented Programming in FEM and BEM:A Bibliography (1990-2003), 35, pp. 325-336. , Adv. Eng. Software, (6); MacKie, R.I., (1992) Object-oriented Programming of the Finite-element Method, 35, pp. 425-436. , Int. J. Numer. Methods Eng., (2); Mazzoni, S., McKenna, F., Scott, M.H., Fenves, G.L., (2006) Open System for Earthquake Engineering Simulation User Command-language Manual-Version 1.7.3, , http://opensees.berkeley.edu/OpenSees/manuals/usermanual/, "" Univ. of California, Berkeley, Calif; McKenna, F., (1997) Object-oriented Finite-element Programming: Frameworks for Analysis, Algorithms, and Parallel Computing, , Ph.D. thesis, Univ. of California, Berkeley, Calif; McKenna, F., Fenves, G.L., (2000) Proc., Structures Congress, 2000, , An object-oriented software design for parallel structural analysis."", ASCE, Reston, Va; McKenna, F., Fenves, G.L., Scott, M.H., (2000) Open System for Earthquake Engineering Simulation, , http://opensees.berkeley.edu, "" Univ. of California, Berkeley, CA; Miller, G.R., (1991) An Object-oriented Approach to Structural Analysis and Design, 40, pp. 75-82. , Comput. Struct., (1); Modak, S., Sotelino, E.D., (2002) An Object-oriented Parallel Programming Framework for Linear and Nonlinear Transient Analysis of Structures, 80, pp. 77-84. , Comput. Struct., (1); Newmark, N.M., (1959) A Method of Computation for Structural Dynamics, 85, pp. 67-94. , J. Engrg. Mech. Div.; Ousterhout, J.K., (1994) Tcl and the Tk Toolkit, , Addison-Wesley, Reading, Mass; Ozcelik, O., Luco, J.E., Conte, J.P., (2008) Identification of the Mechanical Subsystem of the NEES-UCSD Shake Table by A Least- Squares Approach, 134, pp. 23-34. , "" J. Eng. Mech., (1); Peng, J., Law, K.H., (2004) Building Finite-element Analysis Programs in Distributed Services Environment, 82, pp. 1813-1833. , Comput. Struct., (22); Ries, R., Mahdavi, A., (2001) Integrated Computational Live-cycle Assessment of Buildings, 15, pp. 59-66. , J. Comput. Civ. Eng., (1); Roth, C., Grigoriu, M., (2001) Sensitivity Analysis of Dynamic Systems Subjected to Seismic Loads, , Re No. MCEER-01-0003, State University of New York, Buffalo, N.Y; Rucki, M.D., Miller, G.R., (1996) An Algorithmic Framework for Flexible Finite-element-based Structural Modeling, 136, pp. 363-384. , Comput. Methods Appl. Mech. Eng., (3-4); Schellenberg, A., Mahin, S., (2006) Integration of Hybrid Simulation Within the General-purpose Computational Framework OpenSees, , 8th U.S. National Conf. on Earthquake Engineering, San Francisco, Calif; Scott, M.H., Fenves, G.L., McKenna, F.T., Filippou, F.C., (2008) Software Patterns for Nonlinear Beam-column Models, 134, pp. 562-571. , "" J. Struct. Eng., (4); Scott, M.H., Franchin, P., Fenves, G.L., Filippou, F.C., (2004) Response Sensitivity for Nonlinear Beam-column Elements, 130, pp. 1281-1288. , "" J. Struct. Eng., (9); Silva, C.A.C., Bittencourt, M.L., (2000) An Object-oriented Structural Optimization Program, 20, pp. 154-166. , Struct. Multidisci Optim., (2); Simo, J.C., Hughes, T.J.R., (1998) Computational Inelasticity, , Springer, New York; Soh, C.K., Dong, Y.X., (2001) Evolutionary Programming for Inverse Problems in Civil Engineering, 15, pp. 144-150. , J. Comput. Civ. Eng., (2); Taylor, R.L., (2004) FEAP: A Finite-element Analysis Program, Version 7.5 User Manual, , http://www.ce.berkeley.edu/~rlt/feap, Univ. of California, Berkeley; (2003), http://www.diana/tno.nl.DIANA, TNO Building and Construction Research.. Dept. of Computational Mechanics, Delft, The NetherlandsWelch, B.B., (2000) Practical Programming in Tcl and Tk, , 3rd Ed., Prentice-Hall, Upper Saddle River, N.J; Wetherill, M., Rezgui, Y., Boddy, S., Cooper, G.S., (2007) Intra- And Interorganizational Knowledge Services to Promote Informed Sustainability Practices, 21, pp. 78-89. , "" J. Comput. Civ. Eng., (2); Zhang, Y., Der Kiureghian, A., (1993) Dynamic Response Sensitivity of Inelastic Structures, 108, pp. 23-36. , Comput. Methods Appl. Mech. Eng., (1-2); Zhang, Y., Der Kiureghian, A., (1997) Finite-element Reliability Methods for Inelastic Structures, , Re No. UCB/SEMM-97/05, Dept. of Civil and Environmental Engineering, Univ. of California, Berkeley, Calif; Zimmermann, T., Dubois-Pelerin, Y., Bomme, P., (1992) Object-oriented Finite-element Programming. I: Governing Principles, 98, pp. 291-303. , "" Comput. Methods Appl. Mech. Eng., (2)","Scott, M. H.; School of Civil and Construction Engineering, Oregon State Univ., Corvallis, OR 97331, United States; email: michael.scott@oregonstate.edu",,,,,,,,8873801,,JCCEE,,English,J. Comput. Civ. Eng.,Article,Scopus,2-s2.0-49749100824,,
,3,,"Booch, G.",Measuring architectural complexity,2008,IEEE Software,25,4,,14,15,,4,10.1109/MS.2008.91,http://www.scopus.com/inward/record.url?eid=2-s2.0-47149087523&partnerID=40&md5=3776b0fa410e0dc0c3ff06bff4fa44db,IBM,"Booch, G., IBM","Without refactoring, complex software-intensive systems become increasingly irregular and thus increasingly chaotic over time. We can understand complex software systems only when they're nearly decomposable and hierarchic. One measure the author uses is lines of source code: the greater the SLOC, the more inertia to change the system will have, the more people it will take to keep it fed, the more stakeholders who will be crawling all over it. The author describes the more complex measures he uses; these are tuned to Philippe Kruchten's 4+1 view model of architecture. He also counts the number of identifiable design patterns at work. These metrics can generally be gathered automatically via clever mining of configuration management and testing data. © 2008 IEEE.",Architecture model; Complexity; Complexity measurement; Decomposition; Design pattern,Computer software; Helium; Java programming language; Complex measures; Complex software; Complex software systems; Configuration management (CVS); Design patterns; Metrics (CO); Nearly decomposable; Refactoring; Source coding; Testing data; Chaotic systems,,,,,,,"Booch, G.; IBMemail: architecture@booch.com",,,,,,,,7407459,,IESOE,,English,IEEE Software,Article,Scopus,2-s2.0-47149087523,,
,4,,"Ballis, D., Baruzzo, A., Comini, M.",A minimalist visual notation for design patterns and antipatterns,2008,"Proceedings - International Conference on Information Technology: New Generations, ITNG 2008",,,4492454,51,56,,5,10.1109/ITNG.2008.227,http://www.scopus.com/inward/record.url?eid=2-s2.0-44049095035&partnerID=40&md5=99530bcece7be8d0dfcfd04fd7e3c67d,"DIMI, University of Udine, Via delle Scienze 206, 33100 Udine, Italy","Ballis, D., DIMI, University of Udine, Via delle Scienze 206, 33100 Udine, Italy; Baruzzo, A., DIMI, University of Udine, Via delle Scienze 206, 33100 Udine, Italy; Comini, M., DIMI, University of Udine, Via delle Scienze 206, 33100 Udine, Italy","Achieving a quality software system requires UML designers to have a good understanding of both design patterns and antipatterns. Unfortunately, UML models for real systems tend to be huge and hard to manage, especially for models automatically generated from source code. Thus, it would be advisable to have tools to automatically identify particular instances of patterns. So, a formal language to express them is needed. However, a textual formalization of such a language is barely usable by UML practitioners. In this paper we propose a visual notation obtained by adding to UML as few graphical elements as possible in order to express both patterns and antipatterns (with the needed formality). This approach has low cognitive load so is easily usable by practitioners but is still rigorous enough for implementation. This notation will be exploited by a GUI front-end for a prototypical tool (that we have recently developed) which is able to discover (anti)patterns in models. © 2008 IEEE.",,Design patterns; Graphical elements; Visual notation; Automatic programming; Graphical user interfaces; Pattern recognition; Real time systems; Software design; Visual servoing; Unified Modeling Language,,,,,,"Albin-Amiot, H., Cointe, P., Gueheneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) ASE, 166, p. 173; Albin-Amiot, H., Guhneuc, Y.-G., Meta-modeling design patterns: Application to pattern detection and code synthesis (2001) ECOOP Workshop on Automating Object-Oriented Software Development Methods; Ballis, D., Baruzzo, A., Comini, M., A rule-based method to match Software Patterns against UML Models (2007) RULE '07; Bergenti, F., Poggi, A., Improving uml design using automatic design pattern detection (2000) SEKE '00, pp. 336-343; Brown, W.J., Malveau, R.C., McCormick III, H.W., Mowbray, T.J., (1998) AntiPatterns, , Wiley & Sons; Eden, A.H., Formal Specification of Object-Oriented Design (2001) CSME-MDE '01, Canada; Eden, A.H., LePUS: A Visual Formalism for Object- Oriented Architectures (2002) IDPT 2002, , USA; France, R.B., Ghosh, S., A UML-Based Pattern Specification Techniques (2004) IEEE TSE, 30 (3), pp. 193-206; Gamma, E., Helm, R., Johnson, R., Vlissides, J.M., (1995) Design Patterns, , Addison-Wesley; Kaczor, O., Gueheneuc, Y.-G., Hamel, S., Efficient identification of design patterns with bit-vector algorithm (2006) CSMR '06, pp. 175-184. , IEEE Computer Society; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) LNCS, 1445, pp. 114-134. , Springer; Moha, N., Gueheneuc, Y.-G., Leduc, P., Automatic generation of detection algorithms for design defects (2006) ASE '06, pp. 297-300. , IEEE Computer Society; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE TSE, 32 (11), pp. 896-909; Vlissides, J.M., (1995) Pattern Hatching: Design Patterns Applied, , Addison-Wesley, Reading, MA; Vokác, M., An efficient tool for recovering Design Patterns from C++ Code (2006) JOT, 5 (1), pp. 139-157","Ballis, D.; DIMI, University of Udine, Via delle Scienze 206, 33100 Udine, Italy",,,,"International Conference on Information Technology: New Generations, ITNG 2008",7 April 2008 through 9 April 2008,"Las Vegas, NV",72063,,769530990,9780769530994,,,English,Proc. Int. Conf. Inf. Technol. New Gener. ITNG,Conference Paper,Scopus,2-s2.0-44049095035,
,v,v,"Hayashi, S., Katada, J., Sakamoto, R., Kobayashi, T., Saeki, M.",Design pattern detection by using meta patterns,2008,IEICE Transactions on Information and Systems,E91-D,4,,933,944,,8,10.1093/ietisy/e91-d.4.933,http://www.scopus.com/inward/record.url?eid=2-s2.0-60849105914&partnerID=40&md5=2176dac02b1236e646ebffcc4231d718,"Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan; Center for Embedded Computing Systems, Graduate School of Information Science, Nagoya University, Nagoya-shi, 464-8601, Japan; NTT Comware Corporation, Japan","Hayashi, S., Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan; Katada, J., Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan, NTT Comware Corporation, Japan; Sakamoto, R., Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan; Kobayashi, T., Center for Embedded Computing Systems, Graduate School of Information Science, Nagoya University, Nagoya-shi, 464-8601, Japan; Saeki, M., Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan","One of the approaches to improve program understanding is to extract what kinds of design pattern are used in existing objectoriented software. This paper proposes a technique for efficiently and accurately detecting occurrences of design patterns included in source codes. We use both static and dynamic analyses to achieve the detection with high accuracy. Moreover, to reduce computation and maintenance costs, detection conditions are hierarchically specified based on Pree's meta patterns as common structures of design patterns. The usage of Prolog to represent the detection conditions enables us to easily add and modify them. Finally, we have implemented an automated tool as an Eclipse plug-in and conducted experiments with Java programs. The experimental results show the effectiveness of our approach. Copyright © 2008 The Institute of Electronics, Information and Communication Engineers.",Design patterns; Dynamic analysis; Meta patterns; Program understanding; Prolog,Automated tools; Common structures; Design patterns; Java program; Maintenance cost; Meta pattern; Meta patterns; Object oriented software; Plug-ins; Program understanding; Prolog; Source codes; Static and dynamic analysis; Computer software; Design; Java programming language; Maintenance; PROLOG (programming language); Dynamic analysis,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000) Proc. 6th International Conference on Software Reuse, pp. 318-335; Muraki, T., Saeki, M., Metrics for applying GoF design patterns in refactoring processes (2001) Proc. 4th InternationalWorkshop on Principles of Software Evolution, pp. 27-36; Demeyer, S., Ducasse, S., Nierstrasz, O., Finding refactoring via change metrics (2000) Proc. 15th Conference on Object-Oriented Programming, Systems, Languages and Applications, pp. 166-177; Guéhéneuc, Y.G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proc. 11th Working Conference on Reverse Engineering, pp. 172-181; Ferenc, R., Beszedes, A., Fulop, L., Lele, J., Design pattern mining enhanced by machine learning (2005) Proc. 21st International Conference on Software Maintenance, pp. 295-304; Correa, A.L., Werner, C.M.L., Zaverucha, G., Object oriented design expertise reuse: An approach based on heuristics, design patterns and anti-patterns (2000) Proc. 6th International Conference on Software Reuse, pp. 336-352; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proc. 3rd Working Conference on Reverse Engineering, pp. 208-215; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proc. 19th International Conference on Software Maintenance, pp. 305-314; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) Proc. 11th International Workshop on Program Comprehension, pp. 94-103; Tonella, P., Antoniol, G., Object oriented design pattern inference (1999) Proc. 15th International Conference on Software Maintenance, pp. 230-239; Arevalo, G., Buchli, F., Nierstrasz, O., Detecting implicit collaboration patterns (2004) Proc. 11th Working Conference on Reverse Engineering, pp. 122-131; Wuyts, R., Declarative reasoning about the structure object-oriented systems (1998) Proc. TOOLS USA '98 Conference, pp. 112-124; Smith, J.M., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Proc. 18th International Conference on Automated Software Engineering, pp. 215-224; Heuzeroth, D., Mandel, S., Loẅe, W., Generating design pattern detectors from pattern specifications (2003) Proc. 18th International Conference on Automated Software Engineering, pp. 245-248; Shi, N., Olsson, R.A., Reverse engineering of design patterns from Java source code (2006) Proc. 21st International Conference on Automated Software Engineering, pp. 123-134; Kniesel, G., Hannemann, J., Rho, T., A comparison of logicbased infrastructures for concern detection and extraction (2007) Proc. 3rd Workshop on Linking Aspect Technology and Evolution; Dong, J., Lad, D.S., Zhao, Y., DP-Miner: Design pattern discovery using matrix (2007) Proc. 14th International Conference and Work shops on the Engineering of Computer-Based Systems, pp. 371-380; Dong, J., Zhao, Y., Experiments on design pattern discovery (2007) Proc. 3rd International Workshop on Predictor Models in Software Engineering; Crupi, J., Malks, D., Alur, D., (2001) Core J2Ee Patterns: Best Practices and Design Strategies, , Prentice Hall PTR; Pree, W., (1996) Design Pattern for Object-Oriented Software Development, , Addison-Wesley; http://www.eclipse.org, Eclipse project, available atEclipse Java development tools (JDT) subproject, , http://www.eclipse.org/jdt, available at; Denti, E., Omicini, A., Ricci, A., Multi-paradigm Java-Prolog integration in tuProlog (2005) Science of Computer Programming, 57 (2), pp. 217-250; tuProlog, available at http://tuprolog.alice.unibo.it/Leavens, G.T., Baker, A.L., Ruby, C., JML: Java modeling language, , http://www.eecs.ucf.edu/-leavens/JML, available at; Vlissides, J., (1998) Pattern Hatching: Design Patterns Applied, , Addison- Wesley; Wendehals, L., Orso, A., Recognizing behavioral patterns at runtime using finite automata (2006) Proc. 2006 International Workshop on Dynamic Systems Analysis, pp. 33-40; Grand, M., (1998) Patterns in Java, , John Wiley & Sons","Hayashi, S.; Department of Computer Science, Graduate School of Information Science and Engineering, Tokyo Institute of Technology, Tokyo, 152-8552, Japan; email: hayashi@se.cs.titech.ac.jp",,,,,,,,9168532,,ITISE,,English,IEICE Trans Inf Syst,Article,Scopus,2-s2.0-60849105914,,
,4,4,"Soundarajan, N., Hallstrom, J.O., Shu, G., Delibas, A.",Patterns: From system design to software testing,2008,Innovations in Systems and Software Engineering,4,1,,71,85,,9,10.1007/s11334-007-0042-z,http://www.scopus.com/inward/record.url?eid=2-s2.0-41649094204&partnerID=40&md5=0751c61a3895fcdb8f04a9ad8b6d6f4b,"Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; School of Computing, Clemson University, Clemson, SC 29634, United States","Soundarajan, N., Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; Hallstrom, J.O., School of Computing, Clemson University, Clemson, SC 29634, United States; Shu, G., Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; Delibas, A., Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States","Design patterns are used extensively in the design of software systems. Patterns codify effective solutions for recurring design problems and allow software engineers to reuse these solutions, tailoring them appropriately to their particular applications, rather than reinventing them from scratch. In this paper, we consider the following question: How can system designers and implementers test whether their systems, as implemented, are faithful to the requirements of the patterns used in their design? A key consideration underlying our work is that the testing approach should enable us, in testing whether a particular pattern P has been correctly implemented in different systems designed using P, to reuse the common parts of this effort rather than having to do it from scratch for each system. Thus in the approach we present, corresponding to each pattern P, there is a set of pattern test case templates (PTCTs). A PTCT codifies a reusable test case structure designed to identify defects associated with applications of P in all systems designed using P. Next we present a process using which, given a system designed using P, the system tester can generate a test suite from the PTCTs for P that can be used to test the particular system for bugs in the implementation of P in that system. This allows the tester to tailor the PTCTs for P to the needs of the particular system by specifying a set of specialization rules that are designed to reflect the scenarios in which the defects codified in this set of PTCTs are likely to manifest themselves in the particular system. We illustrate the approach using the Observer pattern. © Springer-Verlag London Limited 2008.",Contracts; Design patterns; Testing,Software design; Software engineering; Systems analysis; Pattern test case templates (PTCTs); Software systems; System design patterns; Software testing,,,,,,"Baudry, B., Le Sunyé, Y., Jézéquel, J., Towards a 'safe' use of design patterns to improve OO software testability (2001) The 12th International Symposium on Software Reliability Engineering, pp. 324-329. , In: IEEE Computer Society, Washington, DC; Beck, K., Gamma, E., Test infected: programmers love writing tests (1998) Java Rep, 3 (7), pp. 37-50; Binder, R., (1999) Testing Object-oriented Systems, , Addison-Wesley, Menlo Park; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: A System Of Patterns, , Wiley, New York; Chandy, K., Misra, J., (1988) Parallel Program Design, , Addison-Wesley, Menlo Park; Dasiewicz, P., Design patterns and object-oriented software testing (2005) The 2005 Canadian Conference on Electrical and Computer Engineering, , In: IEEE Canada, Dundas; Dong, J., UML extenstions for design pattern compositions (2002) Proceedings of TOOLS, in Special Issue of Journal of Object Technology, 1 (3), pp. 149-161. , In: Mingins C (ed); Dong, J., Alencar, P., Cowan, D., A behavioral analysis approach to pattern-based composition (2001) Proceedings of the 7th International Conference on Object-oriented Information Systems, pp. 540-549. , In: Springer; Eden, A., Formal specification of object-oriented design (2001) Proceedings of the International Conference on Multidisciplinary Design in Engineering, , In:; Eden, A., LePUS: A visual formalism for object-oriented architectures (2002) Proceedings of the 6th World Conference on Integrated Design and Process Technology, pp. 149-159. , In: IEEE Computer Society; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable OO Software, , Addison-Wesley, Menlo Park; Hallstrom, J., Soundarajan, N., Tyler, B., Amplifying the benefits of design patterns (2006) Proceedings of the 9th International Conference on Fundamental Approaches to Software Engineering (FASE), pp. 214-229. , In: Aagedal J, Baresi L (eds) Springer; Helm, R., Holland, I., Gangopadhyay, D., (1990) Contracts: Specifying Behavioral Compositions in Object-oriented Systems, pp. 169-180. , In: OOPSLA-ECOOP; Järvinen, H., Kurki-Suonio, R., Disco specification language: marriage of actions and objects (1991) Proceedings of the 11th International Conference on Distributed Computing Systems, pp. 142-151. , In: IEEE Computer Society, Los Alamitos; Jones, C., (1990) Systematic Software Development Using Vdm, , Prentice-Hall, Englewood Cliffs, New York; Marick, B., (2007) Test Patterns Repository/Software Testing Patterns, , http://www.testing.com/test-patterns/patterns, (date of last access)); McGregor, J., Testpatterns: Please stand by (1999) J Object-oriented Program, 12, pp. 14-19; McGregor, J., Sykes, D., (2001) A Practical Guide to Testing Object-oriented Software, , Addison-Wesley, Menlo Park; Mikkonen, T., Formalizing design patterns (1998) Proceedings of 20th ICSE, pp. 115-124. , In: IEEE Computer Society Press; Rainsberger, J., (2005) JUnit Recipes, , Manning; Reenskaug T, (1996) Working With Objects, , Prentice-Hall, Englewood Cliffs; Reimer, D., Schonberg, E., Srinivas, K., Srinivasan, H., Alpern, B., Johnson, R., Kershenbaum, A., Koved, L., ""saber"": smart analysis based error reduction (2004) Proceedings of ""ISSTA '04"", pp. 243-251. , In: ACM Press; Riehle, D., Composite design patterns (1997) Proceedings of OOPSLA, ACM, pp. 218-228; Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., (1996) Pattern-oriented Software Architecture: Patterns for Concurrent and Networked Objects, , Wiley, New York; Shalloway, A., Trott, J., (2002) Design Patterns Explained, , Addison-Wesley, Menlo Park; Soundarajan, N., Hallstrom, J., Responsibilities and rewards: specifying design patterns (2004) Proceedings of 26th International Conference on Software Engineering (ICSE) IEEE Computer Society, pp. 666-675. , In: Finkelstein A, Estublier J, Rosenblum D (eds); Soundarajan, N., Hallstrom, J., Pattern-based system evolution: A case-study (2006) Proceedings of 18th International Conference on Software Engineering and Knowledge Engineering (SEKE 2006), pp. 321-326. , In: Zhang K, Spanoudakis G, Visaggio G (eds) Knowledge Systems Institute; (2001) Patterns of Software Testing, p. 1. , Testing; (2001) Patterns of Software Testing, p. 2. , Testing; (2001) Patterns of Software Testing, p. 3. , Testing; Tyler, B., Hallstrom, J., Soundarajan, N., A comparative study of monitoring tools for pattern-centric behavior (2006) Procedings of 30th IEEE/NASA Sofware Engineering Workshop (SEW-30), , In: Hinchey M (ed) IEEE-Computer Society; Vlissides, J., (1998) Notation, Notation, Notation, , C++ Report","Soundarajan, N.; Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; email: neelam@cse.ohio-state.edu",,,,,,,,16145046,,,,English,Innov. Syst. Softw. Eng.,Conference Paper,Scopus,2-s2.0-41649094204,,
,4,4,"El Boussaidi, G., Mili, H.",A model-driven framework for representing and applying design patterns,2007,Proceedings - International Computer Software and Applications Conference,1,,4290989,97,100,,12,10.1109/COMPSAC.2007.31,http://www.scopus.com/inward/record.url?eid=2-s2.0-37349069148&partnerID=40&md5=d4397fcdbb1566bd3f5bdf6ce96f2217,"Université du Québec à Montréal, Canada","El Boussaidi, G., Université du Québec à Montréal, Canada; Mili, H., Université du Québec à Montréal, Canada","Design patterns encode proven solutions to recurring design problems. To use a design pattern properly, we need to 1) understand the design problem the pattern resolves, 2) recognize an instance of this problem in the model at hand, and 3) to transform the model to produce the proposed solution. We argue that an explicit representation of the design problem solved by a pattern is key to supporting each one of these tasks. We propose to represent a design pattern using a triple (MP, MS, T) where MP is a model of the design problem solved by the pattern, MS is a model of the solution proposed by it, and T is a rule-based representation of the transformations embodied in the application of the pattern. In this paper, we describe the principles underlying our approach and the current implementation using the Eclipse Modeling Framework-™ and JRules™. © 2007 IEEE.",,Mathematical transformations; Pattern recognition; Problem solving; Support vector machines; Design patterns; Eclipse Modeling; Image coding,,,,,,"A. Agrawal, G. Karsai G., Z. Kalmar, S. Neema, F. Shi, and A. Vizhanyo, The design of a simple language for graph transformations, Software & System Modeling, 2005Alencar, P.S.C., Cowan, D.D., Dong, J., Lucena, C.J.P., A transformational Process-Based Formal Approach to Object-Oriented Design (1997) Formal Methods Europe; Balogh, A., Varro, D., Advanced model transformation language constructs in the VIATRA2 framework (2006) ACM symp. on applied computing, pp. 1280-1287; Elaasar, M., Briand, L., Labiche, Y., A Metamodeling Approach to Pattern Specification and Detection (2006) ACM/IEEE Inter. Conf. on MDE, , Italy; France, R., Kim, D.K., Ghosh, S., Song, E., A UML-Based Pattern Specification Technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; H. Mili, G. El Boussaidi, and A. Salah, Représentation et mise en œuvre des patrons de conception par représentation explicite des problèmes, LMO, Suisse, 2005Sunyé, G., Le Guennec, A., Jézéquel, J.M., Design pattern application in UML (2000) Proc. of the 14th OO Programming European Conference, pp. 44-62","El Boussaidi, G.; Université du Québec à MontréalCanada; email: el_boussaidi.ghizlane@courrier.uqam.ca",,IEEE Computer Society,,"31st Annual International Computer Software and Applications Conference, COMPSAC 2007",24 July 2007 through 27 July 2007,Beijing,70797,7303157,9780769528700,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-37349069148,,
,4,4,"Schadewitz, N., Jachna, T.",Design patterns for cross-cultural computer-supported collaboration,2007,EuroPLoP 2007 - 12th European Conferenceon Pattern Languages of Programs,,,,409,428,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871492958&partnerID=40&md5=a72228231d3f7d826a9b11059b959966,"School of Design, Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong","Schadewitz, N., School of Design, Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong; Jachna, T., School of Design, Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong",This paper introduces design patterns for cross-cultural computer-supported collaborative design learning. It presents four patterns derived from an in-depth analysis of interactions between Hong Kong and Korean distributed teams and a cross-cultural comparison of interactions within these teams to interactions in Hong Kong/Austrian and Hong Kong/Taiwanese teams. The first part of the paper shortly reports on the methodology for identifying and articulating the patterns. The second part introduces the pattern collection and four full design patterns. The design patterns concentrate on design solutions that resolve breakdowns in the collaborative interaction between those cultures.,,Collaborative interaction; Computer-supported collaborative design; Cross-cultural comparisons; Design Patterns; Design solutions; Distributed teams; Hong-kong; In-depth analysis; Pattern collections; Distributed computer systems,,,,,,"Adler, N.J., (2002) International Dimensions of Organizational Behavior, , South Western, Thomson, Cincinnati, Ohio; Agerup, K., Buesser, M., A case study on collaborative learning in distributed, cross-cultural teams (2004) International Conference on Engineering Education, , Gainesville, Florida; Alexander, C., (1979) The Timeless Way of Building, , New York : Oxford University Press; Cheng, N., Approaches to design collaboration (2003) Automation in Construction Journal, 12, pp. 715-723; Condon, J.C., Yousef, F.S., (1985) An Introduction to Intercultural Communication, , Macmillan, New York; Hall, E.T., (1990) Understanding Cultural Differences, , tercultural Press, Yarmouth, Me; Hofstede, G., (1997) Cultures and Organizations: Software of the Mind, , McGraw-Hill, New York; Kim, K., Bonk, C., Cross-cultural comparisons of online collaboration (2002) Journal of Computer- Mediated Communication JCMC, 8 (1); Kluckhohn, F.R., Dominant and substitute profiles of cultural orientations: Their significance for the analysis of social stratification (1950) Social Forces, 28 (4), pp. 376-393; Marcus, A., User-interface design and culture (2005) Usability and Internationalization of Information Technology, , N. Aykin, Lawrence Erlbaum Associates; Martin, D., Rouncefield, M., Rodden, T., Sommerville, I., Viller, S., Finding patterns in the fieldwork (2001) ECSCW'01, , Bonn, Germany, Kluwer; Schadewitz, N., Jachna, T., Introducing new methodologies for identifying design patterns for internationalization and localization (2007) Proc. of International Conference on HumanComputer Interaction, HCII, pp. 22-27. , Beijing, China, July, 2007; Schümmer, T., Evolving a groupware pattern language (2003) ECSCW 2003, The 8th European Conference on Computer Supported Cooperative Work, , Helsinki; Schümmer, T., Gama- A pattern language for computer supported dynamic collaboration (2004) EuroPLoP 2003 Proceedings of the 8th European Conference on Pattern Languages of Programs, , Konstanz, Germany, UVK; Trompenaars, F., Hampden-Turner, C., (1994) The Seven Cultures of Capitalism: Value Systems for Creating Wealth in the United States, , Britain, Japan, Germany, France, Sweden, and the Netherlands. Piatkus, London; Victor, D.A., (1992) International Business Communication, , Harper-Collins, New York; Vogel, D., Van Genuchten, M., Lou, D., Verveen, S., Van Eekhout, M., Adams, T., Exploratory research on the role of national and professional cultures in a distributed learning project (2001) IEEE Transactions on Professional Communications, pp. 114-125","Schadewitz, N.; School of Design, Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong; email: sdnic@polyu.edu.hk",,Schlumberger;dpunkt.verlag;Siemens;Wiley,,"12th European Conferenceon Pattern Languages of Programs, EuroPLoP 2007",4 July 2007 through 8 July 2007,Irsee,94514,,9783879408191,,,English,EuroPLoP - Eur. Conf. Pattern Lang. Programs,Conference Paper,Scopus,2-s2.0-84871492958,,
,v,v,"Moha, N., Guéhéneuc, Y.-G.",PTIDEJ and DECOR: Identification of design patterns and design defects,2007,"Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA",,,,868,869,,7,10.1145/1297846.1297930,http://www.scopus.com/inward/record.url?eid=2-s2.0-42149157833&partnerID=40&md5=57edf7d5adbdbd1956c613a9943bc6e5,"Ptidej Team - GEODES Group, Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, QC, Canada","Moha, N., Ptidej Team - GEODES Group, Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, QC, Canada; Guéhéneuc, Y.-G., Ptidej Team - GEODES Group, Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, QC, Canada","The PTIDEJ project started in 2001 to study code generation from and identification of patterns. Since then, it has evolved into a complete reverse-engineering tool suite that includes several identification algorithms. It is a flexible tool suite that attempts to ease as much as possible the development of new identification and analysis algorithms. Recently, the module DECOR has been added to PTIDEJ and allows the detection of design defects, which are recurring design problems. In this demonstration, we particularly focus on the creation and use of identification algorithms for design patterns and defects.",Antipatterns; Design defects; Design patterns; Detection; Java; Meta-modelling,Algorithms; Computer systems programming; Linguistics; Neodymium; Defects; Java programming language; Object oriented programming; Analysis algorithms; Code generations; design defects; design patterns; Design problems; Flexible tools; identification algorithms; international conferences; Languages (traditional); Object-oriented programming; tool suite; Object oriented programming; Design; Antipatterns; Design defects; Design patterns; Detection; Java; Meta-modelling,,,,,,"W. J. Brown, R. C. Malveau, W. H. Brown, H. W. M. III, and T. J. Mowbray, Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis, 1998(2004) CheckStyle, , http://checkstyle.sourceforge.net; Fowler, M., (1999) Refactoring - Improving the Design of Existing Code; (2006) FXCop, , http://www.gotdot.net.com/team/fxcop; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns Elements of Reusable Object-Oriented Software; Gil, Y., Maman, I., Micro patterns in java code (2005) Proceedings of the 20th OOPSLA Conference; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering Binary Class Relationships: Putting Icing on the UML (2004) Proceedings of the 19th OOPSLA Conference; Guéhéneuc, Y.-G., A systematic study of UML class diagram constituents for their abstract and precise recovery (2004) Proceedings of the 11th APSEC Conference; Kuchaná, P., (2004) Software Architecture Design Patterns in Java; Marinescu, R., (2004) Detection Strategies: Metrics-Based Rules for Detecting Design Flaws in Proceedings of the 20th'' International Conference on Software Maintenance; Moha, N., Guéhéneuc, Y.-G., Leduc, P., Automatic generation, of detection algorithms for design, defects (2006) Proceedings of the 21st ASE Conference; Mens, K., Kellens, A., Pluquet, F., Wuyts, R., Co-evolving code and design with intensional views - a case study (2006) Computer Languages, Systems, and Structures; Niere, J., Wadsack, J.P., Zündorf, A., Recovering UML diagrams from Java code using patterns (2001) Proceedings of the 2 nd workshop on SCASE; (2002), http://pmd.sourceforge.net, PMDPressman, R.S., (2001) Software Engineering - A Practitioner's Approach, , McGraw-Hill Higher Education; Wuyts, R., Mens, K., D'Hondt, T., (1999) Explicit support, for software development styles throughout the complete life cycle, , Vrije Universiteit. Brussel, Tech. Rep. Vub-Prog-TR-99-07","Moha, N.; Ptidej Team - GEODES Group, Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, QC, Canada; email: mohanaou@iro.umontreal.ca",,"ACM Special Interest Group on Programming Languages, SIGPLAN",,"22nd International Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA 2007 - Companion",21 October 2007 through 25 October 2007,"Montreal, QC",71765,,9781595938657,,,English,Proc Conf Object Orient Program Syst Lang Appl OOPSLA,Conference Paper,Scopus,2-s2.0-42149157833,,
,4,4,"Bouhours, C., Leblanc, H., Percebois, C.",Towards a knowledge base to improve reusability of design pattern,2007,"ICSOFT 2007 - 2nd International Conference on Software and Data Technologies, Proceedings",SE,,,421,424,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-67650230408&partnerID=40&md5=4cc5885e9b7bdd32d0edcbcb4c58d94d,"IRIT, MACAO team (Models, Aspects, and Components for Object-oriented Architectures), Université Paul Sabatier, 118 Route de Narbonne, F-31062 Toulouse Cedex 9, France","Bouhours, C., IRIT, MACAO team (Models, Aspects, and Components for Object-oriented Architectures), Université Paul Sabatier, 118 Route de Narbonne, F-31062 Toulouse Cedex 9, France; Leblanc, H., IRIT, MACAO team (Models, Aspects, and Components for Object-oriented Architectures), Université Paul Sabatier, 118 Route de Narbonne, F-31062 Toulouse Cedex 9, France; Percebois, C., IRIT, MACAO team (Models, Aspects, and Components for Object-oriented Architectures), Université Paul Sabatier, 118 Route de Narbonne, F-31062 Toulouse Cedex 9, France","In this paper, we propose to take directly into account the knowledge of experts during a design review activity. Such activity requires an ability to analyze and to transform models, in particular to inject design patterns. Our approach consists in identifying model fragments which can be replaced by design patterns. We name these fragments ""alternative models"" because they solve the same problem as the pattern, but with a more complex or different structure than the pattern. In order to classify and to explain the design defects of this alternative models base, we propose the concept of strong point. A strong point is a key design feature which permits the pattern to resolve a problem most efficiently.",Design patterns; Design review; Software architectures,Design defects; Design features; Design Pattern; Design patterns; Design review; Different structure; Identifying models; Knowledge base; Transform models; Computer software; Design; Knowledge based systems; Reusability; Software architecture; Architectural design,,,,,,"Arcelli Fontana, F., Raibulet, C., Tisato, F., Design Pattern Recognition (2004) Proceedings of the ISCA 13th IASSE, pp. 290-295. , Nice, France, July 1-3; Bouhours, C., Leblanc, H., Percebois, C., Structural variants detection for design pattern instantiation (2006) 1st International Workshop on DPD4RE, , Benevento, Italy, October; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture, , John Wiley \& Sons, August; Chikofsky, E.J., Cross, J.H., Reverse engineering and design recovery: A taxonomy (1990) IEEE Software, 7 (1), pp. 13-17. , January; O'Cinnéide, M., Nixon, P., A Methodology for the Automated Introduction of Design Patterns (1999) ICSM '99: Proceedings of the IEEE International Conference on Software Maintenance, p. 463. , IEEE Computer Society; Dunsmore, A.P., Comprehension and Visualisation of Object-Oriented code for Inspections (1998), Technical Report, EFoCS-33-98, Computer Science Department, University of StrathclydeEden, A.H., Yehudai, A., Gil, J., Precise specification and automatic application of design patterns (1997) ASE '97: Proceedings of the 12th international conference on Automated software engineering (formerly: KBSE), p. 143. , IEEE Computer Society; Fowler, M., (1997) Analysis patterns: Reusable objects models, , Addison Wesley Longman Publishing Co, Inc; France, R.B., Kim, D., Ghosh, S., Song, E., A UML-Based Pattern Specification Technique (2004) IEEE Trans. Softw. Eng, 30, pp. 193-206. , IEEE Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley Professional; Guennec, A.L., Sunyé, G., Jézéquel, J., Precise Modeling of Design Patterns (2000) UML, pp. 482-496; Guéhéneuc, Y.G., Albin-Amiot, H., Using Design Patterns and Constraints to Automate the Detection and Correction of Inter-Class Design Defects (2001) Proceedings conference TOOLS, pp. 296-305. , July; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269. , Elsevier Science, September 15; (2003) Neptune, [w], , http://neptune.irit.fr; Sunyé, G., Pollet, D., Le Traon, Y., Jézéquel, J.M., Refactoring UML Models (2001) Proceedings of UML, pp. 134-148","Bouhours, C.; IRIT, MACAO team (Models, Aspects, and Components for Object-oriented Architectures), Université Paul Sabatier, 118 Route de Narbonne, F-31062 Toulouse Cedex 9, France; email: bouhours@irit.fr",,Workflow Management Coalition (WfMC) - Process Thought Leadership,,"2nd International Conference on Software and Data Technologies, ICSOFT 2007",22 July 2007 through 25 July 2007,Barcelona,76459,,,,,English,,Conference Paper,Scopus,2-s2.0-67650230408,,
,4,1,"Fielt, E., Janssen, W., Faber, E., Wagenaar, R.",Exchange design patterns for electronic intermediaries,2007,"Proceedings of the 15th European Conference on Information Systems, ECIS 2007",,,,155,166,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84869423343&partnerID=40&md5=6e61f84e44fec76b91815e9149bf6e4b,"Telematica Instituut, PO Box 589, 7500 AN Enschede, Netherlands; Delft University of Technology, Delft, Netherlands","Fielt, E., Telematica Instituut, PO Box 589, 7500 AN Enschede, Netherlands; Janssen, W., Telematica Instituut, PO Box 589, 7500 AN Enschede, Netherlands; Faber, E., Telematica Instituut, PO Box 589, 7500 AN Enschede, Netherlands; Wagenaar, R., Delft University of Technology, Delft, Netherlands","Intermediaries have introduced electronic services with varying success. One of the problems an intermediary faces is deciding what kind of exchange service it should offer to its customers and suppliers. For example, should it only provide a catalogue or should it also enable customers to order products? Developing the right exchange design is a complex undertaking because of the many design options on the one hand and the interests of multiple actors to be considered on the other. This is far more difficult than simple prescriptions like 'creating a win-win situation' suggest. We address this problem by developing design patterns for the exchanges between customers, intermediary, and suppliers related to role, linkage, transparency, and novelty choices. For developing these design patterns, we studied four distinct electronic intermediaries and identified exchange design choices that require trade-offs relating to the interests of customers, intermediary, and suppliers. The exchange design patterns contribute to the development of design theory for electronic intermediaries by filling a gap between basic business models and detailed business process designs.",Design patterns; Design theory; Electronic intermediaries; Exchange,Business models; Business process design; Design option; Design Patterns; Design theory; Electronic intermediary; Electronic services; Win-win; Information systems; Ion exchange; Sales; Design,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press; Anderson, P., Anderson, E., The new e-commerce intermediaries (2002) Sloan Management Review, 43, pp. 53-62; Bailey, J.P., Bakos, Y., An exploratory study of the emerging role of electronic intermediaries (1997) International Journal of Electronic Commerce, 1, pp. 7-20; Benbasat, I., Goldstein, D.K., Mead, M., The case research strategy in studies of information systems (1987) MIS Quarterly, 11, pp. 369-386; Chircu, A.M., Kauffman, R.J., Reintermediation strategies in business-to-business electronic commerce (2000) International Journal of Electronic Commerce, 4, pp. 7-42; Dai, Q., Kauffman, R.J., B2B e-commerce revisited: Revolution or evolution? Guest editors' preface to the special section (2002) Electronic Markets, 12, pp. 64-66; Dai, Q., Kauffman, R.J., Business models for Internet-based B2B electronic markets (2002) International Journal of Electronic Commerce, 6, pp. 41-72; Day, G.S., Fein, A.J., Ruppersberger, G., Shakeouts in digital markets: Lessons from B2B exchanges (2003) California Management Review, 45, pp. 131-150; Eisenhardt K, M., Building theories from case study research (1989) Academy of Management Review, 14, pp. 532-550; El Sawy, O.A., Malhotra, A., Gosain, S., Young, K.M., IT-intensive value innovation in the electronic economy: Insights from Marshall Industries (1999) MIS Quarterly, 23, pp. 305-333; Fielt, E., (2006) Designing for Acceptance: Exchange Design for Electronic Intermediaries, , Telematica Instituut, Enschede, the Netherlands; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , (1 ed.) Addison Wesley; Hevner, A.R., March, S.T., Park, J., Design science research in information systems (2004) MIS Quarterly, 28, pp. 75-105; Janssen, W., Steen, M., Rapid service development: An integral approach to e-business engineering (2001) Web Engineering 2001, LNCS 2016, , G.Goos, J. Hartmanis, & J. van Leeuwen (Eds.) ( Springer Berlin /Heidelberg; Kambil, A., Van Heck, E., (2002) Making Markets: Profiting from Online Auctions and Exchanges, , Boston, Massachusetts: Harvard Business School Press; Osterwalder, A., (2004) The Business Model Ontology-A Proposition in A Design Science Approach, , University of Lausanne, Lausanne, Switzerland; Porter, M.E., Strategy and the internet (2001) Harvard Business Review, 79, pp. 62-79; Porter, M.E., Millar, V.E., How information gives you competitive advantage (1985) Harvard Business Review, 63, pp. 149-160; Rogers E, M., (1995) Diffusion of Innovations. (4 Ed.), , New York: The Free Press; Singh, N., (2000) Electronic Commerce: Economics and Strategy (Draft 1.1), , http://econ.ucsc.edu/~boxjenk/, University of California Santa Cruz; Smith, M.A., Mitra, S., Narasimhan, S., Information systems outsourcing: A study of preevent firm characteristics (1998) Journal of Management Information Systems, 15, pp. 61-93; Soh, C., Markus, M.L., Goh, K.H., Electronic marketplaces and price transparency: Strategy, information technology, and success (2006) MIS Quarterly, 30, pp. 705-723; Stabell, C.B., Fjeldstad, Ø.D., Configuring value for competitive advantage: On chains, shops and networks (1998) Strategic Management Journal, 19, pp. 413-437; Steinfield, C., Understanding click and mortar e-commerce approaches: A conceptual framework and research agenda (2002) Journal of Interactive Advertising, , http://www.jiad.org/vol2/no2/steinfield/; Timmers, P., Business models for electronic markets (1998) Electronic Markets, 8, pp. 3-8; Van Aken, J.E., Management research based on the paradigm of the design sciences: The quest for field-tested and grounded technological rules (2004) Journal of Management Studies, 41, pp. 219-246; Wise, R., Morrison, D., Beyond the exchange: The future of B2B (2000) Harvard Business Review, 78, pp. 87-96","Fielt, E.; Telematica Instituut, PO Box 589, 7500 AN Enschede, Netherlands; email: Erwin.Fielt@telin.nl",,,,"15th European Conference on Information Systems, ECIS 2007",7 June 2007 through 9 June 2007,St. Gallen,93851,,,,,English,"Proc. Eur. Conf. Inf. Syst., ECIS",Conference Paper,Scopus,2-s2.0-84869423343,,
,4,1,"Lankoski, P., Björk, S.",Gameplay design patterns for believable non-player characters,2007,"3rd Digital Games Research Association International Conference: ""Situated Play"", DiGRA 2007",,,,416,423,,8,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84858982823&partnerID=40&md5=cbf1b5bddfbb2a926c9dbbbb34934d22,"Media Lab., University of Art and Design Helsinki, Hämeentie 135 C, FI-00560 Helsinki, Finland; Interaction Design Collegium, Computer Science and Engineering, Chalmers University of Technology and Göteborg University, SE-412 96 Göteborg, Sweden","Lankoski, P., Media Lab., University of Art and Design Helsinki, Hämeentie 135 C, FI-00560 Helsinki, Finland; Björk, S., Interaction Design Collegium, Computer Science and Engineering, Chalmers University of Technology and Göteborg University, SE-412 96 Göteborg, Sweden","Descriptions of humans require several qualities for people to experience them as believable: human body; selfawareness, intentional states, and self impelled actions; expression of emotions; ability to use natural language; and persistent traits. Based on these we analyze non-player character Claudette Perrick in The Elders Scroll IV: Oblivion to detect how these qualities can be created in the interactive environment of a game. We derive the gameplay design patterns Awareness of Surrounding, Visual Body Damage, Dissectible Bodies, Initiative, Own Agenda, Sense of Self, Emotional Attachment, Contextual Conversational Responses, and Goal-Driven Personal Development, which point to design choices that can be made when designing believable non-player characters in games. © 2007 Authors & Digital Games Research Association (DiGRA).",Game design; Gameplay design patterns; Non-player character; The elder scrolls IV: Oblivion,Design Patterns; Emotional attachments; Game design; Gameplay; Human bodies; Interactive Environments; Natural languages; Non-player character; Personal development; The elder scrolls IV: Oblivion; Computer software; Interactive computer graphics; Intelligent systems,,,,,,"http://www.theinspiracy.com/400_project.htm(1996) Poetics, , Aristotle. Penguin Books, London; (2006) The Elder Scrolls IV: Oblivion, , Bethesda Softworks LLC; Bethesda Softworks Announces the Elder Scrolls IV: Oblivion, , http://www.elderscrolls.com/games/oblivion_overview.htm; Björk, S., Holopainen, J., (2005) Patterns in Game Design, , Charles River Media, Hingham; Branigan, E., (1992) Narrative Comprehension and Film, , Routledge, London; Currie, G., (2004) Arts & Minds, , Oxford University Press, Oxford; Currie, G., (1995) Image and Mind: Film, Philosophy, and Cognitive Science, , Cambridge University Press, Cambridge; Dennett, D., (1996) The Intentional Stance, , The MIT Press, Cambridge; Egri, L., (1960) The Art of Dramatic Writing, , Simon & Schuster, New York; Forster, E.M., (2000) Aspects of the Novel, , Penguin Books, London; Grodal, T., (1999) Moving Pictures. A New Theory of Film Genres, Feelings, and Cognition, , Oxford University Press, New York; (1993) Doom, , id Software; Lankoski, P., Goals, affects, and empathy in games (2007) Philosophy of Computer Games, , Reggio Emilia, Italy, 25-27 January; Lankoski, P., Building and reconstructing character: A case study of silent hill 3 (2005) Changing Views: World in Play, , (Vancouver, June 16-20), DVD; McTiernan, J., (1988) Die Hard; Morrison, I., Ziemke, T., Empathy with computer game characters: A cognitive neuroscience perspective (2005) Proceedings of the Joint Symposium on Virtual Social Agents, pp. 73-79. , Hatfield, UK, 12-17 April; Alexey, P., (1985) Tetris; Reeves, B., Nass, C., (1998) The Media Equation, , CSLI Publications, Stanford; Smith, M., (1995) Engaging Characters: Fiction, Emotion, and the Cinema, , Oxford University Press, New York; Björk, S., Lungren, S., Holopainen, J., Game design patterns (2003) Level Up Conference Proceedings, pp. 180-193. , November; The Elder Scrolls IV: Oblivion, , http://en.wikipedia.org/wiki/the_elder_scrolls_iv:_oblivion?oldid= 104019611; Zwaan, R.A., Radvansky, G.A., Situation models in language comprehension and memory (1998) Psychological Bulletin, 123 (2), pp. 162-185","Lankoski, P.; Media Lab., University of Art and Design Helsinki, Hämeentie 135 C, FI-00560 Helsinki, Finland; email: petri.lankoski@uiah.fi",,,,"3rd Digital Games Research Association International Conference: ""Situated Play"," DiGRA 2007""",24 September 2007 through 28 September 2007,Tokyo,95300,,,,,English,"Digit. Games Res. Assoc. Int. Conf.: ""Situated Play"", DiGRA",Conference Paper,Scopus,2-s2.0-84858982823,
,4,1,"Björk, S., Peitz, J.",Understanding pervasive games through gameplay design patterns,2007,"3rd Digital Games Research Association International Conference: ""Situated Play"", DiGRA 2007",,,,440,448,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873350790&partnerID=40&md5=42eb0b349e268f3b77336373dcc57c15,"Game Studio, Interactive Institite, SE-412 96 Göteborg, Sweden; IDC / Interaction Design Collegium, Dpt. of Computer Science and Eng., Chalmers University of Technology / Göteborg University, SE-412 96 Göteborg, Sweden","Björk, S., Game Studio, Interactive Institite, SE-412 96 Göteborg, Sweden, IDC / Interaction Design Collegium, Dpt. of Computer Science and Eng., Chalmers University of Technology / Göteborg University, SE-412 96 Göteborg, Sweden; Peitz, J., Game Studio, Interactive Institite, SE-412 96 Göteborg, Sweden, IDC / Interaction Design Collegium, Dpt. of Computer Science and Eng., Chalmers University of Technology / Göteborg University, SE-412 96 Göteborg, Sweden","This paper reports on a cluster analysis of pervasive games through a bottom-up approach based upon 120 game examples. The basis for the clustering algorithm relies on the identification of pervasive gameplay design patterns for each game from a set of 75 possible patterns. The resulting hierarchy presents a view of the design space of pervasive games, and details of clusters and novel gameplay features are described. The paper concludes with a view over how the clusters relate to existing genres and models of pervasive games. © 2007 Authors & Digital Games Research Association (DiGRA).",Game design; Gameplay design patterns; Pervasive games,Bottom up approach; Design Patterns; Design spaces; Game design; Gameplay; Pervasive game; Cluster analysis; Clustering algorithms; Computer software; Interactive computer graphics,,,,,,"Barry, M.W., Fierro, R.D., Low-rank orthogonal decompositions for information retrieval applications (1995) Numerical Linear Algebra with Applications, 3 (4), pp. 301-328; Bell, M., Interweaving mobile games with everyday life (2006) Proceedings of CHI, 2006; Benford, S., Uncle roy all around you: Implicating the city in a location-based performance (2004) Proceedings of ACE 2004; Benford, S., Can you see me now? (2005) ACM Transactions on Computer-Human Interaction, 13 (1), pp. 100-133. , 2005; Benford, S., Hitchers: Designing for cellular positioning (2006) Proceedings of UbiComp 2006; Björk, S., Pirates! - Using the physical world as a game board (2001) Proceedings of Interact 2001; Björk, S., Designing ubiquitous computing games - A report from a workshop exploring ubiquitous computing entertainment (2002) Personal and Ubiquitous Computing, 6 (5-6), pp. 443-458; Björk, S., Game design patterns (2003) Proceedings of DiGRA 2003; Björk, S., Holopainen, J., Patterns in game design (2004) Charles River Media; Björk, S., Illuminating cracks and drawing illusionary lines - Changing urban perspectives through pervasive games (2007) Space Time Play. on the Synergy between Computer Games, , (Forthcoming), Borries, F. von, et al. (eds.) (2007), Architecture, and Urbanism, Birkhäuser Publishing, Basel Boston Berlin; Gustafsson, A., Believable environments: Generating interactive storytelling in vast location-based pervasive games (2006) Proceedings of ACE 2006; Chalmers, M., Gaming on the edge: Using seams in ubicomp games (2005) ACE 2005, , Valencia, Spain; Cheok, A.D., Human PacMan: A mobile, wide-area entertainment system based on physical, social, and ubiquitous computing (2004) Personal Ubiquitous Computing, 8 (2), pp. 71-81. , 2004; Crabtree, A., Orchestrating a mixed reality game 'on the ground' (2004) Proceedings of CHI 2004; Davidsson, O., Game design patterns for mobile games (2004) Project Report to Nokia Research Center, Finland; Davis, S.B., Ere be dragons: Heartfelt gaming (2006) Digital Creativity, 7 (3). , 2006; Dordick, R., The convenience of small devices. How pervasive computing will personalize e-business (1998) Interview with Mark Bregman in IBM Think Research, (3). , 1998; Dunne, A., Hertzian tales: Electronic products, aesthetic experience and critical design (1999) RCA Computer Related Design Research; Jonsson, S., Prosopopeia: Experiences from a pervasive larp (2006) ACE 2006; Hjelm, S.I., The making of brainball (2003) Interactions, 10 (1), pp. 26-34. , 2003; Ishii, H., PingPongPlus: Design of an athletic-tangible interface for computer-supported cooperative play (1999) Proceedings of CHI'99, pp. 394-401; Johnson, J.W., A scholar looks at killer (1981) The Game of Assassination, Steve Jackson Games, p. 1998. , Afterword in Jackson, S., (1998); Lankoski, P., A case study in pervasive game design: The songs of north (2004) Proceedings of NordiChi 2004, pp. 413-416. , Tampere, Finland; Lee, W., TARBoard: Tangible augmented reality system for table-top game environment (2005) Proceedings of the PerGames Workshop 2005; Licoppe, C., Inada, Y., ""Seing"" one another onscreen and the construction of social order in a mobilebased augmented public space: The uses of a geo-localized mobile game in Japan (2005) Proceedings of Learning in the Mobile Age Conference 2005.; Lundgren, S., Björk, S., Forces, clashes and remnants: A model for event-driven iterative multidisciplinary game design (2005) Short Paper at ACE 2005; Magerkurth, C., Towards the next generation of tabletop gaming experiences (2004) Graphics Interface 2004, pp. 73-80; Mandryk, R.L., False prophets: Exploring hybrid board/video games (2002) Extended Abstracts of CHI 2002, pp. 640-641; Maynes-Aminzade, D., Raffle, H., You're in Control.: A urinary user interface (2003) Extended Abstracts of CHI 2003, pp. 986-987; McGonigal, J., Supergamingl ubiquitous play and performance for massively scaled community (2005) Modern Drama. Special Issue on Technology, 48 (3), pp. 471-491. , Ed. W.B. Worthen. (Fall 2005); Michael, D., Chen, S., Serious games: Games that educate, train, and inform (2005) Course Technology PTR; Mitchell, K., Six in the city: Introducing real tournament - A mobile ipv6 based context-aware multiplayer game (2003) Proceedings of Workshop on Network and System Support, pp. 91-100. , 2003; Mokka, S., Fitness computer game with a bodily user interface (2003) Proceedings of ICEC 2003, pp. 1-3. , Pittsburgh, Pennsylvania, May 8-10, 2003; Montola, M., Exploring the edge of the magic circle (2005) Defining Pervasive Games DAC 2005, , Copenhagen, Denmark; Montola, M., Domain of pervasive gaming (2006) Public IPerG Deliverable D5.3b, , http://iperg.sics.se, Available for download from (last visited 20070227); Montola, M., Waern, A., Participant roles in socially expanded games (2006) PerGames 2006, , Dublin, Ireland; Nieuwdorp, E., The pervasive discourse: An analysis of the use and definitions of the term 'pervasive' games research (2007) ACM Computers in Entertainment, , January 2007; Ohlenburg, J., Report about the crossmedia game epidemic menace (2006) Proceedings of 3rd International Workshop on Pervasive Gaming Applications, , Dublin, Ireland, 2006; Peitz, J., A. Wizard's Apprentice - Gameplay-oriented design of a computer-augmented board game (2006) ACE 2006, , Paper at; Peitz, J., Insectopia - Exploring pervasive games through technology already pervasively available ACE 2007, , (2007 forthcoming). Forthcoming paper at; Quesada, J.F., A computational theory of complex problem solving using the vector space model (part I): Latent semantic analysis, through the path of thousands of ants (2001) Cognitive Research with Microworlds, pp. 43-84. , Cañas (Ed.). Pp. 117-131; Sanneblad, J., Holmquist, L.E., (2003) Designing Collaborative Games on Handheld Computers SIGGRAPH 2003 Sketches and Applications; Shneiderman, B., Tree visualization with treemaps: 2-d space-filling approach (1992) ACM Transactions on Graphics, 11 (1), pp. 92-99. , 1992; Sotamaa, O., All the world's a botfighters stage: Notes on location-based multi-user gaming (2002) Proceedings of Computer Games and Digital Cultures Conference, , 2002; Starner, T., MINDWARPING: Towards creating a compelling collaborative augmented reality game (2000) IUI 2000, pp. 256-259; Thomas, B., ARQuake: An outdoor/indoor augmented reality first person application (2000) Wearable Computers 2000, pp. 139-146; Thoresson, J., Photophone entertainment (2003) Extended Abstracts of CHI 2003, pp. 896-897; Thoresson, J., Stenberg, P., The toilet entertainment system (2003) Extended Abstracts of CHI 2003; Von Ahn, L., Dabbish, L., Labeling images with a computer game (2004) CHI 2004, pp. 319-326; Von Ahn, L., Peekaboom: A game for locating objects in images (2006) CHI 2006, pp. 55-64; Von Ahn, L., Improving accessibility of the web with a computer game (2006) CHI 2006, pp. 79-82; Walz, S.P., Constituents of hybrid reality: Cultural anthropological elaborations and a serious game design experiment merging mobility, media, and computing (2005) Total Interaction. Theory and Practice of A New Paradigm for the Design Disciplines, pp. 122-141. , Buurman, Gerhard M. (Ed.). Basel: Birkhäuser; Wolf, M.J.P., Genre and the video game (2000) The Medium of the Video Game, , Wolf, M.J.P. (Ed.), University of Texas Press, 2000","Björk, S.; Game Studio, Interactive Institite, SE-412 96 Göteborg, Sweden; email: johan.peitz@tii.se",,,,"3rd Digital Games Research Association International Conference: ""Situated Play"," DiGRA 2007""",24 September 2007 through 28 September 2007,Tokyo,95300,,,,,English,"Digit. Games Res. Assoc. Int. Conf.: ""Situated Play"", DiGRA",Conference Paper,Scopus,2-s2.0-84873350790,
,1,1,"Froyd, J., Layne, J., Fowler, D., Simpson, N.",Design patterns for faculty development,2007,"Proceedings - Frontiers in Education Conference, FIE",,,4418037,T1J1,T1J5,,,10.1109/FIE.2007.4418037,http://www.scopus.com/inward/record.url?eid=2-s2.0-50049095644&partnerID=40&md5=4c30a43262ef784431c79ef40e496cb7,"Center for Teaching Excellence, Texas A and M University","Froyd, J., Center for Teaching Excellence, Texas A and M University; Layne, J., Center for Teaching Excellence, Texas A and M University; Fowler, D., Center for Teaching Excellence, Texas A and M University; Simpson, N., Center for Teaching Excellence, Texas A and M University","Faculty development opportunities related to learning and teaching have common characteristics every case is not new. Other disciplines, such as architecture and software design, have recognized commonalities within their fields and responded with use of ""design patterns."" In this paper, the authors identify three useful design patterns that have emerged in research on successful faculty development activities as models for thinking and communicating about contexts, challenges and responses in faculty development practice and outcomes. Three design patterns that have evolved in faculty development are Diffusion, Appreciative Inquiry, and Decoding the Disciplines. Identification, delineation, and utilization of design patterns in faculty development have several potential benefits to STEM faculty members. First, the process promotes a paradigm shift from thinking of faculty development challenges as isolated occurrences to one that uses commonality to ease development of new activities and build on previous contributions. Second, it motivates greater application of the learning literature to faculty development by emphasizing analysis and feedback on what is going well and what can be learned from success before addressing change. Finally, it provides a way for faculty developers to think about challenges in their profession using processes familiar to them within their areas of disciplinary expertise. © 2007 IEEE.",Appreciative inquiry; Design patterns; Faculty development,Appreciative inquiry; Design patterns; Faculty development; Faculty members; Paradigm shifts; Potential benefits; Decoding; Education; Research; Software architecture; Software design,,,,,,"Weimer, M., Firing Lenze, L., Instructional Interventions: A Review of the Literature on Efforts to Improve Instruction (1997) Effective Teaching in Higher Education: Research and Practice; Gillespir, K.H., Hilsen, L.R., Wadsworth, E.C., (2001) A Guide to Faculty Development; Sorcinelli, M.D., Austin, A.E., Eddy, P.L., (2005) Creating the Future of Faculty Development: Learning from the Past, Understanding the Present; Boice, R., (2000) Advice for new faculty members: Nihil nimus, , Needham Heights, MA: Allyn & Bacon; Kane, R., Sandretto, S., Heath, C., Telling half the story: A critical review of research on the teaching beliefs and practices of university academics (2002) Review of Educational Research, 72 (2), pp. 177-228; Piccinin, S., Cristi, C., McCoy, M., The impact of individual consultation on student ratings of teaching (1999) The International Journal for Academic Development, 4, pp. 75-88; Piccinin, S., Moore, J.-P., The impact of individual consultation on the teaching of younger versus older faculty The International Journal for Academic Development, 7, pp. 123-134; Clark, M.C., Froyd, J., Merton, P., Richardson, J., The Evolution of Curricular Change Models Within the Foundation Coalition (2004) Journal of Engineering Education, 93 (1), pp. 37-47; Gess-Newsome, J., Southerland, S.A., Johnston, A., Woodbury, S., Educational Reform, Personal Practical Theories, and Dissatisfaction: The Anatomy of Change in College Science Teaching (2003) American Educational Research Journal, 40 (3), pp. 731-767; Pajares, M.F., Cleaning up a Messy Construct (1992) Review of Educational Research, 62 (3), pp. 307-332. , Teachers' Beliefs and Educational Research; Woodbury, S., Gess-Newsome, J., Overcoming the Paradox of Change Without Difference: A Model of Change in the Arena of Fundamental School Reform (2002) Educational Policy, 16 (5), pp. 763-782; Bransford, J., Brown, A.L., Cocking, R., How people learn: Brain, mind, Experience, and School (2000) National Research Council (U.S.) Committee on Developments in the Sciences, , Expanded Edition, National Research Council U.S, Committee on Learning Research and Education; Froyd, J., Fowler, D., Layne, J., Simpson, N., Frameworks for faculty development (2005) Proceedings, Frontiers in Education Conference; Alexander, C., (1979) A Timeless Way of Building, , New York: Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading, MA: Addison-Wesley Professional; Design pattern (computer science), Wikipedia, , http://en.wikipedia.org/wiki/Design_pattern%28computerscience%29, Retrieved from, 14 Mar 2007; Cox, M.D., Introduction to Faculty Learning Communities (2004) New Directions for Teaching and Learning, 97, p. 523; Layne, J., Froyd, J., Morgan, J., Kenimer, A., Faculty Learning Communities (2007) Proceedings, Frontiers in Education Conference, , http://fle.engrng.pitt.edu/fie2002/papers/1582.pdf, Retrieved from, 19 Mar; Zull, J.E., (2002) The Art of Changing the Brain: Enriching Teaching by Exploring the Biology of Learning, , Sterling, Virginia: Stylus Publishing; Hammond, S. A., The Thin Book of Appreciative Inquiry. Piano, TX: Kodiak Consulting/ London: BT Press, 1996Haglund, D. K., Kushner, J., and Martin, J. K., Developing a Philosophy of Practice: A New Approach to Curricular Evolution in Engineering Education, Proceedings, ASEE Annual Conference & Exposition, 2003, Retrieved from http://www.asee.org/acPapers/code/getPaper.cfm?paperID=6710&pdf=2003- 1734_Final.pdf, 19 Mar 2007Middendorf, J., Pace, D., Decoding the Disciplines: A Model for Helping Students Learn Disciplinary Ways of Thinking (2004) Decoding the Disciplines: Helping Students Learn Disciplinary Ways of Thinking: New Directions for Teaching and Learning, 98, pp. 1-12; Shulman, L.S., Teaching as Community Property: Putting an End to Pedagogical Solitude (2004) Teaching as Community Property: Essays on Higher Education, , P. Hutchings, Ed, San Francisco: Jossey-Bass; Brent, R., Felder, R., Regan, T., Walser, A., Carlson-Dakes, C., Evans, D., Malave, C., Sanders, K., and McGourty, J., Engineering Faculty Development: A Multicoalition Perspective. Proceedings, ASEE Annual Conference & Exposition, 2000, Retrieved from http://www.asee.org/acPapers/code/getPaper. cfm?paperID=2688, 19 Mar 2007Brent, R., Felder, R. M., Hirt, D., Switzer, D., and Holzer, S., A Model Program for Promoting Effective Teaching in Colleges of Engineering, Proceedings, ASEE Annual Conference & Exposition, 1999, Retrieved from http://www.asee.org/acPapers/code/getPaper.cfm?paperID=1687&pdf=9 9conf367.PDF. 19 Mar 2007","Froyd, J.; Center for Teaching Excellence, Texas A and M UniversityUnited States; email: froyd@tamu.edu",,,,"37th ASEE/IEEE Frontiers in Education Conference, FIE",10 October 2007 through 13 October 2007,"Milwaukee, WI",73032,15394565,1424410843,9781424410842,PFECD,,English,Proc. Front. Educ. Conf. FIE,Conference Paper,Scopus,2-s2.0-50049095644,
,4,4,"Lengyel, L., Levendovszky, T., Mészáros, T., Charaf, H.",Supporting design patterns in graph rewriting-based model transformation,2007,ENASE 2007 - Proceedings of the 2nd International Conference on Evaluation of Novel Approaches to Software Engineering,,,,25,32,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84880308625&partnerID=40&md5=716bd56751c71c1cc240a5d71dd44257,"Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary","Lengyel, L., Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary; Levendovszky, T., Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary; Mészáros, T., Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary; Charaf, H., Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary","Model transformations appear in many, different situations in a model-based development process. A few representative examples are as follows: refining the design to implementation, aspect weaving, analysis, and verification. In object-oriented software design, design patterns describe simple and elegant solutions to specific problems. Similarly, design pattern should be identified in model transformations as well to support the frequently appearing problems. This paper introduces the design pattern support of a modelling and model transformation framework (Visual Modeling and Transformation System). Furthermore, we discuss two model-based development related design patterns.",Design patterns; Graph rewriting; Model transformation; Rewriting rule patterns,Design Patterns; Graph rewriting; Model based development; Model transformation; Object-oriented software designs; Rewriting rules; Supporting design; Visual modeling and transformation systems; Software engineering; Mathematical models,,,,,,"Agrawal, A., Vizhanyo, A., Kalmar, Z., Shi, F., Narayanan, A., Karsai, G., Reusable idioms and patterns in graph transformation languages (2004) 2nd Int. Conference on Graph Transformation, , Rome, Italy; Butts, K., Bostic, D., Chutinan, A., Cook, J., Milam, B., Wang, Y., Usage scenarios for an automated model compiler (2001) EMSOFT 2001, pp. 66-79; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Professional Computing Series; Karsai, G., Agrawal, A., Shi, F., Sprinkle, J., On the use of graph transformation in the formal specification of model interpreters (2003) Journal of Universal Computer Science, , Special issue on Formal Specification of CBS; Köhler, H.J., Nickel, U., Niere, A.J., Zündorf, A., Integrating UML diagrams for production control systems (2000) 22nd Int. Conf. on Software Engineering (ICSE), pp. 241-251. , Limerick Ireland, ACM Press; Lara, J., Vangheluwe, H., Alfonseca, M., Meta-modelling and graph grammars for multi-paradigm modelling in AToM (2004) SoSyM, 3 (3), pp. 194-209. , August; Lengyel, L., Levendovszky, T., Charaf, H., Graph transformation and constraint validation-driven user interface handler code (2005) MicroCAD, pp. 267-272. , March 10-11, 2005, Miskolc; Lengyel, L., (2006) Online Validation of Visual Model Transformations, , PhD thesis, Budapest University of Technology and Economics, Department of Automation and Applied Informatics; Lengyel, L., Levendovszky, T., Mezei, G., Charaf, H., Model-based development with strictly controlled model transformation (2006) The 2nd Int. Workshop on Model-Driven Enterprise Information Systems, MDEIS 2006, pp. 39-48. , Cyprus; (2003) OMG MDA Guide, , www.omg.org/docs/omg/03-06-01.pdf, Version 1.0.1 Document number: omg/2003-06-01; (2006) OMG OCL Specification, , http://www.omg.org/, Version 2.0; (2005) Meta Object Facility 2.0 Query/Views/Transformation Specification, , http://www.omg.org/cgi-bin/apps/doc?ad/05-03-02.pdf; (2007) OMG UML Specification, , http://www.uml.org/, Version 2.1.1; Quantum Framework (qF) Web Site, , http://www.quantum-leaps.com/qf.htm; Rozenberg, G., (1997) Handbook on Graph Grammars and Computing by Graph Transformation: Foundations, 1. , World Scientific, Singapore; Schürr, A., Winter, A.J., Zündorf, A., (1999) The PROGRES Approach: Language and Environment; Sprinkle, J., Model-integrated computing (2004) IEEE Potentials, 23 (1), pp. 28-30. , 2004; Sztipanovits, J., Karsai, G., Model-integrated computing (1997) IEEE Computer, pp. 110-112; Sztipanovits, J., Karsai, G., (2002) Generative Programming for Embedded Systems, pp. 32-49. , LNCS 2487; Taentzer, G., AGG: A graph transformation environment for system modeling and validation (2003) Proc. Tool Exihibition at Formal Methods 2003; Taentzer, G., Ehrig, K., Guerra, E., De Lara, J., Lengyel, L., Levendovszky, T., Prange, U., Varro-Gyapay, S.Z., Model transformation by graph transformation: A comparative study (2005) ACM/IEEE 8th Int. Conference on Model Driven Engineering Languages and Systems, , Montego Bay, Jamaica; Thai, T., Lam, H., (2003) .NET Framework Essentials, , O'Reilly; Varró, D., Pataricza, A., VPM: A visual, precise and multilevel metamodeling framework for describing mathematical domains and UML (2003) Journal of Software and Systems Modeling; (2003), http://www.vmts.aut.bme.hu/, Website","Budapest University of Technology and Economics, Goldmann György tér 3, 1111 Budapest, Hungary",,,,"2nd International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2007",23 July 2007 through 25 July 2007,Barcelona,97842,,9789898111104,,,English,ENASE - Proc. Int. Conf. Eval. Novel Approaches Softw. Eng.,Conference Paper,Scopus,2-s2.0-84880308625,,
,v,v,"Arcelli, F., Cristina, L.",Enhancing software evolution through design pattern detection,2007,"3rd International IEEE Workshop on Software Evolvability 2007, SE",,,4383091,7,14,,7,10.1109/SE.2007.11,http://www.scopus.com/inward/record.url?eid=2-s2.0-47349117983&partnerID=40&md5=9b694021b3797ba514063fbf30ecbf00,"Dipartimento di Informatica, Sistemistica e Comunicazione, Università degli Studi di Milano, Bicocca, Italy","Arcelli, F., Dipartimento di Informatica, Sistemistica e Comunicazione, Università degli Studi di Milano, Bicocca, Italy; Cristina, L., Dipartimento di Informatica, Sistemistica e Comunicazione, Università degli Studi di Milano, Bicocca, Italy","Software system evolutions can be supported through different techniques and by exploiting different tools. We concentrate our attention on the advantages we gain through design recovery, and in particular on sub-component recovery, which helps to detect logical components of the system and their relationships. Components can be of various kinds: an important category is that of Design Patterns [7]. Several approaches have been proposed to automate design pattern detection. In this paper we describe our approach to design pattern detection using supervised classification and data mining techniques based on sub-components, and summarize the results we obtained on behavioral Design Patterns. © 2007 IEEE.",,Component recovery; Data mining techniques; Design pattern detection; Design patterns; Design recovery; Evolvability; International (CO); Software Evolution; Software systems; Sub-components; Supervised classification; Computer software; Data mining; Decision support systems; Information management; Knowledge management; Real time systems; Search engines; Spontaneous emission; Software design,,,,,,"(2006) Proceedings of the First International Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE 2006), co-located event with the 13rd IEEE Working Conference on Reverse Engineering (WCRE 2006), , F. Arcelli, C. Raibulet, G. Antoniol, Y. G. Guéhéneuc, and J. M. Smith, editors, Benevento, Italy, Oct; Arcelli, F., Raibulet, C., Tosi, C., Zanoni, M., The joiner: From subcomponents to design patterns (2006) Proceedings of the 1st Workshop on Design Pattern Detection for Reverse Engineering (DPD4RE 2006), , Benevento, Italy, Oct; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) ICSM '03: Proceedings of the International Conference on Software Maintenance, p. 305. , Washington, DC, USA, IEEE Computer Society, p; Cristina, L., (2006) Exploiting supervised classification techniques for design pattern detection, , Master's thesis, Università degli Studi di Milano, Bicocca; http://essere.disco.unimib.it, ESSeRE (Evolution of Software Systems and Reverse Engineering) web siteFerenc, R., Beszédes, A., Fülöp, L., Lele, J., Design pattern mining enhanced by machine learning (2005) Proceedings of International Conference on Software Maintenance 2005, pp. 295-304. , IEEE Computer Society, Sept; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; J. Y. Gil and I. Maman. Micro Patterns in Java Code. Proceedings of the 20th Annual conference on Object-oriented programming, systems, languages, and applications (OOPSLA'05), San Diego, California, Oct. 16 th-20th 2005. SIGPLAN, pp 97-116Guéhéneuc, Y.G., Ptidej: Promoting patterns with patterns (2005) Proceedings of the 1st ECOOP workshop on Building a System using Patterns, , Springer Verlag; Joone, , http://www.jooneworld.com, Home page; Maggioni, S., (2005) A novel approach to design pattern detection through design pattern clues, , Master's thesis, Università degli Studi di Milano, Bicocca; Mens, K., Michiels, I., Wuyts, R., Supporting software development through declaratively codified programming patterns (2002) Expert Systems With Applications, Elsevier; Niere, J., Fuzzy logic based interactive recovery of software design (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 727-728. , Orlando, Florida, USA; Shi, N., Olsson, R.A., Reverse engineering of design patterns from java source code (2005) Proceedings of the 20 20th Annual conference on Object-oriented programming, systems, languages, and applications (OOP-SLA'05), pp. 97-116. , San Diego, California; Smith, J.M., An elemental design pattern catalog (2002), Technical Report TR-02-040, Department of Computer Science, University of North CarolinaTsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S., Design pattern detection using similarity scoring (2006) IEEE Transactions on Software Engineering, 32, pp. 896-909. , IEEE; Weka, , http://www.cs.waikato.ac.nz/~ml/weka, Home page","Arcelli, F.; Dipartimento di Informatica, Sistemistica e Comunicazione, Università degli Studi di Milano, Bicocca, Italy; email: arcelli@disco.unimib.it",,,,"3rd International IEEE Workshop on Software Evolvability 2007, SE 2007",1 October 2008 through 1 October 2008,Paris,72660,,769530028,9780769530024,,,English,"Int. IEEE Workshop Softw. Evolvability, SE",Conference Paper,Scopus,2-s2.0-47349117983,
,4,4,"Aversano, L., Canfora, G., Cerulo, L., Del Grosso, C., Di Penta, M.",An empirical study on the evolution of design patterns,2007,"6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2007",,,,385,394,,35,10.1145/1287624.1287680,http://www.scopus.com/inward/record.url?eid=2-s2.0-37849012764&partnerID=40&md5=8f2b0774603afd63dd4014b35afe4db1,"RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy","Aversano, L., RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy; Canfora, G., RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy; Cerulo, L., RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy; Del Grosso, C., RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy; Di Penta, M., RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy","Design patterns are solutions to recurring design problems, conceived to increase benefits in terms of reuse, code quality and, above all, maintainability and resilience to changes. This paper presents results from an empirical study aimed at understanding the evolution of design patterns in three open source systems, namely JHotDraw, ArgoUML, and Eclipse-JDT. Specifically, the study analyzes how frequently patterns are modified, to what changes they undergo and what classes co-change with the patterns. Results show how patterns more suited to support the application purpose tend to change more frequently, and that different kind of changes have a different impact on co-changed classes and a different capability of making the system resilient to changes. Copyright 2007 ACM.",Design patterns; Empirical software engineering; Mining software repositories; Software evolution,Computer aided design; Data mining; Fault tolerant computer systems; Pattern recognition; Engineering; Maintainability; Open systems; Software engineering; Design patterns; Empirical software engineering; Mining software repositories; Software evolution; Code qualities; Design problems; Empirical studies; Open Source systems; Software engineering; Design,,,,,,"Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design patterns recovery (2001) Journal of Systems and Software, 59 (2), pp. 181-196; Arnold, R.S., Bohner, S.A., Impact analysis -towards a framework for comparison (1993) Proceedings of the IEEE International Conference on Software Maintenance (ICSM 1993), Montréal, Quebec, Canada, pp. 292-301. , IEEE Computer Society; Bieman, J.M., Straw, G., Wang, H., Munger, P.W., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) 9th International Software Metrics Symposium (METRICS'03), pp. 40-49. , IEEE Computer Society; Breu, S., Zimmermann, T., Mining aspects from version history (2006) 21st IEEE/ACM International Conference on Automated Software Engineering (ASE 2006), pp. 221-230. , S. Uchitel and S. Easterbrook, editors, ACM Press, September; Canfora, G., Cerulo, L., How crosscutting concerns evolve in JHotDraw (2005) STEP '05: Proceedings of the 13th IEEE International Workshop on Software Technology and Engineering Practice, pp. 65-73. , IEEE Computer Society; Canfora, G., Cerulo, L., Impact analysis by mining software and change request repositories (2005) 11th IEEE International Software Metrics Symposium (METRICS 2005), pp. 29-38. , IEEE Computer Society; Canfora, G., Cerulo, L., Di Penta, M., On the use of line co-change for identifying crosscutting concern code (2006) 22nd IEEE International Conference on Software Maintenance (ICSM 2006), 24-27 September 2006, Philadelphia, PA, USA, pp. 213-222; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., Design pattern recovery by visual language parsing (2005) 9th European Conference on Software Maintenance and Reengineering (CSMR 2005), 21-23 March 2005, Manchester, UK, pp. 102-111; Eckel, B., (2005) Thinking in Patterns with Java, 11. , http://www.mindview.net/ Books/TIPatterns, Last accessed March, Mindview Inc; Gall, H., Jazayeri, M., Krajewski, J., CVS release history data for detecting logical couplings (2003) IWPSE '03: Proceedings of the 6th International Workshop on Principles of Software Evolution, p. 13. , IEEE Computer Society; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Geiger, R., Fluri, B., Gall, H.C., Pinzger, M., Relation of code clones and change couplings (2006) LNCS, 3922, pp. 411-425. , Proceedings of the 9th International Conference of Funtamental Approaches to Software Engineering FASE, number in, Vienna, Austria, March, Springer; Gil, J., Maman, I., Micro patterns in java code (2005) Proceedings of the 20th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2005, October 16-20, 2005, San Diego, CA, USA, pp. 97-116. , ACM; Guéhéneuc, Y.-G., Sahraoui, H.A., Zaidi, F., Fingerprinting design patterns (2004) 11th Working Conference on Reverse Engineering (WCRE 2004), 8-12 November 2004, Delft, The Netherlands, pp. 172-181; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) 11th International Workshop on Program Comprehension (IWPC 2003), May 10-11, 2003, Portland, Oregon, USA, pp. 94-103; Kim, M., Sazawal, V., Notkin, D., Murphy, G., An empirical study of code clone genealogies (2005) Proceedings of the European Software Engineering Conference and the ACM Symposium on the Foundations of Software Engineering, pp. 187-196. , Lisbon, Portugal, September; Kim, S., Pan, K., Whitehead, E.J.J., Micro pattern evolution (2006) Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR 2006, Shanghai, China, May 22-23, 2006, pp. 40-46. , ACM; Kim, S., Zimmermann, T., Pan, K., Whitehead, E.J.J., Automatic identification of bug-introducing changes (2006) ASE '06: Proceedings of the 21st IEEE International Conference on Automated Software Engineering (ASE'06), pp. 81-90. , IEEE Computer Society; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the Working Conference on Reverse Engineering, pp. 208-215; Livshits, B., Zimmermann, T., Dynamine: Finding common error patterns by mining software revision histories (2005) ESEC/FSE-13: Proceedings of the 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering, pp. 296-305. , ACM Press; Milanova, A., Rountev, A., Ryder, B.G., Parameterized object sensitivity for points-to analysis for Java (2005) ACM Trans. Softw. Eng. Methodol, 14 (1), pp. 1-41; Prechelt, L., Unger, B., Tichy, W.F., Brössler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Trans. Software Eng, 27 (12), pp. 1134-1144; Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T., Design pattern detection using similarity scoring (2006) IEEE Trans. Software Eng, 32 (11), pp. 896-909; Vokáč, M., Defect frequency and design patterns: An empirical study of industrial code (2004) IEEE Trans. Software Eng, 30, pp. 904-917; Yin, R.K., (2002) Case Study Research: Design and Methods, , Third Edition. SAGE Publications, London; Ying, A.T.T., Murphy, G.C., Ng, R., Chu-Carroll, M.C., Predicting source code changes by mining revision history (2004) IEEE Trans. Software Eng, 30, pp. 574-586. , sep; Zimmermann, T., Weisgerber, P., Diehl, S., Zeller, A., Mining version histories to guide software changes (2004) ICSE '04: Proceedings of the 26th International Conference on Software Engineering, pp. 563-572. , IEEE Computer Society","Aversano, L.; RCOST -Research Centre on Software Technology, University of Sannio, Via Traiano, 82100 Benevento, Italy; email: aversano@unisannio.it",,ACM Special Interest Group on Software Engineering,,"6th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2007",3 September 2007 through 7 September 2007,Dubrovnik,70917,,9781595938114,,,English,Joint Meet. Eur. Softw. Eng. Conf. ACM SIGSOFT Symp. Found. Softw. Eng.,Conference Paper,Scopus,2-s2.0-37849012764,,
,4,4,"Cabrero, D., Garzás, J., Piattini, M.",Understanding product lines through design patterns,2007,"ICSOFT 2007 - 2nd International Conference on Software and Data Technologies, Proceedings",SE,,,405,408,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-67650252038&partnerID=40&md5=7f2a448599ead98c7e4b55571a23c54b,"Djrección General de Tráfico, Spanish Ministry of Internal Affairs, Madrid, Spain; Kybele Consulting S.L. Madrid, Spain; Alarcos Research Group, University of Castilla-La Mancha, Ciudad Real, Spain","Cabrero, D., Djrección General de Tráfico, Spanish Ministry of Internal Affairs, Madrid, Spain; Garzás, J., Kybele Consulting S.L. Madrid, Spain; Piattini, M., Alarcos Research Group, University of Castilla-La Mancha, Ciudad Real, Spain","Many proposals concerning design and implementation of Software Product Lines have been studied in the last few years. This work points out how and why different Design Patterns are used in the context of Product Lines. This will be achieved by reviewing how often those patterns appear in different proposed solutions and research papers for Product Lines for a given set of sources. This information will help us identify which specific problems need to be solved in the context of Product Lines. In addition, we will discuss how this information can be useful to identify gaps in new research.",Design patterns; Software product lines; Systematic literature review; Variability points,Design Pattern; Design patterns; Product-lines; Research papers; Software Product Line; Software product lines; Specific problems; Systematic literature review; Variability points; Computer software; Research; Product design,,,,,,"Bachmann, F., Bass, L., Managing variability in software architectures, (2001) Symposium on Software Reusability, , ACM Press; Biolchini, J., Mian, P.G., Natali, A.C.C., Travassos, G.H., Systematic Review in Software Engineering (2005) Rio de Janeiro, COPPE / UFRJ; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture - A System of Patterns, , John Wiley and Sons Ltd; Clements, P., Northrop, L., (2001) Software Product Lines: Practices and Patterns, , Addison-Wesley; Coplien, J., Hoffman, D., Weiss, D., Commonality and Variability in Software Engineering (1998) IEEE Software, 15, pp. 37-45; Fowler, M., (1999) Refactoring, , Addison Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley; Garzas, J., Piattini, M., An ontology for micro-architectural design knowledge (2005) IEEE Software Magazine, 22, pp. 28-33; Goedicke, M., Kollmann, C., Zdun, U., Designing runtime variation points in product line architectures: Three cases (2004) Science of Computer Programming, 53, pp. 353-380; Harsu, M., (2001) A Survey of Product-Line Architectures, , Tampere, Tampere University of Technology; Keepence, B., Mannion, M., Using patterns to model variability in product families (1999) IEEE Software, 16, pp. 102-108; Kitchenham, B., Procedures for Performing Systematic Reviews (2004) Keele University Technical Report, , Keele, Software Engineering Group.Department of Computer Science. Keele University; Muthig, D., John, I., Anastasopoulos, M., Forster, T., DOrr, J., Schmid, K., (2004) GoPhone - A Software Product Line in the Mobile Phone Domain. IESE-Report, , Fraunhofer IESE; Myllymäki, T., (2002) Variability Management in Software Product Lines, , Tampere, Institute of Software Systems. Tampere University of Technology; Parnas, D., Clements, P.C., Weiss, D., The Modular Structure Of Complex Systems (1984) International Conference on Software Engineering, , Orlando, Florida, IEEE Press; Ziadi, T., Jézequél, J.-M., Fondement, F., Product Line Derivation with UML (2003) Groningen Workshop on Software Variability Management","Cabrero, D.; Djrección General de Tráfico, Spanish Ministry of Internal Affairs, Madrid, Spain; email: dani_mas_d@yahoo.fr",,Workflow Management Coalition (WfMC) - Process Thought Leadership,,"2nd International Conference on Software and Data Technologies, ICSOFT 2007",22 July 2007 through 25 July 2007,Barcelona,76459,,,,,English,,Conference Paper,Scopus,2-s2.0-67650252038,,
,4,v,"Bayley, I., Zhu, H.",Formalising design patterns in predicate logic,2007,"Proceedings - 5th IEEE International Conference on Software Engineering and Formal Methods, SEFM 2007",,,4343921,25,34,,16,10.1109/SEFM.2007.22,http://www.scopus.com/inward/record.url?eid=2-s2.0-47949128377&partnerID=40&md5=36c0b78dcba079e474d04a5cefac562d,"Department of Computing, Oxford Brookes University, Oxford 0X33 1HX, United Kingdom","Bayley, I., Department of Computing, Oxford Brookes University, Oxford 0X33 1HX, United Kingdom; Zhu, H., Department of Computing, Oxford Brookes University, Oxford 0X33 1HX, United Kingdom","Design patterns are traditionally outlined in an informal manner. If they could be formalised, we could derive tools that automatically recognise design patterns and refactor designs and code. Our approach is to deploy predicate logic to specify conditions on the class diagrams that describe design patterns. The structure of class diagrams is itself described with a novel meta-notation that can be used for defining any graphical modelling language. As a result, the constraints, while based on UML, are highly readable and have much expressive power. This enables us not only to recognise design patterns in legacy code, but also to reason about them at the design stage, such as showing one pattern to be a special case of another. The paper discusses our specification of the original 23 design patterns and presents a representative sample of some of them. © 2007 TREE.",,Codes (standards); Codes (symbols); Encoding (symbols); Formal logic; Graphic methods; Query languages; Software engineering; Technology; Unified Modeling Language; Class diagrams; Design patterns; Design stages; Expressive power; Graphical modelling; International conferences; Legacy codes; Predicate logics; Representative sample; Formal methods,,,,,,"Bayley, I., Zhu, H., Formal specification of design patterns as structural properties (2006), Technical Report DOC-TR-07-01, Department of Computing, Oxford Brookes University, Oxford, UKEden, A., Website, , www.eden-study.org/lepus, at; Eden, A.H., Formal specification of object-oriented design (2001) International Conference on Multidisciplinary Design in Engineering, , Montreal, Canada, November; Eden, A.H., A theory of object-oriented design (2002) Information Systems Frontiers, 4 (4), pp. 379-391; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guennec, A.L., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns (2000) UML, pp. 482-496; Lano, K., Bicarregui, J.C., Goldsack, S., Formalising design patterns (1996) BCS-FACS Northern Formal Methods Workshop, , Ilkley, UK, September; A. Lauder and S. Kent. Precise visual specification of design patterns. In Lecture Notes in Computer Science 1445, pages 114-134. ECOOP'98, Springer, 1998J. K. H. Mak, C. S. T. Choy, and D. P. K. Lun. Precise modeling of design patterns in uml. In 26th International Conference on Software Engineering (ICSE'04), pages 252-261, 2004Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using dpml (2002) CRPIT '02: Proceedings of the Fortieth International Conference on Tools Pacific, pp. 3-11. , Australian Computer Society, Inc; Mikkonen, T., Formalizing design patterns (1998) Proc. of ICSE'98, pp. 115-124. , Kyoto, Japan, IEEE CS, April; Nija Shi, N., Olsson, R., Reverse engineering of design patterns from java source code (2006) Proc. of ASE'06, pp. 123-134. , Tokyo, Japan, September; OMG. Unified modeling language: Superstructure, version 2.0, formal/05-07-04Taibi, T., Formalising design patterns composition (2006) Software, IEE Proceedings, 153 (3), pp. 126-153. , June; Taibi, T., Check, D., Ngo, L., Formal specification of design patterns-a balanced approach (2003) Journal of Object Technology, 2 (4). , July-August; Zdun, U., Avgeriou, P., Modelling architectural patterns using architectural primitives (2005) 20th annual ACM SIGPLAN conference on Object-Oriented Programming, Systems, Languages and Applications (OOPLSA), pp. 133-146. , San Diego, California; H. Zhu and L. Shan. Well-formedness, consistency and completeness of graphic models. In Proc. of UKSIM'06, Oxford, UK, pages 47-53, April 2006","Bayley, I.; Department of Computing, Oxford Brookes University, Oxford 0X33 1HX, United Kingdom; email: ibayley@brookes.ac.uk",,IEEE Computer Society;IEEE Comput. Soc. Technical Committee on Complexity in Computing;London South Bank University;University of Westminster;United Nations Univ. Internatl. Inst. for Software Technology,,"5th IEEE International Conference on Software Engineering and Formal Methods, SEFM 2007",10 September 2007 through 14 September 2007,London,72769,,769528848,9780769528847,,,English,"Proc. - IEEE Int. Conf. Softw. Eng. Form. Methods, SEFM",Conference Paper,Scopus,2-s2.0-47949128377,
,4,1,"Esmaeilzadeh, H., Jamali, M.R., Saeedi, P., Moghimi, A., Lucas, C., Fakhraie, S.M.","NNEP, design pattern for neural-network-based embedded systems",2007,"Proceedings of the 14th International Conference ""Mixed Design of Integrated Circuits and Systems"", MIXDES 2007",,,4286248,673,678,,,10.1109/MIXDES.2007.4286248,http://www.scopus.com/inward/record.url?eid=2-s2.0-47749125447&partnerID=40&md5=de821a5a5d62e7e53e1c27fde1613aa6,"University of Tehran, Iran","Esmaeilzadeh, H., University of Tehran, Iran; Jamali, M.R., University of Tehran, Iran; Saeedi, P., University of Tehran, Iran; Moghimi, A., University of Tehran, Iran; Lucas, C., University of Tehran, Iran; Fakhraie, S.M., University of Tehran, Iran","With time-to-market getting the most important issue in system design, reusing the design experiences as well as the IP cores is becoming very critical. Design patterns, intended for simplifying the reuse process, are design experiences that worked well in the past and documented to be reused in the future. In this paper, a design pattern named NnEP (Neural-network-based Embedded sytems design Pattern) is introduced for employing neural networks, common bio-inspired solutions, in SoC-based embedded systems. This pattern is based on NnSP IP suite, a stream processing core and its tool chain, NnSP Builder and Stream Compiler. NnEP is introduced for enhancing and automating reuse in design of intelligent SoC's requiring high-speed parallel computations specially those based on neural networks. The NnEP pattern consists of the semi-automated steps, extracted from design experiences, a designer takes using the provided software suite to realize a NN application in an intelligent SoC. This includes the application analysis and pre-processing procedure, building the best-match IP core with the application, and .nally compiling the intended NN application on the target IP core. On the other hand, ASIC 0.18μm implementation results of NnSP soft core show that the core can achieve the speed of 51.2 GOPS, 25.6 GMAC/s. This throughput is comparable with the existing parallel solutions and higher in an order of magnitude from common general-purpose-processor-based solutions. This high throughput in conjunction with the inherent reusable architecture of NnSP, makes NnEP a powerful design pattern for cutting-edge neural-network-based embedded applications such as pattern recognition which is elaborated as a case study in the proposed design pattern. Copyright © 2007 by Department of Microelectronics & Computer Science, Technical University of Lodz.",Embedded systems; Neural networks; SoC implementation; Stream processors,Application specific integrated circuits; Artificial intelligence; Computer programming languages; Computer software reusability; Electron beam lithography; Electronics industry; Embedded systems; Feature extraction; Integrated circuits; Internet protocols; Neural networks; Pattern recognition; Process engineering; Program compilers; Programmable logic controllers; Real time systems; Speed; Throughput; Application analysis; Bio-inspired; Case studies; Design patterns; Embedded applications; High speeds; High throughputs; International conferences; IP cores; Network-based; Order-of magnitudes; Parallel computations; Parallel solutions; Pre-processing; Reusable architectures; Reuse process; Semi-automated; SoC implementation; Soft cores; Software suite; Stream Compiler; Stream processing; Stream processors; System designs; Time-to-market; Software design,,,,,,"Jerraya, A.A., Long term trends for embedded system design (2004) Proc. of the EUROMICRO Systems on Digital System Design (DSD'04), pp. 20-26. , Aug. 31-Sept. 3; Elmenreich, W., Intelligent methods for embedded systems (2003) Proc. of the First Workshop on Intelligent Solutions for Embedded Systems, pp. 3-11. , Vienna, Austria, June; Reyneri, L.M., Implementation issues of neurofuzzy hardware: Going toward hw/sw codesign (2003) IEEE Transactions on Neural Networks, 14 (1), pp. 176-194. , Jan; Mathew, B., Davis, A., Parker, M., A low power architecture for embedded perception (2004) Proc. of the 2004 International Conference on Compilers, Architecture, and Synthesis for Embedded Systems (CASES'04), pp. 46-56. , Washington DC, USA: ACM Press; Alexander, C., (1979) The Timeless Way of Building, , New York, Oxford, NY: Oxford Univ. Press; Beck, K., Coplien, J.O., Crocker, R., Dominick, L., Meszaros, G., Paulisch, F., Vlisside, J., Industrial experience with design patterns (1996) Proc. of the 18th International Conference on Software Engineering (ICSE-18), p. 103114. , Berlin, Germany: IEEE Computer Society Press; http://www.hillside.net/patterns/papersbibliographys.htm, Online, AvailablePont, M.J., (2001) Patterns for Time-Triggered Embedded Systems: Building Reliable Applications with the 8051 Family of Microcontrollers, , Addison-Wesley Professional; Angelo Corsaro, R.K.C.O., Douglas, C., Schmidt, Virtual component: A design pattern for memory-constrained embedded applications (2002) Proc. of the 9th Annual Conference on the Pattern Languages of Programs (PLoP'02), , Monticello, Illinois, Sept; Pont, M.J., Banner, M.P., Designing embedded systems using patterns: A case study (2004) Journal of Systems and Software, 71 (3), p. 201. , May; DeHon, A., Adams, J., DeLorimier, M., Kapre, N., Naeimi, Y.M., Vanier, M., Wrighton, M., Design patterns for reconfigurable computing (2004) 12th Annual IEEE Symposium on Field-Programmable Custom Computing Machines; Fernando Rincon, J.B.J.C.L., Moya, F., Model reuse through hardware design patterns; Fakhraie, S.M., Smith, K.C., (1997) VLSI-Compatible Implementations for Artificial Neural Networks, , Norwell, Massachusetts: Kluwer Academic Publishers; Zhu, J., Sutton, P., FPGA implementations of neural networks - a survey of a decade of progress (2003) Proc. of the Field Programmable Logic Conference (FPL'2003), pp. 1062-1066; Roggen, D., Hofmann, S., Thoma, Y., Floreano, D., Hardware spiking neural network with runtime reconfigurable conectivity in an autonomous robot (2003) Proc. of the 2003 NASA/DoD Conference on Evolvable Hardware, pp. 189-198. , Los Alamitos, California; Hendry, D.C., Duncan, A.A., Lightowler, N., IP core implementation of a self-organizing neural network (2003) IEEE Transactions on Neural Networks, 14 (5), pp. 1085-1096. , Sept; Erich Gamma, R.J.J.V., Helm, R., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Press; Riehle, D., Zullighoven, H., Understanding and using patterns in software development (1996) Theory and Practice of Object Systems, 2 (1), pp. 3-13; F. Buschmann, R. Meunier, H. Rohnert, P. Sommerland, and M. Stal, Pattern-Oriented Software Architecture: A System of Patterns. New York, NY: John-Wiley & Sons, 1996A. Tesanovic, What is a pattern? Internal course note at Linkoping University, 2005. [Online]. Available: http://www.ida.liu.se/ uweas/Lectures/DesignPatterns01/tesanovic-WhatIsAPattern.pdfH. Esmaeilzadeh, N. Shahidi, E. Ebrahimi, A. Moghimi, C. Lucas, and Z. Navabi, Cim++: A C++ library for object oriented hardware design, International Journal of Science and Information Technology (IJSIT) Lecture Notes of 1st International Conference on Informatics, 1, no. 2, Sept. 2004Mayraz, G., Hinton, G.E., Recognizing hand-written digits using hierarchical products of experts (2002) IEEE Transactions on Pattern Analysis and Machine Intelligence, 24 (2), pp. 189-197. , Feb; Burr, J.B., Digital neurochips design (1993) Parallel Digital Implementations of Neural Networks, pp. 223-281. , K. W. Przytula and V. K. Prasnna, Eds. Englewood Cliffs, New Jersey: Prentice-Hall; Boser, B., Sackinger, E., Bromley, J., leCun, Y., Jackel, L., Hardware requirements for neural network pattern classifier, a case study and implementation (1992) IEEE Micro, 12 (1), pp. 32-40. , Feb; (1993) Parallel Digital Implementations of Neural Networks, , K. W. Przytula and V. K. Prasnna, Eds, Englewood Cliffs, New Jersey: Prentice-Hall; Foldesy, P., Trends in design of massively parallel coprocessors implemented in digital ASICs (2004) Proc. of the International Joint Conference on Neural Networks (IJCNN'04), 4, pp. 3131-3135. , July 25-29","Esmaeilzadeh, H.; University of TehranIran",,,,"14th International Conference ""Mixed Design of Integrated Circuits and Systems"," MIXDES 2007""",21 June 2007 through 23 June 2007,Ciechocinek,72718,,8392263243,9788392263241,,,English,"Proc. Int. Conf. ""Mix. Des. Integr. Circuits Syst."", MIXDES",Conference Paper,Scopus,2-s2.0-47749125447
,4,4,"Bartsch, M., Harrison, R.",Design patterns with aspects: A case study,2007,EuroPLoP 2007 - 12th European Conferenceon Pattern Languages of Programs,,,,797,810,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871490659&partnerID=40&md5=bb1411ecd828db8a5331aff9ed2c1922,"School of Systems Engineering, University of Reading, Reading, RG6 6AY, United Kingdom; School Hill, Stratton Edge Consulting, Cirencester, GL7 2LS, United Kingdom","Bartsch, M., School of Systems Engineering, University of Reading, Reading, RG6 6AY, United Kingdom; Harrison, R., School Hill, Stratton Edge Consulting, Cirencester, GL7 2LS, United Kingdom",This paper reports on a case study in which four programs were implemented in both aspect-oriented and object-oriented versions using four different design patterns. We present evidence for a reduction of coupling through the use of aspect-oriented versions of popular design patterns identifying those that may have a beneficial influence on software maintenance.,,Aspect-oriented; Design Patterns; Object-oriented version,,,,,,"Bartsch, M., Harrison, R., A coupling framework for aspectj - Extended abstract (2006) Proceedings of the Evaluation and Assessment in Software Engineering (EASE, p. 139. , Keele, UK. BCS; Basili, V.R., Briand, L.C., Melo, W.L., A validation of object-oriented design metrics as quality indicators (1996) IEEE Transactions on Software Engineering, 22 (10), pp. 751-761; Briand, L.C., Daly, J.W., Wüst, J.K., A unified framework for coupling measurement in object-oriented systems (1999) IEEE Transactions on Software Engineering, 25 (1), pp. 91-121; Coad, P., Yourdon, E., (1991) Object-Oriented Design, , 1st ed: Prentice Hall; Fenton, N.E., Pfleeger, S.L., (1996) Software Metrics: A Rigorous and Practical Approach, , 2nd ed: International Thomson Computer Press; Garcia, A., Sant'anna, C., Figueiredo, E., Kulesza, U., Lucena, C., Staa, A.V., Modularizing design patterns with aspects: A quantitative study (2005) Proceedings of the International Conference on Aspect-Oriented Software Development (AOSD), pp. 3-14. , Chicago, USA. ACM Press; Hannemann, J., Kiczales, G., Design pattern implementations in java and aspectj (2002) Proceedings of the ACM Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA), pp. 161-173; Prechelt, L., Unger, B., Tichy, W.F., Brössler, P., Votta, L.G., A controlled experiment in maintenance comparing design patterns to simpler solutions (2001) IEEE Transactions on Software Engineering, 27 (12), pp. 1134-1144; Stevens, W., Myers, G., Constantine, L., Structured design (1974) IBM Systems Journal, 13 (2), pp. 115-139; Stojanovic, M., El-Emam, K., ES2: A tool for collecting object-oriented design metrics from C++ and Java source code (2001) National Research Council Canada NRC/ERB-1088, , NRC 44888; Vokác, M., Tichy, W., Sjøberg, D.I.K., Arisholm, E., Aldrin, M., A controlled experiment comparing the maintainability of programs designed with and without design patterns - A replication in a real programming environment (2004) Empirical Software Engineering, 9 (3), pp. 149-195","Bartsch, M.; School of Systems Engineering, University of Reading, Reading, RG6 6AY, United Kingdom; email: m.bartsch@rdg.ac.uk",,Schlumberger;dpunkt.verlag;Siemens;Wiley,,"12th European Conferenceon Pattern Languages of Programs, EuroPLoP 2007",4 July 2007 through 8 July 2007,Irsee,94514,,9783879408191,,,English,EuroPLoP - Eur. Conf. Pattern Lang. Programs,Conference Paper,Scopus,2-s2.0-84871490659,,
,4,4,"Jalil, M.A., Noah, S.A.M.",The difficulties of using design patterns among novices: An exploratory study,2007,"Proceedings - The 2007 International Conference on Computational Science and its Applications, ICCSA 2007",,,4301130,97,103,,2,10.1109/ICCSA.2007.75,http://www.scopus.com/inward/record.url?eid=2-s2.0-48049123252&partnerID=40&md5=1c16a2d8d0081862df19d0569068d83b,"Department of Computer Science, Faculty of Science and Technology, Universiti Malaysia Terengganu, 21030 Kuala Terengganu, Terengganu, Malaysia; Department of Information Science, Universiti Kebangsaan Malaysia, 43600 UKM, Bangi, Selangor, Malaysia","Jalil, M.A., Department of Computer Science, Faculty of Science and Technology, Universiti Malaysia Terengganu, 21030 Kuala Terengganu, Terengganu, Malaysia; Noah, S.A.M., Department of Information Science, Universiti Kebangsaan Malaysia, 43600 UKM, Bangi, Selangor, Malaysia","Elements of design patterns have been incorporated in computer science syllabus over the last decade. Most of these efforts have been motivated by the benefits offered by patterns as well as positive feedback from the industry and software community. Despite various techniques and approaches suggested by researchers and educators to ensure effective learning of patterns, there is no formal reports on the actual difficulties encountered by these novices when applying patterns. Thus, we have conducted an exploratory study to identify the difficulties they have in using patterns. © 2007 IEEE.",,Computer science; Control theory; Technology; Computational sciences; Design patterns; Effective learning; Exploratory studies; International conferences; Positive feedback; Software community; Feedback,,,,,,"Alphonce, C., Casperson, M., Decker, A., Killer ""Killer Examples"" for design patterns (2007) Proceedings of the ACM SIGSE'07, , March 7-10, Kentucky, USA; Beck, K., Coplien, J., Crocker, R., Dominick, L., Industrial Experience with Design Patterns (1996) Proceedings of the 18th International Conference on Software Engineering, pp. 103-114. , March; Clancy, M., Linn, M., Patterns and Pedagogy (1999) Proceedings of the 30th ACM Technical Symposium on Computer Science Education, pp. 37-42. , March; Cline, M., The Pros and Cons of Adopting and Applying Design Patterns in the Real World (1996) Communication of the ACM, 99 (10), pp. 47-49. , October; Della, L., Clark, D., Teaching Object-Oriented Development with Emphasis on Pattern Application (2000) Proceedings of the 2000 Australian Computing Education, pp. 56-63. , December; Freeman, E., Freeman, E., Sierra, K., Bates, B., (2004) Head First Design Patterns, , O'Reilly Media, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Ó Cinnéide, M. & Tynan R., A Problem-Based Approach to Teaching Design Patterns. Inroads, The SIGSE Bulletin, 36, No. 4, 2004Or-Bach, R., Lavy, I., Cognitive Activities of abstraction in Object-Orientation: An Empirical Study (2004) Inroads. The SIGCSE Bulletin, 36 (2); Ouyang, Y., Explaining Design Patterns Through One Application (2002) Proceedings of the 32nd ASEE/IEE Frontiers in Education Conference, , Boston, MA; Porter, R., Calder, P., Patterns in Learning to Program - An Experiment? (2004) Proceedings of the Australasian Computing Education Conference (ACE2004), , Conferences in Research and Practice in Information, Dunedin, New Zealand; Proulx, V.K., Programming patterns and design patterns in the introductory computer science course. (2000) Proceedings of the 31st SIGCSE Technical Symposium on Computer Science Education, pp. 80-84. , New York: ACM Press; Reed, D., Incorporating problem-solving patterns in CS1 (1998) SIGCSEBulletin, 30, pp. 6-9; Shalloway, A., Trott, J., (2001) Design Patterns Explained: A New Perspective on Object-Oriented Design, , Addison-Wesley; Schmolitzky, A., A laboratory for teaching OO language and design concepts with teachlets (2005) Proceedings of the OOPSLA 2005, , California, USA; Thomasson, B., Ratcliffe, M., Thomas, L., Identifying Novice Difficulties in Object-Oriented Design (2006) Proceedings of the ITiCSE '06, , Bologna, Italy; Wallingford, E., Using patterns in the classroom - techniques observed, , http://cns2.uni.edu/~wallingf/patterns/elementary/using_patterns_in_clas s.html; Weir, S. B., An investigation of significant technical factors affecting the laming and using of design patterns., Thesis of Master of Science, Utah State University, USA, 2006Wick, M.R., Teaching Design Patterns in CS1: A Closed Laboratory Sequence based on the Game of Life (2005) Proceedings of the ACM SIGCSE'05, , Missouri, USA","Jalil, M. A.; Department of Computer Science, Faculty of Science and Technology, Universiti Malaysia Terengganu, 21030 Kuala Terengganu, Terengganu, Malaysia; email: masita@umt.edu.my",,,,"2007 International Conference on Computational Science and its Applications, ICCSA 2007",26 August 2007 through 29 August 2007,Kuala Lumpur,72812,,769529453,9780769529455,,,English,Proc. Int. Conf. Comput. Sci. Appl. ICCSA,Conference Paper,Scopus,2-s2.0-48049123252,
,,v,"Guéhéneuc, Y.-G.",Ptidej: A flexible reverse engineering tool suite,2007,"IEEE International Conference on Software Maintenance, ICSM",,,4362684,529,530,,1,10.1109/ICSM.2007.4362684,http://www.scopus.com/inward/record.url?eid=2-s2.0-47349104536&partnerID=40&md5=b23d7d16729073828832e92e128d9fb5,"Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, CP 6128 suce, Centre Ville, Montréal, QC H3C 3J7, Canada","Guéhéneuc, Y.-G., Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, CP 6128 suce, Centre Ville, Montréal, QC H3C 3J7, Canada","The PTIDEJ project started in 2001 to study code generation from and identification of design patterns. Since then, it has evolved into a complete reverse-engineering tool suite that includes several identification algorithms for idioms, micro-patterns, design patterns, and design defects. It is a flexible tool suite that attempts to ease as much as possible the development of new identification and analysis algorithms. In this demonstration, we first present the key features of the tool suite and several identification algorithms. We then discuss the architecture and design choices of the tool suite and lessons learned in developing the suite. © 2007 IEEE.",,Algorithms; Maintenance; Reengineering; Reverse engineering; Analysis algorithms; Code generations; Design defects; Design patterns; Flexible tools; Identification algorithms; International conferences; Lessons learned (LL); Micro-patterns; Tool suite; Computer software maintenance,,,,,,"W. J. Brown, R. C. Malveau, W. H. Brown, H. W. M. III, and T. J. Mowbray. Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis. John Wiley and Sons, 1st edition, March 1998Demeyer, S., Ducasse, S., Tichelaar, S., Why unified is not universal (1999) proceedings of the 2nd UML conference, pp. 630-644. , Springer-Verlag, October; Eichelberger, H., (2002) The syntax of UMLscript, , Department of Computer Science, University of Wuerzburg, October; Fowler, M., (1999) Refactoring - improving the Design of Existing Code, , Addison-Wesley, 1st edition, June; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley, 1 st edition; Gil, Y., Maman, I., Micro patterns in java code (2005) proceedings of the 20th conference on Object-Oriented Programming Systems Languages and Applications, pp. 97-116. , ACM Press, October; Guéhéneuc, Y.-G., A systematic study of UML class diagram constituents for their abstract and precise recovery (2004) Proceedings of the 11th Asia-Pacific Software Engineering Conference, , IEEE Computer Society Press, November-December; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: Putting icing on the UML cake (2004) Proceedings of the 19th conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 301-314. , ACM Press, October; Mens, K., Kellens, A., Pluquet, F., Wuyts, R., Co-evolving code and design with intensional views - a case study (2006) Computer Languages, Systems, and Structures, , June; Niere, J., Wadsack, J.P., Zündorf, A., Recovering UML diagrams from Java code using patterns (2001) proceedings of the 2nd workshop on Soft Computing Applied to Software Engineering, pp. 89-97. , Springer-Verlag, February; R. Wuyts, K. Mens, and T. D'Hondt. Explicit support for software development styles throughout the complete life cycle. Technical Report Vub-Prog-TR-99-07, Programming Technology Lab, Vrije Universiteit Brussel, April 1999","Guéhéneuc, Y.-G.; Département d'Informatique et de Recherche Opérationnelle, Université de Montréal, CP 6128 suce, Centre Ville, Montréal, QC H3C 3J7, Canada; email: guehene@iro.umontreal.ca",,,,"23rd International Conference on Software Maintenance, ICSM",2 October 2007 through 5 October 2007,Paris,72623,,1424412560,9781424412563,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-47349104536,
,,4,"Sabatucci, L., Gaglio, S.",Separation of concerns and role implementation in the PASSI design process,2007,IEEE International Conference on Industrial Informatics (INDIN),2,,4384928,1097,1102,,,10.1109/INDIN.2007.4384928,http://www.scopus.com/inward/record.url?eid=2-s2.0-39749201636&partnerID=40&md5=820cc4d312f419c3a43aaebbe0139f7f,"IEEE; Dipartimento di Ingegneria Informatica, University of Palermo, Viale delle Scienze, 90128 Palermo, Italy","Sabatucci, L., IEEE, Dipartimento di Ingegneria Informatica, University of Palermo, Viale delle Scienze, 90128 Palermo, Italy; Gaglio, S., IEEE, Dipartimento di Ingegneria Informatica, University of Palermo, Viale delle Scienze, 90128 Palermo, Italy","The use of design patterns proved successful in lowering the development time and number of errors when producing software with the object-oriented paradigm. In previous works we engaged the production of a tool for the reuse of patterns for multi-agent systems. Now we are fronting a new problem: automatic code generation for agents, designed with a specific methodology, with the support of design patterns and using an aspect oriented approach. In this work we present our preliminary experiences in the identification, description, production and use of aspects for multi agent systems and a tool for code production. © 2007 IEEE.",,Computer software; Multi agent systems; Object oriented programming; Problem solving; Automatic code generation; Design patterns; Pattern recognition,,,,,,"Cossentino, M., (2005) From Requirements to Code with the PASSI Methodology, , Hershey, PA, USA: Idea Group Inc, ch. Agent-Oriented Methodologies; M. Cossentino, L. Sabatucci, and A. Chella, Patterns reuse in the passi methodology, in Engineering Societies in the Agents World IV, 4th International Workshop ESAW 2003, ser. Lecture Notes in Artificial Intelligence, Springer-Verlag, Ed., XIII, 2004Wooldridge, M., Jennings, N.R., Kinny, D., The gaia methodology for agent-oriented analysis and design (2000) Autonomous Agents and Multi-Agent Systems, 3 (3), pp. 285-312; Bresciani, P., Giorgini, P., Giunchiglia, F., Mylopoulos, J., Perini, A., Tropos: An agent-oriented software development methodology (2004) Autonomous Agent and Multi-Agent Systems (8), 3, pp. 203-236; Padgham, L., Winikoff, M., Prometheous: A practical agent oriented methodology, pp. 107-135. , ch. V, pp; Bellifemine, F., Poggi, A., Rimassa, G., Developing multi-agent systems with jade (2001) ATAL '00: Proceedings of the 7th International Workshop on Intelligent Agents VII. Agent Theories Architectures and Languages, pp. 89-103. , London, UK: Springer-Verlag; Fipa-os agent platform, , http://fipa-os.sourceforge.net; Shen, W., Norrie, D., Agent-based systems for intelligent manufacturing: A state-of-the-art survey (1999) Knowledge and Information Systems, an International Journal, 1 (2), pp. 129-156; Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C.V., Loingtier, J.M., Irwin, J., Aspect-oriented programming (1997) ECOOP, pp. 220-242; Laddad, R., (2003) AspectJ in Action, , Manning; Kojarski, S., Lorenz, D.H., Modeling aspect mechanisms: A top-down approach (2006) Proceedings of the 28th International Conference on Software Engineering, pp. May20-May28,212-221. , ICSE, Shanghai, China: IEEE Computer Society; Garcia, A.F., da Silva, V.T., Chavez, C., de Lucena, C.J.P., Engineering multi-agent systems with aspects and patterns (2002) Journal of the Brazilian Computer Society, 8 (1), pp. 57-72. , September; Garcia, A., Chavez, C., Kulesza, U., Lucena, C., The interaction aspect pattern (2005) The 10th European Conference on Pattern Languages of Programs (EuroPLoP2005), , Irsee, Germany, July 6-10; Chella, A., Cossentino, M., Sabatucci, L., Seidita, V., Agile passi: An agile process for designing agents (2004) Special issue on Software Engineering for Multi-Agent Systems, 21 (2), pp. 471-474. , Sept; Fipa abstract architecture specifications, , http://www.fipa.org; D. R. Traum, Speech acts for dialogue agents. Kluwer Academic Publishers, 1999, ch. Foundations of Rational Agency, pp. 169-201Wooldridge, M., Jennings, N.R., Intelligent agents: Theory and practice (1995) Knowledge Engineering Review, 10 (2), pp. 115-152. , June; Ara-jo, J., Moreira, A., Brito, I., Rashid, A., Aspect-oriented requirements with uml (2002) Workshop on Aspect-Oriented Modelling with UML; Garcia, A., Chavez, C., Kulesza, U., Lucena, C., The role aspect pattern (2005) The 10th European Conference on Pattern Languages of Programs (EuroPLoP2005), , Irsee, Germany, July 6-10; Odell, J., Parunak, H.V.D., Fleischer, M., The role of roles in designing effective agent organizations (2002) ser. Lecture Notes in Computer Science, 2603, pp. 27-38. , SELMAS, A. F. Garcia, C. J. P. de Lucena, F. Zambonelli, A. Omicini, and J. Castro, Eds, Springer; Vázquez-Salceda, J., Dignum, V., Dignum, F., Organizing multiagent systems (2005) Autonomous Agents and Multi-Agent Systems, 11 (3), pp. 307-360; Ferber, J., Gutknecht, O., Michel, F., From agents to organizations: An organizational view of multi-agent systems (2003) ser. Lecture Notes in Computer Science, 2935, pp. 214-230. , AOSE, P. Giorgini, J. P. Müller, and J. Odell, Eds, Springer; Baldoni, M., Boella, G., Torre, L.V.D., Bridging agent theory and object orientation: Importing social roles in object oriented languages (2006) PROMAS06","Sabatucci, L.; Dipartimento di Ingegneria Informatica, University of Palermo, Viale delle Scienze, 90128 Palermo, Italy; email: sabatucci@csai.unipa.it",,,,INDIN 2007 - 5th IEEE International Conference on Industrial Informatics,23 June 2007 through 27 June 2007,Vienna,71453,19354576,1424408644,9781424408641,,,English,IEEE Int. Conf. Ind. Informatics (INDIN),Conference Paper,Scopus,2-s2.0-39749201636,
,,4,"Shonle, M., Griswold, W.G., Lerner, S.",Beyond refactoring: A framework for modular maintenance of crosscutting design idioms,2007,"6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2007",,,,175,184,,9,10.1145/1287624.1287650,http://www.scopus.com/inward/record.url?eid=2-s2.0-37849025032&partnerID=40&md5=84700f874283e15d0dcb37b480d3fc84,"Computer Science and Engineering, UC San Diego, San Diego, CA 92093-0404, United States","Shonle, M., Computer Science and Engineering, UC San Diego, San Diego, CA 92093-0404, United States; Griswold, W.G., Computer Science and Engineering, UC San Diego, San Diego, CA 92093-0404, United States; Lerner, S., Computer Science and Engineering, UC San Diego, San Diego, CA 92093-0404, United States","Despite the automated refactoring support provided by today's IDEs many program transformations that are easy to conceptualize - such as improving the implementation of a design pattern - are not supported and are hence hard to perform. We propose an extension to the refactoring paradigm that provides for the modular maintenance of crosscutting design idioms, supporting both substitutability of design idiom implementations and the checking of essential constraints. We evaluate this new approach through the design and use of Arcum, an IDE-based mechanism for declaring, checking, and evolving crosscutting design idioms. Copyright 2007 ACM.",Design patterns; Refactoring,Design patterns; Refactoring; Computer programming; Constraint theory; Pattern recognition; Software engineering; Computer aided design,,,,,,"Balaban, I., Tip, F., Fuhrer, R., Refactoring support for class library migration (2005) OOPSLA '05: Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming, systems, languages, and applications, pp. 265-279. , New York, NY, USA, ACM Press; Ball, T., Majumdar, R., Millstein, T., Rajamani, S.K., Automatic predicate abstraction of C programs (2001) Proceedings of the ACM SIGPLAN 2001 Conference on Programming Language Design and Implementation, , Snowbird, Utah, June; Baxter, I.D., Pidgeon, C., Mehlich, M., Dms: Program transformations for practical scalable software evolution (2004) ICSE '04: Proceedings of the 26th International Conference on Software Engineering, pp. 625-634. , Washington, DC, USA, IEEE Computer Society; Beck, K., Andres, C., (2004) Extreme Programming Explained: Embrace Change, , Addison-Wesley Professional, second edition, November; Black, A.P., Jones, M.P., The case for multiple views Workshop on Directions in Software Engineering Environments, ICSE 2004; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in java (2005) ASE '05: Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, pp. 224-232. , New York, NY, USA, ACM Press; Dennett, D.C., (1992) Consciousness Explained, , Back Bay Books; Eisenberg, A.D., Kiczales, G., Expressive programs through presentation extension (2007) AOSD '07: Proceedings of the 6th international conference on Aspect-oriented software development, pp. 73-84. , New York, NY, USA, ACM Press; Griswold, W.G., Coping with crosscutting software changes using information transparency (2001) REFLECTION '01: Proceedings of the Third International Conference on Metalevel Architectures and Separation of Crosscutting Concerns, pp. 250-265. , London, UK, Springer-Verlag; Hannemann, J., Kiczales, G., Design pattern implementation in java and aspectj (2002) OOPSLA '02: Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, pp. 161-173. , New York, NY, USA, ACM Press; Hannemann, J., Murphy, G.C., Kiczales, G., Role-based refactoring of crosscutting concerns (2005) AOSD '05: Proceedings of the 4th international conference on Aspect-oriented software development, pp. 135-146. , New York, NY, USA, ACM Press; Kiczales, G., Aspect-oriented programming: The fun has just begun (2001) Software Design and Productivity Coordinating Group Workshop on New Visions for Software Design and Productivity: Research and Applications, , Nashville, Tennessee, Dec; Kiczales, G., Hilsdale, E., Hugunin, J., Kersten, M., Palm, J., Griswold, W.G., An overview of AspectJ (2001) 15th European Conference on Object-Oriented Programming (ECOOP 2001), pp. 327-353. , June; Kotik, G., Markosian, L., Automating software analysis and testing using a program transformation system (1989) TAV3: Proceedings of the ACM SIGSOFT '89 third symposium on Software testing, analysis, and verification, pp. 75-84. , New York, NY, USA, ACM Press; Kozaczynski, W., Ning, J., Engberts, A., Program concept recognition and transformation (1992) IEEE Trans. Softw. Eng, 18 (12), pp. 1065-1075; Liu, J., Batory, D., Lengauer, C., Feature oriented refactoring of legacy applications (2006) ICSE '06: Proceeding of the 28th international conference on Software engineering, pp. 112-121. , New York, NY, USA, ACM Press; Marin, M., Moonen, L., van Deursen, A., An approach to aspect refactoring based on crosscutting concern types. In MACS (2005) 05: Proceedings of the 2005 workshop on Modeling and analysis of concerns in software, pp. 1-5. , New York, NY, USA, ACM Press; Mens, K., Mens, T., Wermelinger, M., Maintaining software through intentional source-code views (2002) SEKE '02: Proceedings of the 14th international conference on Software engineering and knowledge engineering, pp. 289-296. , New York, NY, USA, ACM Press; Morgan, C., Volder, K.D., Wohlstadter, E., A static aspect language for checking design rules (2007) AOSD '07: Proceedings of the 6th international conference on Aspect-oriented software development, pp. 63-72. , New York, NY, USA, ACM Press; Nystrom, N., Clarkson, M., Myers, A., (2003) Polyglot: An extensible compiler framework forjava; Orleans, D., Lieberherr, K.J., Dj: Dynamic adaptive programming in java (2001) REFLECTION '01: Proceedings of the Third International Conference on Metalevel Architectures and Separation of Crosscutting Concerns, pp. 73-80. , London, UK, Springer-Verlag; Pearce, D.J., Noble, J., Relationship aspects (2006) AOSD '06: Proceedings of the 5th international conference on Aspect-oriented software development, pp. 75-86. , New York, NY, USA, ACM Press; Rutar, N., Almazan, C.B., Foster, J.S., A comparison of bug finding tools forjava (2004) ISSRE '04: Proceedings of the 15th International Symposium on Software Reliability Engineering (ISSRE'04), pp. 245-256. , Washington, DC, USA, IEEE Computer Society; Shonle, M., Modular-like transformations and style checking for crosscutting programming concepts (2007) ICSE COMPANION '07: Companion to the proceedings of the 29th International Conference on Software Engineering, pp. 95-96. , Washington, DC, USA, IEEE Computer Society; Simonyi, C., (1995) The death of computer languages, the birth of intentional programming","Shonle, M.; Computer Science and Engineering, UC San Diego, San Diego, CA 92093-0404, United States; email: mshonle@cs.ucsd.edu",,ACM Special Interest Group on Software Engineering,,"6th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2007",3 September 2007 through 7 September 2007,Dubrovnik,70917,,9781595938114,,,English,Joint Meet. Eur. Softw. Eng. Conf. ACM SIGSOFT Symp. Found. Softw. Eng.,Conference Paper,Scopus,2-s2.0-37849025032,,
,,4,"Soundarajan, N., Hallstrom, J.O., Delibas, A., Shu, G.",Testing patterns,2007,Proceedings - International Conference on Software Engineering,,,4402770,109,118,,1,10.1109/SEW.2007.108,http://www.scopus.com/inward/record.url?eid=2-s2.0-47749146926&partnerID=40&md5=d51197e72135a28dc5d80fc1e9219afe,"Computer Sc. and Engineering, Ohio State University, Columbus, OH 43210, United States; Computer Science Dept., Clemson University, Clemson, SC 29634, United States","Soundarajan, N., Computer Sc. and Engineering, Ohio State University, Columbus, OH 43210, United States; Hallstrom, J.O., Computer Science Dept., Clemson University, Clemson, SC 29634, United States; Delibas, A., Computer Sc. and Engineering, Ohio State University, Columbus, OH 43210, United States; Shu, G., Computer Sc. and Engineering, Ohio State University, Columbus, OH 43210, United States","After over a decade of use, design patterns continue to find new areas of application. In previous work, we presented a contract formalism for specifying patterns precisely, and showed how the use of the formalism can amplify the benefits of patterns. In this paper, our goal is to enable practitioners to test whether their systems, as implemented, meet the requirements, as specified in the pattern contracts, corresponding to the correct usage of the patterns underlying the systems' designs. In our testing approach, corresponding to each design pattern, there is a set of what we call pattern test case templates (PTCTs). A PTCT codifies a reusable test case structure designed to identify defects associated with applications of the particular pattern. The test assertions in the PTCT are based on the requirements specified in the appropriate pattern contract. Next we present a process using which, given any system designed using the pattern, the system tester can generate a test suite from the PTCTs for that pattern that can be used to test the system for bugs in the implementation of the particular pattern. The process allows the system tester to tailor the test suite the needs of the individual system by specifying a set of specialization rules that are designed to reflect the structure and the scenarios in which the defects codified in the PTCTs are likely to manifest themselves in the particular system.",,Computer software reusability; Contracts; Java programming language; Software engineering; Design patterns; Individual (PSS 544-7); Specialization (order); Test cases; Test suites; Testing,,,,,,"Beck, K., Gamma, E., Test infected: Programmers love writing tests Java Report, , 3(7):37-50, 1998; Binder, R., (1999) Testing object-oriented systems, , Addison-Wesley; F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal. Pattern-oriented software architecture: A system of patterns. Wiley, 1996Dong, J., Alencar, P., Cowan, D., A behavioral analysis approach to pattern-based composition (2001) Proc. of the 7th Int. Conf. on Object-Oriented Information Systems, pp. 540-549. , Springer; Eden, A.H., LePUS: A visual formalism for object-oriented architectures (2002) Proc. of the 6th World Conference on Integrated Design and Process Technology, pp. 149-159. , Computer Society; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable OO Software, , Addison-Wesley; Hallstrom, J.O., Soundarajan, N., Tyler, B., Amplifying the benefits of design patterns (2006) The 9th Int. Conf. on Fundamental Approaches to Softw. Eng. (FASE), pp. 214-229. , J. Aagedal and L. Baresi, editors, Springer; Hannemann, J., Kiczales, G., Design pattern implementation in Java and AspectJ (2002) Proc. of OOPSLA, pp. 161-173. , ACM; Jones, C., (1990) Systematic Software Development Using VDM, , Prentice-Hall; McGregor, J., Testpatterns: Please stand by (1999) Journal of Object-Oriented Programming, 12, pp. 14-19; McGregor, J., Sykes, D., (2001) A Practical Guide to Testing Object-Oriented Software, , Addison Wesley; Mikkonen, T., Formalizing design patterns (1998) Proceedings of 20th ICSE, pp. 115-124. , IEEE Computer Society Press; Ntafos, S., Comparisons of random, partition, and proportional partition testing (2001) IEEE Trans. on Softw. Eng, 27 (10), pp. 949-960; Rainsberger, J., (2005) JUnit Recipes, , Manning; Reimer, D., Schonberg, E., Srinivas, K., Srinivasan, H., Alpern, B., Johnson, R., Kershenbaum, A., Koved, L., SABER: Smart analysis based error reduction (2004) Proc. of ""ISSTA '04"", pp. 243-251. , ACM Press; Richardson, D., Clarke, L., Partition analysis (1985) IEEE Trans. on Softw. Eng, 11 (12), pp. 1477-1490; Riehle, D., Composite design patterns (1997) Proc. of OOPSLA, pp. 218-228. , ACM; Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., (1996) Pattern-oriented software architecture: Patterns for concurrent and networked objects, , Wiley; Soundarajan, N., Hallstrom, J., Pattern-based system evolution: A case-study (2006) 18th Int. Conf. on Softw. Eng. and Knowledge Eng. (SEKE), pp. 321-326. , K. Zhang, G. Spanoudakis, and G. Visaggio, editors, Knowledge Systems Institute; Soundarajan, N., Hallstrom, J.O., Responsibilities and rewards: Specifying design patterns (2004) Proc. of 26th Int. Conf. on Softw. Engineering (ICSE), pp. 666-675. , A. Finkelstein, J. Estublier, D. Rosenblum, editors, Computer Society; Tyler, B., Hallstrom, J., Soundarajan, N., A comparative study of monitoring tools for pattern-centric behavior (2006) Proc. of 30th IEEE/NASA Sofware Engineering Workshop (SEW-30), , M Hinchey, editor, IEEE-Computer Society; Warmer, J., Kleppe, A., (1999) The Object Constraint Langauge, , Addison-Wesley; Weyuker, E., Jeng, B., Analysing partition testing strategies (1991) IEEE Trans. on Softw. Eng, 17 (7), pp. 703-711","Soundarajan, N.; Computer Sc. and Engineering, Ohio State University, Columbus, OH 43210, United States; email: neelam@cse.ohio-state.edu",,,,"31st Annual IEEE Software Engineering Workshop, SEW-31 2007",6 March 2007 through 8 March 2007,"Columbia, MD",72669,2705257,769528627,9780769528625,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-47749146926,
,,3,"Cassens, J., Kofod-Petersen, A.",Designing explanation aware systems: The quest for explanation patterns,2007,AAAI Workshop - Technical Report,WS-07-06,,,20,27,,3,,http://www.scopus.com/inward/record.url?eid=2-s2.0-51849095274&partnerID=40&md5=3c5bac98fdd0c242298083449fede914,"Department of Computer and Information Science, Norwegian University of Science and Technology, 7048 Trondheim, Norway","Cassens, J., Department of Computer and Information Science, Norwegian University of Science and Technology, 7048 Trondheim, Norway; Kofod-Petersen, A., Department of Computer and Information Science, Norwegian University of Science and Technology, 7048 Trondheim, Norway","Systems in general, and intelligent systems in particular, need to be able to explain their behaviour to their users or partners. Previously, a number of different user goals that explanations can support have been identified. Likewise, different kinds of explanations have been proposed. The problem remains how these abstract concepts can be made fruitful for the design of intelligent systems - they must be connected to software engineering methodologies. The work presented here builds on the concept of patterns and suggests using problem frames as a tool for requirements engineering. We further on propose to connect these problem frames with other design patterns as a tool supporting the implementation process.",,Abstract concepts; Aware systems; Design patterns; Implementation processes; Problem frames; Software engineering methodologies; Technical reports; User goals; Intelligent control; Process engineering; Software design; Software engineering; Technology; Intelligent systems,,,,,,"Aamodt, A., Plaza, E., Case-Based Reasoning; Foundational Issues, Methodological Variations, and System Approaches (1994) AI Communications, 7 (1), pp. 39-59. , March; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , New York: Oxford University Press; Avgeriou, P., Zdun, U., Architectural Patterns Revisited - A Pattern Language (2005) Proceedings of the 10th European Conference on Pattern Languages of Programs (EuroPlop 2005), pp. 1-39; Bergmann, R., Althoff, K.-D., Breen, S., Göker, M., Manago, M., Traphöner, R., Wess, S., Developing Industrial Case-Based Resoning Applications: The INRECA Methodology (2003) LNCS, 1612. , of, Berlin: Springer-Verlag, second edition; Cassens, J., Kofod-Petersen, A., Using Activity Theory to Model Context Awareness: A Qualitative Case Study (2006) Proceedings of the 19th International Florida Artificial Intelligence Research Society Conference, pp. 619-624. , Menlo Park, CA: AAAI Press; Cassens, J. 2004. Knowing What to Explain and When. In Gervás, P., and Gupta, K. M., eds., Proceedings of the EC-CBR 2004 Workshops, number 142-04 in Technical Report of the Departamento de Sistemas Informáticos y Programación, Universidad Complutense de Madrid, 97-104Choppy, C., Hatebur, D., Heisel, M., Component Composition through Architectural Patterns for Problem Frames. InAWEC (2006) 06: Proceedings of the XIII Asia Pacific Software Engineering Conference, pp. 27-36. , Washington, DC: IEEE Computer Society; Fensel, D., Benjamins, R., Decker, S., Gaspari, M., Groenboom, R., Grosso, W., Musen, M., Wielinga, B., The Component Model of UPML in a Nutshell (1999) WWW Proceedings WICSA1, 1st Working IFIP Conference on Software Architectures; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Boston, MA: Addison-Wesley; Gardner, K.M., Rush, A., Crist, M.K., Konitzer, R., Teegarden, B., (1998) Cognitive Patterns, , Cambridge, UK: Cambridge University Press; Gundersen, O.E., Kofod-Petersen, A., Multiagent Based Problem-solving in a Mobile Environment (2005) Norsk Informatikkonferanse 2005, NIK 2005, pp. 7-18. , Coward, E, ed, Institutt for Informatikk, Universitetet i Bergen; Hatebur, D., Heisel, M., Problem Frames and Architectures for Security Problems (2005) LNCS, 3688, pp. 390-404. , Winther, R, Gran, B. A, and Dahll, G, eds, Proceedings of the 24th International Conference on Computer Safety, Reliability and Security SAFECOMP, number in, Berlin: Springer-Verlag; Jackson, M., (2001) Problem Frames - Analysing and Structuring Software Development Problems, , Boston, MA: Addison-Wesley; Kofod-Petersen, A., Aamodt, A., Contextualised Ambient Intelligence through Case-Based Reasoning (2006) LNCS, 4106, pp. 211-225. , Roth-Berghofer, T. R, Göker, M. H, and Güvenir, H. A, eds, Proceedings of the Eighth European Conference on Case-Based Reasoning ECCBR 2006, of, Berlin: Springer-Verlag; Kofod-Petersen, A., Cassens, J., Using Activity Theory to Model Context Awareness (2005) LNCS, 3946, pp. 1-17. , Roth-Berghofer, T. R, Schulz, S, and Leake, D. B, eds, Modeling and Retrieval of Context: Second International Workshop, MRC, Revised Selected Papers, of, Berlin: Springer-Verlag; Kofod-Petersen, A., Mikalsen, M., Context: Representation and Reasoning - Representing and Reasoning about Context in a Mobile Environment (2005) Revue d'Intelligence Artificielle, 19 (3), pp. 479-498; Leake, D.B., Goal-Based Explanation Evaluation (1995) Goal-Driven Learning, pp. 251-285. , Cambridge: MIT Press; Mao, J.-Y., Benbasat, I., The Use of Explanations in Knowledge-Based Systems: Cognitive Perspectives and a Process-Tracing Analysis (2000) Journal of Management Information Systems, 17 (2), pp. 153-179; Plaza, E., Arco, J.L., The ABC of Adaptation: Towards a Software Architecture for Adaptation-centered CBR Systems (1999) Research Report, , http://www.iiia.csic.es, 99-22, Artificial Intelligence Research Institute IIIA, Bellaterra, Spain; Richter, M.M., The Knowledge Contained in Similarity Measures (1995) Invited Talk at the First International Conference on Case-Based Reasoning, ICCBR'95, , Sesimbra, Portugal; Rossi, G., Schwabe, D., Lyardet, F., User Interface Patterns for Hypermedia Applications (2000) AVI '00: Proceedings of the working conference on Advanced visual interfaces, pp. 136-142. , New York, NY: ACM Press; Roth-Berghofer, T.R., Cassens, J., Mapping Goals and Kinds of Explanations to the Knowledge Containers of Case-Based Reasoning Systems (2005) LNCS, 3630, pp. 451-164. , Muñoz-Avila, H, and Ricci, F, eds, Case Based Reasoning Research and Development, ICCBR 2005, of, Berlin: Springer-Verlag; Roth-Berghofer, T.R., Explanations and Case-Based Reasoning: Foundational Issues (2004) LNCS, 3155, pp. 389-403. , Funk, P, and Calero, P. A. G, eds, Proceedings of the 7th European Conference ECCBR 2004, of, Berlin: Springer-Verlag; Schreiber, G., Akkermans, H., Anjewierden, A., de Hoog, R., Shadbolt, N., de Velde, W.V., Wielinga, B., (2000) Knowledge Engineering and Management - The CommonKADS Methodology, , Cambridge, MA: MIT Press; Sørmo, F., Cassens, J., Aamodt, A., Explanation in Case-Based Reasoning - Perspectives and Goals (2005) Artificial Intelligence Review, 24 (2), pp. 109-143; van Welie, M., Trætteberg, H., Interaction Patterns in User Interfaces (2000) Proceedings of the 7th Pattern Languages of Programs Conference (PLoP); Wentzlaff, I., Specker, M., Pattern-Based Development of User-Friendly Web Applications (2006) ICWE '06: Workshop Proceedings of the sixth International Conference on Web Engineering, , New York, NY: ACM Press","Cassens, J.; Department of Computer and Information Science, Norwegian University of Science and Technology, 7048 Trondheim, Norway; email: cassens@idi.ntnu.no",,,,2007 AAAI Workshop,22 July 2007 through 23 July 2007,"Vancouver, BC",73678,,9781577353331,,,English,AAAI Workshop Tech. Rep.,Conference Paper,Scopus,2-s2.0-51849095274,,
,,1,"Jain, A.",Telecom service delivery design patterns,2007,ACM International Conference Proceeding Series,,,1772082,,,,,10.1145/1772070.1772082,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953982476&partnerID=40&md5=31897f5a87a3565d41ea0999f30efb36,"135, Rishabh Vihar, Delhi 110092, India","Jain, A., 135, Rishabh Vihar, Delhi 110092, India","The term service delivery platform refers to an architectural style applied to telecommunication infrastructure problems, intended to enable rapid development and deployment of new converged multimedia services such as video conferencing, multi-party gaming, and triple play services requiring combination of voice, data and video. This paper takes a top-down approach in terms of identifying the key challenges for service delivery at network level and then moves onto the challenges at service node level. In this approach, the paper contributes by identifying a few patterns that address these challenges in a given context. The paper is intended for designers involved in designing telecom service networks as well as telecom applications. © 2007 Copyright is held by the authors.",service delivery,Architectural style; Design Patterns; Network level; Rapid development; Service delivery; Service delivery platform; Service nodes; Telecom applications; Telecom services; Telecommunication infrastructures; Top-down approach; Triple Play services; Linguistics; Telecommunication services; Telecommunication systems; Video conferencing; Multimedia services,,,,,,,"Jain, A.135, Rishabh Vihar, Delhi 110092, India; email: jain.atul@wipro.com",,,,"14th Conference on Pattern Languages of Programs, PLoP '07",5 September 2007 through 8 September 2007,"Monticello, IL",80837,,9781605584119,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-77953982476,,
,,4,"Taleb, M., Seffah, A., Abran, A.",Pattern-oriented architecture for web applications,2007,"Webist 2007 - 3rd International Conference on Web Information Systems and Technologies, Proceedings",WIA,,,117,121,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-67649982113&partnerID=40&md5=cce65b44b2876a225f4924f966f36226,"Human-Centred Software Engineering Group Concordia University, Montreal, QC, Canada; Software Engineering Department and Information Technology, École de Technologie Supérieure (ÉTS), Montréal, QC, Canada","Taleb, M., Human-Centred Software Engineering Group Concordia University, Montreal, QC, Canada; Seffah, A., Human-Centred Software Engineering Group Concordia University, Montreal, QC, Canada; Abran, A., Software Engineering Department and Information Technology, École de Technologie Supérieure (ÉTS), Montréal, QC, Canada","A number of Web design problems continue to arise, such as: (1) decoupling the various aspects of Web applications (for example, business logic, the user interface, navigation and information architecture; and (2) isolating platform specifics from the concerns common to all Web applications. In the context of a proposal for a pattern-oriented architecture for Web applications, this paper identifies an extensive list of patterns aimed at providing a pool of proven solutions to these problems. The patterns span several levels of abstraction, from information architecture and interoperability patterns to navigation, interaction, visualization and presentation patterns. The proposed architecture will show how several individual patterns can be combined at different levels of abstraction into heterogeneous structures, which can be used as building blocks in the development of Web applications.",Design patterns; Pattern-oriented architecture; Software architecture and Web applications,Building block; Business logic; Design patterns; Heterogeneous structures; Information architectures; Levels of abstraction; Pattern-oriented architecture; Proposed architectures; WEB application; Web designs; Abstracting; Architecture; Computer software; Information retrieval; Information science; Information systems; Knowledge management; Navigation; Software architecture; User interfaces; World Wide Web,,,,,,"Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, I., (1996) A System of Patterns: Pattern- Oriented Software Architecture, , West Sussex, England, John Wiley & Sons; Zachman, J.A., A Framework for Information Systems Architecture (1987) IBM Systems Journal, 26 (3). , IBM Publication G321-5298; Sowa, J.F., Zachman, J.A., Extending and Formalizing the Framework for Information Systems Architecture (1992) IBM Systems Journal, 31 (3). , IBM Publication G321-5488; Architecture multi-tiers, , http://java.developpez.corn/archi-multi-tiers.pdf, Retrieved 2006, Online] available at; Duyne, van, D.K., Landay, J.A., Hong, J.I., (2003) The Design of Sites: Patterns, Principles, and Processes for Crafting a Customer-Centered Web Experience, , Addison-Wesley; Welie, M.V., (1999) The Amsterdam Collection of Patterns in User Interface Design, , http://www.cs.vu.nl/~martijn/pattenis/uidex.html; Tidwell, J., Common Ground (1997) A Pattern Language for Human-Computer Interface Design, , http://www.mit.edu/~jtidwell/common-ground.html; Engelberg, D., Seffah, A., Design Patterns for the Navigation of Large Information Architectures (2002) 11th Annual Usability Professional Association Conference, , Orlando, Florida, July 8-12; Laakso, S.A., (2003) Collection of User Interface Design Patterns University of Helsinki, , http://www.cs.helsirJd.fi/ii/salaakso/patterns, Dept. of Computer Science, September 16, 2003; Coram, T., Lee, J., (1998) Experiences - A Pattern Language for User Interface Design, , http://www.maplefish.com/todd/papers/experiences, at; Lynch, P.J., Horton, S., (1999) Web Style Guide: Basic Design Principles for Creating Web Sites, , New Haven and London: Yale University Press; Nielsen, J., (1999) Designing Web Usability: The Practice of Simplicity, , New Riders; Garrido, A., Rossi, G., Schwabe, D., Pattern Systems for Hypermedia (1997) Pattern Language of Programming Conference; Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison-Wesley; Myers, B.A., Visual programming, programming by example, and program visualization: A taxonomy (1986) Proceedings of the ACM CHI'86 Conference on Human Factors in Computing Systems, pp. 271-278. , ACM New York, pp, April; Myers, B.A., Buxton, W., Creating highly-interactive and graphical user interfaces by demonstration (1986) International Conference on Computer Graphics and Interactive Techniques, Proceedings of the 13th annual conference on Computer graphics and interactive techniques, pp. 249-258. , Pages; Meyer, B., (1990) Conception et programmation par objets pour du logiciel de qualité, , Inter-Éditions, Paris; Core J2EE Patterns, , http://java.sun.corn/blueprints/corej2eepatterns/Patterns/index.html, Retrieved 2006, Online] available at","Taleb, M.; Human-Centred Software Engineering Group Concordia University, Montreal, QC, Canada; email: mtaleb@encs.concordia.ca",,,,"3rd International Conference on Web Information Systems and Technologies, Webist 2007",3 March 2007 through 6 March 2007,Barcelona,76391,,,,,English,,Conference Paper,Scopus,2-s2.0-67649982113,,
,,1,"ElSaid, W.H., Alexander, S.M.",Explosives detection: System modeling and architecture,2007,Proceedings - 13th ISSAT International Conference on Reliability and Quality in Design,,,,386,389,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84886879036&partnerID=40&md5=97f41d9e6d2e8b59113e3afec25809bb,"University of Louisville, Louisville, KY. 40292, United States; Department of Industrial Engineering, University of Louisville, Louisville, KY, United States","ElSaid, W.H., University of Louisville, Louisville, KY. 40292, United States, Department of Industrial Engineering, University of Louisville, Louisville, KY, United States; Alexander, S.M., Department of Industrial Engineering, University of Louisville, Louisville, KY, United States","Developing the architecture for a system consisting of sensor networks for explosive detection that is robust and secure, with good maintainability, availability and performance is an important and challenging problem. In this paper, the standard architecture, used in explosive detection systems, and associated problems are first presented, followed by a proposed architectural framework that resolves these problems.",Design patterns; Explosives Detection; Maintainability; Pipeline to Visitor,Architectural frameworks; Design Patterns; Explosive Detection; Explosive detection system; Standard architecture; System modeling; Explosives detection; Maintainability; Sensor networks; Architecture,,,,,,"Breedvelt, I., Patern, F., Severiins, C., Reusable structures in task models Proceedings of Design, Specification, Verification of Interactive Systems, 97. , Springer-Verlag; Campos, J.C., Harrison, M.D., The role of verification in interactive systems design Proceedings of DSVIS', 98. , Springer-Verlag; Hannum, D.W., Parmeter, J.E., Survey of commercially available explosives detection technologies and equipment (1998) Office of Science and Technology, , Washington D. C.: U. S. Department of Justice, National Institute of Justice, National Law Enforcement and Correction Technology Center Report, September, NCJ 171133; Rhykerd, C.L., Hannum, D.W., Murray, D.W., Parmeter, J.E., Guide for the selection of commercial explosives detection systems for law enforcement applications (1999) NIJ Guide 100-99, , Office of Science and Technology, Washington DC: Department of Justice, National Institute of Justice, Office of Law Enforcement Standards of the National Institute of Standards and Technology September, NCJ 178913; El-Said, W.H., Pipeline to visitor, a new design pattern for improving maintainability of the SW (2006) The Server Side, , June","University of Louisville, Louisville, KY. 40292, United States",,The International Society of Science and;Applied Technologies (ISSAT),,13th ISSAT International Conference on Reliability and Quality in Design,2 August 2007 through 4 August 2007,"Seattle, WA",100088,,9780976348627,,,English,Proc. - ISSAT Int. Conf. Reliab. Qual. Des.,Conference Paper,Scopus,2-s2.0-84886879036,,
,,v,"Pantaleev, A., Rountev, A.",Identifying data transfer objects in EJB applications,2007,"Proceedings - ICSE 2007 Workshops 5th International Workshop on Dynamic Analysis, WODA 2007",,,4273462,,,,,10.1109/WODA.2007.6,http://www.scopus.com/inward/record.url?eid=2-s2.0-46749140280&partnerID=40&md5=12cfc617e7592f960f82b7ebf55d0a2e,Ohio State University,"Pantaleev, A., Ohio State University; Rountev, A., Ohio State University","Data Transfer Object (DTO) is a design pattern that is commonly used in Enterprise Java applications. Identification of DTOs has a range of uses for program comprehension, optimization, and evolution. We propose a dynamic analysis for identifying DTOs in Enterprise Java applications. The analysis tracks the reads and writes of object fields, and maintains information about the application tier that initiates the field access. The lifecycle of a DTO is represented by a finite state automaton that captures the relevant run-time events and the location of the code that triggers these events. We implemented the proposed approach using the JVMTI infrastructure in Java 6, and performed a study on a real-world Enterprise Java application which is deployed for commercial use. Our results indicate that the dynamic analysis achieves high precision and has acceptable overhead. © 2007 IEEE.",,Commercial uses; design patterns; Evolution (CO); Finite state automaton (FSA); high precision; International (CO); JAVA applications; Life Cycle (LC); Object fields; Program comprehension; Real world; Run time; Automata theory; Computer programming languages; Data transfer; Dynamic analysis; Java programming language,,,,,,"Alur, D., Crupi, J., Malks, D., (2003) Core J2EE Patterns, , Second Ed. Prentice Hall PTR; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) International Workshop on Program Comprehension, pp. 153-160; Baniassad, E.L.A., Murphy, G.C., Schwanninger, C., Design pattern rationale graphs: Linking design to source (2003) International Conference on Software Engineering, pp. 352-362; Blewitt, A., Bundy, A., Stark, I., Automatic verification of design patterns in Java (2005) International Conference on Automated Software Engineering, pp. 224-232; Bodden, E., (2005) J-LO: A tool for runtime-checking temporal assertions, , Master's thesis, RWTH Aachen University, Nov; Crawford, W., Kaplan, J., (2003) J2EE Design Patterns, , O'Reilly and Associates; d'Amorim, M., Havelund, K., Event-based runtime verification of Java programs (2005) International Workshop on Dynamic Analysis; Dor, N., Adams, S., Das, M., Yang, Z., Software validation via scalable path-sensitive value flow analysis (2004) International Symposium on Software Testing and Analysis, pp. 12-22; EJB Certificate Authority, , www.ejbca.org; Fink, S., Yahav, E., Dor, N., Ramalingam, G., Geay, E., Effective typestate verification in the presence of aliasing (2006) International Symposium on Software Testing and Analysis, pp. 133-144; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Havelund, K., Rosu, G., An overview of the runtime verification tool Java PathExplorer (2004) Formal Methods in System Design, 24 (2), pp. 189-215; JBossApplication Server, , jboss.org; Kim, M., Viswanathan, M., Kannan, S., Lee, I., Sokolsky, O.V., Java-MaC: A run-time assurance approach for Java programs (2004) Formal Methods in System Design, 24 (2), pp. 129-155; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented soft- ware (1996) Working Conference on Reverse Engineering, pp. 208-215; Livshits, B., Whaley, J., Lam, M., Reflection analysis for Java (2005) LNCS, 3780, pp. 139-160. , Asian Symposium on Programming Languages and Systems; Maassen, J., van Nieuwpoort, R., Veldema, R., Bal, H., Kielmann, T., Jacobs, C., Hofman, R., Efficient Java RMI for parallel programming (2001) ACM Transactions on Programming Languages and Systems, 23 (6), pp. 747-775. , Nov; Niere, J., Schaefer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) International Conference on Software Engineering, pp. 338-348; Pappalardo, G., Tramontana, E., Automatically discovering design patterns and assessing concern separations for applications (2006) ACM Symposium on Applied Computing, pp. 1591-1596; Philippsen, M., Haumacher, B., Nester, C., More efficient serialization and RMI for Java (2000) Concurrency: Practice and Experience, 12 (7), pp. 495-518. , May; Seemann, J., von Gudenberg, J.W., Pattern-based design recovery of Java software (1998) Symposium on the Foundations of Software Engineering, pp. 10-16; Sharp, M., Rountev, A., Static analysis of object references in RMI-based Java software (2006) IEEE Transactions on Software Engineering, 32 (9), pp. 664-681. , Sept; Soundarajan, N., Hallstrom, J.O., Responsibilities and rewards: Specifying design patterns (2004) International Conference on Software Engineering, pp. 666-675; Sreedhar, V., Burke, M., Choi, J., A framework for interprocedural optimization in the presence of dynamic class loading (2000) Conference on Programming Language Design and Implementation, pp. 196-207; Transfer Object Pattern, , java.sun.com/blueprints/corej2eepatterns/Patterns/TransferObject.html; Tyler, B., Hallstrom, J.O., Soundarajan, N., Automated generation of monitors for pattern contracts (2006) ACM Symposium on Applied Computing, pp. 1779-1784; Veldema, R., Philippsen, M., Compiler optimized remote method invocation (2003) IEEE International Conference on Cluster Computing, pp. 127-137; Wendehals, L., Orso, A., Recongizing behavioral patterns at runtime using finite automata (2006) International Workshop on Dynamic Analysis, pp. 33-40","Pantaleev, A.; Ohio State UniversityUnited States; email: pantalee@cse.ohio-state.edu",,IEEE Comput. Soc. Technical Council on Software Engineering;The ACM Special Interest Group on Software Engineering (SIGSOFT),,"5th International Workshop on Dynamic Analysis, WODA 2007",20 May 2007 through 26 May 2007,"Minneapolis, MN",72557,,769529631,9780769529639,,,English,"Proc. - ICSE Workshops Int. Workshop Dyn. Anal., WODA",Conference Paper,Scopus,2-s2.0-46749140280,
,,3,"Iliasov, A.",Refinement patterns for rapid development of dependable systems,2007,"Proceedings of the 2007 Workshop on Engineering Fault Tolerant Systems, EFTS '07",,,,,,,1,10.1145/1316550.1316560,http://www.scopus.com/inward/record.url?eid=2-s2.0-77950501563&partnerID=40&md5=1da50d80a44665db31f84143c30c51b9,"Newcastle University, Newcastle upon Tyne, United Kingdom","Iliasov, A., Newcastle University, Newcastle upon Tyne, United Kingdom","Although, it is widely recognised that formal methods is the single most important technique for building complex dependable systems, formal methods struggle to gain wide acceptance outside their few traditional application areas. In this paper we investigate a method for mechanised transformation of formal models. We argue that, applied to the vast catalogue of architectural and design patterns for dependable systems, this method can greatly contribute to the applicability of formal methods in development of dependable systems. The discussion is supported by a detailed analysis of the Triple Modular Redundancy pattern and a prototype plugin to the RODIN platform which adds the refinement mechanisation support to the Event-B formal framework.",,Application area; Dependable systems; Design Patterns; Event-B; Formal framework; Formal model; Mechanisation; Plug-ins; Rapid development; Triple modular redundancy; Computation theory; Formal methods; Machinery; Technical presentations; Fault tolerant computer systems,,,,,,"Rodin: Rigorous Open Development Environment for Complex Systems, , http://rodin.cs.ncl.ac.uk/, IST FP6 STREP project. (Last accessed: 18 June 2007); (2005) Rodin Deliverable D7: Event B Language, , C. Metayer J.-R. Abrial L.V., ed. Project IST-511599, School of Computing Science, University of Newcastle; Abrial, J.R., (2005) The B-Book: Assigning Programs to Meanings, , Cambridge University Press; Lyons, R.E., Vanderkulk, W., The use of triple-modular redundancy to improve computer reliability (1962) IBM Journal, 200, p. 209; Iliasov, A., Finer Plugin to the RODIN Platform, , http://www.iliasov.org/ncl.plugin.-ner0.0.1.jar, Version 0.0.1. (Last accessed: 18 June 2007); Iliasov, A., Finer Plugin Introduction, , http://www.iliasov.org/FinerPlugin.html, Last accessed: 18 June 2007","Iliasov, A.; Newcastle University, Newcastle upon Tyne, United Kingdom; email: alexei.iliasov@ncl.ac.uk",,,,"2007 Workshop on Engineering Fault Tolerant Systems, EFTS '07",4 September 2007 through 4 September 2007,Dubrovnik,79692,,9781595937254,,,English,"Proc. Workshop Eng. Fault Toler. Syst., EFTS",Conference Paper,Scopus,2-s2.0-77950501563,,
,,3,"Gawley, R.",Automating the identification of variability realisation techniques from feature models,2007,ASE'07 - 2007 ACM/IEEE International Conference on Automated Software Engineering,,,,555,558,,1,10.1145/1321631.1321741,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953988858&partnerID=40&md5=fbdc5a59a502c5a7d11b7b3a147c6603,"School of Electronics, Electrical Engineering and Computer Science, Queen's University of Belfast, University Road, United Kingdom","Gawley, R., School of Electronics, Electrical Engineering and Computer Science, Queen's University of Belfast, University Road, United Kingdom","In Software Product Line Engineering (SPLE), feature modelling is frequently used to model commonalities and variabilities within a domain. A feature model captures an abstract view of a product line and it can serve as a starting point for software design and component implementation. Handling variability exposed within the feature model is an important problem in this context, and in this paper, we describe ongoing research aimed at automating the identification of variability realisation techniques from feature models.",design patterns; feature models; software product lines; variability realisation techniques,Design Patterns; Feature modelling; Feature models; Product-lines; Software Product Line; Software product line engineerings; Computer software; Design; Network architecture; Production engineering; Software design,,,,,,"Batory, D., Feature Models, Grammars and Propositional Formula (2005) LNCS, 3714. , Proceedings of the 9th Software Product Line Conference (Rennes, France, September 26-29, 2005). SPLC 2005; Bockle, G., Pohl, K., Van Der Linden, F., (2005) Software Product Line Engineering, , Springer, Heidelberg, Berlin, New York; Brown, T.J., Gawley, R., Bashroush, R., Spence, I., Kilpatrick, P., Gillan, C., Weaving Behaviour into Feature Models for Embedded System Families (2006) Proceedings of the 10th International Conference on Software Product Lines (Baltimore, Maryland, USA, August 21-24, 2006). SPLC 2006, pp. 52-64. , IEEE Computer Society, NY; Brown, T.J., Gawley, R., Spence, I., Kilpatrick, P., Gillan, C., Bashroush, R., Requirements Modelling and Design Notations for Software Product Lines (2007) Proceedings of the 1st International Workshop on Variability Modeling of Software-intensive Systems (Limerick, Ireland, January 16-18, 2007). VaMoS 2007, pp. 27-35. , Lero Technical Report 2007-01, Limerick; Clements, P., Northrop, L., (2001) Software Product Lines: Practices and Patterns, , Addison-Wesley, Boston, MA, USA; Czarnecki, K., Eisenecker, E.W., (2000) Generative Programming: Methods Tools and Applications, , Addison-Wesley, Boston, MA, USA; Eriksson, M., Borstler, J., Borg, K., The PLUSS Approach - Domain Modelling with Features, Use Cases and Use Case Realisations (2005) LNCS, 3714. , Proceedings of the 9th Software Product Line Conference (Rennes, France, Sept 26-29, 2005). SPLC 2005; Fey, D., Fajta, R., Boros, A., Feature Modelling: A Meta-model to Enhance Usability and Usefulness (2002) LNCS, 2379. , Proceedings of the 2nd International Conference on Software Product Lines (San Diego, CA, USA, August 19-22, 2002). SPLC2; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Boston, MA, USA; Kang, K.C., Cohen, S.G., Hess, J.A., Novak, W.E., Peterson, A.S., (1990) Feature-Oriented Domain Analysis (FODA) Feasibility Study, , Technical Report CMU/SEI-90-TR-021, Carnegie Mellon University, Software Engineering Institute; Philippow, I., Riebisch, M., Systematic definition of reusable architectures (2001) Proceedings of the 8th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (Washington, DC, USA, April 17-20, 2001). ECBS'01, pp. 128-135. , IEEE Computer Society, NY; Philippow, I., Streitferdt, D., Riebisch, M., Design Pattern Recovery in Architectures for Supporting Product Line Development and Application (2003) Modelling Variability for Object-Oriented Product Lines, , BooksOnDemand, Norderstedt, Germany; Svahnberg, M., Van Gurp, J., Bosch, J., A Taxonomy of variability realization techniques (2005) Software-Practice and Experience, 35, pp. 705-754. , 2005","Gawley, R.; School of Electronics, Electrical Engineering and Computer Science, Queen's University of Belfast, University Road, United Kingdom; email: r.gawley@qub.ac.uk",,ACM SIGSOFT;ACM SIGART,,"22nd IEEE/ACM International Conference on Automated Software Engineering, ASE'07",5 November 2007 through 9 November 2007,"Atlanta, GA",80761,,9781595938824,,,English,ASE - ACM/IEEE Int. Conf. Autom. Softw. Eng.,Conference Paper,Scopus,2-s2.0-77953988858,,
,,3,"Soukup, M., Soukup, J.","The popularity cycle of graphical tools, UML, and libraries of associations",2007,"Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA",,,,753,756,,,10.1145/1297846.1297871,http://www.scopus.com/inward/record.url?eid=2-s2.0-42149138449&partnerID=40&md5=2eb1aebbda3181d055acbb572411013d,"Nortel, 3500 Carling Ave., Ottawa, ON K2H 8E9, Canada; Code Farms Inc., 7214 Jock Trail, Richmond, ON K0A 2Z0, Canada","Soukup, M., Nortel, 3500 Carling Ave., Ottawa, ON K2H 8E9, Canada; Soukup, J., Code Farms Inc., 7214 Jock Trail, Richmond, ON K0A 2Z0, Canada",A historical cycle has been observed where the use of graphical tools becomes critical to software development but these tools eventually fall from use as the underlying cause of complexity is removed through a new programming paradigm. This workshop attempts to take a unified view of UML-related ideas which span from high level software design (UML and MDD) to technical details of implementing reusable associations. It also identifies gaps in the existing programming languages addressed by UML class diagrams. The discussion is not language specific and applies to both C++ and Java. For additional details see www.codefarms.com/OOPSLA07/workshop.,"Agile programming; Association; Class library; Container; Design patterns; Intrusive data structures; MDA; MDD; MDE; Model-driven, model; Reusable; UML; Unified modeling language",Computer programming; Computer programming languages; Computer simulation languages; Computer software; Computer software reusability; Computer systems programming; Graphic methods; Java programming language; Linguistics; Neodymium; Query languages; Software design; Software engineering; Tools; Unified Modeling Language; Wireless telecommunication systems; Data structures; (algorithmic) complexity; Graphical tools; international conferences; Languages (traditional); Object-oriented programming; software development; technical details; UML class diagrams; Object oriented programming; Agile programming; Association; Class library; Design patterns; Intrusive data structures; MDA; MDD; MDE; Modeldriven; Reusable; UML,,,,,,"Soukup, M., Soukup, J., The Inevitable Cycle - Graphical Tools and Programming Paradigms IEEE Computer August 2007, preliminary draft, , www.codefarms.com/OOPSLA07/workshop, available at; Soukup, J., Soukup, M., Reusable Associations Until it, , www.codefarms.com/OOPSLA07/workshop, is published in Dr. Dobbs Journal, the preliminary draft is available at; Soukup, J. Implementing Patterns. In the first conference on Pattern Languages of Program Design, proceedings edited by J.O. Coplien and D.C .Schmidt, Addison-Wesley 1995, pp.395-415IN_CODE modeling - C++ and Java libraries free to download from www.codefarms.com/OOPSLA07/workshop including the documentationSoukup, M. and Soukup, J. Graphical Tools and Language Evolution. Submitted to ATEM 2007 (4th International Workshop on Software Language Engineering), also available at www.codefarms.com/OOPSLA07/workshop","Soukup, M.; Nortel, 3500 Carling Ave., Ottawa, ON K2H 8E9, Canada; email: msoukup@nortel.com",,"ACM Special Interest Group on Programming Languages, SIGPLAN",,"22nd International Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA 2007 - Companion",21 October 2007 through 25 October 2007,"Montreal, QC",71765,,9781595938657,,,English,Proc Conf Object Orient Program Syst Lang Appl OOPSLA,Conference Paper,Scopus,2-s2.0-42149138449,,
,,4,"Hofmeister, H., Wirtz, G.",Using patterns to design composite applications,2007,"International Conference on Enterprise Information Systems and Web Technologies 2007, EISWT 2007",,,,168,175,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878127735&partnerID=40&md5=144d687e7590f98068578676ca921e83,"European EAI Department, BASF IT Services n.V., Brussels, Belgium; Distributed and Mobile Systems Group, Otto-Friedrich Universität Bamberg, Bamberg, Germany","Hofmeister, H., European EAI Department, BASF IT Services n.V., Brussels, Belgium; Wirtz, G., Distributed and Mobile Systems Group, Otto-Friedrich Universität Bamberg, Bamberg, Germany","We describe how patterns can be used among other artifacts to facilitate the construction of composite service-oriented applications. Several pattern languages are analyzed whether they fit into a suitable reference architecture and how they can be used as analysis and/or design patterns during constructing composite applications. Having identified suitable patterns, we describe relations among these patterns and how these relations provide additional input for the design of service-oriented applications.",,Composite applications; Design Patterns; Pattern languages; Reference architecture; Service-oriented applications; Computer applications; Information systems,,,,,,"Andrews, T., Curbera, F., Hitesh, D., Goland, Y., Klein, J., Leymann, F., Web service business process execution language for web services version 2.0 - Draft (2005) OASIS, Tech. Rep. 2.0, , December 21; OASIS WSBPEL Technical Committee: Web Services Business Process Execution Language 2.0, , http://docs.oasis-open.org/wsbpel/2.0/, 31.02.2007; Feuerlicht, G., Application of data engineering techniques to design of message structures for web services (2005) Proceedings of the First International Workshop on Design of Service-Oriented Applications (WDSOA'05); Reijers, H., A cohesion metric for the definition of activities in a workflow process (2003) CaiSE/IFIP8.1 International Workshop on Evaluation of Modeling Methods in Systems Analysis and Desing (EMMSAD, 03), , Velden, Austria; Van Der Aalst, W.M.P., Ter Hofstede, A.H.M., Kiepuszewski, B., Barros, A.P., Workflow patterns (2003) Distributed and Parallel Databases, 14 (1), pp. 5-51; Russell, N., Ter Hofstede, A.H.M., Edmond, D., Van Der Aalst, W.M.P., (2005) Workflow Data Patterns: Identification, Representation and Tool Support, pp. 353-368; Barros, A.P., Dumas, M., Ter Hofstede, A.H.M., Service interaction patterns (2005) Business Process Management, 3649, pp. 302-318. , W. M. P. van der Aalst, B. Benatallah, F. Casati, and F. Curbera, Eds; Hohpe, G., Woolf, B., (2004) Enterprise Integration Patterns, Ser. The Addison Wesley Signature Series, , Pearson Education Inc; Decker, G., Bridging the gap between business processes and existing IT functionality (2005) Proceedings of the First International Workshop on Design of Service-Oriented Applications (WDSOA'05); Dehnert, J., Van Der Aalst, W.M.P., Bridging the gap between business models and workflow specifications (2004) Int. J. Cooperative Inf. Syst., 13 (3), pp. 289-332; Linthicum, D.S., (2004) Next Generation Application Integration, , Boston, MA USA: Addison-Wesley; Hofmeister, H., Wirtz, G., Approaching a methodology for designing composite applications integrating legacy applications using an architectural framework (2006) Proc. of the EMISA Conference, 95. , Hamburg, Germany, LNI Springer; Kaufman, G., (1990) Pragmatic ECAD Data Integration, , New York, NY, USA, Tech. Rep. 1; Hofmeister, H., Wirtz, G., A pattern taxonomy for business process integration oriented application integration (2006) The 2006 International Conference on Software Engineering and Knowledge Engineering (SEKE'06), , July 5-7; Grefen, P., Vonk, J., Apers, P., Global transaction support for workflow management systems: From formal specification to practical implementation (2001) The VLDB Journal, 10 (4), pp. 316-333; Bhiri, S., Perrin, O., Godart, C., Ensuring required failure atomicity of composite web services (2005) WWW, pp. 138-147; (2002) RosettaNet Implementation Framework: Core Specification, , www.rosettanet.org, V02.00.01 ed. March; Damodaran, S., B2B integration over the internet with XML: Rosettanet successes and challenges (2004) Proc. of the 13th Int. WWW Conference, pp. 188-195. , New York: ACM Press; Beatty, J., Blohm, H., Boutard, C., Brodsky, S., Carey, M., Dubray, J.-J., Service data objects for java specification (2005) BEA and SAP and IBM, Tech. Rep.; Beatty, J., Brodsky, S., Nally, M., Patel, R., Next generation data programming - Service data objects (2003) BEA and IBM, Tech. Rep.; Schönberger, A., Wirtz, G., Realising RosettaNet PIP compositions as web service orchestrations - A case study (2006) The 2006 Int. Conf. on E-Learning, E-Business, Enterprise Information Systems, E-Government, & Outsourcing, , June 26-29","European EAI Department, BASF IT Services n.V., Brussels, Belgium",,,,"2007 International Conference on Enterprise Information Systems and Web Technologies, EISWT 2007",9 July 2007 through 12 July 2007,"Orlando, FL",97059,,9781615677245,,,English,"Int. Conf. Enterp. Inf. Syst. Web Technol., EISWT",Conference Paper,Scopus,2-s2.0-84878127735,,
,,4,"Debnath, N.C., Garis, A., Riesco, D., Montejano, G.",Defining OCL constraints for the proxy design pattern profile,2007,"2007 IEEE/ACS International Conference on Computer Systems and Applications, AICCSA 2007",,,4231064,880,885,,,10.1109/AICCSA.2007.370736,http://www.scopus.com/inward/record.url?eid=2-s2.0-36248953711&partnerID=40&md5=87a2b027e306607bc5f78bec6dfe168e,"Winona State University, Department of Computer Science, Winona, MN 55987, United States; Universidad Nacional de San Luis, Ejército de los Andes 950, (5700) San Luis, Argentina","Debnath, N.C., Winona State University, Department of Computer Science, Winona, MN 55987, United States; Garis, A., Universidad Nacional de San Luis, Ejército de los Andes 950, (5700) San Luis, Argentina; Riesco, D., Universidad Nacional de San Luis, Ejército de los Andes 950, (5700) San Luis, Argentina; Montejano, G., Universidad Nacional de San Luis, Ejército de los Andes 950, (5700) San Luis, Argentina","Profiles allow extend UML vocabulary and the design patterns define a common vocabulary for software designers, therefore it is possible to use profile to define a pattern vocabulary in UML. If profiles are used to represent patterns then it is not required to define a special notation neither a particular CASE tool for patterns (UML tool is used). Three mechanisms are in the profiles: stereotypes, tag values and constraints. Stereotypes extend the UML vocabulary and it is possible to associate to it tag values and constraints. When these elements are introduced in models; patterns can be clearly visualized, software developers improve communication and establish a common vocabulary. Also profiles allow add information to the model to transform it to other models. OCL (Object Constraint Language) constraints are semantic restrictions added to UML elements. This work shows a way in which OCL constraints are used to define semantic restrictions over stereotypes included in a profile of pattern. The definition of OCL constraints for proxy design pattern is shown as an example of our proposal. An interaction between users and UML tool is proposed for solving the loss generality when OCL constrains are imposed. © 2007 IEEE.",Design patterns; OCL; UML profiles,Computer programming languages; Mathematical models; Mathematical transformations; Semantics; Software design; Visualization; Vocabulary control; Design patterns; OCL; Proxy design pattern; UML profiles; Pattern recognition,,,,,,"(2006) UML 2.0 Infraestructure Specification, , http://www.orng.org/technology/ documents, August; (2006) UML 2.0 OCL Specification, , http://www.omg.org, August; Lano, K., Bicarregui, J., Goldsack, S., Formalising Design Patterns (1997) In BCS Northern Formal Methods Workshop, EWIC Series; Smith, J., Stotts, D., Elemental Design Patterns: A Formal Semantics for Composition of OO Software Architecture (2002) 27th Annual IEEE/NASA Software Engineering Workshop, , December; Florijn, G., Meijers, M., Van Winsen, P., Tool Support for Object-Oriented Patterns (1997) LNCS, 1241, pp. 472-495. , ECOOP'97, l European Conference on Object-Oriented Programming, June; Lauder, A., Kent, S., Precise Visual Specification of Design Patterns (1998) LNCS, 1445, pp. 230-236. , ECOOP'98, 12th European Conference on Object-Oriented Programming, July; Le Guennec, A., Sunyé, G., Jézéquel, J., Precise Modeling of Design Patterns, In UML 2000, Vol. 1939 (2000) LNCS, pp. 482-496; France, R., Kim, D., Song, E., A UML-Based Pattern Specification Technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206; (2004) UML Profile for Patterns Specification, , http://www.omg.org/technology/ documents, OMG; Debnath, N., Garis, A., Riesco, D., Montejano, G., UML Profiles for Design Patterns (2005) ISCA 20th Internacional Conference on Computers and their Applications, p. 435. , March; Debnath, N., Garis, A., Riesco, D., Montejano, G., Defining Patterns using UML Profiles (2006) ACS/IEEE International Conference on Computer Systems and Applications, , www.ieee.org, IEEE Press, March; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns, Elements of Reusable Object-Oriented Software (1995) Addison-Wesley","Debnath, N.C.; Winona State University, Department of Computer Science, Winona, MN 55987, United States; email: ndebnath@winona.edu",,,,"2007 IEEE/ACS International Conference on Computer Systems and Applications, AICCSA 2007",13 May 2007 through 16 May 2007,Amman,70247,,1424410312,9781424410316,,,English,IEEE/ACS Int. Conf. Comput. Syst. Applic.,Conference Paper,Scopus,2-s2.0-36248953711,
,,4,"Kim, D.-K., Shen, W.",An approach to evaluating structural pattern conformance of UML models,2007,Proceedings of the ACM Symposium on Applied Computing,,,,1404,1408,,10,10.1145/1244002.1244305,http://www.scopus.com/inward/record.url?eid=2-s2.0-35248900994&partnerID=40&md5=954ccbf3d6f7308acd2af3db5a6547a0,"Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; Department of Computer Science, Western Michigan University, Kalamazoo, MI 49008, United States","Kim, D.-K., Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; Shen, W., Department of Computer Science, Western Michigan University, Kalamazoo, MI 49008, United States","This paper describes an approach to evaluating the structural conformance of a UML class diagram to a design pattern. A design pattern is specified in an extension of the UML that defines the pattern as a family of models. A pattern specification consists of a set of pattern roles where a role specifies the properties of a pattern participant. The approach uses a divide-and-conquer method to evaluate pattern conformance. In the approach a pattern and the model being evaluated are decomposed into blocks. Then, the model blocks are evaluated for conformance to the role blocks in the pattern. When all individual role blocks are satisfied by the model blocks, the pattern as a whole is considered to evaluate the entire conformance of the model. A major benefit of this approach is the support for variations of pattern realizations through the notion of pattern roles. We illustrate the approach using the Visitor pattern and a price calculator, and demonstrate a prototype tool that supports the approach. Copyright 2007 ACM.",,Computer aided design; Computer aided software engineering; Mathematical models; Pattern recognition; Software prototyping; Design patterns; Pattern realizations; Prototype tools; Structural patterns; Unified Modeling Language,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Design Pattern Recovery in Object-Oriented Software (1998) Proceedings of the 6th International Workshop on Program Comprehension, pp. 153-160. , IEEE Computer Society Press; Bergenti, F., Poggi, A., Improving UML Design Using Automatic Design Pattern Detection (2000) Proceedings of the 12th International Conference on Software Engineering and Knowledge Engineering, (SEKE), pp. 336-343; Brown, K., (1996) Design Reverse-Engineering and Automated Design Pattern Detection in SmallTalk, , Master's thesis, Department of Computer Engineering, North Carolina State University; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-Based Reverse Engineering of Design Components (1999) Proceedings of the 21st International Conference On Software Engineering; Kim, D., (2004) A Meta-Modeling Approach to Specifying Patterns, , PhD thesis, Colorado State University, Fort Collins, CO; Kim, D., The Role-Based Metamodeling Language for Specifying Design Patterns (2006) Design Pattern Formalization Techniques, , Toufik Taibi, editor, Idea Group Inc, To be published; D. Kim, R. France, S. Ghosh, and E. Song. A Role-Based Metamodeling Approach to Specifying Design Patterns. In Proceedings of the 27th IEEE Annual International Computer Software and Applications Conference, Dallas, Texas, 2003Kraemer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering; Lauder, A., Kent, S., Precise Visual Specification of Design Patterns (1998) LNCS, 1445, pp. 114-136. , Proceedings of the 12th European Conference on Object-Oriented Programming, Springer-Verlag; Mai, Y., de Champlain, M., A Pattern Language to Visitors (2001) Proceedings of the 8th AnnualConference of Pattern Languages of Programs (PLoP), , Monticello, Illinois; Shen, W., Low, W.L., Using Abstract Sstate Machines to Support UML Model Instantiation Checking (2005) Proceedings of The IASTED International Conference on Software Engineering, , Innsbruck, Austria; Shull, F., Melo, W., Basili, V., An inductive method for discovering design patterns from object-oriented software systems (1996), Technical Report UMIACS-TR-96-10, University of Maryland, Computer Sciencehttp://www.omg.org, The Object Management Group OMG, Unified Modeling Language. Version 1.5, OMG, March 2003Warmer, J., Kleppe, A., (2003) The Object Constraint Language Second Edition: Getting Your Models Ready for MDA, , Addison Wesley","Kim, D.-K.; Department of Computer Science and Engineering, Oakland University, Rochester, MI 48309, United States; email: kim2@oakland.edu",,ACM Special Interest Group on Applied Computing,,2007 ACM Symposium on Applied Computing,11 March 2007 through 15 March 2007,Seoul,70408,,1595934804,9781595934802,,,English,Proc ACM Symp Appl Computing,Article,Scopus,2-s2.0-35248900994,
,,1,"Hyung, M.K., Jae, S.Y.",Recursive algorithm of river and basin data model based on composite design pattern,2007,ISI 2007: 2007 IEEE Intelligence and Security Informatics,,,4258708,262,265,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-34748839601&partnerID=40&md5=37a881e3a1f265719c5bdb353f8fe66f,"Chungbuk National University, BK21 Chungbuk Info. Tech. Center, JeongboTongsin 48 Gaeshin-dong, Cheongju, South Korea","Hyung, M.K., Chungbuk National University, BK21 Chungbuk Info. Tech. Center, JeongboTongsin 48 Gaeshin-dong, Cheongju, South Korea; Jae, S.Y., Chungbuk National University, BK21 Chungbuk Info. Tech. Center, JeongboTongsin 48 Gaeshin-dong, Cheongju, South Korea","We propose an algorithm which specifies pattern names for retrieving, exploring the adapted patterns on the stage of design without pattern language that is redundant abstraction. By applying composite design pattern to the design of the objectoriented recursive river and basin data model interface for Total Maximum Daily Load discipline, We have the result showing far better improvement of performance in the category of polymorphism and especially of reusability than conventional basin models. Thus, this study can contribute on the reducing iterations and repetitions of up-dating and committing after the spatial data changes that are frequently occurred in the process of the environmental GIS model developments. © 2007 IEEE.",Composite; Design; Pattern; Recursive; River and basin,Algorithms; Geographic information systems; Iterative methods; Pattern recognition; Recursive functions; Software design; Design patterns; Pattern language; Recursive algorithms; Spatial data; Data structures,,,,,,"Aranda, G., Moore, R., GoF Creational patterns: A formai specification (2000) The United Nations University UNU/IIST Report, , No. 224 () 1-60; Booch, G., Rumbaugh, J.E., Jacobson, I., (1999) The Unified modeling language user guide, , MA: AddisonWesley; Budinsky, F.M., Finnie, V., John, and P.. Yu: Automatic code generating from design Patterns (1996) IBM systems Journal, 35 (2); Eden, A.A., Yehuda, Gil, J., Precise specification and automatic application of design patterns, Automated software Engineering (1997) proceedings of 12th IEEE International Conference; Flores, A.P., Moore, R., GoF Structural patterns: A formal specification (2000) The United Nations University UNU/IIST Report, , No. 224 () 1-77; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns: Abstraction and Reuse of Object-Oriented Design (1993) Lecture Notes in Computer Science, , ECOOP '93 Conference Proceedings, Springer-verlag; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of reusable objectoriented software, , Addison-Wesley; Gamma, E., Applying design patterns in JAVA (1999) JAVA Report; Gomaa, Hassan, Foreword by Ivar Jacobson: Designing software product lines with UML-from use cases to patternbased software architectures- (2004) 10-41(2002) General Act of Environmental Policy, General Regulation of Environmental, , KEPA: Policy, KEPA; Kim, Kangjoo, Ji Sun Lee, Chang-Whan Oh, Gab-Soo Hwang, Jinnsam Kim, Sungku Yeo, Yeongkyoo Kim, Seongmin Park: Inorganic chemicals in an effluent-dominated stream as indicators for chemical reactions and stream flows, Journal of Hydrology, Mar. (2002)Kim, W., Choi, Y., (2002) Design patterns based software development support tool, Journal of KISA, pp. 29-28; Larman, C., Park, S., (2003) Applying UML and Patterns, , Hong Reung Science Pub Co; Maidment, D.R., (2002) Arc Hydro GIS for Water Resources, pp. 142-187. , ESRI; Reynoso, L., Moore, R., GoF Behavioral patterns: A formal specification (2000) The United Nations University UNU/IIST Report, , No. 224 () 1-92; Rumbaugh, J., Jacobson, I., Booch, G., (2004) The unified modeling language reference manual, pp. 3-14. , second edition, Addison Wesley; Sefica, M.A., Sane, Campbell, R., Monitoring compliance of a software system with its higher-level design models (1996) Proceedings of the 18th International conference of software engineering ICSE; Stephen, S., Yau, S., (2000) Ning Dong: Integration in component-based software development using design patterns, COMSAC; Whang, Eui-Ho, Kim. Kye-Hyun, Park, Jin-Hyuk, Lee, Keun-Sang: Development of water balance analysis basin model based on GIS, Journal of KAGIS, 7-4, (2004) 34-45Yacoub, S.M., Ammar, H.H., Pattern-oriented analys and design (2004) Addison Wesley, pp. 4-17","Hyung, M.K.; Chungbuk National University, BK21 Chungbuk Info. Tech. Center, JeongboTongsin 48 Gaeshin-dong, Cheongju, South Korea; email: kimhyungmoo@chonbuk.ac.kr",,,,ISI 2007: 2007 IEEE Intelligence and Security Informatics,23 May 2007 through 24 May 2007,"New Brunswick, NJ",70290,,1424413303,9781424413300,,,English,IEEE Intell. Secur. Inf.,Conference Paper,Scopus,2-s2.0-34748839601,
,,4,"Aleksy, M., Korthaus, A., Seifried, C.",Design patterns usage in peer-to-peer systems - An empirical analysis,2007,Proceedings - 2006 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology (WI-IAT 2006 Workshops Proceedings),,,4053292,459,462,,,10.1109/WI-IATW.2006.57,http://www.scopus.com/inward/record.url?eid=2-s2.0-34250719668&partnerID=40&md5=002780aac77b9dd0e283f7ea5e4372f9,"University of Mannheim, Germany","Aleksy, M., University of Mannheim, Germany; Korthaus, A., University of Mannheim, Germany; Seifried, C., University of Mannheim, Germany","In this paper, we present the results of an empirical analysis regarding the application and realization of established design patterns in existing peer-to-peer system implementations. Among the goals of our research were the identification of relevant design patterns that are particularly helpful and veil suited for the implementation of peer-to-peer architectures and the discovery of potential shortfalls with respect to the capitalization on design patterns in that domain. We describe which design pattern realizations were encountered in the analyzed system implementations and how frequently they were applied, and finally we draw some conclusions from our findings. © 2006 IEEE.",,Computational methods; Engineering research; Logic design; Network architecture; Design patterns; Peer to peer architectures; Peer to peer systems; Distributed computer systems,,,,,,"Aberer, K., P-Grid: A self-organizing access structure for P2P information systems (2000) Proc. of the 6th Int. Conf. on Cooperative Information Systems, , Trento, Italy; Aberer, K., Hauswirth, M., Peer-to-peer information systems: Concepts and models, state-of-the-art, and future systems (2001) Proc. of the 18th Int. Conf. on Data Engineering, , San Jose, USA; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proc. of the 6th Int, , Workshop on Program Comprehension, Ischia, Italy; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley & Sons, Chichester; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Longman; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic Design Pattern Detection (2003) Proceeding of the 11 th IEEE Int, , Workshop on Program Comprehension, Portland, USA; (2005) ProActive, , http://www-sop.inria.fr/oasis/ProActive/doc/ProActiveManual. pdf, Institut National de Recherche en Informatique et en Automatique , Manual; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000) Proc. of the 6th International Conference on Software Reuse (ICSR-6), , Vienna, Austria; Kircher, M., Jain, P., (2004) Pattern-Oriented Software Architecture: Patterns for Resource Management, , John Wiley & Sons, Chichester; Koukkoullis, G., (2005) Phex-The, pp. P2P. , http://phex.kouk.de, Gnutella Filesharing Client; Lime Wire, L.L.C., (2005) LimeWire.org-Open Source P2P Filesharing, , http://www.limewire.org; Sanmarti, M., (2002) P2P File Sharing Service, , http://www.bath.ao.uk/ comp-sci/hci/mobile/p2p.html; Schmidt, D.C., Rohnert, H., Stal, M., Schultz, D., (2000) Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Objects, , John Wiley & Sons, Chichester; Streitferdt, D., Philippow, I., Riebisch, M., (2003) Design Pattern Recovery in Architectures for Supporting Product Line Development and Application, , http://www.theoinf.tu-ilmenau.de/riebisoh/publ/04-phil.pdf; (2005), http://jtofrost.sourceforge.net, The Frost Project Website(2004) JXTA v2.0 Protocols Specification, , http://spec.jxta.org/nonav/v1.0/docbook/JXTAProtocols.html, The Internet Society; Traversat, B., Arora, A., Abdelaziz, M., Duigou, M., Haywood, C., Hugly, J.-C., Pouyoul, E., Yeager, B., (2004) Project JXTA 2.0 Super-Peer Virtual Network, , http://www.jxta.org/project/www/docs/JXTA2.0protocols1.pdf","Aleksy, M.; University of MannheimGermany; email: aleksy@uni-mannheim.de",,IEEE Computer Society;Web Intelligence Consortium (WIC);Association for Computing Machinery (ACM),,2006 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology,18 December 2006 through 22 December 2006,Hong Kong,69803,,769527493,9780769527499,,,English,Proc. Int. Conf. Web Intelligence Intelligent Agent Technol.,Conference Paper,Scopus,2-s2.0-34250719668,
,,v,"Basu, N., Chatterjee, S., Chaki, N.",Design pattern mining from source code for reverse engineering,2007,"IEEE Region 10 Annual International Conference, Proceedings/TENCON",2007,,4085136,,,,,10.1109/TENCON.2005.301336,http://www.scopus.com/inward/record.url?eid=2-s2.0-34249704696&partnerID=40&md5=259d263ce458b3110d446881488f7260,"NIIT Technologies Ltd., Salt Lake Electronics Complex, Kolkata, India; Dept. of Information Technology, Jadavpur University, Kolkata, India; Dept. of Computer Science, University of Calcutta, Kolkata, India","Basu, N., NIIT Technologies Ltd., Salt Lake Electronics Complex, Kolkata, India; Chatterjee, S., Dept. of Information Technology, Jadavpur University, Kolkata, India; Chaki, N., Dept. of Computer Science, University of Calcutta, Kolkata, India","Design patterns are micro architectures that have proved to be reliable, easy-to implement and robust. There is a need in science and industry for recognizing these patterns. This paper aims toward development of a new method for discovering design patterns in the source codes. The method provides a precise specification of how the patterns work by describing basic structural information like inheritance, composition, aggregation and association, and a an indispensable part, by defining call delegation, object creation and operation overriding. We have tried to introduce a new XML-based language, the Extensible Pattern Markup Language XPML, which provides an easy way for the users to modify pattern descriptions to suit their needs, or even to define their own patterns or just classes in certain relations they wish to find. The proposed method is tested on four open-source systems, and is found to be effective in discovering design pattern instances.",Design patterns; Reverse engineering engine; Unified Modeling Language (UML); XML,Information analysis; Open systems; Reverse engineering; Specifications; XML; Design patterns; Reverse engineering engine; Unified Modeling Language (UML); Data mining,,,,,,"World Wide Web Consortium (W3C, Extensible Markup Language XML, version 1.0 edition, 2000Bansiya, J., DP++ is a tool for C++ programs (1998) Dr. Dobb's Journal, , June; Brown, K., Design reverse-engineering and automated design pattern detection in Smalltalk (1996), Master's thesis. Department of Computer Engineering, North Carolina State UniversityFerenc, R., Besz'edes, A., Data Exchange with the Columbus Schema for C++ (2002) Proceedings of the 6th European Conference on Software Maintenance and Reengineering(CSMR, pp. 59-66. , Mar; Ferenc, R., Besz'edes, A., Tarkiainen, M., Gyim'othy Columbus, T., Reverse Engineering Tool and Schema for C++ (2002) Proceedings of the 6th International Conference on Software Maintenance (ICSM, pp. 172-181. , IEEE Computer Society, Oct; Ferenc, R., Gustafsson, J., Muller, L., Paakki, J., Recognizing Design Patterns in C++ programs with the integration of Columbus and Maisa (2002) Acta Cybernetica journal, 15, pp. 669-682. , University of Szeged; Ferenc, R., Siket, I., Gyimóthy, T., Extracting Facts from Open Source Software (2004) Proceedings of the 20th International Conference on Software Maintenance (ICSM, pp. 60-69. , Chicago Illinois, USA, September 11-17; Antoniol, R.F.G., Cristoforetti, L., Using Metrics to Identify Design Patterns in Object-Oriented Software (1998) Proceedings of the Fifth International Symposium on Software Metrics (METRICS98), pp. 23-34. , Nov; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Pub Co; Gu'eh'eneuc, Y.-G., Jussien, N., Using explanations for design patterns identification (2001) Proceedings of IJCAI Workshop on Modelling and Solving Problems with Constraints, pp. 57-64. , Aug; (1998) Programming languages, 14882, p. 1998. , International Standards Organization, C, ISO/IEC, E edition; Document ObjectModel (DOM), 2000 World Wide Web Consortium W3CKraemer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , Nov; Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A., Software metrics by architectural pattern mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress), pp. 325-332; Mehlhorn, K., Naeher Leda, S., (1997) A platform for combinatorial and geometric computing, , Cambridge University Press; Object Management Group Inc. OMG Unified Modeling Language Specification version 1.3 edition, 1999Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A., Software metrics by architectural pattern mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress), pp. 325-332","Basu, N.; NIIT Technologies Ltd., Salt Lake Electronics Complex, Kolkata, India; email: nilux_b@yahoo.com",,,,TENCON 2005 - 2005 IEEE Region 10 Conference,21 November 2005 through 24 November 2005,Melbourne,69661,,780393112,9780780393110,85QXA,,English,IEEE Reg 10 Annu Int Conf Proc TENCON,Conference Paper,Scopus,2-s2.0-34249704696,
,,4,"Meffert, K.",Supporting the selection of design patterns by formal definition and considering semantics,2006,EuroPLoP 2006 - 11th European Conference on Pattern Languages of Programs,,,,655,668,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871464697&partnerID=40&md5=cdb2320da097d2c2fce597dd826f2101,"Technical University Ilmenau, Germany","Meffert, K., Technical University Ilmenau, Germany","Extensibility and maintainability of software becomes more an issue as the complexity of the software development process rises. Design patterns in the sense of Gamma et al. [3] aid in reducing the problem of architectural decay. However, new publications steadily increase the number of documented patterns. This makes the automated and tool-supported processing of design patterns more important. Here, the definition of pattern templates receives prominent relevance. A pattern template is a semantically enriched definition of a pattern for a specific process, e.g. the selection of the pattern. This paper supports the definition of pattern templates by introducing manually added semantics via annotations to the template and to source code, along with distinguishing several types of elements that correspond between pattern template and source code. Annotations allow for explicitly declaring the sense/intention and the meaning of pattern and program parts that would otherwise not be reasonable by a tool. This leads to the possibility of tool-supported selection of applicable patterns and assists in their application and detection.",Abstracting architecture; Annotations; Design patterns; Explicit semantics; Pattern documentation; Program transformation,Annotations; Design Patterns; Explicit semantics; Formal definition; Program transformations; Software development process; Source codes; Software engineering; Semantics,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Lieberman, H., (2001) Your Wish is My Command: Programming by Example, , Morgan Kaufman; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Annotations for Java, , http://www.jcp.org/en/jsr/detail?id=175; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stahl, M., (1996) Pattern Oriented Software Architecture, , Wiley; Ó Cinnéide, M., Nixon, P., A methodology for the automated introduction of design patterns (1999) Proceedings of the International Conference on Software Maintenance, , Oxford, Sept; Maplesden, D., Hosking, J.G., Grundy, J.C., Design pattern modelling and instantiation using DPML (2002) Proceedings of Tools Pacific 2002, , Sydney, 18-21 February, CRPIT Press; Haugeland, J., (1997) Mind Design II - Philosophy, Psychology, Artificial Intelligence, , ed., MIT Press, Cambridge, London, 2nd edition; Pree, W., (1995) Design Patterns for Object-Oriented Software Development, , Addison-Wesley; Zimmer, W., (1997) Frameworks Und Entwurfsmuster, , Shaker Verlag; Meffert, K., Supporting design patterns with annotations (2006) 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems (ECBS'06), pp. 437-445. , ecbs; Balanyi, Z., Ferenc, R., Mining design from C++ source code (2003) Proceedings of the International Conference on Software Maintenance; Le Guennec, A., Sunyé, G., Jézéquel, J.-M., Precise modeling of design patterns (2000) Proceedings of UML 2000, pp. 482-496; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2000) Proceedings of the 22nd International Conference on Software Engineering 2000, pp. 241-251. , Limerick, Ireland, ACM Press, June; Smith, J.M., Stotts, D., Flexible automated design pattern extraction from source code (2003) Proceedings of the 2003 IEEE International Conference on Automated Software Engineering, pp. 215-224. , Montreal QC, Canada, October; Montero, S., Díaz, P., Ignacio, A., A semantic representation for domain-specific patterns (2005) Lecture Notes in Computer Science, 3511, pp. 129-140. , Jul, Springer, 2005","Meffert, K.; Technical University IlmenauGermany; email: plop@klaus-meffert.de",,Schlumberger;dpunkt.verlag;Siemens;Wiley,,"11th European Conference on Pattern Languages of Programs, EuroPLoP 2006",5 July 2006 through 9 July 2006,Irsee,94513,,9783879408139,,,English,EuroPLoP - Eur. Conf. Pattern Lang. Programs,Conference Paper,Scopus,2-s2.0-84871464697,,
,,v,"Kaczor, O., Guéhéneuc, Y.-G., Hamel, S.",Efficient identification of design patterns with bit-vector algorithm,2006,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,1602369,175,184,,21,10.1109/CSMR.2006.25,http://www.scopus.com/inward/record.url?eid=2-s2.0-46149096013&partnerID=40&md5=56ee9bf48809144eb0cd8e8623168444,"GEODES, Department of Informatics and Operations Research, University of Montreal, QC, Canada; LBIT, Department of Informatics and Operations Research, University of Montreal, QC, Canada","Kaczor, O., GEODES, Department of Informatics and Operations Research, University of Montreal, QC, Canada; Guéhéneuc, Y.-G., GEODES, Department of Informatics and Operations Research, University of Montreal, QC, Canada; Hamel, S., LBIT, Department of Informatics and Operations Research, University of Montreal, QC, Canada","Design patterns are important in software maintenance because they help in designing, in understanding, and in re-engineering programs. The identification of occurrences of a design pattern consists in identifying, in a program, classes which structure and organisation match - strictly or approximately - the structure and organisation of classes as suggested by the design pattern. We express the problem of design pattern identification with operations on finite sets of bit-vectors. We use the inherent parallelism of bit-wise operations to derive an efficient bit-vector algorithm that finds exact and approximate occurrences of design patterns in a program. We apply our algorithm on three small-to-medium size programs, JHOTDRAW, JUZZLE, and QUICKUML, with the Abstract Factory and Composite design patterns and compare its performance and results with two existing constraint-based approaches. © 2006 IEEE.",,"Boolean functions; Computer software maintenance; Industrial engineering; Maintenance; Real time systems; Reengineering; Set theory; Vectors; (0 , 1)-vectors; (SPM) classes; Composite designs; Constraint-based; design patterns; European; Finite sets; Medium size; re-engineering; Software design",,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) proceedings of the 6th International Workshop on Program Comprehension, pp. 153-160. , IEEE Computer Society Press, June; Baeza-Yates, R.A., Gonnet, G.H., A new approach to text searching (1992) Communications of the ACM, 35 (10), pp. 74-82. , October; Bergeron, A., Hamel, S., Vector algorithms for approximate string matching (2002) International Journal of Foundation of Computer Science, 13 (1), pp. 53-66. , February; Beyer, D., Noack, A., Lewerentz, C., Simple and efficient relational querying of software structures (2003) proceedings of the 10th Working Conference on Reverse Engineering, pp. 216-225. , IEEE Computer Society Press, November; Biggerstaff, T.J., Mitbander, B.G., Webster, D.E., The concept assignment problem in program understanding (1993) proceedings of the 15 th International Conference on Software Engineering, pp. 482-498. , IEEE Computer Society Press, ACM Press, May; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) proceeding of 30th conference on Technology of Object-Oriented Languages and Systems, pp. 18-32. , IEEE Computer Society Press, August; Eiselt, H.A., Gendreau, M., Laporte, G., Arc routing problems, part I: The Chinese Postman problem (1994), Technical Report CRT-960, Centre de Recherche sur les Transports, MarchEppstein, D., Subgraph isomorphism in planar graphs and related problems (1995) proceedings of the 6th annual Symposium On Discrete Algorithms, pp. 632-640. , ACM Press, January; Gamma, E., Eggenschwiler, T., JHotDraw. Web site (1998), members.pingnet.ch/gamma/JHD-5.1.zipGamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Soflware, , Addison-Wesley, 1 st edition; Guéhéneuc, Y.-G., Ptidej: Promoting patterns with patterns (2005) proceedings of the 1st ECOOP workshop on Building a System using Patterns, , Springer-Verlag, July; Guéhéneuc, Y.-G., Albin-Amiot, H., Recovering binary class relationships: Putting icing on the UML cake (2004) proceedings of the 19 th conference on Object-Oriented Programming, Systems, Languages, and Applications, , ACM Press, October; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) proceedings of the 1st IJCAI workshop on Modeling and Solving Problems with Constraints, pp. 57-64. , AAAI Press, August; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) proceedings of the 11th Working Conference on Reverse Engineering, pp. 172-181. , IEEE Computer Society Press, November; Holub, J., Melichar, B., Implementation of nondeterministic finite automata for approximate pattern matching (1998) proceedings of the 3 rd international Workshop on Implementing Automata, pp. 92-99. , Springer-Verlag, September; Jahnke, J.H., Schäfer, W., Zündorf, A., Generic fuzzy reasoning nets as a basis for reverse engineering relational database applications (1997) proceedings of the 6th European Software Engineering Conference, pp. 193-210. , ACM Press, September; Jussien, N., (2001) e-Constraints: Explanation-based constraint programming. In 1st CP workshop on User-Interaction in Constraint Satisfaction, December; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse-engineering of design components (1999) proceedings of the 21 st International Conference on Software Engineering, pp. 226-235. , ACM Press, May; Koskinen, J., (2004) Software maintenance costs, , September, Web site; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in objectoriented software (1996) proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , IEEE Computer Society Press, November; Lientz, B.P., Swanson, E.B., Problems in application software maintenance (1981) Communications of the ACM, 24 (11), pp. 763-769. , November; Myers, G., A fast bit-vector algorithm for approximate string matching based on dynamic programming (1999) In journal of the ACM, 46 (3), pp. 395-415. , May; Quilici, A., Yang, Q., Woods, S., Applying plan recognition algorithms to program understanding (1997) In journal of Automated Software Engineering, 5 (3), pp. 347-372. , July; Scheglov, K., Shackelford, J.-M.P., (2004) Eclipse profiler, , September; Thimbleby, H.W., The directed chinese postman problem (2003) journal of Software - Practice and Experience, 33 (11), pp. 1081-1096. , September; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) proceedings of the 26th conference on the Technology of Object-Oriented Languages and Systems, pp. 112-124. , IEEE Computer Society Press, August","Kaczor, O.; GEODES, Department of Informatics and Operations Research, University of Montreal, QC, Canada; email: kaczorol@iro.umontreal.ca",,,,"10th European Conference on Software Maintenance and Reengineering, CSMR 2006",22 March 2006 through 24 March 2006,Bari,72393,15345351,769525369,9780769525365,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-46149096013,
,,4,"Huang, J., Wang, Y.",Formal specification and representation of design patterns using RTPA,2006,"Proceedings of the 5th IEEE International Conference on Cognitive Informatics, ICCI 2006",1,,4216436,370,379,,1,10.1109/COGINF.2006.365519,http://www.scopus.com/inward/record.url?eid=2-s2.0-78650039014&partnerID=40&md5=a2dfe8126e90195d48f3fc99ca71caeb,"Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, AB, T2N 1N4, Canada","Huang, J., Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, AB, T2N 1N4, Canada; Wang, Y., Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, AB, T2N 1N4, Canada","Software patterns are recognized as an ideal documentation of expert knowledge in software design and development. However, its formal model and rigorous semantics have never been generalized and matured. The traditional UML specification and some formal specification attempts cannot capture the essence of generic patterns precisely, understandably, and essentially. A generic model of patterns is presented in this paper using Real-Time Process Algebra (RTPA). The formal model of patterns are more readable and highly generic, which can be used as the meta model to denote any design patterns deductively, and can be translated into code in programming languages by supporting tools. This work reveals that a pattern is a highly complicated and dynamic structure of software design encapsulation, because of its complex and flexible internal associations between multiple abstract classes and instantiations. The generic model of patterns is not only applicable to existing patterns' description and comprehension, but also useful for future patterns' identification and formalization. © 2006 IEEE.",Cognitive informatics; Design patterns; Formal method; RTPA; Software engineering; Unified model of patterns,Abstract class; Cognitive informatics; Design patterns; Dynamic structure; Expert knowledge; Formal model; Formal Specification; Generic models; Generic patterns; Meta model; Programming language; Real-time process algebra; RTPA; Software design and development; Software patterns; Supporting tool; UML specifications; Unified model; Design; Information science; Semantics; Software design; Specifications; Formal methods,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, Reading, MA; Wang, Y., The real-time process algebra (RTPA) (2002) Annals of Software Engineering, 14, pp. 235-274; Vu, N.-C., Wang, Y., Specification of design patterns using real-time process algebra (RTPA) (2004) Proc. 2004 Canadian Conference on Electrical and Computer Engineering (CCECE'04), pp. 1545-1548. , IEEE CS Press, Niagara Falls, ON, Canada, May; Wang, Y., Jian, H., Formal models of object-oriented patterns using RTPA (2005) Proc. of 2005 Canadian Conference on Electrical and Computer Engineering (CCECE'05), pp. 1822-1825. , IEEE CS Press, Saskatoon, Canada, May 1-4; Bosch, J., Relations as object model components (1996) Journal of Programming Languages, 4; Kent, S., Lauder, A., Precise visual specification of design patterns (1998) Proceedings of ECCOP'98; Eden, A.H., Hirshfeld, Y., Principles in formal specification of object oriented design and architecture (2005) Technical Report of Dept of Computer Science, , Concordia University, Montreal, Canada; Eden, A.H., Gil, J., Hirshfeld, Y., Yehudai, A., Towareds a mathematical foundation for design patterns (2005) Technical Report of Dept of Computer Science, , Concordia University, Montreal, Canada; Rapicault, P., Fornarino, M., Instanciation et verification de patterns de conception (2000) Un Meta-Protocole. Proceedings of LMO, pp. 43-58. , in French; Pagel, B.-U., Winter, M., Towards pattern-based tools (1996) Proceedings of EuropLop; Sunye, G., Guennec, A.L., Jezequel, J.-M., Design patterns application in UML (2000) Proceedings of ECCOP; Florijn, G., Meijers, M., Van Wionsen, P., Tool support for object-oriented patterns (1997) Proceedings of ECCOP; Lano, K., Goldsack, S., Bicarregui, J., Formalising Design Patterns; Kim, D.-K., France, R., Ghosh, S., Song, E., A Role-Based Metamodeling Approach to Specifying Design Patterns, , Computer Science Department, Colorado State University, Fort Collins, CO 80523, USA; Montes, J.L.I., Vela, F.L.G., Structural Modeling of Design Patterns: REP Diagrams, , Departmento de Lenguajes y Sistemas Informaticos, University of Cadiz; Mapelsden, D., Hosking, J., Grundy, J., Design Pattern Modeling and Instantiation Using DPML, , Department of Computer Science, University of Auckland, Private Bag 92019 Auckland, New Zealand; Denver, R., Williams, E., Hughes, C.E., Orooji, A., A Mathematical Formalism for Specifying Design Patterns, , School of Electrical Engineering and Computer Science, University of Central Florida, Orlando, USA; Hoare, C.A.R., (1985) Communicating Sequential Processes, , Prentice-Hall Inc; (1997) Object Constraint Language Specification 1.1; Beck, K., Coplien, J.O., Crocker, R., Dominick, L., Industrial experience with design patterns (1996) Proc. 19th Intel. Conf. on Software Engineering, pp. 103-114. , Berlin, IEEE CS Press, March; Albin-Amiot, H., Gueheneuc, Y.-G., Design Patterns: A Round-Trip, , Ecole des Mines de Nantes, France; Mikkonen, T., Formalizing Design Pattern, , Software Systems Laboratory, Tampere University of Technology, Finland; Hedin, G., Language Support for Design Patterns Using Attribute Extension, , Computer Science Department, Aarhus University, Ny Munkegade, DK-8000 Aarhus C, Denmark; Buschmann, F., The MasterSlave pattern (1995) Pattern Languages of Program Design, , Addison-Wesley; Wang, Y., On the informatics laws and deductive semantics of software (2006) IEEE Transactions on Systems, Man, and Cybernetics (C), 36 (2), pp. 167-171; Wang, Y., On concept algebra and knowledge representation (2006) Proc. 5th IEEE International Conference on Cognitive Informatics (ICCI'06), , Beijing, China, IEEE CS Press, July; Tan, X., Wang, Y., Ngolah, C.F., Design and implementation of an automatic RTPA code generator (2006) Proc. 2006 Canadian Conference on Electrical and Computer Engineering (CCECE'06), pp. 1605-1608. , IEEE CS Press, Ottawa, Canada, May","Huang, J.; Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, AB, T2N 1N4, Canada; email: huanj@ucalgary.ca",,IEEE Computer Society;The IEEE ICCI Steering Committee;Chinese Academy of Sciences;IEEE Canada;IEEE CS Press,,"5th IEEE International Conference on Cognitive Informatics, ICCI 2006",17 July 2006 through 19 July 2006,Beijing,82522,,,,,English,"Proc. IEEE Int. Conf. Cognitive Inf., ICCI",Conference Paper,Scopus,2-s2.0-78650039014,,
,,v,"Briand, L.C., Labiche, Y., Sauvé, A.",Guiding the application of design patterns based on UML models,2006,"IEEE International Conference on Software Maintenance, ICSM",,,4021342,234,243,,3,10.1109/ICSM.2006.30,http://www.scopus.com/inward/record.url?eid=2-s2.0-34547332900&partnerID=40&md5=a4c887e64b32375d9d2cc0f316d0cc10,"Software Quality Engineering Laboratory, Carleton University, 1125 Colonel By Drive, Ont. K1S5B6, Canada","Briand, L.C., Software Quality Engineering Laboratory, Carleton University, 1125 Colonel By Drive, Ont. K1S5B6, Canada; Labiche, Y., Software Quality Engineering Laboratory, Carleton University, 1125 Colonel By Drive, Ont. K1S5B6, Canada; Sauvé, A., Software Quality Engineering Laboratory, Carleton University, 1125 Colonel By Drive, Ont. K1S5B6, Canada","Software design patterns are documented best practice solutions that can be applied to recurring problems. Although well documented, there are often opportunities to apply them which are overlooked by software designers. This can be the result of inexperience, the sheer complexity of the system, or the fact that design patterns do not always constitute intuitive designs. In this paper, we present a structured methodology for semi-automating the detection of areas within a UML design of a software system that are good candidates for the use of design patterns. This is achieved by the definition of detection rules formalized using the OCL and using a decision tree model. The approach is illustrated on an example GoF Design Pattern. A prototype tool was developed to show the feasibility of the approach in practical situations, and is used on a case study, producing encouraging results. © 2006 IEEE.",,Computational complexity; Data structures; Logic programming; Problem solving; Software engineering; Design patterns; Intuitive designs; Prototype tools; Sheer complexity; Markup languages,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and Detecting Design Patterns: Putting Bits and Pieces Together (2001) Proc. IEEE International Conference on Automated Software Engineering, pp. 166-173; Borland, (2003) Together, , www.borland.com/together; Briand, L.C., Labiche, Y., Cui, J., Automated Support for Deriving Test Requirements from UML Statecharts (2005) Journal of Software and Systems Modeling, 4 (4), pp. 399-423; Briand, L.C., Labiche, Y., Sauvé, A., (2006) Guiding the Application of Design Patterns Based on UML Models, , Carleton University, Technical Report SCE-06-04, March; Coplien, J., Software Design Patterns: Common Questions and Answers (1998) The patterns handbooks: Techniques, strategies, and applications, pp. 311-319. , L. Rising, Ed, Cambridge University Press, pp; (2005) Eclipse Modeling Framework, , www.eclipse.org/emf, Eclipse Foundation, Last accessed May; UML2: EMF-Based UML 2.0 Metamodel Implementation, , www.eclipse.org/uml2, Eclipse Foundation, Last accessed May 2005; Eden, A.H., Yehudai, A., Gil, J., Precise Specification and Automatic Application of Design Patterns (1997) Proc. IEEE International Conference on Automated Software Engineering, pp. 143-152; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; Guéhéneuc, Y.-G., Albin-Amiot, H., Using Design Patterns and Constraints to Automate the Detection and Correction of Inter-class Design Defects (2001) Proc. International Conference and Exhibition on Technology of Object-Oriented Languages and Systems, p. 296; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proc. Working Conference on Reverse Engineering, pp. 172-181; (2005) Model Transformation Framework, , www.alphaworks.ibm.com/ tech/mtf, IBM-Rational, Last accessed May; (2005) Rational Software Architect, , www-306-ibm.com/ software/awdtools/architect/swarchitect, IBM-Rational; Kaczorol, O., Guéhéneuc, Y.-G., Hamel, S., Efficient Identification of Design Patterns with Bit-vector Algorithm (2006) Proc. (to appear) IEEE European Conference on Software Maintenance and Reengineering; Khriss, I., Keller, R.K., Hamid, I.A., Supporting Design by Pattern-based Transformations (1999) Proc. International Workshop on Strategic Knowledge and Concept Formation, pp. 157-167; Kuchana, P., (2004) Software Architecture Design Patterns in Java, , Auerbach; Muraki, T., Saeki, M., Metrics for Applying GoF Design Patterns in Refactoring Processes (2001) Proc. ACM SIGSOFT International Workshop on Principles of Software Evolution, pp. 27-36; Ó Cinnéide M. and Nixon P., Automated Software Evolution Towards Design Patterns, Proc. ACMSIGSOFT International Workshop on Principles of Software Evolution, pp. 162-165, 2001OCL 2.0 Specification (2003) Object Management Group, Final Adopted Specification ptc/03-10-14, , OMG; UML 2.0 Superstructure Specification (2003) Object Management Group, Final Adopted Specification ptc/03-08-02, , OMG; Roberts, D., Brant, J., Johnson, R., A Refactoring Tool for Smalltalk (1997) Theory and Practice of Object Systems, 3 (4), pp. 253-263; Tokuda, L., Batory, D., Evolving object-oriented designs with refactorings (2001) Journal of Automated Software Engineering, 8 (1), pp. 89-120","Briand, L.C.; Software Quality Engineering Laboratory, Carleton University, 1125 Colonel By Drive, Ont. K1S5B6, Canada; email: briand@sce.carleton.ca",,,,ICSM 2006: 22nd IEEE International Conference on Software Maintenance,24 September 2006 through 27 September 2006,"Philadelphia, PA",69975,,769523544,9780769523545,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-34547332900,
,,1,"Lason, M., Szturc, R.",Design patterns for role-based access control,2006,CEUR Workshop Proceedings,180,,,49,56,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84883804294&partnerID=40&md5=c8927f201833c06d7cb5a42ca1481ee9,"Department of Computer Science, FEI, VSB-TU Ostrava, 17. listopadu 15, 708 33 Ostrava-Poruba, Czech Republic","Lason, M., Department of Computer Science, FEI, VSB-TU Ostrava, 17. listopadu 15, 708 33 Ostrava-Poruba, Czech Republic; Szturc, R., Department of Computer Science, FEI, VSB-TU Ostrava, 17. listopadu 15, 708 33 Ostrava-Poruba, Czech Republic",The correct specification of user's permissions and their association to roles are significant assumptions of effective security management. This paper is aimed at early stage of roles definition process when first users' roles and privileges are defined. The paper introduces several schemes that could help security administrators to identify roles and their privileges. These schemes should be treated as design patterns in software development.,Design patterns; RBAC; Security,Design Patterns; RBAC; Role-based Access Control; Security; Security administrator; Security management; Information systems,,,,,,"Basin, D., Doser, J., Lodderstedt, T., Model driven security for process-oriented systems (2003) Proceedings of the Eighth ACM Symposium on Access Control Models and Technologies, pp. 100-109. , ACM Press, New York, USA ISBN:1-58113-681-1; Bacon, J., Moody, K., Yao, W., A model of OASIS role-based access control and its support for active security (2002) ACM Transactions on Information and System Security (TISSEC), pp. 492-540. , ACM Press, New York, USA ISSN: 1094-9224; Ferraiolo, D.F., Kuhn, D.R., Chandramouli, R., (2003) Role-Based Access Control, , Artech House Publishers Boston. ISBN 1-58053-370-1; Ferraiolo, D.F., Sandhu, R., Gavrila, S., Kuhn, D.R., Chandramouli, R., (2001) A Proposed Standard for Role Based Access Control, , http://csrc.nist.gov/rbac/rbacSTD-ACM.pdf, Aug [cited 23 Jan 2006]; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley Publishing Co. ISBN: 0201633612; Giuri, L., Iglio, P., Role templates for content-based access control (1997) Proceedings of the Second ACM Workshop on Role-based Access Control, pp. 153-159. , ACM Press, New York, USA; (2005) Web Service Security - Scenarios, Patterns, and Implementation Guidance for Web Services Enhancements (WSE) 3.0, , http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/ html/wssp.asp, Dec [cited 23 Jan 2006]; (2005) Single Sign-On, , http://www.opengroup.org/security/sso/, [cited 1 Feb 2006]","Department of Computer Science, FEI, VSB-TU Ostrava, 17. listopadu 15, 708 33 Ostrava-Poruba, Czech Republic",,,,"9th International Conference on Information Systems Implementation and Modelling, ISIM 2006",25 April 2006 through 27 April 2006,Prerov,99355,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84883804294,,
,,1,"Brophy, S., Velankar, Y.",Work in progress: Cataloging instructional design patterns that facilitate generative learning,2006,"Proceedings - Frontiers in Education Conference, FIE",,,4117093,,,,,10.1109/FIE.2006.322613,http://www.scopus.com/inward/record.url?eid=2-s2.0-48749108680&partnerID=40&md5=747a0863b3eea10ff879a6dc632e6118,"Department of Engineering Education, Purdue University, West Lafayette, United States","Brophy, S., Department of Engineering Education, Purdue University, West Lafayette, United States; Velankar, Y., Department of Engineering Education, Purdue University, West Lafayette, United States","Our project evaluates the general structure of ""anchored inquiry"", or inductive, instructional models and the learning activities associated with the instructional sequences used in undergraduate engineering courses. We are generalizing these learning activities into design patterns that can be associated with specific learning outcomes and based on theories of knowing and learning. Our assumption is that authors of instruction (and instructors) can learn to develop effective learning environments by using these patterns when supported by relevant examples illustrating the intent of the patterns. This paper describes our initial assumptions and criteria for identifying design principles and learning activities that exemplify these principles in engineering education. © 2006 IEEE.",,Models; Design patterns; Design principles; Effective learning; General structure; Generative learning; Instructional designs; Instructional models; Learning activities; Specific learning; Undergraduate engineering courses; Work-in-progress (WIP); Education,,,,,,"Bjorklund, S.A., Fortenberry, N.L., Linking Student Learning Outcomes to Instructional Practices - Phase III (2005) Proceedings of the 2005 American Society for Engineering Education Annual Conference and Exposition; J. D Bransford,., A. L., Brown, R. R & Cocking,. (Eds.). How people learn: Brain, mind, experience, and school. Washington, DC: National Academy Press, 1999Bransford, J.D., Vye, N., Bateman, H., Brophy, S.P., Roselli, R., Vanderbilt's AMIGO Project: Knowledge of how people learn enters cyberspace (2005) Learner Centered Theory and Practice in Distance Education, , T. M. Duffy and J. R. Kirkley, Lawrence Erlbaum, Mahwah: New Jersey; Brown, A.L., Campione, J.C., Psychological Theory and the Design of Innovative Learning Environments: On Procedures, Principles and Systems (1996) Innovations in Learning: New Environments for Education, , edited by L. Schauble and R. Glaser. Hillsdale, NJ: Lawrence Earlbaum Associates; How People Learn: Brain, Mind, Experience, and School (2000) Committee on Developments in the Science of Learning with additional material from the Committee on Learning Research and Educational Practice, , Donovan, M. Suzanne, John D. Bransford, and James W. Pellegrino, eds, Expanded Edition, National Academy Press Washington, DC; Howard, L., Adaptive learning technologies for bioengineering education (2003) Engineering in Medicine and Biology Magazine, 22 (4), pp. 58-65; Kali, Y., Spitulnik, M., Linn, M., Building community using the Design Principles Database (2004) Instructional design for effective and enjoyable computer- supported learning. Proceedings of the first joint meeting of the EARLI SIGs Instructional Design and Learning and Instruction with Computers, pp. 294-305. , Gerjets, P, Kirschner, P. A, Elen, J. & Joiner, R, Eds, Tuebingen: Knowledge Media Research Center. pp; McLaughlin, M., The Rand Change Agent Study Revisited: Macro Perspectives and Micro Realities (1990) Educational Researcher, 19 (9), pp. 11-16; Merrill, M.D., First principles of instruction (2002) Educational Technology Research and Development, 50 (3), pp. 43-59; Prince, M.J., Felder, R.M., Inductive teaching and learning methods: Definitions, comparisons, and research bases (2006) Journal of Engineering Education, 95 (2), pp. 123-138; Shulman, L.S., Those who understand: Knowledge growth in teaching (1986) Educational Researcher, 15 (2), pp. 4-14; Sternberg, R.J., Principles of teaching for successful intelligence (1998) Educational Psychologist, 33 (2-3), pp. 65-72","Brophy, S.; Department of Engineering Education, Purdue University, West Lafayette, United States; email: sbrophy@purdue.edu",,American Society for Engineering Education (ASEE);Educational Research and Methods (ERM) Division;Institute of Electrical and Electronics Engineers (IEEE);IEEE Computer Society;IEEE Education Society,,"36th ASEE/IEEE Frontiers in Education Conference, FIE",28 October 2006 through 31 October 2006,"San Diego, CA",72982,15394565,1424402565,9781424402564,PFECD,,English,Proc. Front. Educ. Conf. FIE,Conference Paper,Scopus,2-s2.0-48749108680,
,,v,"Arcelli, F., Raibulet, C., Guéhéneuc, Y.-G., Antoniol, G., McC Smith, J.",Workshop on design pattern detection for reverse engineering - DPD4RE 2006,2006,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,4024011,316,,,1,10.1109/WCRE.2006.23,http://www.scopus.com/inward/record.url?eid=2-s2.0-34548104642&partnerID=40&md5=47225c876ef00b5c10d38db35796784d,"Univ. Milano-Bicocca, DISCo; Univ. of Montréal, Canada; Polytechnique de Montréal, Canada; IBM Watson Research, Yorktown Heights, NY, United States","Arcelli, F., Univ. Milano-Bicocca, DISCo; Raibulet, C., Univ. Milano-Bicocca, DISCo; Guéhéneuc, Y.-G., Univ. of Montréal, Canada; Antoniol, G., Polytechnique de Montréal, Canada; McC Smith, J., IBM Watson Research, Yorktown Heights, NY, United States",The main goal of the workshop is to address the issues related to design patterns identification for design recovery focusing on the role of the reverse engineering in identifying the sub-elements of the design patterns that can improve their detection. © 2006 IEEE.,,Identification (control systems); Reverse engineering; Design patterns; Sub-elements; Pattern recognition,,,,,,"Chikofsky, E.J., Cross, J.H., Reverse Engineering and Design Recovery: A Taxonomy (1990) IEEE Software, 7 (1), pp. 13-17","Arcelli, F.; Univ. Milano-Bicocca, DISCoemail: arcelli@disco.unimib.it",,,,"13th Working Conference on Reverse Engineering, WCRE 2006",23 October 2006 through 27 October 2006,Benevento,70335,10951350,769527191,9780769527192,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-34548104642,
,,4,"Hallstrom, J.O., Dalton, A.R., Soundarajan, N.",Parallel monitoring of design pattern contracts,2006,"18th International Conference on Software Engineering and Knowledge Engineering, SEKE 2006",,,,236,241,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84866097381&partnerID=40&md5=b6d29fc98403f4c688f0b85dd5d4a267,"Clemson University, United States; Ohio State University, United States","Hallstrom, J.O., Clemson University, United States; Dalton, A.R., Clemson University, United States; Soundarajan, N., Ohio State University, United States","Design patterns are widely accepted as elements of best practice We have previously shown that these benefits can be amplified by supplementing informal pattern descriptions with precise pattern contracts, and monitoring tools that identify runtime contract violations In this paper, we present a parallel approach to monitoring pattern contracts that reduces the performance impact of runtime monitoring We evaluate the performance of the approach relative to its sequential counterpart, and draw conclusions concerning its applicability to a range of systems.",,Best practices; Contract violation; Design Patterns; Monitoring patterns; Monitoring tools; Pattern description; Performance impact; Runtime Monitoring; Knowledge engineering; Software engineering,,,,,,"Burdy, L., An overview of JML tools and applications (2005) Software Tools for Technology Transfer; Buschmann, F., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley &Sons; Dong, J., UML extensions for design pattern compositions (2002) Journal of Object Technology, 1 (5), pp. 151-163. , November-December; Eden, A.H., (2000) Precise Specification of Design Patterns and Tool Support in Their Application, , PhD thesis, Tel Aviv University; Edwards, S.H., A framework for practical, automated black-box testing of component-based software (2001) Software Testing, Verification, and Reliability, 11 (2), pp. 97-111; Edwards, S.H., A framework for detecting interface violations in component-based software (1998) The 5th International Conference on Software Reuse, pp. 46-55. , June; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Gibbs, T.H., Malloy, B.A., Weaving aspects into C++ applications for validation of temporal invariants (2003) The 7th European Conference on Software Maint and Reeng., pp. 249-258. , March; Hallstrom, J.O., Amplifying the bene ts of design patterns: From speci cation through implementation (2006) Foundational Approaches to Software Engineering, pp. 214-229. , March; Hannemann, J., Kiczales, G., Design pattern implementation in Java and AspectJ (2002) The 17th ACM OOPSLA Conference, pp. 161-173. , November; Hirschfeld, R., Design patterns and aspects-modular designs with seamless run-time integration (2003) The 3rd German GIWorkshop on Aspect-Oriented Software Development, , March; Kiczales, G., An overview of AspectJ (2001) The 15th ECOOP, pp. 327-353; Lippert, M., Lopes, C.V., A study on exception detection and handling using aspect-oriented programming (2000) The 22nd International Conference on Software Engineering, pp. 418-427; Meyer, B., (1988) OO Software Construction, , Prentice Hall; Mikkonen, T., Formalizing design patterns (1998) The 20thth International Conference on Software Engineering, pp. 115-124; Noda, N., Kishi, T., Implementing design patterns using advanced separation of concerns (2001) The OOPSLA Workshop on Advanced Separation of Concerns in Object-Oriented Systems, , October; Rosenblum, D.S., A practical approach to programming with assertions (1995) IEEE Trans on Software Engineering, 21 (1), pp. 19-31; Schmidt, D.C., (2000) Pattern-Oriented Software Architecture: Patterns for Concurrent and Networked Objects, , John Wiley &Sons; Soundarajan, N., Hallstrom, J.O., Responsibilities and rewards: Specifying design patterns (2004) The 26th International Conference on Software Engineering, pp. 666-675. , May; http://java.sun.com/j2se/1.5.0/docs/api/index.html, Sun Microsystems, Inc Java 2 platform SE 5.0 API speci cation., 2004Taibi, T., Ngo, D.C.L., Formal speci cation of design patterns-A balanced approach (2003) Journal of Object Tech., 2 (4), pp. 127-140; Tyler, B., Automated generation of monitors for pattern contracts (2006) The 21st ACM SAC Conference, , Apri (to appear); Vlissides, J., (1998) Notation, Notation, Notation C++ Report, , April",Clemson UniversityUnited States,,,,"18th International Conference on Software Engineering and Knowledge Engineering, SEKE 2006",5 July 2006 through 7 July 2006,"San Francisco Bay, CA",100111,,9781627486606,,,English,"Int. Conf. Softw. Eng. Knowl. Eng., SEKE",Conference Paper,Scopus,2-s2.0-84866097381,,
,,v,"Wendehals, L., Orso, A.",Recognizing behavioral patterns at runtime using finite automata,2006,Proceedings - International Conference on Software Engineering,,,,33,39,,4,10.1145/1138912.1138920,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953563412&partnerID=40&md5=035a97a4e0d72ec62a44bab35a80ea1f,"Software Engineering Group, Department of Computer Science, University of Paderborn, Germany; SPARC Group, College of Computing, Georgia Institute of Technology, United States","Wendehals, L., Software Engineering Group, Department of Computer Science, University of Paderborn, Germany; Orso, A., SPARC Group, College of Computing, Georgia Institute of Technology, United States","During reverse engineering, developers often need to understand the undocumented design of a software. In particular, recognizing design patterns in the software can provide reverse engineers with considerable insight on the software structure and its internal characteristics. Researchers have therefore proposed techniques based on static analysis to automatically recover design patterns in a program. Unfortunately, most design patterns comprise not only structural, but also significant behavioral aspects. Although static analysis is well suited for the recognition of structural aspects, it is typically limited and imprecise in analyzing behavior. To address this limitation, we present a new technique that complements our existing static analysis with a dynamic analysis, so as to perform a more accurate design-pattern recognition. The dynamic analysis is based on (1) transforming behavioral aspects of design patterns into finite automata, (2) identifying and instrumenting relevant method calls, and (3) monitoring relevant calls at runtime and matching them against the automata. The results of the dynamic analysis are then used to compute the likelihood of a pattern to be in the code. This paper describes our technique and presents a preliminary empirical study performed to assess the technique. Copyright 2006 ACM.",design pattern recognition; finite automata; static and dynamic analysis; tracing,Accurate design; Behavioral patterns; design pattern recognition; Design Patterns; Empirical studies; Internal characteristics; Reverse engineers; Runtimes; Software structures; Static and dynamic analysis; Structural aspects; Automata theory; Computer software; Electric load shedding; Pattern recognition; Reengineering; Reverse engineering; Robots; Static analysis; Translation (languages); Dynamic analysis,,,,,,"Antoniol, G., Fiutem, R., Christoforetti, L., Design Pattern Recovery in Object-Oriented Software (1998) Proc. of the 6th International Workshop on Program Comprehension, pp. 153-160. , IEEE Computer Society Press, June; Bowring, J., Orso, A., Harrold, M.J., Monitoring Deployed Software Using Software Tomography (2002) Proc. of the 2002 Workshop on Program Analysis for Software Tools and Engineering (PASTE), pp. 2-9. , Charleston, SC, USA, November ACM Press; Brown, K., (1996) Design Reverse-Engineering and Automated Design Pattern Detection in Smalltalk, , Master's thesis, North Carolina State University, June; http://www.eclipse.org, Eclipse Foundation Online at Last visited: January 2006Gamma, E., Beck, K., (2003) Contributing to Eclipse: Principles, Patterns, and Plug-Ins, , Addison-Wesley, Boston, MA, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, Reading, MA, USA; Heuzeroth, D., Mandel, S., Löwe, W., Generating Design Pattern Detectors from Pattern Specifications (2003) Proc. of the 18th IEEE International Conference on Automated Software Engineering, pp. 245-248. , Montreal, Quebec, Canada, October IEEE Computer Society Press; Krämer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proc. of the 3rd Working Conference on Reverse Engineering (WCRE), pp. 208-215. , Monterey, CA, USA, November IEEE Computer Society Press; Meyer, M., Wendehals, L., Selective Tracing for Dynamic Analyses (2005) Proc. of the 1st Workshop on Program Comprehension Through Dynamic Analysis (PCODA) at 12th WCRE, Pittsburgh, PA, USA, 2005 (12), pp. 33-37. , of Technical Report, Universiteit Antwerpen, Belgium, November; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards Pattern-Based Design Recovery (2002) Proc. of the 24th International Conference on Software Engineering (ICSE), Orlando, FL, USA, pp. 338-348. , ACM Press, May; Seesing, A., Orso, A., InsECTJ: A Generic Instrumentation Framework for Collecting Dynamic Information within Eclipse (2005) Proceedings of the Eclipse Technology EXchange (ETX) Workshop at OOPSLA 2005, pp. 49-53. , San Diego, CA, USA, October; http://www.fujaba.de/, University of Paderborn, Germany Online atVigna, G., Kemmerer, R.A., NetSTAT: A Network-based Intrusion Detection Approach Proc. of the 14th Annual Computer Security Application Conference, Scottsdale, AZ, USA, December 1998, , IEEE Computer Society Press; Wendehals, L., Improving Design Pattern Instance Recognition by Dynamic Analysis (2003) Proc. of the ICSE 2003 Workshop on Dynamic Analysis (WODA), Portland, OR, USA, pp. 29-32. , May; Wendehals, L., Specifying Patterns for Dynamic Pattern Instance Recognition with UML 2.0 Sequence Diagrams (2004) Proc. of the 6th Workshop Software Reengineering, Bad Honnef, Germany, Softwaretechnik-Trends, 24 (2), pp. 63-64. , May","Wendehals, L.; Software Engineering Group, Department of Computer Science, University of PaderbornGermany; email: lowende@uni-paderborn.de",,"Assoc. Comput. Mach., Spec. Interest;Group Softw. Eng. (ACM SIGSOFT)",,"4th International Workshop on Dynamic Analysis, WODA'06, Co-located with the 28th International Conference on Software Engineering, ICSE 2006",20 May 2006 through 28 May 2006,Shanghai,80598,2705257,1595934006,9781595934000,PCSED,,English,Proc Int Conf Software Eng,Conference Paper,Scopus,2-s2.0-77953563412,
,,4,"Grolimund, D., Müller, P.",A pattern language for overlay networks in peer-to-peer systems,2006,EuroPLoP 2006 - 11th European Conference on Pattern Languages of Programs,,,,95,140,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84871431758&partnerID=40&md5=e55e7a6f199a373a64c20fe1e182abec,"Department of Computer Science, ETH, Zurich, Switzerland","Grolimund, D., Department of Computer Science, ETH, Zurich, Switzerland; Müller, P., Department of Computer Science, ETH, Zurich, Switzerland","Peer-to-peer systems typically operate in large-scale, highly unreliable and insecure environments. Tackling this complexity requires good software design. Yet, many peer-to-peer systems are developed in an ad-hoc manner, and little has been published about their software architecture. We studied various academic and open source peer-to-peer systems and identified design patterns for the overlay network, the key architectural component of a peer-to-peer system. In this paper, we present a pattern language for overlay networks, consisting of new patterns as well as adaptations of existing patterns. This language proved highly useful for the development of our own peer-to-peer system.",,Architectural components; Design Patterns; Open sources; Pattern languages; Peer-to-Peer system; Overlay networks; Software design; Open systems,,,,,,"Aberer, K., Hauswirth, M., An overview on peer-to-peer information systems (2002) Workshop on Distributed Data and Structures, , Paris, France; Milojicic, D.S., Kalogeraki, V., Nagaraja, K., Pruyne, J., Richard, B., Rollins, S., Xu, Z., Peer-to-peer computing (2002) HP White Paper, , March; Oram, A., (2001) Peer-to-Peer: Harnessing the Power of Disruptive Technololgies, , O'Reilly, February; Stoica, I., Morris, R., Karger, D., Kaashoek, M.F., Balakrishnan, H., Chord: A scalable peer-to-peer lookup service for internet applications (2001) Technical Report TR-819, MIT; Druschel, P., Rowstron, A., Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems (2001) Proceedings of the 18 IFIP/ACM International Conference on Distributed Systems Platforms; Zhao, B.Y., Huang, L., Stribling, J., Rhea, S.C., Joseph, A.D., Kubiatowicz, J., Tapestry: A resilient global-scale overlay for service deployment (2003) IEEE Journal on Selected Areas in Communications; Maymounkov, P., Mazieres, D., Kademlia: A peer-to-peer information system based on the XOR metric (2002) Proceedings of IPTPS02, , Cambridge, USA, March; Ratnasamy, S., Francis, P., Handley, M., Karp, R., Shenker, S., A scalable content- Addressable network (2001) Proc. ACM SIGCOMM; Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., (2000) Pattern-Oriented Software Architecture, 2. , New York: John Wiley; Project JXTA, , http://www.jxta.org; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Rising, L., Pattern mining (1997) CRC Handbook of Object Technology, , http://members.cox.net/risingl1/articles/mining.htm, found at; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language - Towns-Buildings-Constructions, , Oxford University Press; Alexander, C., The Timeless Way of Building, , Oxford University Press. New York; FreePastry, , http://freepastry.rice.edu/FreePastry; Tapestry, , http://www.cs.ucsb.edu/~ravenben/tapestry; Bamboo, , http://bamboo-dht.org; P-Grid, , http://www.p-grid.org; A Viceroy Implementation, , http://www.ece.cmu.edu/~atalmy/viceroy; LimeWire, , http://www.limewire.org; JMule, , http://jmule.sourceforge.net; Dijjer, , http://dijjer.org; OogP2P, , http://www.duke.edu/~cmz/p2p; GISP, , http://gisp.jxta.org; Azureus, , http://azureus.sourceforge.net; JTorrent, , http://sourceforge.net/projects/jtorrent; Meteor, , http://meteor.jxta.org; Shirky, C., (2000) What Is P2P...And What Isn't?, , http://www.openp2p.com/pub/a/p2p/2000/11/24/shirky1-whatisp2p.html, November; Skype, , http://www.skype.com; Jabber, , http://www.jabber.org; Gnutella, , http://www.gnutella.org; Ritter, J., Why gnutella can't scale (2001) No, Really, , http://www.darkridge.com/~jpr5/doc/gnutella.html, February; EMule, , http://www.emule.org; Dabek, F., Kaashoek, M., Karger, D., Morris, R., Stoica, I., Wide-area cooperative storage with CFS (2001) Proc. 18th ACM Symposium on Operating Systems Principles; Druschel, P., Rowstron, A., PAST: A large-scale, persistent peer-to-peer storage utility (2001) HotOS, 8. , Schoss Elmau, Germany, May; Kubiatowicz, J., OceanStore: An architecture for global-scale persistent storage (2000) ASPLOS; Chord, , http://pdos.csail.mit.edu/chord; Bunshin, , http://ants.etse.urv.es/bunshin/index.html; OpenDHT, , http://www.opendht.org; Chtcherbina, E., Völter, M., (2002) P2P Patterns - Results from the EuroPLoP 2002 Focus Group, , http://www.voelter.de/data/pub/P2PSystems.pdf, December; Dabek, F., Zhao, B., Druschel, P., Kubiatowicz, J., Stoica, I., Towards a common API for structured P2P overlays (2003) IPTPS'03, , Berkeley, CA, February; Rowstron, A., Kermarrec, A.-M., Castro, M., Druschel, P., Scribe: The design of a large-scale event notification infrastructure (2001) NGC2001, , UCL, London, November; Lieberherr, J., Wang, J., Zhang, G., Programming overlay networks with overlay sockets (2003) NGC 2003 Proceeding, , Munich, Germany, September; Lea, D., (2000) Concurrent Programming in Java: Design Principles and Patterns, , Second Edition, Addison-Wesley; Hohpe, G., Woolf, B., (2004) Enterprise Integration Patterns, , Addison-Wesley, October; Grolimund, D., Design patterns in peer-to-peer systems. A pattern language for overlay networks Technical Report 503. ETH Zurich; HyperCast, , http://www.cs.virginia.edu/~mngroup/hypercast; Marker Interface Pattern, , http://en.wikipedia.org/wiki/Marker_interface_pattern","Grolimund, D.; Department of Computer Science, ETH, Zurich, Switzerland; email: dg@caleido.com",,Schlumberger;dpunkt.verlag;Siemens;Wiley,,"11th European Conference on Pattern Languages of Programs, EuroPLoP 2006",5 July 2006 through 9 July 2006,Irsee,94513,,9783879408139,,,English,EuroPLoP - Eur. Conf. Pattern Lang. Programs,Conference Paper,Scopus,2-s2.0-84871431758,,
,,1,"Zhang, L., Mathew, A., Zhang, S., Lin, M.",Implementation of asset health assessment system with pattern-oriented design and practice,2006,IEEE Intelligent Systems,,,4155506,666,671,,2,10.1109/IS.2006.348499,http://www.scopus.com/inward/record.url?eid=2-s2.0-46249112711&partnerID=40&md5=b057655594d1501d577027210de22be3,"Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of Technology, Australia","Zhang, L., Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of Technology, Australia; Mathew, A., Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of Technology, Australia; Zhang, S., Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of Technology, Australia; Lin, M., Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of Technology, Australia","To integrate condition monitoring and reliability analysis with asset life-cycle management, a general-purpose asset health assessment system architecture is being developed. This system will assist management and maintenance staff to make decisions based on condition and reliability data, scientific analysis, and integrated information thereby reducing the asset management cost for enterprises. In this paper, a pattern-oriented software architecture design is presented. The functionality of the system is examined and some issues are identified. In particular, the paper elaborates on how design patterns are applied in the implementation of the different tiers in the system. It also presents a discussion detailing the system architecture that facilitates extensibility, flexibility, and robustness of the software system. To simplify the implementation of design patterns, various methodologies based on the in-built features of Microsoft .NET framework are applied. © 2006 IEEE.",Asset management; Condition monitoring; Decision support; Design pattern,"Asset management; Computer software; Computer software maintenance; Condition monitoring; Information management; Intelligent control; Intelligent systems; Life cycle; Management; Quality assurance; Reliability; Reliability analysis; Software architecture; Software design; (I ,J) conditions; Applied (CO); Asset life; design patterns; General (CO); Health assessments; Integrated information (II); International (CO); Maintenance staffs; Microsoft .NET; Pattern oriented design (POD); Reliability data; Scientific analysis; software architecture design; Software systems; System architectures; Architectural design",,,,,,"Mathew, A., Zhang, S., Ma, L., Earle, T., Hargreaves, D., Reducing maintenance cost through effective prediction analysis and process integration (2004) Proceedings of the VETOMAC-3 & ACSIM-2004, pp. 604-611; Pudney, S., Ma, L., Mathew, J., Sun, Y., A high level asset management, process model for the water utility industry (2004) Proceeding of VETOMAC-3 & ACSIM-2004, pp. 767-774; Sun, Y., Ma, L., Mathew, J., Zhang, S., Determination of preventive maintenance lead time using hybrid analysis (2005) International Journal of Plant Engineering and Management, 10 (1); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Nelson, M., A design pattern for autonomous vehicle software control architectures (1999) Proceeding of COMPSAC, pp. 172-177. , 99; G. Naumovich Using the Observer Design Pattern for Implementation of Data Flow Analyses, Proceedings of ASTE '02: pp61-68, November 18-19, Charleston, SC, USA, 2002S. Yau, N. Dong Integration in component-based software development using design patterns, Proceeding of Computer Software and Applications Conference: 369-374, 2000Astrom, P., Johansson, S., Nilsson, P., Application of software design patterns to DSP library design (2001) Proceedings of ZSSS'OZ, pp. 239-243. , October 1-3, Montreal, Quebec; Liberty, J., (2003) Programing C, , O'Reilly; Hayden, D., Data access application block revealed - factory methods and reflection, , http://codebetter.com/blogs/david.hayden/archive/2005/03/11/59644.aspx; Wilson, B., Using Reflection for the Visitor Pattern, , http://www.dotnetdevs.com/articles/ReflectionVisitor.aspx","Zhang, L.; Cooperative Research Centre for Integrated Engineering Asset Management, Queensland University of TechnologyAustralia; email: l4.zhang@qut.edu.au",,,,"2006 3rd International IEEE Conference Intelligent Systems, IS'06",4 September 2006 through 6 September 2006,London,72382,15411672,1424401968,9781424401963,,,English,IEEE Intell. Syst.,Conference Paper,Scopus,2-s2.0-46249112711,
,,4,"Tyler, B., Hallstrom, J.O., Soundarajan, N.",A comparative study of monitoring tools for pattern-centric behavior,2006,"Proceedings of the 30th Annual IEEE/NASA Software Engineering Workshop, SEW-30",,,4090243,37,46,,,10.1109/SEW.2006.5,http://www.scopus.com/inward/record.url?eid=2-s2.0-46449113034&partnerID=40&md5=c2ed34373ab25c987208d0d49fb2694f,"Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; Computer Science, Clemson University, Clemson, SC 29634, United States","Tyler, B., Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; Hallstrom, J.O., Computer Science, Clemson University, Clemson, SC 29634, United States; Soundarajan, N., Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States","The benefits of design patterns in the design phase are well-established. We claim that patterns can -and should-play equally important roles in later stages of the lifecycle. But to make this feasible, we need to develop suitable ways to precisely specify the requirements associated with the use of specific patterns, and runtime monitoring tools to identify any violations of these requirements. We summarize a specification and monitoring approach focused on pattern-centric behavior that we developed previously, evaluate alternative ways to monitor systems based on the formalism, and discuss the overall utility of the specification and monitoring approach in the context of a case study. © 2006 IEEE.",,Software engineering; case studies; comparative studies; design patterns; Design phase; Life Cycle (LC); Monitor (CO); Monitoring approach; Monitoring tools; Run-time monitoring; Monitoring,,,,,,"F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal. Pattern-oriented software architecture: A system of patterns. Wiley, 1996Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable OO Software, , Addison-Wesley; Hallstrom, J., Soundarajan, N., Tyler, B., Amplifying the benifits of design patterns (2006) Proc. of Fund. Approaches to Softw. Eng. (FASE), pp. 114-129. , J. Aagedal and L. Baresi, editors, Springer; M. Karaorman, U. Holzle, and J. Bruno, jcontractor: A reflective java library. In Reflection '99: Proc. of 2nd Int. Conf. on Meta-Level Arch, and Reflection, pages 175-196. Springer, 1999Kiczales, G., Hilsdale, E., Hugunin, J., Kersten, M., Palm, J., Griswold, W., An overview of aspectj (2001) Proc. 15th ECOOP, pp. 327-353. , Springer; Leavens, G., Poll, E., Clifton, C., Cheon, Y., Ruby, C., Jml reference manual (2002), Technical report, Iowa State Univesity, AugustMeyer, B., (1997) Object-Oriented Software Construction, , Prentice Hall; Parr, T., Antlr: Another tool for language recognition, , http://www.antlr.org; Soundarajan, N., Hallstrom, J., Responsibilities and rewards: Specifying design patterns (2004) Proc. of 26th Int. Conf. on Software Engineering (ICSE), pp. 666-675. , A. Finkelstein, J. Estublier, and D. Rosenblum, editors, IEEE Computer Society; Tyler, B., Automated generation of monitors for pattern contracts (2006) The 21st ACM SAC Conference, , April; Tyler, B., Soundarajan, N., Hallstrom, J., Mongen/pcl: Monitor generator for pattern contracts, , www.cse.ohio-state.edu/~tyler/MonGen","Tyler, B.; Computer Science and Engineering, Ohio State University, Columbus, OH 43210, United States; email: tyler@cse.ohio-state.edu",,"IEEE Technical Council on Software Engineering (TCSE);NASA Goddard Space Flight Center, Information Systems Division;NASA Software Engineering Laboratory",,"30th Annual IEEE/NASA Software Engineering Workshop, SEW-30",24 April 2006 through 28 April 2006,"Columbia, MD",72460,,769526241,9780769526249,,,English,"Proc. Annu. IEEE/NASA Softw. Eng. Workshop, SEW",Conference Paper,Scopus,2-s2.0-46449113034,
,,4,"Sabatucci, L., Cossentino, M., Gaglio, S.",Building agents with agents and patterns,2006,CEUR Workshop Proceedings,204,,,124,129,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84868641588&partnerID=40&md5=8c9fe5435b5a29b383e626d55c7fc2db,"DINFO - Dipartimento di Ingegneria Informatica, Università Degli Studi di Palermo, Viale delle Scienze, 90128 Palermo, Italy; Istituto di Calcolo Delle Reti Ad Alte Prestazioni, Consiglio Nazionale Delle Ricerche, Italy; SET, Université de Technologie Belfort-Montbéliard, 90010 Belfort cedex, France","Sabatucci, L., DINFO - Dipartimento di Ingegneria Informatica, Università Degli Studi di Palermo, Viale delle Scienze, 90128 Palermo, Italy; Cossentino, M., Istituto di Calcolo Delle Reti Ad Alte Prestazioni, Consiglio Nazionale Delle Ricerche, Italy, SET, Université de Technologie Belfort-Montbéliard, 90010 Belfort cedex, France; Gaglio, S., DINFO - Dipartimento di Ingegneria Informatica, Università Degli Studi di Palermo, Viale delle Scienze, 90128 Palermo, Italy, Istituto di Calcolo Delle Reti Ad Alte Prestazioni, Consiglio Nazionale Delle Ricerche, Italy","The use of design patterns proved successful in lowering the development time and number of errors when producing software with the object-oriented paradigm. Now the need for a reuse technique is occurring for the emergent agent paradigm, for which a great effort is currently spending in methodology definitions. In this work we present our experiences in the identification, description, production and use of agents patterns. A repository of patterns was enriched during these years so to request a classification criteria and a documentation template useful to help user during the selection. Index Terms - Multiagent systems, patterns, reuse models and tools.",,Design Patterns; Development time; Emergent agents; Index terms; Object-oriented paradigm; Reuse model; Multi agent systems,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Arnold, K., Gosling, J., (1998) The Java Programming Language (2nd Ed.), , ACM Press/Addison-Wesley Publishing Co; Bellifemine, F., Poggi, A., Rimassa, G., Developing Multi-agent Systems with JADE (2001) Lecture Notes in Computer Science, (1986), pp. 89-103. , Intelligent Agents VII Agent Theories Architectures and Languages; Bresciani, P., Perini, A., Giorgini, P., Giunchiglia, F., Mylopoulos, J., Tropos: An agent-oriented software development methodology (2004) Autonomous Agents and Multi-Agent Systems, 8 (3), pp. 203-236. , DOI 10.1023/B:AGNT.0000018806.20944.ef; Chella, A., Cossentino, M., Sabatucci, L., Designing JADE systems with the support of CASE tools and patterns (2003) Exp Journal, 3 (3), pp. 86-95. , Sept; Cossentino, M., From requirements to code with the PASSI methodology (2005) Agent-Oriented Methodologies, , edited by B. Henderson-Sellers and P. Giorgini, Idea Group Inc., Hershey, PA, USA; Cossentino, M., Sabatucci, L., Chella, A., A possible approach to the development of robotic multi-agent systems (2003) IEEE/WIC Conf. on Intelligent Agent Technology (IAT'03), pp. 539-544. , Halifax (Canada), October, 13-17; Cossentino, M., Sabatucci, L., Chella, A., A possible approach to the development of robotic multi-agent systems (2003) IEEE/WIC Conf. on Intelligent Agent Technology (IAT'03), , October, 13-17, 2003 Halifax (Canada); http://www.fipa.org/repository/architecturespecs.htmlhttp://fipaos.sourceforge.netFerber, J., Gutknecht, O., A meta-model for the analysis and design of organizations in multi-agent systems (1998) Third International Conference on Multi Agent Systems (ICMAS'98), p. 128; Fischer, K., Schillo, M., Siekmann, J., Holonic multiagent systems: A foundation for the organisation of multiagent systems (2003) Lecture Notes in Computer Science, (2744), pp. 71-80. , Holonic and Multi-Agent Systems for Manufacturing; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-Oriented Software., , Addison-Wesley; Greenfield, J., Short, K., Software factories: Assembling applications with patterns, models, frameworks and tools (2003) Companion of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 16-27. , (Anaheim, CA, USA, October 26 - 30, 2003). OOPSLA '03. ACM Press, New York, NY; Jackson, M., (2001) Problem Frames: Analysing and Structuring Software Development Problems, , Addison-Wesley; http://herzberg.ca.sandia.gov/jess/Kiczales, G., Aspect-oriented programming (1996) ACM Comput. Surv., 28 (4). , Dec. 1996; http://www.omg.org/mda/Prechelt, L., Unger-Lamprecht, B., Philippsen, M., Tichy, W.F., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , DOI 10.1109/TSE.2002.1010061; Schmidt, D., Stephenson, P., Experience using design patterns to evolve communication software across diverse OS platforms (1995) Proceedings of the 9th European Conference on Object-Oriented Programming, pp. 399-423. , LNCS 952; (2002) Java Reflection, , http://java.sun.com/j2se/1.3/docs/guide/reflection/index.html","Sabatucci, L.; DINFO - Dipartimento di Ingegneria Informatica, Università Degli Studi di Palermo, Viale delle Scienze, 90128 Palermo, Italy; email: sabatucci@csai.unipa.it",,,,"7th Workshop from Objects to Agents, WOA 2006",26 September 2006 through 27 September 2006,Catania,93733,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84868641588,,
,,v,"Pettersson, N., Löwe, W.",Efficient and accurate software pattern detection,2006,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC",,,4137433,317,324,,3,10.1109/APSEC.2006.33,http://www.scopus.com/inward/record.url?eid=2-s2.0-46149104401&partnerID=40&md5=3d367ba29a5abf69777eea2141ca0cb2,"School of Mathematics and Systems Engineering, Växjö University, Sweden","Pettersson, N., School of Mathematics and Systems Engineering, Växjö University, Sweden; Löwe, W., School of Mathematics and Systems Engineering, Växjö University, Sweden","Pattern detection is part of many solutions to software engineering problems. Unfortunately, it is a hard problem in itself in both theory and practice. Both exact and approximative approaches have been used earlier to increase efficiency. We propose a novel method to improve the performance of pattern detection, which is in many cases both exact and efficient. It is based on the idea of filtering information from the program representation (graphs), which is unnecessary for detecting a particular pattern. This makes the remaining program representation graph planar, in many cases, thus allowing for linear pattern detection. We evaluate our approach experimentally: we detect six design patterns in six software systems. Filtering leads to planar program representation graphs in 14 out of 36 cases. For most of the remaining graphs, filtering makes the graphs almost planar and gives a significant reduction of the graph size, which speeds up existing heuristics. © 2006 IEEE.",,"Computer software; Filtration; Software design; Software engineering; (e ,2e) theory; Asia Pacific; design patterns; engineering problems; Graph sizes; Hard problems; Novel methods; Pattern detections; Significant reduction; Software systems; Graph theory",,,,,,"Antoniol, G., Casazza, G., Penta, M.D., Fiutem, R., Object-oriented design patterns recovery (2001) Systems and Software, 59 (2), pp. 181-196; Antoniol, G., Fiutem, R., Christoforetti, L., Design pattern recovery in object-oriented software (1998) 6th Int. Workshop on Program Comprehension, pp. 153-160. , June; Balanyi, Z., Ferenc, R., Mining Design Patterns from C++ Code (2003) IEEE International Conference on Software Maintenance (ICSM), , Sep; Beyer, D., Noack, A., Lewerentz, C., Simple and efficient relational querying of software structures (2003) Proc. of the 10th Working Conference on Reverse Engineering (WCRE), pp. 216-225. , IEEE Computer Society Press, Los Alamitos CA, Nov; Brown, K., (1996) Design reverse-engineering and automated design pattern detection in smalltalk, , Master's thesis, North Carolina State University, June, TR-96-07; Bryant, R.E., Symbolic Boolean manipulation with ordered binary-decision diagrams (1992) ACM Computing Surveys, 24 (3), pp. 293-318; Calinescu, F., Finkler, Karloff, A better approximation algorithm for finding planar subgraphs (1996) ACM-SIAM Symposium on Discrete Algorithms, pp. 16-25; Costagliola, G., Lucia, A.D., Deufemia, V., Gravino, C., Risi, M., Case Studies of Visual Language Based Design Patterns Recovery (2006) Conference on Software Maintenance and Reengineering (CSMR), , IEEE, Mar; de Fraysseix, H., de Mendez, P.O., Pigale library, , Aug.2005.pigale.sourceforge.net; Driesen, K., Hölzle, U., The Direct Cost of Virtual Function Calls in C++ (1996) OOPSLA, pp. 306-323. , New York, USA, Oct, ACM Press; Eppstein, D., Subgraph isomorphism in planar graphs and related problems (1994), Technical Report 94-25, Department of Information and Computer Science, University of California, MayFülöp, L., Gyovai, T., Ferenc, R., Evaluating C++ Design Pattern Miner Tools (2006) Sixth IEEE International Workshop on Source Code Analysis and Manipulation, , Sep; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-Oriented Software, , Addison-Wesley; Garey, M.R., Johnson, D.S., (1979) Computers and Intractability: A Guide to the Theory of NP-Completeness, , W.H. Freeman and Company; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., Automatic design pattern detection (2003) 11th Int. Workshop on Program Comprehension (IWPC), , USA, May, IEEE; Heuzeroth, D., Holl, T., Löwe, W., Combining static and dynamic analyses to detect interaction patterns (2002) Sixth Int. Conference on Integrated Design and Process Technology (IDPT), , Jun; Heuzeroth, D., Mandel, S., Löwe, W., Generating design pattern detectors from pattern specifications (2003) 18th Int. Conference on Automated Software Engineering (ASE), , IEEE, Oct; Hopcroft, J., Tarjan, R., Efficient planarity testing (1974) Journal of the ACM, 21 (4), pp. 549-568. , Oct; Kaczor, O., Guéhéneuc, Y.-G., Hamel, S., Efficient Identification of Design Patterns with Bit-vector Algorithm (2006) Conference on Software Maintenance and Reengineering (CSMR), , IEEE, Mar; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Patternbased reverse-engineering of design components (1999) Int. Conference of Software Engineering, pp. 226-235. , IEEE Computer Society Press, p, Los Angeles, USA, May; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Working Conference on Reverse Engineering (WCRE), pp. 208-215. , November; Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) 24th Int. Conference on Software Engineering, pp. 338-348. , ACM; Niere, J., Wedsack, J.P., Wendehals, L., Handling Large Search Space in Pattern-based Reverse Engineering (2003) 11th IEEE Int. Workshop on Program Comprehension (IWPC), , May; Pettersson, N., Measuring precision for static and dynamic design pattern recognition as a function of coverage (2005) ICSE Workshop on Dynamic Analysis, , St. Louis, USA, May; Pettersson, N., On performance of static pattern detection (2005) Software Engineering Research and Practice (SERPS), , Västerås, Sweden; Pettersson, N., (2006) Towards Pattern Detection in Software, , Licentiate thesis, School of Mathematics and Systems Engineering, Växjö University, Sweden, May; Pettersson, N., Löwe, W., Nivre, J., On Evaluation of Accuracy in Pattern Detection (2006), Technical Report 06130, School of Mathematics and Systems Engineering, Växjö University, Sweden, SepPhilippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design patterns (2005) Software and Systems Modeling, 4 (1), pp. 55-70. , Feb; Schultz, U.P., Lawall, J.L., Consel, C., Specialization patterns (2000) Proc. of the 15th International Conference on Automated Software Engineering (ASE), pp. 197-206. , Grenoble, France, IEEE; Seemann, J., von Gudenberg, J.W., Pattern-Based Design Recovery of Java Software (1998) 6th ACM SIGSOFT int. symposium on Foundations of software engineering, pp. 10-16. , ACM Press New York, NY, USA, Nov; Smith, J.M., Stotts, D., SPQR: Flexible Automated Design Pattern Extraction from Source Code (2003) IEEE Int. Conf. on Automated Software Engineering, , Oct; Vokac, M., An efficient tool for recovering design patterns from C++ code (2006) Journal of Object Technology, 5 (1), pp. 139-157. , Jan-Feb; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) ICSE 2003 Workshop on Dynamic Analysis (WODA), , Portland, USA, May; Wendehals, L., Orso, A., Recognizing Behavioral Patterns at Runtime using Finite Automata (2006) Workshop on Dynamic Analysis (WODA), , May; West, D.B., (2001) Introduction to Graph Theory, , Prentice Hall, second edition","Pettersson, N.; School of Mathematics and Systems Engineering, Växjö UniversitySweden; email: niklas.pettersson@msi.vxu.se",,IBM Corporation;Infosys Technologies Limited;Microsoft Research;Philips;Satyam Computer Services Ltd;TATA Consultancy Services,,APSEC 2006: Asia-Pacific Software Engineering Conference,6 December 2006 through 8 December 2006,Bangalore,72383,15301362,769526853,9780769526850,,,English,Proc. Asia Pac. Softw. Eng. Conf. APSEC,Conference Paper,Scopus,2-s2.0-46149104401,
,,1,"George, A., Kumar, A., Srinivasan, S.",Using design patterns in mobility management protocol design for multi-hop heterogeneous wireless networks,2006,Conference Proceedings - IEEE SOUTHEASTCON,2006,,1629350,200,205,,,10.1109/second.2006.1629350,http://www.scopus.com/inward/record.url?eid=2-s2.0-33751104236&partnerID=40&md5=e7ab1afc2f68714d2db0513371f45813,"Computer Science and Computer Engineering, University of Louisville, United States; College of Business, University of Louisville, United States","George, A., Computer Science and Computer Engineering, University of Louisville, United States; Kumar, A., Computer Science and Computer Engineering, University of Louisville, United States; Srinivasan, S., College of Business, University of Louisville, United States",Developing architecture specific protocols leads to severe limitations in the ability of the mobility management protocol to provide mobility support across wireless architectures. In this article we develop a systematic component based model for the developing mobility management protocols for multi-hop heterogeneous networks using design patterns. This design pattern based approach provides a unified framework to design mobility management protocols for multi-hop networks by choosing appropriate components for the mobility scenario. To illustrate this approach we implement the M 3HN protocol on the MCN architecture using this component based approach by using the network simulator (NS-2). © 2006 IEEE.,Ad-hoc networks; Design patterns; Mobility management; Multi-hop networks,Ad hoc networks; Design patterns; Mobility management; Multi hop networks; Carrier mobility; Management information systems; Multi agent systems; Network protocols; Pattern recognition; Wireless telecommunication systems,,,,,,"Bhaskara, G., Helmy, A., Gupta, S., Micro-mobility protocol design and evaluation: A parameterized building block approach IEEE 58 th VTC Conference 2003, 3, pp. 2019-2024; Campbell, A., Gomez, J., Kim, S., Valko, A., Wan, C., Design, implementation, and evaluation of cellular IP (2000) IEEE Personal Communications, 7 (4), pp. 42-49. , Aug; Cavalcanti, D., Cordeiro, C.M., Agrawal, D.P., Xie, B., Kumar, A., Issues in integrating cellular networks, WLANs, and MANETs: A futuristic heterogeneous wireless network (2005) IEEE Wireless Communications Magazine, 12 (3), pp. 30-41. , June; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, MA; George, A., Kumar, A., M 3HN: An adaptive protocol for mobility management in multi-hop heterogeneous networks Proceedings of 10th ISCC June 2005, pp. 321-326. , Spain; Hsu, Y., Lin, Y., Multi-Hop cellular: A new architecture for wireless communications (2000) INFOCOMM, 3, pp. 1273-1282. , March; Ramjee, R., Luo, H., Sinha, P., Li, L., Lu, S., UCAN: A unified cellular and ad-hoc network architecture (2003) Proceedings of Mobicom, , September; Ramjee, R., Varadhan, K., Salgarelli, L., Thuel, S., Wang, S., Porta, T., HAWAI: A domain-based approach for supporting mobility in wide-area networks (2002) IEEE Transactions on Networking, 10 (3), pp. 396-410. , June; Wei, W., Banerjee, N., Basu, K., Das, S., SIP-based vertical handoff between WWANs and WLANs (2005) IEEE Wireless Communications, 12 (3), pp. 66-72. , June; Hu, W., Qiao, C., De, S., Tonguz, O., Integrated cellular and ad hoc relaying systems: ICAR (2001) IEEE JSAC, 19 (10), pp. 2105-2115. , Oct","George, A.; Computer Science and Computer Engineering, University of LouisvilleUnited States; email: a0geor03@louisville.edu",,IEEE Memphis Section;IEEE Region 3;The University of Memphis;Christian Brothers University,,IEEE SoutheastCon 2006,31 March 2006 through 2 April 2006,"Memphis, TN",68529,7347502,1424401682,9781424401680,CPISD,,English,Conf Proc IEEE SOUTHEASTCON,Conference Paper,Scopus,2-s2.0-33751104236,
,,v,"Pappalardo, G., Tramontana, E.",Automatically discovering design patterns and assessing concern separations for applications,2006,Proceedings of the ACM Symposium on Applied Computing,2,,,1591,1596,,6,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33751027462&partnerID=40&md5=84ad38462c6ea4b885dc55dc1a89ea03,"Dipartimento di Matematica e Informatica, Università di Catania, Italy","Pappalardo, G., Dipartimento di Matematica e Informatica, Università di Catania, Italy; Tramontana, E., Dipartimento di Matematica e Informatica, Università di Catania, Italy","In this paper we present a tool that assists in the automated analysis of a Java application, aimed at two purposes: (i) identifying class structure and, within this, micro-architectures that conform to known design patterns; (ii) providing visual representations of classes, concerns and their relationships. This affords a more abstract view of the analysed application, letting its structure emerge more clearly and its components be separately understood. As a result, it becomes easier for developers to assess whether well-known desirable characteristics, notably those favouring modularity and concern separation, or rather bad design choices, have been incorporated into the application. The proposed approach can be helpful both within the undertaking of a new development effort, and reverse engineering of an existing application in view of its evolution. Copyright 2006 ACM.",Computational reflection; Design patterns; Separation of concerns; Software engineering; Software evolution,Computational reflection; Design patterns; Separation of concerns; Software evolution; Computation theory; Computer aided design; Computer simulation; Java programming language; Reverse engineering; Computer aided software engineering,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the International Workshop on Program Comprehension (IWPC), , IEEE; Breu, S., Krinke, J., Aspect mining using event traces (2004) Proceedings of the International Conference on Automated Software Engineering (ASE), pp. 310-315; Chiba, S., Load-time structural reflection in Java (2000) Lecture Notes in Computer Science, 1850, pp. 313-336. , Proceedings of the European Conference on Object-Oriented Programming (ECOOP), Springer-Verlag; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceedings of TOOLS, pp. 18-32; Deursen, A.V., Marin, M., Moonen, L., Aspect mining and refactoring (2003) Proceedings of the First International Workshop on REFactoring: Achievements, Challenges, Effects (REFACE); Di Stefano, A., Fargetta, M., Pappalardo, G., Tramontana, E., Metrics for evaluating concern separation and composition (2005) Proceedings of the Symposium on Applied Computing (SAC)., pp. 13-17. , ACM, March; Douglass, B.P., (2003) Real-time Design Patterns: Robust Scalable Architecture for Real-time Systems, , Addison-Wesley, Boston; Galil, Z., Efficient algorithms for finding maximum Matchings in graphs (1986) ACM Computing Surveys, 18 (1), pp. 23-38. , March; Gamma, E., Helm, R., Johnson, R., Vlissides, R., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley. Reading, MA; Gansner, E.R., North, S.C., An open graph visualization system and its applications to software engineering (2000) Software - Practice and Experience, 30 (11), pp. 1203-1233; Gargiulo, J., Mancoridis, S., Gadget: A tool for extracting the dynamic structure of Java programs (2001) Proceedings of the International Conference on Software Engineering and Knowledge Engineering (SEKE), , ACM; Giugno, R., Shasha, D., GraphGrep: A fast and universal method for querying graphs (2002) Proceedings of the International Conference in Pattern Recognition (ICPR); Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Fingerprinting design patterns (2004) Proceedings of the Working Conference on Reverse Engineering (WCRE), , E. Stroulia and A. de Lucia, editors, IEEE Computer Society Press, November; Hannemann, J., Kiczales, G., Overcoming the prevalent decomposition in legacy code (2001) Workshop on Advanced Separation of Concerns in Software Engineering (ICSE); Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the International Conference on Software Engineering (ICSE), pp. 226-235; Korn, J., Chen, Y.-F., Koutsofios, E., Chava: Reverse engineering and tracking of Java applets (1999) Proceedings of the Working Conference on Reverse Engineering (WCRE), , October; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the Working Conference on Reverse Engineering (WCRE), pp. 208-216. , IEEE, November; Lea, D., (1997) Concurrent Programming in Java: Design Principles and Patterns, , Addison Wesley, Reading, MA; Maes, P., Concepts and experiments in computational reflection (1987) Sigplan Notices, 22 (12), pp. 147-155. , Proceedings of the Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA), Orlando, FA; Mehner, K., Weymann, B., Visualization and debugging of concurrent Java programs with UML (2001) In Proceedings of the Workshop on Software Visualization, International Conference on Software Engineering (ICSE), , W. de Pauw, S. Reiss, and J. Stasko, editors, Toronto, May; Muller, P.-A., (1997) Instant UML, , Birmingham, UK : Wrox Press; Smith, C.U., Williams, L.G., Software performance antipatterns (2000) Proceedings of the International Workshop on Software and Performance (WOSP), pp. 127-136. , New York, September . ACM Press; Storey, M.A.D., Wong, K., Fracchia, F., Müller, H.A., On integrating visualization techniques for effective software exploration (1997) Proceedings of the IEEE Symposium on Information Visualization (InfoVis), , Phoenix, Arizona, USA, October; Systä, T., Understanding the behavior of Java programs (2000) Proceedings of the Working Conference on Reverse Engineering (WCRE); Walker, R.J., Murphy, G.C., Freeman-Benson, B.N., Wright, D., Swanson, D., Isaak, J., Visualizing dynamic software system information through high-level models (1998) Proceedings of the 14th Conference on Object-oriented Programming, Systems, Languages, and Applications (OOPSLA), pp. 271-283; Yan, X., Han, J., GSpan: Graph-based substructure pattern mining (2002) Proceedings of International Conference on Data Mining (ICDM), , IEEE, September","Pappalardo, G.; Dipartimento di Matematica e Informatica, Università di CataniaItaly; email: pappalardo@dmi.unict.it",,ACM SIGAPP,,2006 ACM Symposium on Applied Computing,23 April 2006 through 27 April 2006,Dijon,68539,,1595931082,9781595931085,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-33751027462,
,,4,"Rypáček, O., Backhouse, R., Nilsson, H.",Type-theoretic design patterns,2006,WGP'06 - Proceedings of the ACM SIGPLAN 2006 Workshop on Generic Programming,2006,,,13,22,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33750899832&partnerID=40&md5=cd6328956e108465aa2c95bcd892d313,"School of Computer Science and Information Technology, University of Nottingham, United Kingdom","Rypáček, O., School of Computer Science and Information Technology, University of Nottingham, United Kingdom; Backhouse, R., School of Computer Science and Information Technology, University of Nottingham, United Kingdom; Nilsson, H., School of Computer Science and Information Technology, University of Nottingham, United Kingdom","The development of design patterns in object-oriented programming aims at capturing good software design in a re-usable generic form. However, design patterns are not expressible in conventional object-oriented programming languages. To address this shortcoming, we need to model and understand design patterns precisely. We achieve this by identifying operators characterising the most fundamental design patterns in a way that enables the construction of object-oriented programs with provable structural and behavioural properties. We use dependent-type theory to define a simplified, functional model of object-oriented programming. Design patterns are modelled in this setting as operators on object signatures and implementations. We present examples of several basic design operators and design patterns modelled in this setting and show how properties of their composition can be proven. Copyright © 2006 ACM.",Dependent types; Design patterns; Formal method; Functional objects; Functional programming; Language features; Object-oriented programming; Program correctness; Reasoning; Visitor pattern,Dependent types; Design patterns; Formal method; Functional objects; Functional programming; Language features; Program correctness; Reasoning; Visitor patterns; Computer programming languages; Computer simulation; Computer software reusability; Electronic document identification systems; Mathematical models; Mathematical operators; Object oriented programming,,,,,,"Abadi, M., Cardelli, L., (1996) A Theory of Objects, , Monographs in Computer Science. Springer Verlag. ABA m 96:1 1.Ex; Alagar, V., Lämmel, R., Three-tiered Specification of Micro-architectures, , citeseer.ist.psu.edu/493152.html; Alencar, P., Cowan, D., Lichtner, K., Lucena, C., Nova, L., (1995) Tool Support for Formal Design Patterns, , Technical Report CS-9536, University of Waterloo, Waterloo, Ontario, Canada; Alencar, P., Cowan, D., Lucena, C., A formal approach to architectural design patterns (1996) Proceedings of the 3rd International Symposium of Formal Methods Europe, pp. 576-594; Alencar, P., Cowan, D., Lucena, C., Nova, L., Formal specification of reusable interface objects (1995) ACM SIGSOFT Symposium on Software Reusability, pp. 88-96; Bertot, Y., Castéran, P., (2004) Interactive Theorem Proving and Program Development. Coq'Art: The Calculus of Inductive Constructions, , Texts in Theoretical Computer Science. Springer Verlag; Bird, R., De Moor, O., (1996) Algebra of Programming, , Prentice Hall PTR, September; Bosch, J., Design patterns as language constructs (1998) Journal of Object-oriented Programming, 11 (2), pp. 18-32; Buchlovsky, P., Thielecke, H., A type-theoretic reconstruction of the visitor pattern 21st Conference on Mathematical Foundations of Programming Semantics, , http://www.cl.cam.ac.uk/pb368/mfps-visitors.pdf; Bünnig, S., Forbrig, P., Lämmel, R., Seemann, N., A Programming Language for Design Patterns, , http://citeseer.ist.psu.edu/306047.html; Chambers, C., Harrison, B., Vlissides, J., A debate on language and tool support for design patterns (2000) Proceedings of the 27th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 277-289. , ACM Press; Coplien, J.O., Schmidt, D.C., (1995) Pattern Languages of Program Design, , ACM Press/Addison-Wesley Publishing Co; Coquand, T., Huet, G., (1986) The Calculus of Constructions, , Technical Report 530, INRIA; Jing, D., A logical framework for design composition (2000) Proceedings of the 22nd International Conference on Software Engineering, pp. 698-700. , ACM Press; Eden, A., Gil, J., Yehudai, A., A Formal Language for Design Patterns (Extended Abstract), , http://citeseer.ist.psu.edu/171003.html; Eden, A., Gil, J., Yehudai, A., Precise specification and automatic application of design patterns (1997) Proceedings of the 12th IEEE International Automated Software Engineering Conference - ASE 1997; Forbrig, P., Lämmel, R., Programming with Patterns, , http://citeseer.ist.psu.edu/312457.html; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Gil, J., Lorenz, D.H., Design patterns vs. language design (1998) Lecture Notes in Computer Science, p. 1357; Gil, J., Maman, I., Micro patterns in Java code (2005) SIGPLAN Not., 40 (10), pp. 97-116; Girard, J.-Y., Lafont, Y., Taylor, P., (1989) Cambridge Tracts in Theoretical Computer Science, 7. , Proofs and Types. Cambridge University Press; Lano, K., Bicarregui, J., Goldsack, S., Formalising design patterns (1996) Ist BCS-FACS Northern Formal Methods Workshop, , D. Duke and A. Evans, editors, Electronic Workshops in Computing. Ilkley, UK, Springer-Verlag; Meijer, E., Fokkinga, M., Paterson, R., Functional programming with bananas, lenses, envelopes and barbed wire (1991) Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture, pp. 124-144. , New York, NY, USA. Springer-Verlag New York, Inc; Mikkonen, T., Formalizing design patterns (1998) Proceedings of the 20th International Conference on Software Engineering, pp. 115-124. , IEEE Computer Society; Nordström, B., Petersson, K., Smith, J.M., (1990) Programming in MartinLöfs Type Theory; an Introduction, , Oxford University Press; Pierce, B.C., Turner, D.N., Simple type-theoretic foundations for object-oriented programming (1994) Journal of Functional Programming, 4 (2), pp. 207-247; Setzer, A., Object-oriented programming in dependent type theory (2006) Seventh Symposium on Trends in Functional Programming; Smith, J., Stotts, D., (2002) Elemental Design Patterns: A Link between Architecture and Object Semantics, , citeseer.ist.psu.edu/smith02elemental.html; Visser, J., Visitor combination and traversal control (2001) OOPSLA '01; Proceedings of the 16th ACM SIGPLAN Conference on Object Oriented Programming, Systems, Languages, and Applications, pp. 270-282. , New York, NY, USA. ACM Press; Wegner, P., Concepts and paradigms of object-oriented programming (1990) SIGPLAN OOPS Mess., 1 (1), pp. 7-87","Rypáček, O.; School of Computer Science and Information Technology, University of NottinghamUnited Kingdom; email: oxr@cs.nott.ac.uk",,ACM SIGPLAN,,WGP'06 - ACM SIGPLAN 2006 Workshop on Generic Programming,16 September 2006 through 16 September 2006,"Portland, OR",68520,,,,,English,Proc. ACM SIGPLAN Workshop Generic Programm.,Conference Paper,Scopus,2-s2.0-33750899832,,
,,1,"Saponas, T.S., Prabaker, M.K., Abowd, G.D., Landay, J.A.",The impact of pre-patterns on the design of digital home applications,2006,"Proceedings of the Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques, DIS",2006,,,189,198,,12,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33750898096&partnerID=40&md5=39991e1c49eb20c57fb71aea6b3e2985,"DUB Group, Computer Science and Eng., University of Washington, Seattle, WA 98105, United States; Intel Research Seattle, 1100 NE 45th Street, Seattle, WA 98105, United States; Human-Computer Interaction Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States; College of Computing, GVU Center, Georgia Institute of Technology, Atlanta, GA, United States","Saponas, T.S., DUB Group, Computer Science and Eng., University of Washington, Seattle, WA 98105, United States; Prabaker, M.K., Human-Computer Interaction Institute, Carnegie Mellon University, Pittsburgh, PA 15213, United States; Abowd, G.D., College of Computing, GVU Center, Georgia Institute of Technology, Atlanta, GA, United States; Landay, J.A., DUB Group, Computer Science and Eng., University of Washington, Seattle, WA 98105, United States, Intel Research Seattle, 1100 NE 45th Street, Seattle, WA 98105, United States","Recent research suggests design pre-patterns, structured collections of evidence-based research and design knowledge, provide a useful resource for design activities in emerging application domains. This paper extends previous research by exploring the impact of pre-patterns and tools to support pre-pattern exploration for the domain of ubiquitous computing in the home. We conducted an empirical study of 44 designers engaged in a two hour concentrated brainstorming and design task for the home of the future. Our results show pre-patterns are an easily adopted resource for designers that can impact even the earliest of design activities. We also provide insights for future development of pre-patterns based on designer feedback. Copyright 2006 ACM.",Design; Design patterns; Digital home; Evaluation; Ubicomp,Engineering research; Knowledge engineering; Logic design; Pattern recognition; Design; Product design; Research; Ubiquitous computing; Design patterns; Digital home; Ubicomp; Ubiquitous computing; Computer graphics; Digital devices; Design activity; Design knowledge; Design Patterns; Design tasks; Digital home; Emerging applications; Empirical studies; Evaluation; Ubicomp,,,,,,"Third European Conference on Pattern Languages of Programming and Computing, , http://www.coldewey.com/europlop98/cfp.htm; Alexander, C., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press; Bayle, E., Putting it all together: Towards a pattern language for interaction design (1998) SIGCHI Bulletin, 30 (1), pp. 17-23; Horchers, J., (2001) A Pattern Approach to Interaction Design, , http://hcipatterns.org, John Wiley and Sons; Casaday, G., Notes on a pattern language for interactive usability Proc. of Human Factors in Computing Systems: CHI 1997, pp. 289-290; Chung, E., Hong, J.I., Lin, J., Prabaker, M.K., Landay, J.A., Liu, A., Development and Evaluation of Emerging Design Patterns for Ubiquitous Computing, pp. 233-242. , Proceedings of Designing Interactive Systems (DIS2004); Dearden, A., Finlay, J., Allgar, L., McManus, B., Evaluating pattern languages in participatory design Proc. of Human Factors in Computing Systems: CHI 2002 (Extended Abstracts), pp. 664-665; Erickson, T., The Interaction Design Patterns Page, , http://www.pliant.org/personal/Tom_Erickson/InteractionPatterns.html; Erickson, T., Lingua francas for design: Sacred places and pattern languages Proc. of Symposium on Designing Interactive Systems 2000 (DIS2000), pp. 357-368; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Graham, I., (2003) A Pattern Language for Web Usability, , Reading, MA: Addison-Wesley; Hindus, D., The importance of homes in technology research Proceedings of CoBuild 1999, pp. 199-207; Hughes, J.A., O'Brien, J., Rodden, T., Rouncefield, M., Viller, S., Patterns of home life: Informing design for domestic environments Personal Technologies, 4 (1), pp. 25-38. , Kluwer; Landay, J.A., Borriello, G., Design patterns for ubiquitous computing (2003) Computer, 36 (8), pp. 93-95; Malone, E., Leacock, M., Wheeler, C., (2005) Implementing a Pattern Library in the Real World: A Yahoo! Case Study, , http://www.boxesandarrows.com/view/ implementing_a_pattern_library_in_the_real_world_a_yahoo_case_study; Mankoff, J., Dey, A.K., Hsieh, G., Kientz, J., Ames, M., Lederer, S., Heuristic evaluation of ambient displays Proceedings of CHI 2003, pp. 169-176; Meszaros, G., (2000) A Pattern Language for Pattern Writing, , http://hillside.net/patterns/writing/patternwritingpaper.htm; Nielsen, J., (1999) When Bad Design Elements Become the Standard, , http://www.useit.com/alertbox/991114.html; Nielsen, J., Molich, R., Heuristic evaluation of user interfaces (1990) Proc. ACMCHI'90 Conf., pp. 249-256; Scholtz, J., Consolvo, S., Toward a framework for evaluating ubiquitous computing applications (2004) Pervasive Computing, 3 (2), pp. 82-88. , April-June; Tidwell, J., (1999) Common Ground: A Pattern Language for Human-computer Interface Design, , http://www.mit.edu/~jitidwell/common_ground.html; UsabilityNet, Card Sorting, , http://www.hostserver150.com/usabilit/tools/cardsorting.htm; Van Duyne, D.K., Landay, J.A., Hong, J.I., (2002) The Design of Sites: Patterns, Principles, and Processes for Crofting a Customer-centered Web Experience, , http://designofsites.com, Reading, MA: Addison-Wesley; Van Welie, M., (2003) GUI Design Patterns, , http://www.welie.com/patterns/gui/; Van Welie, M., (2001) Web Design Patterns, , http://www.welie.com/patterns; Van Welie, M., Mullet, K., McInemey, P., Patterns in practice: A workshop for UI designers Proc. of Human Factors in Computing Systems: CHI2002, pp. 908-909. , http://www.welie.com/patterns/chi2002-workshop/; Weiser, M., The computer for the 21st century (1991) Scientific American, 265 (3), pp. 94-104","Saponas, T.S.; DUB Group, Computer Science and Eng., University of Washington, Seattle, WA 98105, United States; email: ssaponas@cs.washington.edu",,ACM SIGCHI,,"Proceedings of the Conference on Designing Interactive Systems, DIS2006",26 June 2006 through 28 June 2006,"University Park, PA",68516,,1595933417,9781595933416,,,English,Proc Conf Des Interact Syst Process Pract Methods Tech DIS,Conference Paper,Scopus,2-s2.0-33750898096,
,,4,"Debnath, N.C., Garis, A., Riesco, D., Montejano, G.",Defining patterns using UML profiles,2006,"IEEE International Conference on Computer Systems and Applications, 2006",2006,,1618498,1147,1150,,4,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33750820137&partnerID=40&md5=973f127734d92e7b9e1e7267fdc0fee8,"Winona State University, Department of Computer Science, Winona, MN 55987, United States; Universidad National de San Luis, Ejército de los Andes 950, 5700 San Luis, Argentina","Debnath, N.C., Winona State University, Department of Computer Science, Winona, MN 55987, United States; Garis, A., Universidad National de San Luis, Ejército de los Andes 950, 5700 San Luis, Argentina; Riesco, D., Universidad National de San Luis, Ejército de los Andes 950, 5700 San Luis, Argentina; Montejano, G., Universidad National de San Luis, Ejército de los Andes 950, 5700 San Luis, Argentina","Sometimes, UML is not enough expressive to describe patterns property. UML profiles allow extending UML syntax and semantic for modeling elements of particular domains. As profiles extend UML vocabulary, and design patterns define for designers a common vocabulary, so it is possible using profile for defining a pattern vocabulary in UML. Profiles can be used for solve particular problems in different domains. This work shows the way for defining design patterns with profile, proposing architecture in levels. It shows how the definition of a profile for a particular pattern is, and how an UML tool can be enough for introduce profile for patterns. It analyzes the advantages of using profiles to define, document, and visualize design patterns. © 2006 IEEE.",,Computer aided design; Computer architecture; Computer programming languages; Problem solving; Semantics; Syntactics; Design patterns; Pattern vocabulary; UML profiles; UML syntax; Pattern recognition,,,,,,"Unified Modeling Language (UML), Version 1.5, , ISO/IEC International Standard ISO/IEC 19501; Fuentes, L., Vallecillo, A., (2004) Una Introdución A Los Perfiles UML, 168, pp. 6-11. , Novática; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns. Elements of Reusable Object-oriented Software, , Addison-Wesley; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object-oriented patterns (1997) ECOOP'97, 11th European Conference on Object-Oriented Programming, 1241, pp. 472-495. , LNCS; Le Guennec, A., Sunyé, G., Jézéquel, J., Precise modeling of design patterns (2000) UML 2000, 1939, pp. 482-496. , LNCS; Smith, J., Stotts, D., Elemental design patterns: A formal semantics for composition of OO software architecture (2002) 27th Annual IEEE/NASA Software Engineering Workshop; Flores, A., (2004) Soporte Formal Para Diseño Basado en Patrones y Formalización de Patrones Estructurales Gof, , Tesis de Magíster en Ciencias de la Computation; Fontoura, M., Lucena, C., Extending UML to improve the representation of design patterns (2000) Journal of Object Technology; Sanada, Y., Adams, R., Representing design patterns and frameworks in UML. Towards a comprehensive approach (2002) Journal of Object Technology, 1 (2), pp. 143-154; Dong, J., Yang, S., Visualizing design patterns with a UML profile (2003) IEEE Symposium on Human Centric Computing Languages and Environments (HCC 2003), pp. 123-125; France, R., Kim, D., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions on Software Engineering, 30 (3), pp. 193-206; (2004) UML Profile for Patterns Specification, , http://www.omg.org/technology/documents; (2004) UML Superstructure 2.0 Draft Adpted Specification, , http://www.omg.org/technology/documents; (2004) MDA Guide Version 1.0.1., , http://www.omg.org/docs/omg, Object Management Group; Cabot, J., Gómez, C., A simple yet useful approach to implementing UML Profiles in current CASE tools (2003) Workshop in Software Model Engineering; Jeckle, M., UML Tools (Case & Drawing), , http://www.jeckle.de/umltools.htm; (2002) OMG-XML- Metadata Interchange Specification Version 1.2, , http://www.omg.org","Debnath, N.C.; Winona State University, Department of Computer Science, Winona, MN 55987, United States; email: ndebnath@winona.edu",,,,"IEEE International Conference on Computer Systems and Applications, 2006",8 March 2006 through 8 March 2006,Sharjah,68465,,1424402123,9781424402120,,,English,IEEE Int. Conf. Comput. Syst. Applic.,Conference Paper,Scopus,2-s2.0-33750820137,
,,v,"Tsantalis, N., Chatzigeorgiou, A., Stephanides, G., Halkidis, S.T.",Design pattern detection using similarity scoring,2006,IEEE Transactions on Software Engineering,32,11,,896,909,,182,10.1109/TSE.2006.112,http://www.scopus.com/inward/record.url?eid=2-s2.0-33947310939&partnerID=40&md5=216838852a6afc7b823cd8d13024c5a0,"Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece","Tsantalis, N., Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece; Chatzigeorgiou, A., Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece; Stephanides, G., Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece; Halkidis, S.T., Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece","The identification of design patterns as part of the reengineering process can convey important information to the designer. However, existing pattern detection methodologies generally have problems in dealing with one or more of the following issues: identification of modified pattern versions, search space explosion for large systems and extensibility to novel patterns. In this paper, a design pattern detection methodology is proposed that is based on similarity scoring between graph vertices. Due to the nature of the underlying graph algorithm, this approach has the ability to also recognize patterns that are modified from their standard representation. Moreover, the approach exploits the fact that patterns reside in one or more inheritance hierarchies, reducing the size of the graphs to which the algorithm is applied. Finally, the algorithm does not rely on any pattern-specific heuristic, facilitating the extension to novel design structures. Evaluation on three open-source projects demonstrated the accuracy and the efficiency of the proposed method. © 2006 IEEE.",Graph algorithms; Object-oriented design methods; Patterns; Reengineering; Restructuring; Reverse engineering,Graphic methods; Heuristic algorithms; Pattern recognition; Reengineering; Reverse engineering; Design patterns; Similarity scoring; Object oriented programming,,,,,,"Albin-Amiot, H., Cointre, R., Guéhéneuc, Y.-G., Jussien, N., ""Instantiating and Detecting Design Patterns: Putting Bits and Pieces Together"" (2001) Proc. 16th Ann. Conf. Automated Software Eng. (ASE '01), pp. 166-173. , Nov; Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., ""Object-Oriented Design Patterns Recovery"" (2001) J. Systems and Software, 59 (2), pp. 181-196; (2006), http://asm.objectweb.org/, ASM Home PageBalanyi, Z., Ferenc, R., ""Mining Design Patterns from C++ Source Code"" (2003) Proc. Int'l Conf. Software Maintenance, (ICSM '03), pp. 305-314. , Sept; Bengoetxea, E., ""Inexact Graph Matching Using Estimation of Distribution Algorithms"" (2002), PhD thesis, Ecole Nationale Supérieure des Télécommunications, France, DecBergenti, F., Poggi, A., ""Improving UML Designs Using Automatic Design Pattern Detection"" (2000) Proc. 12th Int'l Conf. Software Eng. and Knowledge Eng. (SEKE '00), , July; Blondel, V.D., Gajardo, A., Heymans, M., Senellart, P., Van Dooren, P., ""A Measure of Similarity between Graph Vertices: Applications to Synonym Extraction and Web Searching"" (2004) SIAM Rev., 46 (4), pp. 647-666; Brown, K., ""Design Reverse-Engineering and Automated Design Pattern Detection in Smalltalk"" (1996), Technical Report TR-96-07, Dept. of Computer Science, North Carolina State UnivCook, D.J., Holder, L.B., ""Substructure Discovery Using Minimum Description Length and Background Knowledge"" (1994) J. Artificial Intelligence Research, 1, pp. 231-255. , Feb; Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M., ""Design Pattern Recovery by Visual Language Parsing"" (2005) Proc. Ninth European Conf. Software Maintainance and Reeng. (CSMR '05), pp. 102-111. , Mar; Design Pattern Detection (2006), http://java.uom.gr/~nikos/patterndetection.htmlFerenc, R., Beszedes, A., Fulop, L., Lele, J., ""Design Pattern Mining Enhanced by Machine Learning"" (2005) Proc. 21st IEEE Int'l Conf. Software Maintenance (ICSM '05), pp. 295-304. , Sept; Fowler, M., (1999) Refactoring: Improving the Design of Existing Code, , Addison Wesley; (2006), http://www.frontendart.com, FrontEndART LtdGamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., ""Fingerprinting Design Patterns"" (2004) Proc. 11th Working Conf. Reverse Eng. (WCRE'04), , Nov; Heuzeroth, D., Holl, T., Högström, G., Löwe, W., ""Automatic Design Pattern Detection"" (2003) Proc. 11th IEEE Int'l Workshop Program Comprehension (IWPC '03), , May; JHotDraw Start Page (2006), http://www.jhotdraw.org(2006), http://jrefactory.sourceforge.net/(2006), http://www.junit.orgKleinberg, J.M., ""Authoritative Sources in a Hyperlinked Environment"" (1999) J. ACM, 46 (5), pp. 604-632. , Sept; Messmer, B.T., Bunke, H., ""Efficient Subgraph Isomorphism Detection: A Decomposition Approach"" (2000) IEEE Trans. Knowledge and Data Eng., 12 (2), pp. 307-323. , Mar./Apr; Prechelt, L., Krämer, C., ""Functionality versus Practicality: Employing Existing Tools for Recovering Structural Design Patterns"" (1998) J. Universal Computer Science, 4 (12), pp. 866-882. , Dec; Rich, C., Waters, R., ""The Programmer's Apprentice: A Research Overview"" (1998) IEEE Computer, 21 (11), pp. 11-24. , Nov; Smith, J.M., ""An Elemental Design Pattern Catalog"" (2002), Technical Report TR-02-040, Dept. of Computer Science, Univ. of North Carolina, OctSmith, J.M., Stotts, D., ""SPQR: Flexible Automated Design Pattern Extraction from Source Code"" (2003) Proc. 18th IEEE Int'l Conf. Automated Software Eng. (ASE '03), , Oct; Tonella, P., Antoniol, G., ""Object Oriented Design Pattern Inference"" (1999) Proc. IEEE Conf. Software Maintenance (ICSM '99), pp. 230-238; Ullman, J.R., ""An Algorithm for Subgraph Isomorphism"" (1976) J. ACM, 23 (1), pp. 31-42. , Jan; Vokač, M., ""Defect Frequency and Design Patterns: An Empirical Study of Industrial Code"" (2004) IEEE Trans. Software Eng., 30 (12), pp. 904-917. , Dec; Vokač, M., ""An Efficient Tool for Recovering Design Patterns from C++ Code"" (2005) J. Object Technology, 2 (2). , July/Aug; Wendehals, L., ""Improving Design Pattern Instance Recognition by Dynamic Analysis"" (2003) Proc. Workshop Dynamic Analysis (WODA '03), , May; Wendehals, L., ""Specifying Patterns for Dynamic Pattern Instance Recognition with UML 2.0 Sequence Diagrams"" (2004) Proc. Sixth Workshop Software Reeng. (WSR '04), pp. 63-64. , May","Tsantalis, N.; Department of Applied Informatics, University of Macedonia, 156 Egnatia Str., 54006 Thessaloniki, Greece; email: nikos@java.uom.gr",,,,,,,,985589,,IESED,,English,IEEE Trans Software Eng,Article,Scopus,2-s2.0-33947310939,,
,,1,"Daida, J.M.",Characterizing the dynamics of symmetry breaking in genetic programming,2006,GECCO 2006 - Genetic and Evolutionary Computation Conference,1,,,799,806,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33750244265&partnerID=40&md5=d60798834f17a294b87d3d9cde989d53,"University of Michigan, 2455 Hayward Avenue, Ann Arbor, MI 48109-2143, United States","Daida, J.M., University of Michigan, 2455 Hayward Avenue, Ann Arbor, MI 48109-2143, United States","This paper introduces a metric that measures symmetry in tree graphs, which allows for a statistical characterization of GP solutions by their architectural ""shapes."" A case study is given that applies this metric to 80.4 million trees to identify trends in GP runs. Results provide a first quantitative look at the dynamics of symmetry breaking. Copyright 2006 ACM.",Analysis methods; Computational geometry; Data structures; Design patterns; Graphics techniques; Symmetry breaking; Tree,Computational geometry; Data structures; Graph theory; Statistical methods; Trees (mathematics); Analysis methods; Design patterns; Graphics techniques; Symmetry breaking; Genetic algorithms,,,,,,"Alexandrescu, A., (2001) Modern C++ Design: Generic Programming and Design Patterns Applied, p. 323. , Boston: Addison-Wesley; Altenberg, L., The schema theorem and price's theorem (1994) FOGA 3, pp. 23-49. , Morgan Kaufmann: San Francisco; Appleton, B., http://www.cmcrossroads.com/bradapp/docs/, Accessed 14 January 2006Budinsky, F., Automatic code generation from design patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171; Burke, E., Gustafson, S., Kendall, G., Diversity in genetic programming (2004) IEEE TEC, 8 (1), pp. 47-62; Chin, K.-W., Yen, H.-C., The symmetry number problem for trees (2001) Information Processing Letters, 79 (2), pp. 73-79; Coplien, J.O., Software design patterns: Common questions and answers (1998) The Patterns Handbook, pp. 311-320. , Cambridge University Press: New York; Coplien, J.O., Reevaluating the architectural metaphor: Towards piecemeal growth (1999) IEEE Software, 16 (5), pp. 40-44; Coplien, J.O., Zhao, L., Symmetry and symmetry breaking in software patterns (2000) GCSE, pp. 37-56. , Erfurt, Germany; Coplien, J.O., Zhao, L., Symmetry breaking in software patterns (2001) GCSE 2000, pp. 37-56. , Revised Springer-Verlag: Berlin; Coplien, J.O., Patterns of engineering (2004) IEEE Potentials, 23 (2), pp. 4-8; Crane, E., McPhee, N.F., Effect of size and depth limits on tree-based GP (2006) GPTP III, , Springer: New York; Daida, J.M., Hilss, A.M., Identifying structural mechanisms in standard GP (2003) GECCO, pp. 1639-1651. , E. Cantú-Paz, et al., Springer-Verlag: Berlin; Daida, J.M., Towards identifying populations that increase the likelihood of success in genetic programming (2005) GECCO; Daida, J.M., Visualizing tree structures in GP (2005) GPEM, 6, pp. 79-110; Eggermont, J., Eiben, A.E., Van Hemert, J.I., Adapting the fitness function in GP for data mining (1998) EuroGP, pp. 193-202. , Springer-Verlag: Berlin; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Reading: Addison-Wesley Professional; Hall, J.M., Soule, T., Does GP Inherently adopt structured design techniques? (2004) GPTP II, , U.-M. O'Reilly, et al., Kluwer Academic: Boston; Holland, J., (1995) Hidden Order: How Adaptation Builds Complexity, , Reading: Addison-Wesley; Hornby, G.S., Lipson, H., Pollack, J.B., Generative representations for the automated design of modular physical robots (2003) IEEE TRA, 19 (4), pp. 703-719; Jacob, C., Genetic L-system programming (1994) PPSN III, pp. 334-343. , Springer-Verlag: Berlin; Klein, P., A tree-edit-distance algorithm for comparing simple, closed shapes (2000) ACM-SIAM Symp Discrete Alg, pp. 696-704. , SIAM: Philadelphia; Klein, P., Sebastian, T.B., Kimia, B.B., Shape matching using edit-distance (2001) Symp Discrete Alg, pp. 781-790. , SIAM: Philadelphia; Koza, J.R., (1992) GP, , Cambridge: The MIT Press; Koza, J.R., (1994) GP II, , Cambridge: The MIT Press; Koza, J.R., Two ways of discovering the size and shape of a computer program to solve a problem (1995) ICGA, pp. 287-294. , Morgan Kaufmann: San Francisco; Langdon, W.B., The evolution of size and shape (1999) AGP 3, pp. 163-190. , L. Spector, et al., The MIT Press: Cambridge; Langdon, W.B., Quadratic bloat in genetic programming (2000) GECCO, pp. 451-458. , Morgan Kaufmann: San Francisco; Langdon, W.B., Poli, R., (2002) Foundations of GP, , Berlin: Springer-Verlag; Lenaerts, T., Manderick, B., Building a GP framework (1998) EuroGP, pp. 196-208. , Springer-Verlag: Berlin; Liu, T.-L., Geiger, D., Approximate tree matching and shape similarity (1999) IEEE ICCV, pp. 456-462. , IEEE Computer Society: Los Alamitos; McPhee, N.F., Hopper, N.J., Analysis of genetic diversity through population history (1999) GECCO, pp. 1112-1120. , Morgan Kaufmann: San Francisco; Poli, R., Langdon, W.B., O'Reilly, U.-M., Analysis of schema variance and short term extinction likelihoods (1998) GP, pp. 284-292. , Morgan Kaufmann: San Francisco; Poli, R., General schema theory for genetic programming with subtree-swapping crossover (2001) Genetic Programming: Proceedings of EuroGP 2001, pp. 143-159. , April 18-20, Milan, J.F. Miller, et al., 2001, Springer-Verlag: Berlin; Rosca, J.P., Analysis of complexity drift in genetic programming (1997) Genetic Programming 1997: Proceedings of the Second Annual Conference, pp. 286-294. , July 13-16, 1997, Stanford University, J.R. Koza, et al., Morgan Kaufmann Publishers: San Francisco; Sastry, K., O'Reilly, U.-M., Goldberg, D.E., Population sizing for GP based on decision making (2004) GPTP II, pp. 49-65. , Kluwer Academic: Boston; Sebastian, T.B., Kimia, B.B., Curves vs. skeletons in object recognition (2005) Signal Processing, 85 (2), pp. 247-263; Soule, T., Foster, J.A., Dickinson, J., Code growth in GP (1996) GP, pp. 215-223. , The MIT Press: Cambridge; Streeter, M.J., Keane, M.A., Koza, J.R., Routine duplication of post-2000 patented inventions by means of GP (2002) EuroGP, pp. 27-36. , Springer-Verlag: Berlin; Veitkamp, R.C., Shape matching: Similarity measures and algorithms (2001) Int Conf Shape Model and App, pp. 188-197. , IEEE Computer Society: Los Alamitos; Wales, J., Design pattern (computer science), generative programming, generic programming (2001) Wikipedia, , accessed 14 January 2006","Daida, J.M.; University of Michigan, 2455 Hayward Avenue, Ann Arbor, MI 48109-2143, United States; email: daida@umich.edu",,ACM SIGEVO,,8th Annual Genetic and Evolutionary Computation Conference 2006,8 July 2006 through 12 July 2006,"Seattle, WA",68392,,1595931864,9781595931863,,,English,Genetic Evol. Comput. Conf.,Conference Paper,Scopus,2-s2.0-33750244265,
,,3,"Cunningham, H.C., Tadepalli, P.",Using function generalization to design a cosequential processing framework,2006,Proceedings of the Annual Hawaii International Conference on System Sciences,9,,1579727,,,,,10.1109/HICSS.2006.522,http://www.scopus.com/inward/record.url?eid=2-s2.0-33749638761&partnerID=40&md5=395a52ad54fc4fc3161bf71ddb39a710,"Department of Computer and Information Science, University of Mississippi, 201 Weir Hall, University, MS 38677, United States","Cunningham, H.C., Department of Computer and Information Science, University of Mississippi, 201 Weir Hall, University, MS 38677, United States; Tadepalli, P., Department of Computer and Information Science, University of Mississippi, 201 Weir Hall, University, MS 38677, United States","Framework design is a multifaceted endeavor undertaken to promote reuse of software within a family of related applications. Traditional approaches involve either the evolution or the systematic design of the needed generic structure. This paper explores a systematic design approach called function generalization. In this approach, framework design begins with an executable specification expressed as a set of functions in a functional programming language. This set is analyzed to identify the common and variable aspects of the family of related applications. The set of functions is then transformed in a series of steps to produce a generalized application corresponding to the family. Each step generalizes one variable aspect of the family by introducing higher-order (function) parameters or polymorphic parameters into the functions in the set. The resulting set of generalized functions can be converted to Java code using design patterns to guide the framework construction. © 2006 IEEE.",,Design patterns; Framework constructions; Java code; Polymorphic parameters; Codes (symbols); Computer programming languages; Computer software reusability; Parameter estimation; Systems analysis; Parallel processing systems,,,,,,"Ardis, M., Daley, N., Hoffman, D., Weiss, D., Software product lines: A case study (2000) Software-experience and Practice, 30, pp. 825-847; Carey, J., Carlson, B., (2002) Framework Process Patterns: Lessons Learned Developing Application Frameworks, , Addison-Wesley; Cortes, M., Fontoura, M., Lucena, C., Using refactoring and unification rules to assist framework evolution (2003) ACM SIGSOFT Software Engineering Notes, 28 (6). , November; Cunningham, H.C., Liu, Y., Zhang, C., Using classic problems to teach Java framework design Science of Computer Programming, , in press; Dijkstra, E.W., Updating a sequential file (1976) A Discipline of Programming, pp. 117-122. , Prentice Hall, ch. 15; Dwyer, B., One more time - How to update a master file (1981) Communications of the ACM, 81 (1), pp. 3-8. , January; Fayad, M.E., Schmidt, D.C., Johnson, R.E., Application frameworks (1999) Building Application Frameworks: Object-Oriented Foundations of Framework Design, , M. E. Fayad, D. C. Schmidt, and R. E. Johnson, Eds. Wiley; Folk, M.J., Zoellick, B., Riccardi, G., (1998) File Structures: An Object-Oriented Approach with C++, 3rd Ed., , Addison-Wesley; Fontoura, M., Pree, W., Rumpe, B., (2002) The UML Profile for Framework Architectures, , Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Goodrich, M.T., Tamassia, R., (2004) Data Structures and Algorithms in Java, 3rd Ed., , Wiley; Hoogerwoord, R., (1989) The Design of Functional Programs: A Calculational Approach, , Ph.D. dissertation, Technical University of Eindhoven, The Netherlands; (2004) Hugs Online, , http://www.haskell.org/hugs; Li, H., Reinke, C., Thompson, S., Tool support for refactoring functional programs (2003) Proceedings of the ACM SIGPLAN Haskell Workshop, , Uppsala, Sweden, August; Parnas, D.L., On the design and development of program families (1976) IEEE Transactions on Software Engineering, SE-2 (1), pp. 1-9. , March; (2003) Haskell 98 Language and Libraries: The Revised Report, , S. Peyton Jones, Ed., Cambridge University Press, May; Free, W., Koskimies, K., Framelets - Small is beautiful (1999) Building Application Frameworks: Object-oriented Foundations of Framework Design, pp. 411-414. , M. E. Fayad, D. C. Schmidt, and R. E. Johnson, Eds. Wiley; Roberts, D., Johnson, R., Patterns for evolving frameworks (1998) Pattern Languages of Program Design 3, pp. 471-486. , R. Martin, D. Riehle, and F. Buschmann, Eds. Addison-Wesley; Schmid, H.A., Framework design by systematic generalization (1999) Building Application Frameworks: Object-Oriented Foundations of Framework Design, pp. 353-378. , M. E. Fayad, D. C. Schmidt, and R. E. Johnson, Eds. Wiley; Smaragdakis, Y., McNamara, B., Bridging functional and object-oriented programming (2000) Georgia Institute of Technology, Tech. Rep., 0 (27). , College of Computing; Tadepalli, P., Cunningham, H.C., Using function generalization with Java to design a cosequential framework (2005) Proceedings of the Conference on Applied Research in Information Technology, pp. 95-101. , Acxiom Laboratory for Applied Research, February; Thompson, S., Higher-order + polymorphic = reusable (1997) University of Kent, Tech. Rep., , Computing Laboratory, May; (1999) Haskell: The Craft of Functional Programming, , Addison-Wesley; Thompson, S., Reinke, C., A case study in refactoring functional programs (2003) Proceedings of the 7th Brazilian Symposium on Programming Languages, , May; Wallingford, E., Roundabout: A pattern language for recursive programming (1997) Proceedings of the Fourth Pattern Languages of Programs Conference, , Allerton, Illinois; Envoy: A pattern language for maintaining state (1999) Proceedings of the Sixth Pattern Languages of Programs Conference, , Allerton, Illinois","Cunningham, H.C.; Department of Computer and Information Science, University of Mississippi, 201 Weir Hall, University, MS 38677, United States; email: cunningham@cs.olemiss.edu",,,,"39th Annual Hawaii International Conference on System Sciences, HICSS'06",4 January 2006 through 7 January 2006,"Kauai, HI",68265,15301605,769525075,9780769525075,,,English,Proc. Annu. Hawaii Int. Conf. Syst. Sci.,Conference Paper,Scopus,2-s2.0-33749638761,
,,4,"Heer, J., Agrawala, M.",Software design patterns for information visualization,2006,IEEE Transactions on Visualization and Computer Graphics,12,5,,853,860,,81,10.1109/TVCG.2006.178,http://www.scopus.com/inward/record.url?eid=2-s2.0-33845658597&partnerID=40&md5=df531d60a9077da50adc059bb57ba669,"Computer Science Division, University of California, Berkeley, United States","Heer, J., Computer Science Division, University of California, Berkeley, United States; Agrawala, M., Computer Science Division, University of California, Berkeley, United States","Despite a diversity of software architectures supporting information visualization, it is often difficult to identify, evaluate, and re-apply the design solutions implemented within such frameworks. One popular and effective approach for addressing such difficulties is to capture successful solutions in design patterns, abstract descriptions of interacting software components that can be customized to solve design problems within a particular context. Based upon a review of existing frameworks and our own experiences building visualization software, we present a series of design patterns for the domain of information visualization. We discuss the structure, context of use, and interrelations of patterns spanning data representation, graphics, and interaction. By representing design knowledge in a reusable form, these patterns can be used to facilitate software design, implementation, and evaluation, and improve developer education and communication. © 2006 IEEE.",Design patterns; Information visualization; Object-oriented programming; Software engineering,"Data representation; Design patterns; Information visualization; Computer aided design; Computer architecture; Computer software; Data acquisition; Knowledge engineering; Object oriented programming; Information analysis; algorithm; article; computer graphics; computer interface; computer program; data base; factual database; information retrieval; methodology; Algorithms; Computer Graphics; Database Management Systems; Databases, Factual; Information Storage and Retrieval; Software; Software Design; User-Computer Interface",,,,,,"Ahlberg, C., Williamson, C., Shneiderman, B., Dynamic queries for-information exploration: An implementation and evaluation (1992) ACM Human Factors in Computing Systems (CHI); Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press; Bederson, B.B., Grosjean, J., Meyer, J., Toolkit design for interactive structured graphics (2004) IEEE Transactions on Software Engineering, 30 (8), pp. 535-546; Bertin, J., (1983) Semiology of Graphics: Diagrams, Networks, Maps, , translated by W. J. Berg. University of Wisconsin Press; Card, S.K., Mackinlay, J.D., Robertson, G.G., The information visualizer: An information workspace (1991) ACM Human Factors in Computing Systems (CHI); (1999) Readings in Information Visualization: Using Vision to Think, , Card, S. K., J. D. Mackinlay, B. Schneiderman (eds.). Morgan-Kaufman; Chen, H., Towards design patterns for dynamic analytical data visualization (2004) Proceedings of SPIE Visualization and Data Analysis; Chi, E.H., Riedl, J.T., An operator interaction framework for visualization systems (1998) IEEE Symposium on Information Visualization (Info Vis); Chi, E.H., Expressiveness of the data flow and data state models in visualization systems (2002) Advanced Visual Interfaces (AVI); Cleveland, W.S., McGill, R., Graphical perception: Theory, experimentation, and application to the development of graphical methods (1984) Journal of the American Statistical Association, 79 (387), pp. 531-554. , September; Eick, S.G., Visual discovery and analysis (2000) IEEE Transactions on Visualization and Computer Graphics, 6 (10). , January; Fekete, J.-D., The infoVis toolkit (2004) IEEE Symposium on Information Visualization (InfoVis); Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Heer, J., Card, S.K., Landay, J.A., Prefuse: A toolkit for interactive information visualization (2005) ACM Human Factors in Computing Systems (CHI); Hudson, S.E., Stasko, J.T., Animation support in a user interface toolkit: Flexible, robust, and reusale abstractions (1992) ACM Symposium on User Interface and Software Technologies (UIST); Krasner, G.E., Pope, S.T., A cookbook for using the model-view-controller user interface paradigm in smalltalk-80 (1988) Journal of Object-Oriented Programming, 1 (3), pp. 26-49. , August; Mackinlay, J.D., Automating the design of graphical presentations of relational information (1980) ACM Transactions on Graphics, 5 (2), pp. 110-141; Schmidt, D.C., Using design patterns to develop re-usable object-oriented communication software (1995) Communications of the ACM, 38 (10). , October; Schroeder, W.J., Martin, K.M., Lorensern, W.E., (1996) The Visualization Toolkit: An Objecct-oriented Approach to 3D Graphics, , Prentice Hall; Stolte, C., Tang, D., Hanrahan, P., Polaris: A system for query, analysis and visualization of multi-dimensional relational databases (2002) IEEE Transactions on Visualization and Computer Graphics, 8 (1). , January; Stolte, C., Tang, D., Hanrahan, P., Multiscale visualization using data cubes (2002) IEEE Symposium on Information Visualization (InfoVis); Tang, D., Stolte, C., Hanrahan, P., Design choices when architecting visualizations (2003) IEEE Symposium on Information Visualization (InfoVis); Weaver, C., Building highly-coordinated visualizations in improvise (2004) IEEE Symposium on Information Visualization (InfoVis)","Heer, J.; Computer Science Division, University of California, Berkeley, United States; email: jheer@cs.berkeley.edu",,,,,,,,10772626,,ITVGE,17080809,English,IEEE Trans Visual Comput Graphics,Conference Paper,Scopus,2-s2.0-33845658597,,
,,4,"Mehta, P., Amaral, J.N., Szafron, D.",Is MPI suitable for a generative design-pattern system?,2006,Parallel Computing,32,7-8,,616,626,,5,10.1016/j.parco.2006.06.008,http://www.scopus.com/inward/record.url?eid=2-s2.0-33750288438&partnerID=40&md5=7bd38e5213396d6164e0a94aca6f6d53,"Department of Computing Science, University of Alberta, Edmonton, AB T6G 2E8, Canada","Mehta, P., Department of Computing Science, University of Alberta, Edmonton, AB T6G 2E8, Canada; Amaral, J.N., Department of Computing Science, University of Alberta, Edmonton, AB T6G 2E8, Canada; Szafron, D., Department of Computing Science, University of Alberta, Edmonton, AB T6G 2E8, Canada","Generative parallel design patterns can be used to improve the productivity of parallel program development. However many of the generative design-pattern systems are developed for target languages that are not widely used by the high-performance computing community. This paper describes an initial effort to develop a system that will hopefully answer the question in the title in the affirmative. This new system is ostensibly based on, and built upon the experience with, the successful CO2P3S system. Significant challenges must be overcome to implement the features of a system that generates frameworks conceived for an object-oriented programming language (Java) into a parallel-annotated procedural language (MPI/C). © 2006 Elsevier B.V. All rights reserved.",Cowichan problems; Design patterns; Mesh; MPI; Parallel programming; Programming environments; Search tree,Computer systems programming; Java programming language; Object oriented programming; Pattern recognition; Cowichan problems; Design patterns; Mesh; MPI; Parallel programming; Programming environments; Search tree; Parallel processing systems,,,,,,"Anvik, J., Schaeffer, J., Szafron, D., Tan, K., Asserting the utility of CO2P3S using the Cowichan Problem Set (2005) Journal of Parallel and Distributed Computing (JPDC), 65 (12), pp. 1542-1557; Blumofe, R.D., Joerg, C.F., Kuszmaul, B.C., Leiserson, C.E., Randall, K.H., Zhou, Y., Cilk: an efficient multithreaded runtime system (1996) Journal of Parallel and Distributed Computing (JPDC), 37, pp. 55-69; Cole, M., Bringing skeletons out of the closet: a pragmatic manifesto for skeletal parallel programming (2004) Parallel Computing, 30 (3), pp. 389-406; Danelutto, M., Teti, P., Lithium: a structured parallel programming environment in Java (2002) LNCS, 2330. , Proceedings of Computational Science - ICCS 2002, Springer-Verlag pp. 844-853; Hum, H.H.J., Maquelin, O., Theobald, K.B., Tian, X., Gao, G.R., Hendren, L.J., A study of the EARTH-MANNA multithreaded system (1996) International Journal of Parallel Programming, 24 (4), pp. 319-347; MacDonald, S., Anvik, J., Bromling, S., Schaeffer, J., Szafron, D., Tan, K., From patterns to frameworks to parallel programs (2002) Parallel Computing, 28 (12), pp. 1663-1683; Amaral, J.N., Kakulavarapu, P., Maquelin, O.C., Gao, G.R., Dynamic load balancers for a multithreaded multiprocessor system (2001) Parallel Processing Letters, 11 (1), pp. 169-184; Wilson, G., Assessing the usability of parallel programming systems: the Cowichan problems (1994) Programming Environments for Massively Parallel Distributed Systems, pp. 183-193. , Dekker K., and Rehmann R. (Eds), Birkhauser-Verlag, Basel, Switzerland","Szafron, D.; Department of Computing Science, University of Alberta, Edmonton, AB T6G 2E8, Canada; email: duane@cs.ualberta.ca",,,,,,,,1678191,,PACOE,,English,Parallel Comput,Article,Scopus,2-s2.0-33750288438,,
,,1,"Halkidis, S.T., Chatzigeorgiou, A., Stephanides, G.",A qualitative analysis of software security patterns,2006,Computers and Security,25,5,,379,392,,13,10.1016/j.cose.2006.03.002,http://www.scopus.com/inward/record.url?eid=2-s2.0-33746329309&partnerID=40&md5=9e11d6ed2a8fe7d8d98c4150c7a7f413,"Department of Applied Informatics, University of Macedonia, Egnatia 156, GR-54006 Thessaloniki, Greece","Halkidis, S.T., Department of Applied Informatics, University of Macedonia, Egnatia 156, GR-54006 Thessaloniki, Greece; Chatzigeorgiou, A., Department of Applied Informatics, University of Macedonia, Egnatia 156, GR-54006 Thessaloniki, Greece; Stephanides, G., Department of Applied Informatics, University of Macedonia, Egnatia 156, GR-54006 Thessaloniki, Greece","Software security, which has attracted the interest of the industrial and research community during the last years, aims at preventing security problems by building software without the so-called security holes. One way to achieve this goal is to apply specific patterns in software architecture. In the same way that the well-known design patterns for building well-structured software have been defined, a new kind of patterns called security patterns have emerged. These patterns enable us to incorporate a level of security already at the design phase of a software system. There exists no strict set of rules that can be followed in order to develop secure software. However, a number of guidelines have already appeared in the literature. Furthermore, the key problems in building secure software and major threat categories for a software system have been identified. An attempt to evaluate known security patterns based on how well they follow each principle, how well they encounter with possible problems in building secure software and for which of the threat categories they do take care of, is performed in this paper. Thirteen security patterns were evaluated based on these three sets of criteria. The ability of some of these patterns to enhance the security of the design of a software system is also examined by an illustrative example of fortifying a published design. © 2006 Elsevier Ltd. All rights reserved.",Design patterns; Security architecture; Security patterns; Software architecture; Software security,Computer architecture; Problem solving; Software engineering; Design patterns; Security architecture; Security patterns; Security of data,,,,,,"Avizienis, A., Laprie, J.C., Randell, B., Landwehr, C., Basic concepts and taxonomy of dependable and secure computing (2004) IEEE Transactions on Dependable and Secure Computing, 1 (1), pp. 11-33; Beck, K., Johnson, R., Patterns generate architectures (1994) Lecture Notes in Computer Science, 821, pp. 139-149; Buschmann, F., Meunier, R., Rohnert, H., Sommerland, P., Stahl, M., (1996) Pattern oriented software architecture - a system of patterns, , John Wiley and Sons; Fernandez, E., Metadata and authorization patterns, , http://www.cse.fau.edu/%7Eed/MetadataPatterns.pdf; Fites, P., Kratz, M., (1996) Information systems security: a practitioner's reference, , International Thomson Computer Press; Fowler, M., (2003) UML distilled: a brief guide to the standard modeling language. 3rd ed., , Addison Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design patterns, , Addison Wesley; Howard, M., LeBlanc, D., (2002) Writing secure code, , Microsoft Press; Nicol, D.M., Sanders, W.H., Trivedi, K.S., Model-based evaluation: from dependability to security (2004) IEEE Transactions on Dependable and Secure Computing, 1 (1), pp. 48-65; Ramachandran, J., (2002) Designing security architecture solutions, , John Wiley and Sons; Romanosky, S., Security design patterns, , http://www.romanosky.net/papers/securityDesignPatterns.html; (1999) Information security management handbook. 4th ed., , Tipton H., and Krause M. (Eds), CRC Press - Auerbach Publications; Viega, J., McGraw, G., (2002) Building secure software, how to avoid security problems the right way, , Addison Wesley; ","Halkidis, S.T.; Department of Applied Informatics, University of Macedonia, Egnatia 156, GR-54006 Thessaloniki, Greece; email: halkidis@java.uom.gr",,,,,,,,1674048,,CPSED,,English,Comput Secur,Article,Scopus,2-s2.0-33746329309,,
,,1,"Arvola, M.",Interaction design patterns for computers in sociable use,2006,International Journal of Computer Applications in Technology,25,2-3,,128,139,,22,10.1504/IJCAT.2006.009063,http://www.scopus.com/inward/record.url?eid=2-s2.0-33645309913&partnerID=40&md5=e1cf500aee354556ac46c8bd057293ec,"Department of Computer and Information Science, Linköping University, Linköping SE-581 83, Sweden","Arvola, M., Department of Computer and Information Science, Linköping University, Linköping SE-581 83, Sweden","This paper contributes to a growing body of design patterns in interaction design for cooperative work, while also describing how to go from field studies to design patterns. It focuses on sociable face-to-face situations. The patterns are based on field studies and design work in three sociable settings, where desirable use qualities were identified and translated into forces in three design patterns for controlling information visibility. On the basis of the patterns, the design of a multiple-device multimedia platform is described. It is shown that desirable qualities of systems-in-use can be utilised as forces in patterns, which means that traditional qualitative research is highly valuable when documenting design knowledge in patterns. Three classes of interaction design patterns are identified: environments for interactions, means for interaction and interfaces for interaction. These classes describe types of patterns within a hierarchical model of interaction design. Copyright © 2006 Inderscience Enterprises Ltd.",Colocated collaboration; Computer-supported cooperative work (CSCW); Cooperative systems; Design patterns; Human-computer interaction (HCI); Interaction design; Social computing; Use quality,Control systems; Human computer interaction; Mathematical models; Multimedia systems; Colocated collaboration; Computer-supported cooperative work (CSCW); Interaction design; Social computing; Interactive computer graphics,,,,,,"Alexander, C., (1979) The Timeless Way of Building, , New York, NY: Oxford University Press; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language: Towns, Buildings, Construction, , New York, NY: Oxford University Press; Arisaka, Y., On Heidegger's theory of space: A critique of Dreyfus (1995) Inquiry, 38 (4), pp. 455-467; Artman, H., Wærn, Y., Distributed cognition in an emergency coordination center (1999) Cognition, Technology and Work, 1, pp. 237-246; Arvola, M., Larsson, A., Regulating prominence: A design pattern for colocated collaboration (2004) Proceedings of COOP 04, Sixth International Conference on the Design of Cooperative Systems, , French Riviera, France, 11-14 May, Amsterdam, The Netherlands: IOS Press; Arvola, M., Shades of use: The dynamics of interaction design for sociable use (2005) Linköping Studies in Science and Technology, , Dissertation No. 900, Linköpings Universitet, Linköping, Sweden; Baecker, R.M., The future of groupware for CSCW (1993) Readings in Groupware and Computer-Supported Cooperative Work: Assisting Human-Human Collaboration, , R.M. Baecker (Ed). San Mateo, CA: Morgan Kaufmann Publishers, Inc; Brown, P., Levinson, S., (1987) Politeness: Some Universals in Language Use, , Cambridge, UK: Cambridge University Press; Bång, M., Berglund, E., Larsson, A., A paper-based ubiquitous computing healthcare environment (2002) Poster Presented at UbiComp 2002: Ubiquitous Computing. Fourth International Conference, , Göteborg, Sweden, 29 September-1 October; Bødker, S., A human activity approach to user interfaces (1989) Human-Computer Interaction, 4 (3), pp. 171-195; Bødker, S., Applying activity theory to video analysis: How to make sense of video data in human-computer interaction (1996) Context and Consciousness: Activity Theory and Human-Computer Interaction, , B.A. Nardi (Ed). Cambridge, MA: The MIT Press; Clark, H.H., (1996) Using Language, , Cambridge, UK: Cambridge University Press; Clark, H.H., Brennan, S.A., Grounding in communication (1991) Perspectives on Socially Shared Cognition, , L.B. Resnick, J.M. Levine and S.D. Teasley (Eds). Washington, DC: APA Books; Dourish, P., Bellotti, V., Awareness and coordination in shared workspaces (1992) Proceedings of Computer Supported Cooperative Work '92, , Toronto, Ontario, Canada New York, NY: ACM Press, 31 October-4 November; Ely, M., Kvalitativ forskningsmetodik i praktiken - Cirklar inom cirklar (1993) Lund, Sweden: Studentlitteratur. Original Title: Doing Qualitative Research: Circles in Circles, 1991, , New York, NY: The Flamer Press; Erickson, T., Lingua francas for design: Sacred places and pattern languages* (2000) Proceedings of Designing Interactive Systems: Processes, Practices, Methods and Techniques (DIS 2000), , New York, NY: ACM Press; Garbis, C., Exploring the openness of cognitive artefacts in cooperative process management (2002) Cognition, Technology and Work, 4, pp. 9-21; Geisler, C., Rogers, E.H., Tobin, J., Going public: Collaborative systems design for multidisciplinary conversations (1999) Proceedings of Cooperative Buildings: Integrating Information, Organisations and Architecture, CoBuild'99, , Pittsburgh, PA, 1-2 October; Goffman, E., (1967) Interaction Ritual: Essays on Face-to-face Behavior, , Chicago, IL: Aldine; Granlund, A., Lafrenière, D., A pattern-supported approach to the user interface design process (1999) Workshop Report of UPA'99 Usability Professionals Association Conference, , Scottsdale, AZ, 29 June-2 July; Greenberg, S., Boyle, M., LaBerge, J., PDAs and shared public displays: Making personal information public and public information personal (1999) Personal Technologies, 3 (1), pp. 54-64; (2005) Groupware-Patterns Swiki, , http://wwwpi6.fernuni-hagen.de:8080/gw-patterns, Last accessed on 16 March; Guy, E.S., Designing activity with patterns (2004) Proceedings of the ATIT 2004, First International Workshop on Activity Theory Based Practical Methods for IT Design, , Copenhagen, Denmark, 2-3 September; Heath, C., Luff, P., Collaboration and control: Crisis management and multimedia technology in London underground line control rooms (1992) Computer Supported Cooperative Work(CSCW), 1, pp. 69-94; Halloran, J., Rogers, Y., Rodden, T., Taylor, I., Creating new user experiences to enhance collaboration (2003) Proceedings of INTERACT'03 IFIP TC13 International Conference on Human-Computer Interaction, , Zurich, Switzerland, 1-5 September, Amsterdam, The Netherlands: IOS Press; Hinckley, K., Ramos, G., Guimbretiere, F., Saudisch, P., Smith, M., Stitching: Pen gestures that span multiple displays (2004) Proceedings of the Working Conference on Advanced Visual Interfaces (AVI 2004), , Gallipoli, Italy, 25-28 May, New York, NY: ACM Press; Holtzblatt, K., Beyer, H., Customer-centered design work for teams (1993) Communications of the ACM, 36 (10), pp. 92-103; Hughes, J., King, V., Rodden, T., Andersen, H., Moving out from the control room: Ethnography in system design (1994) Proceedings of the 1994 ACM Conference on Computer Supported Cooperative Work, , Chapel Hill, NC, New York, NY: ACM Press; Intille, S.S., Change blind information display for ubiquitous computing environments (2002) Proceedings of the UbiComp 2002: Ubiquitous Computing, Fourth International Conference, , Gothenburg, Sweden, 29 September - 1 October; Junestrand, S., Keijer, U., Tollmar, K., Private and public digital domestic spaces (2001) International Journal of Human-computer Studies, 54, pp. 753-778; Kuutti, K., Activity theory as a potential framework for human-computer interaction (1996) Context and Consciousness - Activity Theory and Human-Computer Interaction, , B.A. Nardi (Ed). Cambridge, MA: The MIT Press; Kvale, S., (1997) Den Kvalitativa Forskningsintervjun, , Lund, Sweden: Studentlitteratur, English Title: InterWiews, 1996, London, UK: Sage Publications; Lai, J., Levas, A., Chou, P., Pinhanez, C., Viveros, M., BlueSpace: Personalizing workspace through awareness and adaptability (2002) International Journal of Human-computer Studies, 57, pp. 415-428; Leontiev, A.N., (1978) Activity, Consciousness and Personality, , Engelwood Cliffs, NJ: Prentice-Hall; Luff, P., Heath, C., Greatbatch, D., Tasks-in-interaction: Paper and screen based documentation in collaborative activity (1992) Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work, , Toronto, Ontario, Canada, 31 October - 4 November, New York, NY: ACM Press; Martin, D., Rodden, T., Sommerville, I., Rouncefield, M., Hughes, J.A., (2002) Pointer: Patterns of Interaction: A Pattern Language for CSCW, , http://www.comp.lancs.ac.uk/computing/research/cseg/projects/pointer/ pointer.html, Last accessed on 11 January 2005; Martin, D., Rodden, T., Sommerville, I., Rouncefield, M., Viller, S., Finding patterns in the fieldwork (2001) Proceedings of the Seventh European Conference on Computer Supported Cooperative Work, ECSCW 2001, , Bonn, Germany, Dordrecht, 16-20 September, The Netherlands: Kluwer Academic Publishers; Myers, B.A., Using handhelds and PCs together (2001) Communications of the ACM, 44 (11), pp. 34-41; Nelson, H.G., Stolterman, E., (2003) The Design Way: Intentional Change in An Unpredictable World: Foundations and Fundamentals of Design Competence, , Englewood Cliffs, NJ: Educational Technology Publications; Nunamaker, J.F., Dennis, A.R., Valacich, J.S., Vogel, D.R., George, J.F., Electronic meeting rooms to support group work (1991) Communications of the ACM, 34 (7), pp. 40-61; Rekimoto, J., A multiple device approach for supporting whiteboard-based interactions (1998) Proceedings of the CHI 98 Conference on Human Factors in Computing Systems, , Los Angeles, CA; New York, NY, USA: ACM Press; Rodden, T., Rogers, Y., Halloran, J., Taylor, I., Designing novel interactional workspaces to support face to face consultations (2003) Proceedings of the CHI'03 Conference on Human Factors in Computing Systems, , Ft. Lauderdale, FL; New York, NY, USA: ACM Press; Rosson, M.B., Carroll, J.M., Narrowing the specification-implementation gap in scenario-based design (1995) Scenario-Based Design. Envisioning Work and Technology in System Development, , J.M. Carroll (Ed). New York, NY: John Wiley and Sons, Inc; Saunders, W.S., Book reviews: A pattern language (2002) Harvard Design Magazine, (16), pp. 1-7. , Winter/Spring; Scaife, M., Halloran, J., Rogers, Y., Let's work together: Supporting two-party collaborations with new forms of shared interactive representations (2002) Proceedings of the Fifth International Conference on the Design of Cooperative Systems, COOP 2002: A Challenge of the Mobility Age, , Saint-Raphael, France, 4-7 June, Amsterdam, The Netherlands: IOS Press; Sjölund, M., Larsson, A., Berglund, E., Smartphone views: Building multi-device distributed user interfaces (2004) Proceedings of Mobile HCI, , Glasgow, Scotland, 13-16, September, London, UK: Springer; Stewart, J., Bederson, B.B., Drain, A., Single-display groupware: A model for co-present collaboration (1999) Proceedings of the CHI'99 Conference on Human Factors in Computing Systems:The CHI Is the Limit, , 15-20 May, Pittsburgh, PA; New York, NY, USA: ACM Press; Streitz, N.A., Rexroth, P., Holmer, T., Does 'roomware' matter? Investigating the role of personal and public information devices and their combination in meeting room collaboration (1997) Proceedings of the Fifth European Conference on Computer-supported Cooperative Work (ECSCW '97), , Lancaster, UK, 7-11 September, Dordrecht, The Netherlands: Kluwer Academic Publishers; Streitz, N.A., Tandler, P., Müller-Tomfelde, C., Konomi, S., Roomware: Towards the next generation of human-computer interaction based on an integrated design of real and virtual worlds (2001) Human-Computer Interaction in the New Millennium, , J. Carrol (Ed). New York, NY: ACM Press; Sundholm, H., Artman, H., Ramberg, R., Backdoor creativity: Collaborative creativity in technology supported teams (2004) Proceedings of COOP 04, Sixth International Conference on the Design of Cooperative Systems, , French Riviera, France, 11-14 May, Amsterdam, The Netherlands: IOS Press; Tidwell, J., (1999) Common Ground: A Pattern Language for Human-computer Interface Design, , http://www.mit.edu/~jtidwell/interaction_patterns.html, Last accessed on 11 January 2005; Tidwell, J., (2004) UI Patterns and Techniques, , http://time-tripper.com/uipatterns/index.php, Last accessed on 30 June 2004; Walsham, G., Interpretative case studies in IS research: Nature and method (1995) European Journal of Information Systems, 4, pp. 74-81; Weilenmann, A., Negotiating use: Making sense of mobile technology (2001) The Journal of Personal and Ubiquitous Computing, 5 (2), pp. 137-145. , Special Issue on Mobile Communication and the Reformulation of Social Order; Van Welie, M., (2004) Patterns in Interaction Design, , http://www.welie.com/, Last accessed on 30 June 2004; Van Welie, M., Van Der Veer, G.C., Pattern languages in interaction design: Structure and organization (2003) Proceedings of Interact '03, , Zurich, Switzerland, 1-5 September, Amsterdam, The Netherlands: IOS Press; Wellner, P., Mackay, W., Gold, R., Back to the real world (1993) Communications of the ACM, 36 (7), pp. 24-27","Arvola, M.; Department of Computer and Information Science, Linköping University, Linköping SE-581 83, Sweden; email: matar@ida.liu.se",,,,,,,,9528091,,IJCTE,,English,Int J Comput Appl Technol,Article,Scopus,2-s2.0-33645309913,,
,,1,"Graziano, A., Dearden, A., Seaton, J.W., Williams, L.A.",Towards a classification framework for security patterns,2006,"Proceedings of the 6th International Network Conference, INC 2006",,,,237,244,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84926179693&partnerID=40&md5=996b78f69c9f0af31d2b666e22796a6f,"Communication and Computing Research Centre, Sheffield Hallam University, Sheffield, United Kingdom","Graziano, A., Communication and Computing Research Centre, Sheffield Hallam University, Sheffield, United Kingdom; Dearden, A., Communication and Computing Research Centre, Sheffield Hallam University, Sheffield, United Kingdom; Seaton, J.W., Communication and Computing Research Centre, Sheffield Hallam University, Sheffield, United Kingdom; Williams, L.A., Communication and Computing Research Centre, Sheffield Hallam University, Sheffield, United Kingdom","Developing secure systems is an increasingly important, but extremely complex challenge. However, security is often an afterthought and not addressed throughout the system development lifecycle, with negative implications to the intended security of the final system and related development and operational costs. In the software engineering domain, design patterns are a popular way of sharing design knowledge to solve recurring problems. Security design patterns are a relatively new concept born out of traditional software design patterns, but with already promising applications to secure networks and systems design, and beyond that to the management of information security. In this paper the authors present a framework for the classification of security patterns, which can promote the effective use of security patterns for addressing traditional and future security problems.",Design pattern; Pattern classification; Security; Security pattern,Application programs; Complex networks; Information management; Pattern recognition; Security of data; Software design; Software engineering; Classification framework; Design Patterns; Security; Security patterns; Security problems; Software design patterns; Software engineering domain; System development; Mobile security,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , Oxford, UK. Oxford University Press; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: A System of Patterns, , John Wiley & Sons, Inc. New York, NY, 1996; Cline, M.P., The pros and cons of adopting and applying design patterns in the real world (1996) Communications of the ACM, 39 (10), pp. 47-49; Coplien, J., Schmidt, D., (1995) Pattern Languages of Program Design, , Reading MA. USA, Addison-Wesley; Dearden, A., Finlay, J., (2006) Pattern Languages in HCI: A Critical Review; Delessy-Gassant, N., Fernandez, E., Rajput, S., Larrondo-Petrie, M., Patterns for application firewalls (2004) Proceedings of the 11th Conference on Pattern Languages of Programs (PLoP), , September 8 - 12, 2004, Allerton Park, Monticello, Illinois; Elder, M., Kienzle, D., (2002) Security Patterns for Web Application Development, , Technical Report, University of Virginia, USA; Elsinga, B., Hofman, A., Control the actor based access rights (2002) Proceedings of the 7th European Conference on Pattern Languages of Programs (EuroPLoP), , July 3-7, 2002, Irsee, Germany; Fernandez, E.B., Larrondo-Petrie, M.M., Seliya, N., Delessy, N., Herzberg, A., A pattern language for firewalls (2003) Proceedings of the 10th Conferenceon Pattern Languages of Programs 2003 (PLoP), , September 8th - 12th, 2003, Allerton Park Monticello, Illinois, USA; Fincher, S., Patterns for HCI and cognitive dimensions: Two halves of the same story? (2002) Proceedings of the Fourteenth Annual Workshop of the Psychology of Programming Interest Group, pp. 156-172. , Kuljis, J. Baldwin, L. & Scoble, R. (eds.), Brunel University, UK, June 2002; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Goldfedder, B., Rising, L., A training experience with patterns (1996) Communications of the ACM, 39 (10), pp. 60-64; Kis, M., Information security anti patterns in software requirements engineering (2002) Proceedings of the 10th Conference on Pattern Languages of Programs 2002 (PLoP), , September 8th-12th, 2002, Allerton Park Monticello, Illinois, USA; Lehtonen, S., Parssinen, J., A pattern language for cryptographic key management (2002) Proceedings of the 7th European Conference on Pattern Languages of Programs (EuroPLoP), , July 3-7, 2002, Irsee, Germany; Noble, J., Classifying relationships between object-oriented design patterns (1998) Proceedings of the Australian Software Engineering Conference (ASWEC), , 9-13 November 1998, Adelaide, Australia; Romanosky, S., Enterprise security patterns (2002) Proceedings of the 7th European Conference on Pattern Languages of Programs (EuroPLoP), , July 3-7, 2002, Irsee, Germany; Schmidt, D.C., Using design patterns to develop reusable object-oriented communications software (1995) Communications of the ACM, 38 (10), pp. 65-74; Schumacher, M., (2003) Security Engineering with Patterns: Origins, Theoretical Model, and New Applications, , Springer-Verlag; Steinmetz, R., (2003) From Security Engineering with Patterns: Origins, Theoretical Model, and New Applications, pp. VI. , Springer-Verlag, (foreword); Steel, C., Nagappan, R., Lai, R., (2005) Core Security Patterns: Best Practices and Strategies for J2EE(TM), Web Services, and Identity Management, , Prentice Hall PTR; Yoder, J., Barcalow, J., Architectural patterns for enabling application security (1997) Proceedings of the 4th Conference on Pattern Languages of Programs (PLoP), , September 3-5, 1997, Allerton Park, Monticello, Illinois, USA",,Dowland P.S.Furnell S.M.,British Computer Society (BCS);Cisco Networking Academy;Emerald;Internet Research;Orange Personal Communications Services;Symantec,University of Plymouth,"6th International Network Conference, INC 2006",11 July 2006 through 14 July 2006,,111370,,1841021571,9781841021577,,,English,"Proc. Int. Netw. Conf., INC",Conference Paper,Scopus,2-s2.0-84926179693,
,,4,"Radonjic, V.D., Corriveau, J.-P.",Making patterns better design tools: Requirements analysis for a family of navigators for design pattern catalogs,2005,"Proceedings of the IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",,,,349,354,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84882930905&partnerID=40&md5=2c67d2e5c5b824e3f62b036696b49054,"School of Computer Science, Carleton University, Ottawa, Canada","Radonjic, V.D., School of Computer Science, Carleton University, Ottawa, Canada; Corriveau, J.-P., School of Computer Science, Carleton University, Ottawa, Canada","It is widely recognized that the software community could make patterns an even more effective tool in problem solving. However, a major obstacle is organizing the system of concepts embodied in patterns from a point of view of a designer faced with design decision-making: The need to navigate spaces of problems and solutions presented in each pattern and their catalogs and the need to track the choices made. This paper proposes a knowledge representation schema based on generative modeling techniques that make explicit what is in design patterns, as well as how navigation and recording of design choices can be performed with the help of such a model.",Design pattern catalogs; Modeling navigation; Selection,Design decision-making; Design Patterns; Effective tool; Generative model; Problems and Solutions; Requirements analysis; Selection; Software community; Design; Information science; Knowledge representation; Software engineering,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, W.M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , New York, NY: Oxford University Press; Alexander, C., (1979) The Timeless Way of Building, , New York, NY: Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns-Elements of Reusable Object-Oriented Software, , Reading, MA: Addison-Wesley; Buschman, F., Henney, K., A Distributed Pattern Language (2002) Proc. Seventh European Conference on Pattern Languages of Programs, , http://hillside.net/patterns/EuroPLoP2002/, Irsee, Germany, (available at); Pree, W., (1994) Design Patterns for Object-Oriented Software Development, , Reading, MA: Addison-Wesley; Fontoura, M., Pree, W., Rumpe, B., (2002) The UML Profile for Framework Architectures, , Reading, MA: Addison- Wesley; Czarnecki, K., Eisenecker, U.W., (2000) Generative Programming: Methods, Tools, and Application, , Reading, MA: Addison-Wesley; Buschman, F., Meunier, R., Rohnert, H., Sommerlad, P., Stall, M., (1996) Pattern-Oriented Software Architecture - A System of Patterns, , Chichester, West Sussex, England: Wiley and Sons; Schmidt, D.C., Huston, S.D., (2002) C++ Network Programming: Mastering Complexity with ACE and Patterns, , Reading, MA: Addison-Wesley; Alexandrescu, A., (2001) Modern C++ Design: Generic Programming and Design Patterns Applied, , Reading, MA: Addison-Wesley; Devolder, K., Implementing Design Patterns as Declarative Code Generators, 2001, , http://www.cs.ubc.ca/~kdvolder; Radonjic, V.D., Generative model of the gof family of creational patterns Tech. Report, School of Computer Science, Carleton University, , http://www.scs.carleton.ca/~jeanpier/techreports/voja1.pdf, available at; Beck, K., Johnson, R., Patterns Generate Architectures (1994) Proc. ECOOP'94, , ftp://st.cs.uiuc.edu/pub/papers/patterns/patterns-generatearchs.ps, Bologna, Italy, (available at)","Corriveau, J.-P.; School of Computer Science, Carleton University, Ottawa, Canada; email: jeanpier@scs.carleton.ca",,,,"IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",15 February 2005 through 17 February 2005,Innsbruck,98636,,889864640,9780889864641,,,English,"Proc. IASTED Int. Conf. Softw. Eng.: part 23rd IASTED Int. Multi-Conf. Appl. Informatics, SE",Conference Paper,Scopus,2-s2.0-84882930905,
,,v,"Feng, T., Li, W., Zhang, J., Ming, X.",Design pattern detection from java software,2005,"Proceedings of the IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",,,,174,180,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-52649109631&partnerID=40&md5=1bb4145e19a00b19cda6912e6fc15cd0,"College of Computer Science and Technology, Jilin University, ChangChun, 130012, China","Feng, T., College of Computer Science and Technology, Jilin University, ChangChun, 130012, China; Li, W., College of Computer Science and Technology, Jilin University, ChangChun, 130012, China; Zhang, J., College of Computer Science and Technology, Jilin University, ChangChun, 130012, China; Ming, X., College of Computer Science and Technology, Jilin University, ChangChun, 130012, China","Identification of design patterns from source code is one of the most promising methods for improving software maintainability and reusing design experience. In this paper, an approach of detecting design patterns from Java source code is presented. Concretely, the method of specifying design patterns and the mechanism of defining a source information model are provided. Through matching pattern description and source information model, an algorithm for detecting pattern instances from legacy system is illustrated with examples. Especially, the container problem coming across in design pattern detection is identified and resolved through our approach. Finally, the results of applying our approach are analyzed and further optimizing steps are discussed according to the relation between design patterns and design pattern instances.",Design pattern; Reverse engineering and programming understanding,Container problem; Design experience; Design pattern detections; Design Patterns; Information Modeling; Java source codes; Matching patterns; Software maintainability; Information theory; Java programming language; Legacy systems; Reverse engineering; Software engineering,,,,,,"Niere, J., Schafer, W., Wadsack, J., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proc. the 24th International Conference on Software Engineering, pp. 338-348. , Orlando, Florida, USA, May; Gueheneuc, Y.-G., Jussien, N., Using explanations for design patterns identification (2001) IJCAI'01 Workshop on Modeling and Solving Problems with Constraints, pp. 57-64; Ferenc, R., Gustafsson, J., Muller, L., Paakki, J., Recognizing design patterns in C++ programs with the integration of columbus and maisa (2002) Acta Cybernetica Journal, 15, pp. 669-682. , University of Szeged; Bansiya, J., (1998) DP++ is a Tool for C++ Programs, , Dr. Dobb's Journal, June; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Master's thesis. Department of Computer Engineering, North Carolina State University; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proc. the Working Conference on Reverse Engineering, pp. 208-215; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proc. the 6th International Work Shop on Program Comprehension, pp. 153-160. , Ischia, Italy, IEEE Computer Society Press, June; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns-elements of Reusable Object-oriented Software, , Addison-Wesley; Ludwig, A., Neumann, R., Amann, U., Heuzeroth, D., (2001) Recoder Homepage, , http://recoder.sf.net","College of Computer Science and Technology, Jilin University, ChangChun, 130012, China",,,,"IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",15 February 2005 through 17 February 2005,Innsbruck,98636,,889864640,9780889864641,,,English,"Proc. IASTED Int. Conf. Softw. Eng.: part 23rd IASTED Int. Multi-Conf. Appl. Informatics, SE",Conference Paper,Scopus,2-s2.0-52649109631,
,,4,"Garcia, A., Sant'Anna, C., Figueiredo, E., Kulesza, U., Lucena, C., Von Staa, A.",Modularizing design patterns with aspects: A quantitative study,2005,AOSD 2005: 4th International Conference on Aspect-Oriented Software Development - Conference Proceedings,,,,3,14,,79,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33244486970&partnerID=40&md5=411a1fe515f33acebd9e9590c25877a9,"Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil","Garcia, A., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil; Sant'Anna, C., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil; Figueiredo, E., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil; Kulesza, U., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil; Lucena, C., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil; Von Staa, A., Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de Janeiro, Brazil","Design patterns offer flexible solutions to common problems in software development. Recent studies have shown that several design patterns involve crosscutting concerns. Unfortunately, object-oriented (OO) abstractions are often not able to modularize those crosscutting concerns, which in turn decrease the system reusability and maintainability. Hence, it is important verifying whether aspect-oriented approaches support improved modularization of crosscutting concerns relative to design patterns. Ideally, quantitative studies should be performed to compare OO and aspect-oriented implementations of classical patterns with respect to important software engineering attributes, such as coupling and cohesion. This paper presents a quantitative study that compares aspect-based and OO solutions for the 23 Gang-of-Four patterns. We have used stringent software engineering attributes as the assessment criteria. We have found that most aspect-oriented solutions improve separation of patternrelated concerns, although only 4 aspect-oriented implementations have exhibited significant reuse. © 2005 ACM.",Aspect-oriented programming; Design patterns; Metrics,Aspect-oriented programming; Design patterns; Metrics; Modularization; Computer software; Metric system; Object oriented programming; Pattern recognition; Software engineering,,,,,,"Alencar, P., (2004) A Query-based Approach for Aspect Measurement and Analysis, , TR CS-2004-13, School of Computer Science, Univ. of Waterloo, Canada, Feb; Aspect, J., The AspectJ Guide, , http://eclipse.org/aspectj/; Chidamber, S., Kemerer, C., A metrics suite for OO design (1994) IEEE Trans. on Soft. Eng., 20 (6), pp. 476-493. , June; Fenton, N., Pfleeger, S., (1997) Software Metrics: A Rigorous Practical Approach, , London: PWS; Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Reading; Garcia, A., (2004) From Objects to Agents: An Aspect-oriented Approach, , Doctoral Thesis, PUC-Rio, Rio de Janeiro, Brazil, April; Garcia, A., Separation of concerns in multi-agent systems: An empirical study (2004) Software Engineering for Multi-agent Systems II, Springer, LNCS, 2940. , January; Garcia, A., Silva, V., Chavez, C., Lucena, C., Engineering multi-agent systems with aspects and patterns (2002) J. of the Brazilian Computer Society, 1 (8), pp. 57-72. , July; Hannemann, J., Kiczales, G., Design pattern implementation in java and AspectJ (2002) Proc. OOPSLA'02, pp. 161-173. , Nov; Henderson-Sellers, B., (1996) Object-oriented Metrics: Measures of Complexity, , Prentice Hall; Java Reference Documentation, , http://java.sun.com/reference/docs/index.html; Kersten, M., Murphy, G., Atlas: A case study in building a web-based learning environment using aspect-oriented programming (1999) Proceedings of OOPSLA'99, , November; Kiczales, G., Aspect-oriented programming (1997) Proc. of ECOOP'97, LNCS, 1241, pp. 220-242. , Finland, June; Soares, S., (2004) An Aspect-oriented Implementation Method, , Doctoral Thesis, Federal Univ. of Pernambuco, Oct; Lopes, C.D., (1997) A Language Framework for Distributed Programming, , PhD Thesis, Northeastern University; Modularizing Patterns with Aspects: A Quantitative Study, , http://www.teccomm.les.inf.pucrio.br/alessandro/GoFpatterns/ empiricalresults.htm; Sant'Anna, C., On the reuse and maintenance of aspect-oriented software: An assessment framework (2003) Proc. of Brazilian Symposium on Software Engineering (SBES'03), pp. 19-34. , Manaus, Brazil, Oct; Sant'Anna, C., Design patterns as aspects: A quantitative assessment (2004) Proc. of Brazilian Symposium on Software Engineering (SBES'04), , Brasilia, Brazil, Oct; Tarr, P., N degrees of separation: Multi-dimensional separation of concerns (1999) Proc. ICSE'99, pp. 107-119. , May; http://www.borland.com/together/Zhao, J., (2002) Towards a Metrics Suite for Aspect-oriented Software, , TR SE200213625,Inf. Proc. Society of Japan; Zhao, J., Xu, B., Measuring aspect cohesion (2004) Proc. Conf. on Fundamental Approaches to Software Engineering (FASE'04), pp. 54-68. , LNCS 2984, Barcelona, March; Zuse, H., History of Software Measurement, , Available online at: irb.cs.tu-berlin.de/~zuse/metrics/History_00.html","Garcia, A.; Software Engineering Laboratory, Computer Science Department, Pontifical Catholic University of Rio de JaneiroBrazil; email: afgarcia@les.inf.puc-rio.br",Tarr P.,"Aspect-Oriented Software Association, Inc., AOSA;Illinois Institute of Technology;BEA Systems Inc.;AOSD-Europe:European Netw.of Excel.on Aspect-Oriented Softw. Dev.;IBM Res.",,AOSD 2005: 4th International Conference on Aspect-Oriented Software Development,14 March 2005 through 18 March 2005,"Chicago, IL",66726,,1595930434,9781595930439,,,English,AOSD 4th Int. Conf. Aspect-Oriented Softw. Dev. Conf. Proc.,Conference Paper,Scopus,2-s2.0-33244486970,
,,4,"Bernardi, M.L., Di Lucca, G.A.",Improving design pattern quality using aspect orientation,2005,"Proceedings - 13th IEEE International Workshop on Software Technology and Engineering Practice, STEP 2005",2005,,1691649,206,215,,2,10.1109/STEP.2005.14,http://www.scopus.com/inward/record.url?eid=2-s2.0-33947669367&partnerID=40&md5=a262a4c25688b31200063ffe00e44f1b,"RCOST Research Centre on Software Technology, University of Sannio, Palazzo ex Poste, via Traiano, 82100 Benevento, Italy","Bernardi, M.L., RCOST Research Centre on Software Technology, University of Sannio, Palazzo ex Poste, via Traiano, 82100 Benevento, Italy; Di Lucca, G.A., RCOST Research Centre on Software Technology, University of Sannio, Palazzo ex Poste, via Traiano, 82100 Benevento, Italy","Object Oriented (OO) implementations of Design Patterns (DP) may suffer of some problems due to deficiencies of (OO) languages affecting some quality attributes such as modularity, comprehensibility, maintainability and testability. Aspect Oriented Programming (AOP) provides powerful constructs able to better handle modularity and composition; these constructs can help to overcome some of the trade-offs in current OO implementations of DPs. An approach to re-implement DPs by AOP is presented in this paper: some different AOP re-implementations of DPs in existing systems from real world have been performed to improve DPs quality. A set of existing metrics has been used to evaluate the quality of the different AOP implementations. Such an evaluation helps to select the implementation to use/reuse in a specified context. © 2005 IEEE.",Aspect oriented software development; Design patterns; Software engineering; Software metrics,Data handling; Object oriented programming; Pattern recognition; Problem solving; Real time systems; Aspect oriented software development; Design patterns; Modularity; Software metrics; Software design,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Hannemann, J., Kiczales, G., Design Patterns Implementation in Java and AspectJ (2002) Proceedings of the 17th ACM conference on Object-oriented programming, systems, languages, and applications (OOPSLA '02), , Seattle, Washington, USA, Nov, ACM Press; Hachani, O., Bardou, D., On Aspect-Oriented Technology and Object-Oriented Design Patterns (2003) Proc. of European Conference on Object Oriented Programming (ECOOP, , July 21-25, Darmstadt, Germany, ACM Press; Monteiro, J., M.P., Fernandes J.M., Towards a catalog of Aspect Oriented Refactorings (2005) Proc. of Aspect oriented Software Development 2005 (AOSD '05), , 14-18 March, Chicago, USA, ACM Press; Nordberg Martin, E., Aspect Oriented Indirection - Beyond Object Oriented Design Patterns (2002) Proc. of Workshop. Beyond Design: Patterns (mis)used, Proc. of Object Oriented Programming Systems Languages and Applications 2002 (OOPSLA '02), , November 4-8, Seattle, Washington, USA, ACM Press; Bruntink, M., Aspect Mining using Clone Class Metrics (2004) Proc. of Workshop on Aspect Reverse Engineering 2004 (WARE '04), , November 9th, Delft,Netherlands, IEEE Computer Society Press; Garcia, A., Separation of Concerns in Multi-Agent Systems: An Empirical Study. In Software Engineering for Multi-Agent Systems II (2004) Springer - Lecture Notes on Computer Science, , SELMAS 2003, January, Portland, Oregon, USA, ACM Press; Garcia, A., Silva, V., Chavez and C., Lucena, C. 'Engineering Multi-Agent Systems with Aspects and Patterns', Journal of the Brazilian Computer Society, 1, 8 (July 2002), 57-72, ISSN 0104-6500. [9] AspectJ web site - http://www.eclipse.org/aspectjCeccato, M., Tonella, P., Measuring the effects of software aspectization (2004) Proc. of Workshop on Aspect Reverse Engineering 2004 (WARE '04), , November 9th, Delft,Netherlands, IEEE Computer Society Press; Chidamber, S.R., Kemerer, C.F., A Metric suite for object oriented design (1994) IEEE Transactions on Software Engineering, , IEEE Computer Society Press; Shonle, M., Neddenriep, J., Griswold, W., AspectBrowser for Eclipse:a case study in plug-in retargeting Proc. of the Object Oriented System Languages and Applications 2004 (OOPSLA'04); Hannemann, J., Kiczales, G., Overcoming the Prevalent Decomposition of Legacy Code Workshop on Advanced Separation of Concerns at the International Conference on Software Engineering 2001 (ICSE'01); Robillard, M.P., Murphy, G.C., Capturing Concern Descriptions During Program Navigation (2002) a position paper for the workshop on Tool Support for Aspect Oriented Software Development of the Object Oriented System Languages and Applications 2002 (OOPSLA'02), , November 4-8, Seattle, Washington, USA, ACM Press; Fowler, M., Beck, K., Opdykeand, W., Roberts, D., (2000) Refactoring - Improving the Design of Existing Code, , Addison Wesley; Gamma, E., JHotDraw Web Site, , http://www.jhotdraw.org; A. van Deursen, M. Marin, L. Moonen - AJHotDraw: A showcase for refactoring to aspects. In Proceedings Linking Aspect Technology and Evolution Workshop (LATE), AOSD 2005,14-18 March 2005, Chicago, USA, ACM Press","Bernardi, M.L.; RCOST Research Centre on Software Technology, University of Sannio, Palazzo ex Poste, via Traiano, 82100 Benevento, Italy; email: mlbernar@unisannio.it",,"IEEE Computer Society;Queen's University-Kingston, Ontario, Canada;University of Waterloo, Ontario, Canada;RCOST-Res. Centre on Softw. Technol.-Univ. of Sannio, Italy;Reverse Engineering Forum;Softw. Eng. Inst., Carnegie Mellon Univ., Pittsburgh, PA, USA",,13th IEEE International Workshop on Software Technology and Engineering Practice 2005,24 September 2005 through 25 September 2005,Budapest,69342,,076952639X,9780769526393,,,English,Proc. IEEE Int. Workshop Softw. Technol. Eng. Practice,Conference Paper,Scopus,2-s2.0-33947669367,
,,v,"Streitferdt, D., Heller, C., Philippow, I.",Searching design patterns in source code,2005,Proceedings - International Computer Software and Applications Conference,2,,1508077,33,34,,4,10.1109/COMPSAC.2005.135,http://www.scopus.com/inward/record.url?eid=2-s2.0-34248509088&partnerID=40&md5=a6cb62218836502f4f487f314dfbdb97,"Ilmenau Technical University, Germany","Streitferdt, D., Ilmenau Technical University, Germany; Heller, C., Ilmenau Technical University, Germany; Philippow, I., Ilmenau Technical University, Germany","Maintenance is a time consuming activity within software development and it requires a good understanding of the system in question. It is hard or even impossible to understand poorly documented legacy systems. Nevertheless, developers try to understand unknown object oriented systems by analysing the source code to recover the architecture of the system, which is a hard task since the dependencies between the classes cannot be recovered good enough. Here, the knowledge about design patterns can help developers to understand the underlying architecture faster. We analysed existing pattern search approaches and compared them by their recall and precision values, metrics out of the Information Retrieval domain. As a result we developed own pattern search algorithms for the 23 design pattern described by Gamma et al. [1]. This fast abstract briefly explains the basics of our pattern search and describes first results of the search algorithms developed as a Java plug-in for the Together IDE. This work was funded by the BMBF [2] and is part of the InPULSE [3] project. © 2005 IEEE.",Design patterns; Pattern search; Search algorithms,Design patterns; Object oriented systems; Pattern search algorithms; Algorithms; Binary codes; Information retrieval; Object oriented programming; Pattern recognition; Software architecture; Software design,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley; (2004) Bundesministerium für Bildung und Forschung, , www.bmbf.de, BMBF; InPULSE, Integrative Pattern- und UML orientierte Lern-und System-Entwicklungsumgebung, www.inpulse-online.de, 2004Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceeding of the 6th International Workshop on Program Comprehension, pp. 153-160. , Ischia, Italy, June; Bansiya, J., (1998) Automatic Design-Pattern Identification, , www.ddj.com; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000) Proceedings of the Sixth International Conference on Software Reuse (ICSR6), , Vienna, Austria; Salton, G., (1983) Introduction to Modern Information Retrieval, , McGraw-Hill, New York; (2004) Homepage, , www.rolemodelsoftware.com/drawlets/index. php, Rolemodel Software; Wiki-Server, PattemStories, wiki.cs.uiuc.edu/PattemStories/ DesignPatterns, 2004Auer, K., Fundamental Elements of an Extendible Java Framework (1997) Rolemodel Software, , www.rolemodelsoftware.com","Streitferdt, D.; Ilmenau Technical UniversityGermany; email: detlef.streitferdt@tu-ilmenau.de",,IEEE Computer Society,,"29th Annual International Computer Software and Applications Conference, COMPSAC 2005",26 July 2005 through 28 July 2005,"Edinburgh, Scotland",68524,7303157,769522092,9780769522098,PSICD,,English,Proc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-34248509088,
,,v,"Dietrich, J., Elgar, C.",A formal description of design patterns using OWL,2005,"Proceedings of the Australian Software Engineering Conference, ASWEC",2005,,1402019,243,250,,29,10.1109/ASWEC.2005.6,http://www.scopus.com/inward/record.url?eid=2-s2.0-33646578793&partnerID=40&md5=833abe10d1f9e115c243855333a8c81b,"Massey University New Zealand, New Zealand","Dietrich, J., Massey University New Zealand, New Zealand; Elgar, C., Massey University New Zealand, New Zealand","Design patterns have been used successfully in the last decade to re-use and communicate object-oriented design. However, the documentation of pattern usage is often very poor. This motivates the use of tools which can detect and document design patterns found in software. A couple of approaches have been proposed in recent years. The approach introduced here is based on a formal description of design patterns using the web ontology-language OWL. Software artefacts used to define design patterns in a formal and machine processable fashion are represented by uniform resource identifiers (URIs). This yields a description that is open and extensible, and facilitates the sharing of design among software engineers. We discuss the developed software design ontology, and how this approach relates to the meta - modelling architecture of the OMG. In the second part, an effective pattern scanner for the Java language is presented. This scanner is based on the ontology developed in part one and uses reflection and AST analysis to verify constraints. Various applications of this scanner are discussed. © 2005 IEEE.",Automated pattern detection; Design patterns; Object-oriented programming; Semantic web; Software design theory; Web ontologies,Automated pattern detection; Design patterns; Semantic web; Software design theory; Web ontologies; Computer programming languages; Computer simulation; Computer software reusability; Constraint theory; Software engineering; Websites; Object oriented programming,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language, , Oxford University Press, New York; Beck, K., (1996) Smalltalk Best Practice Patterns, , Prentice Hall; Beyer, D., Noack, A., Lewerentz, C., Simple and efficient relational querying of software structures (2003) Proceedings of the 10th Working Conference on Reverse Engineering (WCRE 2003), pp. 216-225. , IEEE Computer Society; Beyer, D., Noack, A., (2004) CrocoPat 2.1 Introduction and Reference Manual, , Report No. UCB//CSD-04-1338. Computer Science Division (EECS), University of California Berkeley, California; Cline, M.P., The pros and cons of adopting and applying design patterns in the real world (1996) Communications of the ACM, 39 (10), pp. 47-49. , October; Coplien, J.O., (1992) Advanced C++ Program-ming Styles and Idioms, , Addison-Wesley; Dietrich, J., A rule-based system for eCommerce applications (2004) LNAI, 3213, p. 455. , Proceedings KES 2004. Springer; Dong, J., Yang, S., Visualizing design patterns with a UML profile (2003) Proceedings of the IEEE Symposium on Visual/Multimedia Languages (VL), pp. 123-125. , Auckland, New Zealand; The Dublin Core Metadata Initiative, , http://dublincore.org/; Eden, A.H., Hirshfeld, Y., Yehudai, A., LePUS - A declarative pattern speci-fication language Technical Report, 326 (98). , Department of Computer Science, Tel Aviv University; Eden, A.H., LePUS: A visual formalism for object-oriented architectures (2002) The 6th World Conference on Integrated Design and Process Technology, , Pasadena, California, June 22-28; Eden, A.H., A theory of object-oriented design (2002) Information Systems Frontiers, 4 (4). , Nov.-Dec. Kluwer Academic Publishers; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Grand, M., (1998) Patterns in Java. A Catalog of Reusable Design Patterns Illustrated with UML, , Wiley; The Jena Project - A Semantic Web Framework for Java, , http://jena.sourceforge.net/; JSR 175: A Metadata Facility for the JavaTM Programming Language, , http://jcp.org/en/jsr/detail?id=175; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE '96); Mapelsden, D., Hosking, J., Grundy, J., Design pattern modelling and instantiation using DPML (2002) Proceedings of the Fortieth International Conference on Tools Pacific, , Australian Computer Society; The Mandarax Project, , http://www.mandarax.org; Meta Object Facility (MOF) Specification, , http://www.omg.org/docs/formal/02-04-03.pdf; (2004) OWL Web Ontology Language Guide, , http://www.w3.org/TR/owl-guide/, W3C Recommendation 10 February; The PMD Project, , http://pmd.sourceforge.net/; The Protégé Ontology Editor and Knowledge Acquisition System, , http://protege.stanford.edu/; (2004) Resource Description Framework (RDF), , http://www.w3c.org/RDF/, W3C Recommendation 10 February; Taibi, T., Ngo, D.C.L., Formal specification of design patterns - A balanced approach (2003) Journal of Object Technoloy, 2 (4), pp. 127-140; (2004) Web Ontology Language (OWL), , http://www.w3.org/2004/OWL/, W3C Recommendation 10 February; WOP Project on Sourceforge, , http://sourceforge.net/projects/webofpatterns; WOP Ontology Documents Homepage, , http://www-ist.massey.ac.nz/wop/","Dietrich, J.; Massey University New ZealandNew Zealand; email: j.b.dietrich@massey.ac.nz",,"Boeing Australia Limited;Distributed Systems Technology Centre;Oracle Corporation;University of Queensland, School of ITEE;Centre for Information Technology Innovation, QUT",,2005 Australian Software Engineering Conference ASWEC 2005,29 March 2005 through 1 April 2005,Brisbane,67322,,769522572,9780769522579,,,English,Proc Aust Software Eng Conf ASWEC,Conference Paper,Scopus,2-s2.0-33646578793,
,,v,"Ferenc, R., Beszédes, Á., Fülöp, L., Lele, J.",Design pattern mining enhanced by machine learning,2005,"IEEE International Conference on Software Maintenance, ICSM",2005,,1510125,295,304,,37,10.1109/ICSM.2005.40,http://www.scopus.com/inward/record.url?eid=2-s2.0-33646906237&partnerID=40&md5=de9399f41c58762b2c0e820d46d11b19,"University of Szeged, Department of Software Engineering, Hungary","Ferenc, R., University of Szeged, Department of Software Engineering, Hungary; Beszédes, Á., University of Szeged, Department of Software Engineering, Hungary; Fülöp, L., University of Szeged, Department of Software Engineering, Hungary; Lele, J., University of Szeged, Department of Software Engineering, Hungary","Design patterns present good solutions to frequently occurring problems in object-oriented software design. Thus their correct application in a system's design may significantly improve its internal quality attributes such as reusability and maintainability. In software maintenance the existence of up-to-date documentation is crucial, so the discovery of as yet unknown design pattern instances can help improve the documentation. Hence a reliable design pattern recognition system is very desirable. However, simpler methods (based on pattern matching) may give imprecise results due to the vague nature of the patterns' structural description. In previous work we presented a pattern matching-based system using the Columbus framework with which we were able to find pattern instances from the source code by considering the patterns' structural descriptions only, and therefore we could not identify false hits and distinguish similar design patterns such as State and Strategy. In the present work we use machine learning to enhance pattern mining by filtering out as many false hits as possible. To do so we distinguish true and false pattern instances with the help of a learning database created by manually tagging a large C++ system. © 2005 IEEE.",C++; Columbus; Design Patterns; Machine Learning; StarOffice,C++; Columbus; Design Patterns; StarOffice; Computer programming languages; Computer software; Data mining; Learning systems; Strategic planning; Pattern recognition,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) 16th International Conference on Automated Software Engineering (ASE'01), pp. 166-173. , IEEE Computer Society; Antoniol, G., Fiutem, R., Cristoforetti, L., Using metrics to identify design patterns in object-oriented software (1998) Proceedings of the Fifth International Symposium on Software Metrics (METRICS98), pp. 23-34. , IEEE Computer Society, Nov; Asencio, A., Cardman, S., Harris, D., Laderman, E., Relating expectations to automatically recovered design patterns (2002) Proceedings of the Ninth Working Conference on Reverse Engineering (WCRE'02), pp. 87-96. , IEEE Computer Society; Balanyi, Z., Ferenc, R., Mining design patterns from C++ source code (2003) Proceedings of the 19th International Conference on Software Maintenance (ICSM 2003), pp. 305-314. , IEEE Computer Society, Sept; Bieman, J.M., Jain, D., Yang, H.J., Design patterns, design structure, and program changes: An industrial case study (2001) Proceedings International Conference on Software Maintance (ICSM 2001), pp. 580-589. , IEEE Computer Society; Bishop, C.M., (1995) Neural Networks for Pattern Recognition, , Clarendon Press, Oxford; Campo, M., Marcos, C., Ortigosa, A., Framework comprehension and design patterns: A reverse engineering approach (1997) Proceedings of the 9th International Conference on Software Engineering and Knowledge Engineering, , June; Ferenc, R., Beszédes, Á., Data exchange with the Columbus schema for C++ (2002) Proceedings of the 6th European Conference on Software Maintenance and Reengineering (CSMR 2002), pp. 59-66. , IEEE Computer Society, Mar; Ferenc, R., Beszédes, Á., Tarkiainen, M., Gyimóthy, T., Columbus - Reverse engineering tool and schema for C++ (2002) Proceedings of the 18th International Conference on Software Maintenance (ICSM 2002), pp. 172-181. , IEEE Computer Society, Oct; Ferenc, R., Gustafsson, J., Müller, L., Paakki, J., Recognizing design patterns in C++ programs with the integration of Columbus and Maisa (2002) Acta Cybernetica, 15, pp. 669-682; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley Pub Co; Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F., Finger-printing design patterns (2004) Proceedings of the 11th Working Conference on Reverse Engineering (WCRE 2004), pp. 172-181. , IEEE Computer Society; The Imagix Homepage, , http://www.imagix.com; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) The 21st International Conference on Software Engineering (ICSE'99), pp. 226-235. , IEEE Computer Society; Niere, J., Meyer, M., Wendehals, L., User-driven adaption in rule-based pattern recognition (2004) Technical Report, TR-RI-04-249. , University of Paderborn, Paderborn, Germany, June; Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A., Software metrics by architectural pattern mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress), pp. 325-332; Quinlan, J., (1993) C4.5: Programs for Machine Learning, , Morgan Kaufmann; Shull, F., Melo, W.L., Basili, V.R., An inductive method for discovering desing patterns from object-oriented software systems (1996) Technical Report; Siff, M., Reps, T., Identifying modules via concept analysis (1997) The International Conference on Software Maintance (ICSM'97), pp. 170-179. , IEEE Computer Society, Oct; The StarOffice Homepage, , http://www.sun.com/software/star; Tonella, P., Antoniol, G., Object oriented design pattern inference Proceedings of the International Conference on Software Maintenance (ICSM '99), pp. 230-238. , Washington, DC, USA, 1999. IEEE Computer Society; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the ICSE 2003 Workshop on Dynamic Analysis (WODA), , Portland, USA, May; Wendehals, L., Specifying patterns for dynamic pattern instance recognition with uml 2.0 sequence diagrams (2004) Proceedings of the 6th Workshop Software Reengineering (WSR2004), pp. 63-64. , May; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Fifth European Conference on Software Maintenance and Reengineering, pp. 77-84. , IEEE Computer Society","Ferenc, R.; University of Szeged, Department of Software EngineeringHungary; email: ferenc@inf.u-szeged.hu",,"University of Szeged, Hungary",,"21st IEEE International Conference on Software Maintenance, ICSM 2005",26 September 2005 through 29 September 2005,Budapest,67325,,769523684,9780769523682,,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-33646906237,
,,v,"Arcelli, F., Masiero, S., Raibulet, C., Tisato, F.",A comparison of reverse engineering tools based on design pattern decomposition,2005,"Proceedings of the Australian Software Engineering Conference, ASWEC",2005,,1402021,262,269,,10,10.1109/ASWEC.2005.5,http://www.scopus.com/inward/record.url?eid=2-s2.0-33646713420&partnerID=40&md5=1889994557b7c4aefbc7f0f9d499a540,"Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy","Arcelli, F., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy; Masiero, S., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy; Raibulet, C., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy; Tisato, F., Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy","The usefulness of design patterns in forward engineering is already well-known and several tools provide support for their application in the development of software systems. While the role of design patterns in reverse engineering is still argued primarily due to their informal definition which leads to various possible implementations of each pattern. One of the most discussed aspects related to design patterns is about the need of their formalization according to the drawbacks this can represent. Formalization leads to the identification of the so-called sub-patterns, which are the recurring fundamental elements design patterns are composed of. In this paper we analyze the role sub-patterns play-in two reverse engineering tools: FUJABA and SPQR. Attention is focused on how sub-patterns are exploited to define and to detect design patterns. To emphasize the similarities and differences between the two approaches, the Composite Design Pattern is considered as example. © 2005 IEEE.",,Computer aided software engineering; Computer simulation; Identification (control systems); Mathematical models; Pattern recognition; Design pattern decomposition; Design patterns; Sub-patterns; Reverse engineering,,,,,,"Abadi, M., Cardelli, L., (1996) A Theory of Objects, , Springer-Verlag, New York, Inc; Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings of the 16th International Conference on Automated Software Engineering, pp. 166-173. , San Diego, CA, USA; Bellinzona, D., (2004) J2POML: Extraction of Information for Design Pattern Recognition from Java Source Code, , University of Milano-Bicocca, Milan, Italy, November; Beyer, D., Lewerentz, C., CrocoPat: Efficient pattern analysis in object-oriented programs (2003) Proceedings of the 11th IEEE International Workshop on Program Comprehension, pp. 294-295. , Los Alamitos, CA, USA; Chambers, C., Harrison, B., Vlissides, J., A debate on language and tool support for design patterns (2000) Proceeding of the 27th ACM SIGPLAN-SIGART Symposium on Principles of Programming Languages, pp. 277-289. , Boston, MA, USA; Eden, A.H., (2000) Precise Specification of Design Patterns and Tool Support in Their Application, , PhD Dissertation. Department of Computer Science, Tel Aviv University; Fischer, T., Niere, J., Torunski, L., Zündorf, A., Story diagrams: A new graph rewrite language based on the unified modeling language (1998) Proceedings of the 6th International Workshop on Theory and Application of Graph Transformation, 1764, pp. 296-309. , Paderborn, Germany, LNCS, Springer Verlag, November; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object oriented patterns (1997) Proceedings of the 11th European Conference on Object-oriented Programming, , Springer Verlag, Berlin, Germany; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley, Reading MA, USA; Keller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the International Conference on Software Engineering, pp. 226-235. , Los Angeles, CA, USA; Masiero, S., (2004) Design Pattern Detection in Reverse Engineering - The Role of Sub-patterns, , Master Thesis, University of Milano-Bicocca, Milan, Italy, October; Nickel, U., Niere, J., Zündorf, A., The FUJABA environment (2000) Proceedings of the 22nd International Conference on Software Engineering, pp. 742-745. , Limerick, Ireland; Niere, J., Fuzzy logic based interactive recovery of software design (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 727-728. , Orlando, Florida, USA; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the 24th International Conference on Software Engineering, pp. 338-348. , Orlando, Florida, USA; Niere, J., Meyer, M., Wendehals, L., User-driven adaption in rule-based pattern recognition (2004) Tech. Rep., TR-RI-04-249. , University of Paderborn, Paderborn, Germany, June; Cinnéide, M.Ò., (2001) Automated Application of Design Patterns: A Refactoring Approach, , Ph.D Dissertation, University of Dublin, Trinity College; Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S., An approach for reverse engineering of design pattern (2004) Software and Systems Modeling, , Springer Verlag, April; http://recoder.sourceforge.net/Smith, J.McC., Stotts, D., Pattern/Object Markup Language (POML): A simple XML schema for object oriented code description (2004) Tech. Rep., 4 (10). , Computer Science Department, University of North Carolina at Chapel Hill, April; Smith, J.McC., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Proceedings of the 2003 IEEE International Conference on Automated Software Engineering, pp. 215-224. , Montreal QC, Canada, October; Smith, J.McC., Stotts, D., Elemental design patterns and the rho-calculus: Foundations for automated design pattern detection in SPQR (2003) Tech. Rep., 3 (32). , Computer Science Department, University of North Carolina at Chapel Hill, September; Smith, J.McC., Stotts, D., Elemental design patterns: A formal semantics for composition of OO software architecture (2002) Proceedings of the 27'h Annual IEEE/NASA Software Engineering Laboratory Workshop, pp. 183-190. , Greenbelt, MD; Smith, J.McC., An elemental design patterns catalog (2002) Tech. Rep., 2 (40). , Computer Science Department, University of North Carolina at Chapel Hill, December; Wendehals, L., Improving design pattern instance recognition by dynamic analysis (2003) Proceedings of the ICSE 2003 Workshop on Dynamic Analysis, , Portland, USA, May","Arcelli, F.; Dipartimento di Informatica Sistemistica e Comunicazione, Università degli Studi di Milano-Bicocca, I-20126, Milan, Italy; email: arcelli@disco.unimib.it",,"Boeing Australia Limited;Distributed Systems Technology Centre;Oracle Corporation;University of Queensland, School of ITEE;Centre for Information Technology Innovation, QUT",,2005 Australian Software Engineering Conference ASWEC 2005,29 March 2005 through 1 April 2005,Brisbane,67322,,769522572,9780769522579,,,English,Proc Aust Software Eng Conf ASWEC,Conference Paper,Scopus,2-s2.0-33646713420,
,,1,"Carroll, J.M., Farooq, U.",Community-based learning: Design patterns and frameworks,2005,ECSCW 2005 - Proceedings of the 9th European Conference on Computer-Supported Cooperative Work,,,,307,324,,7,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84860352405&partnerID=40&md5=1209c4adf308576157e11f60488e2dac,"Center for Human-Computer Interaction, School of Information Sciences and Technology, Pennsylvania State University, University Park, PA 16802, United States","Carroll, J.M., Center for Human-Computer Interaction, School of Information Sciences and Technology, Pennsylvania State University, University Park, PA 16802, United States; Farooq, U., Center for Human-Computer Interaction, School of Information Sciences and Technology, Pennsylvania State University, University Park, PA 16802, United States","Information technology adoption and literacy are typically not first-order goals for community-based volunteer organizations. Nonetheless, information technology is vital to such groups for member recruiting and management, communication and visibility to the community, as well as primary group activities. However, volunteer organizations are often not able to make effective use of Internet-based technologies and content. They lack resources of all sorts (money, skills, telecommunications infrastructure) as well as organizational structures, protocols, and continuity to effectively cope with the rate of change in Internet technology. We describe a design pattern, a standard solution schema for a recurring problem, that proposes a self-sustained process in which volunteer organizations identify and analyze their technology needs, and then learn about information technology through active engagement in solving their own problems. The pattern, called Community-based Learning, is grounded in our fieldwork experience in several community computing projects. We discuss patterns and pattern frameworks as a research approach to community computing. © 2005 Springer.",,Community computing; Design Patterns; First-order; Group activities; Information technology adoption; Internet based; Internet technology; Organizational structures; Rate of change; Research approach; Standard solutions; Telecommunications infrastructures; Internet protocols; Societies and institutions; Information technology,,,,,,"Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press, NY, USA; Beamish, A., (1995) Communities On-Line: Community-Based Computer Networks, , Masters Thesis, Department of Urban Studies and Planning, MIT; Bellah, R., Madsen, R., Sullivan, W., Swindler, A., Tipton, S., (1986) Habits of the Heart: Individualism and Commitment in American Life, , University of California Press, CA, USA; Carroll, J.M., (1998) Minimalism beyond the Nurnberg Funnel, , The MIT Press, Cambridge, MA, USA; Carroll, J.M., Community computing as human-computer interaction (2001) Behaviour and Information Technology, 20 (5), pp. 307-314; Carroll, J.M., Chin, G., Rosson, M.B., Neale, D.C., The development of cooperation: Five years of participatory design in the virtual school (2000) Proceedings of ACM Symposium on Designing Interactive Systems: DIS'2000, pp. 239-251. , (Brooklyn, New York, August 17-19 2000), ACM, New York; Carroll, J.M., Rosson, M.B., Design rationale as theory (2003) HCI Models, Theories and Frameworks: Toward A Multidisciplinary Science, pp. 431-461. , J.M. Carroll (ed.), Morgan-Kaufmann, San Francisco, CA, USA, 2003; Carroll, J.M., Rosson, M.B., Dunlap, D.R., Isenhour, P.L., Frameworks for sharing knowledge: Toward a professional language for teaching practices (2003) Proceedings of the 36 th Hawaii International Conference on System Sciences: HICSS-36, , (Kona, Hawaii, January 6-9 2003), IEEE Computer Society, Washington DC, USA; Coleman, J.S., (1990) The Foundations of Social Theory, , Harvard University Press, Cambridge, MA, USA; (2003) Taulbee Survey, , http://www.cra.org, accessed at, on March 1, 2005; Deci, E.L., Ryan, R.M., (1985) Intrinsic Motivation and Self-determination in Human Behavior, , Plenum, New York; Dewey, J., (1916) Democracy in Education, , Macmillan, New York; Dunlap, D.R., Neale, D.C., Carroll, J.M., Teacher collaboration in a networked community (2000) Educational Technology and Society, 3 (3), pp. 442-454; Erickson, T., Lingua francas for design: Sacred places and pattern languages (2000) Proceedings of ACM Symposium on Designing Interactive Systems: DIS'2000, pp. 357-368. , (Brooklyn, New York, August 17-19 2000), ACM, New York; Farooq, U., Merkel, C., Nash, H., Rosson, M.B., Carroll, J.M., Xiao, M., Participatory design as apprenticeship: Sustainable watershed management as a community computing application (2005) Proceedings of the 38 th Hawaii International Conference on System Sciences: HICSS-38, , (January 3-6, 2005, Big Island, Hawaii), IEEE Computer Society, Washington DC, USA; Farrington, C., Pine, E., Community memory: A case study in community communication (1997) Reinventing Technology, Rediscovering Community: Critical Explorations of Computing As A Social Practice, pp. 219-228. , P. Agre and D. Schuler (eds.), Albex, Greenwich, CT, USA, 1997; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Reading, MA, USA; Grobman, G.M., (2002) Pennsylvania Nonprofit Handbook: Everything You Need to Know to Start and Run Your NonProfit Organization, , White Hat Communications; Guzdial, M., Rick, J., Kerimbaev, B., Recognizing and supporting roles in CSCW (2000) Proceedings of the Conference on Computer Supported Cooperative Work, pp. 261-268. , (Philadelphia, Pennsylvania, December 2-6 2000), ACM Press, NY; Johnson, R.E., Frameworks = (components and patterns) (1997) Communications of the ACM, 40 (10), pp. 39-42; King, N.K., Social capital and nonprofit leaders (2004) Nonprofit Management & Leadership, 14 (4), pp. 471-486; Knowles, M.S., (1973) The Adult Learner: A Neglected Species, , Gulf Publishing Company, American Society for Training and Development, Houston, TX, USA; Lave, J., Wenger, E., (1991) Situated Learning: Legitimate Peripheral Participation, , Cambridge University Press, New York; Merkel, C.B., Xiao, L., Farooq, U., Ganoe, C.H., Lee, R., Carroll, J.M., Rosson, M.B., Participatory design in community computing contexts: Tales from the field (2004) Proceedings of the 8 th Conference on Participatory Design: Artful Integration: Interweaving Media, Materials and Practices, pp. 1-10. , (Toronto, Ontario, Canada, July 27-31 2004), ACM Press, New York; Merkel, C.B., Clitherow, M., Farooq, U., Xiao, L., Ganoe, G.H., Carroll, J.M., Rosson, M.B., Sustaining computer use and learning in community computing contexts: Making technology part of ""who they are and what they do"" (2005) The Journal of Community Informatics, 1 (2), pp. 134-150. , http://ci-journal.net/viewarticle.php?id=53&layout=html, Online; Putnam, R., (2000) Bowling Alone: The Collapse and Revival of American Community, , Simon & Schuster: New York; Rainie, L., Horrigan, J., A decade of adoption: How the Internet has woven itself into American life (2005) Trends 2005, , http://pewresearch.org, January, 25, accessed at on March 1, 2005; Rheingold, H., (1993) The Virtual Community: Homesteading on the Electronic Frontier, , Addison-Wesley, Reading, MA, USA; Rogers, E.M., Collins-Jarvis, L., Schmitz, J., The PEN Project in Santa Monica: Interactive communication, equality, and political action (1994) Journal of the American Society for Information Science, 45 (6), pp. 401-410; Ryan, R.M., Deci, E.L., Self-determination theory and the facilitation of intrinsic motivation, social development, and well-being (2000) American Psychologist, 55, pp. 68-78; Schuler, D., A pattern language for living communication (2002) Proceedings of the 6 th Conference on Participatory Design, pp. 434-436. , (Malmo, Sweden, June 23-25 2002), CPSR, Palo Alto, CA, USA; (2005) Technology Planning, , http://www.techsoup.com/howto/articles.cfm?topicid=11&topic= Technology%20Planning, accessed at, on March 2, 2005; Uncapher, W., Electronic homesteading on the rural frontier: Big Sky Telegraph and its community (1999) Communities in Cyberspace, pp. 264-289. , M. Smith and P. Kollock (eds.), Routledge, 1999; Vygotsky, L.S., (1978) Mind and Society: The Development of Higher Mental Processes, , Harvard University Press, Cambridge, MA, USA; Wellman, B., Studying personal communities (1982) Social Networks and Social Structure, pp. 61-80. , P. Marsden and N. Lin (eds.), Sage, Beverly Hills, CA, USA, 1982","Carroll, J.M.; Center for Human-Computer Interaction, School of Information Sciences and Technology, Pennsylvania State University, University Park, PA 16802, United States; email: jcarroll@ist.psu.edu",,,,"9th European Conference on Computer-Supported Cooperative Work, ECSCW 2005",18 September 2005 through 22 September 2005,Paris,89497,,9781402040221,,,English,ECSCW - Proc. Eur. Conf. Comput.-Supported Coop. Work,Conference Paper,Scopus,2-s2.0-84860352405,,
,,3,"Gil, J., Maman, I.",Micro patterns in java code,2005,ACM SIGPLAN Notices,40,10,,97,116,,35,10.1145/1103845.1094819,http://www.scopus.com/inward/record.url?eid=2-s2.0-33745201222&partnerID=40&md5=2943753e9098941334767099a1d002a1,"Department of Computer Science, Technion, Israel Institute of Technology, Israel","Gil, J., Department of Computer Science, Technion, Israel Institute of Technology, Israel; Maman, I., Department of Computer Science, Technion, Israel Institute of Technology, Israel","Micro patterns are similar to design patterns, except that micro patterns stand at a lower, closer to the implementation, level of abstraction. Micro patterns are also unique in that they are mechanically recognizable, since each such pattern can be expressed as a formal condition on the structure of a class. This paper presents a catalog of 27 micro-patterns defined on JAVA classes and interfaces. The catalog captures a wide spectrum of common programming practices, including a particular and (intentionally restricted) use of inheritance, immutability, data management and wrapping, restricted creation, and emulation of procedural-, modular-, and even functional- programming paradigms with object oriented constructs. Together, the patterns present a set of prototypes after which a large portion of all JAVA classes and interfaces are modeled. We provide empirical indication that this portion is as high as 75% . A statistical analysis of occurrences of micro patterns in a large software corpus, spanning some 70,000 JAVA classes drawn from a rich set of application domains, shows, with high confidence level that the use of these patterns is not random. These results indicate consciousness and discernible design decisions, which are sustained in the software evolution. With high confidence level, we can also show that the use of these patterns is tied to the specification, or the purpose, that the software realizes. The traceability, abundance and the statistical significance of micro pattern occurrence raise the hope of using the classification of software into these patterns for a more founded appreciation of its design and code quality. Copyright 2005 ACM.",Design patterns; Implementation patterns; Program analysis,Code quality; Data management; Design patterns; Implementation patterns; Program analysis; Database systems; Encoding (symbols); Interfaces (computer); Object oriented programming; Pattern matching; Quality assurance; Random processes; Software engineering; Statistical methods; Java programming language,,,,,,"Agerbo, E., Cornils, A., How to preserve the benefits of design patterns (1998) Proc. of the 13 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'98), pp. 134-143. , Vancouver, British Columbia, Oct. 18-22 . ACM SIGPLAN Notices; Aldrich, J., Kostadinov, V., Chambers, C., Alias annotations for program understanding (2002) Proc. of the 17 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'02), , Seattle, Washington, Nov. 4-8 . ACM SIGPLAN Notices; Arnold, P., Gosling, J., (1996) The Java Programming Language, , The Java Series. Addison-Wesley; Beck, K., (1997) Smalltalk: Best Practice Patterns, , Prentice-Hall, 1 st edition; Beck, K., (2004) JUnit Pocket Guide, , O'Reilly; Blewitt, A., Bundy, A., Stark, I., Automatic verification of Java design patterns (2001) Proc. of the 16 th IEEE Conference on Automated Software Engineering (ASE'01), pp. 324-327. , San Diego, California, IEEE Comp; Bloch, J., (2001) Effective Java Programming Language Guide, , Addison-Wesley, 1 st edition, June; Bracha, G., Cook, W.R., Mixin-based inheritance (1990) Proceedings of the Conference on Object-oriented Programming: Systems, Languages, and Applications / Proceedings of the European Conference on Object-Oriented Programming (OOPSLA/ECOOP'90), pp. 303-311. , Ottawa, Canada, Oct. 21-25 . ACM SIGPLAN Notices; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Masters thesis, North Carolina State University; Campione, M., Walrath, K., Huml, A., (2000) The Java Tutorial: A Short Course on the Basics, , Addison-Wesley; Card, D.N., Glass, R.L., (1990) Measuring Software Design Quality, , Prentice-Hall; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans. Softw. Eng., 20 (6), pp. 476-493. , June; Cohen, T., Gil, J., Self-calibration of metrics of Java methods (2000) Proc. of the 37 th International Conference on Technology of Object-oriented Languages and Systems (TOOLS'00 Pacific Conference), pp. 94-106. , Sydney, Australia, Nov. 20-23 . Prentice-Hall; Cormen, T.H., Leiserson, C.E., Rivest, R.L., (1990) Introduction to Algorithms, , MIT Press, 1 st edition, June; Demsky, B., Rinard, M.C., Automatic detection and repair of errors in data structures (2003) Proc. of the 18 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'03), pp. 78-95. , Anaheim, California, USA, Oct. ACM Press; Eden, A.H., Formal specification of object-oriented design (2001) Proc. of the International Conference on Multidisciplinary Design in Engineering (CSME-MDE'01), , Montreal, Canada, Nov. 21-22; Eden, A.H., A visual formalism for object-oriented architecture (2002) Proc. of the 6 th Integrated Design and Process Technology (IDPT'02), , California, June 23-28 . Society for Design and Process Science; Eden, A.H., Kazman, R., Architecture, design, implementation (2003) Proc. of the 25 th International Conference on Software Engineering (ICSE'03), pp. 149-159. , Portland, Oregon, May 3-10 . IEEE Comp; Eick, S.G., Steffen, J.L., Sumner, E.E.J., Seesoft-a tool for visualizing line oriented software statistics (1992) IEEE Trans. on Soft. Eng., 18 (11), pp. 957-968. , Nov; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object-oriented patterns (1997) Proc. of the 11 th European Conference on Object-Oriented Programming (ECOOP'97), pp. 472-495. , Jyväskylä, Finland, June 9-13 . Springer; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., Design patterns: Abstraction and reuse of object-oriented design (1993) Proc. of the 7 th European Conference on Object-Oriented Programming (ECOOP'93), pp. 406-431. , Kaiserslautern, Germany, July 26-30 . Springer; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Professional Computing series. Addison-Wesley; Goldberg, A., (1984) Smalltalk-80: the Interactive Programming Environment, , Addison-Wesley; Grand, M., (2002) Patterns in Java: A Catalog of Reusable Design Patterns Illustrated with Uml, 1. , Wiley; Heuzeroth, D., Holl, T., Höström, G., Löwe, W., Automatic design pattern detection (2003) Proc. of the 11 th International Workshop on Program Comprehension (IWPC'03), p. 94. , Portland, Oregon, USA, May . co-located with ICSE'03; Lanza, M., Ducasse, S., A categorization of classes based on the visualization of their internal structure: The class blueprint (2001) Proc. of the 16 th Annual Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA '01), pp. 300-311. , Tampa Bay, Florida, Oct. 14-18 . ACM SIGPLAN Notices; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proc. of the 12 th European Conference on Object-Oriented Programming (ECOOP'98), , Brussels, Belgium, July 20-24 . Springer; Lorenz, M., Kidd, J., (1994) Object-oriented Software Metrics: A Practical Guide, , Prentice-Hall; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in UML (2004) Proc. of the 26 th International Conference on Software Engineering (ICSE'04), pp. 252-261. , Edinburgh, Scotland, United Kingdom, May 23-28 . IEEE Computer Society; Meyer, B., (1988) Object-oriented Software Construction, , International Series in Computer Science. Prentice-Hall; Mikkonen, T., Formalizing design patterns (1998) Proc. of the 20 th International Conference on Software Engineering (ICSE '98), pp. 115-124. , Kyoto, Japan, Apr. 19-25 . IEEE Comp; Minsky, N.H., Law-governed Linda communication model (1994) Technical Report, LCSR-TR-221. , Dept. of Comp. Sc.Lab. for Comp. So. ResearchThe State Univ. of New Jersey RUTGERS, Mar; Minsky, N.H., Towards alias-free pointers (1996) Proc. of the 10 th European Conference on Object-oriented Programming (ECOOP'96), pp. 189-209. , Linz, Austria, July 8-12 . Springer; Noble, J., Biddle, R., Patterns as signs (2002) Proc. of the 16 th European Conference on Object-oriented Programming (ECOOP'02), , Malaga, Spain, June 10-14 . Springer; Odersky, M., Altherr, P., Cremet, V., Emir, B., Maneth, S., Micheloud, S., Mihaylov, N., Zenger, M., An overview of the Scala programming language (2004) Technical Report, IC-2004-64. , EPFL Lausanne, Switzerland; Prechelt, L., Krämer, C., Functionality versus practicality: Employing existing tools for recovering structural design patterns (1998) J. UCS: Journal of Universal Computer Science, 4 (12), pp. 866-882; Reiser, M., Wirth, N., (1992) Programming in Oberon: Steps beyond Pascal and Modula, , Addison-Wesley, June; Schärli, N., Ducasse, S., Nierstrasz, O., Black, A., Traits: Composable units of behavior (2003) Proc. of the 17 th European Conference on Object-Oriented Programming (ECOOP'03), , Darmstadt, Germany, July 21-25 . Springer; Smith, J.M., Stotts, D., Elemental design patterns: A formal semantics for composition of OO software architecture (2002) Proc. of the 27 th Annual NASA Goddard Software Engineering Workshop (SEW'02), pp. 183-190. , Greenbelt, Maryland, Digital Equipment Corporation 5-6 . IEEE Comp. Soc. Press; Soloway, E., Bonar, J., Ehrlich, K., Cognitive strategies and looping constructs: An empirical study (1983) Commun. ACM, 26 (11), pp. 853-860; Stasko, J.T., Tango: A framework and system for algorithm animation (1990) Computer, 23 (9), pp. 27-39; Storey, M.D., Müller, H.A., Manipulating and documenting software structures using SHriMP views (1995) Proc. of the 11 th International Conference on Software Maintenance (ICSM'95), p. 275. , Opio (Nice), France, Oct. . IEEE Comp. Soc. Press; Stroustrup, B., (1997) The C++ Programming Language, , Addison-Wesley, 3 rd edition; (1997) LNCS, 1246. , S. T. Taft and R. A. Duff, editors. Ada 95 Reference Manual, Language and Standard Libraries, International Standard ISO/IEC 8652: 1995(E), Springer; Van Emde Boas, P.E., Resistance is futile; formal linguistic observations on design patterns (1997) Technical Report, ILLC-CT-1997-03. , The Institute For Logic, Language, and Computation (ILLC), University of Amsterdam, Feb; Wirth, N., The programming language Pascal (1971) Acta Informatica, 1, pp. 35-63; Witten, I.H., Frank, E., (2000) Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations, , Morgan Kaufmann","Gil, J.; Department of Computer Science, Technion, Israel Institute of Technology, Haifa, Israel; email: yogi@cs.technion.ac.il",,,,,,,,3621340,,,,English,ACM SIGPLAN Not.,Article,Scopus,2-s2.0-33745201222,,
,,3,"Gil, J., Maman, I.",Micro patterns in Java code,2005,"Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA",,,,97,116,,35,,http://www.scopus.com/inward/record.url?eid=2-s2.0-31744451766&partnerID=40&md5=feae9f0a07804ac620796a9655dd33f7,"Department of Computer Science, Technion-Israel Institute of Technology, Israel","Gil, J., Department of Computer Science, Technion-Israel Institute of Technology, Israel; Maman, I., Department of Computer Science, Technion-Israel Institute of Technology, Israel","Micro patterns are similar to design patterns, except that micro patterns stand at a lower, closer to the implementation, level of abstraction. Micro patterns are also unique in that they are mechanically recognizable, since each such pattern can be expressed as a formal condition on the structure of a class. This paper presents a catalog of 27 micro-patterns defined on JAVA classes and interfaces. The catalog captures a wide spectrum of common programming practices, including a particular and (intentionally restricted) use of inheritance, immutability, data management and wrapping, restricted creation, and emulation of procedural-, modular-, and even functional- programming paradigms with object oriented constructs. Together, the patterns present a set of prototypes after which a large portion of all JAVA classes and interfaces are modeled. We provide empirical indication that this portion is as high as 75%. A statistical analysis of occurrences of micro patterns in a large software corpus, spanning some 70,000 JAVA classes drawn from a rich set of application domains, shows, with high confidence level that the use of these patterns is not random. These results indicate consciousness and discernible design decisions, which are sustained in the software evolution. With high confidence level, we can also show that the use of these patterns is tied to the specification, or the purpose, that the software realizes. The traceability, abundance and the statistical significance of micro pattern occurrence raise the hope of using the classification of software into these patterns for a more founded appreciation of its design and code quality. Copyright 2005 ACM.",Design Patterns; Implementation Patterns; Program Analysis,Design patterns; Implementation patterns; Program analysis; Computer software; Interfaces (computer); Object oriented programming; Statistical methods; Java programming language,,,,,,"Agerbo, E., Cornils, A., How to preserve the benefits of design patterns (1998) Proc. of the 13 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'98), pp. 134-143. , Vancouver, British Columbia, Oct. 18-22 ACM SIGPLAN Notices; Aldrich, J., Kostadinov, V., Chambers, C., Alias annotations for program understanding (2002) Proc. of the 77 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'02), , Seattle, Washington, Nov. 4-8 ACM SIGPLAN Notices; Arnold, P., Gosling, J., (1996) The Java Programming Language, , The Java Series. Addison-Wesley; Beck, K., (1997) Smalltalk: Best Practice Patterns, , Prentice-Hall, 1 st edition; Beck, K., (2004) JUnit Pocket Guide, , O'Reilly; Blewitt, A., Bundy, A., Stark, I., Automatic verification of Java design patterns (2001) Proc. of the 16 th IEEE Conference on Automated Software Engineering (ASE'01), pp. 324-327. , San Diego, California, IEEE Comp; Bloch, J., (2001) Effective Java Programming Language Guide, , Addison-Wesley, 1 st edition, June; Bracha, G., Cook, W.R., Mixin-based inheritance (1990) Proceedings of the Conference on Object-oriented Programming: Systems, Languages, and Applications / Proceedings of the European Conference on Object-oriented Programming (OOPSLA/ECOOP'90), pp. 303-311. , Ottawa, Canada, Oct. 21-25 ACM SIGPLAN Notices; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Masters thesis. North Carolina State University; Campione, M., Walrath, K., Huml, A., (2000) The Java Tutorial: A Short Course on the Basics, , Addison-Wesley; Card, D.N., Glass, R.L., (1990) Measuring Software Design Quality, , Prentice-Hall; Chidamber, S.R., Kemerer, C.F., A metrics suite for object oriented design (1994) IEEE Trans. Softw. Eng., 20 (6), pp. 476-493. , June; Cohen, T., Gil, J., Self-calibration of metrics of Java methods (2000) Proc. of the 37 th International Conference on Technology of Object-oriented Languages and Systems (TOOLS'00 Pacific Conference), pp. 94-106. , Sydney, Australia, Nov. 20-23 Prentice-Hall; Cormen, T.H., Leiserson, C.E., Rivest, R.L., (1990) Introduction to Algorithms, , MIT Press, 1 st edition, June; Demsky, B., Rinard, M.C., Automatic detection and repair of errors in data structures (2003) Proc. of the 18 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'03), pp. 78-95. , Anaheim, California, USA, Oct. ACM Press; Eden, A.H., Formal specification of object-oriented design (2001) Proc. of the International Conference on Multidisciplinary Design in Engineering (CSME-MDE'01), , Montreal, Canada, Nov. 21-22; Eden, A.H., A visual formalism for object-oriented architecture (2002) Proc. of the 6 th Integrated Design and Process Technology (IDPT02), , California, June 23-28 Society for Design and Process Science; Eden, A.H., Kazman, R., Architecture, design, implementation (2003) Proc. of the 25 th International Conference on Software Engineering (ICSE'03), pp. 149-159. , Portland, Oregon, May 3-10 IEEE Comp; Eick, S.G., Steffen, J.L., Sumner, E.E.J., Seesoft-a tool for visualizing line oriented software statistics (1992) IEEE Trans. on Soft. Eng., 18 (11), pp. 957-968. , Nov; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object-oriented patterns (1997) Proc. of the 11 th European Conference on Object-oriented Programming (ECOOP'97), pp. 472-495. , Jyväskylä, Finland, June 9-13 Springer; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., Design patterns: Abstraction and reuse of object-oriented design (1993) Proc. of the 7 th European Conference on Object-oriented Programming (ECOOP'93), pp. 406-431. , Kaiserslautern, Germany, July 26-30 Springer; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Professional Computing series. Addison-Wesley; Goldberg, A., (1984) Smalltalk-80: The Interactive Programming Environment, , Addison-Wesley; Grand, M., (2002) Patterns in Java: A Catalog of Reusable Design Patterns Illustrated with Uml.Volume 1. Wiley, 1; Heuzeroth, D., Holl, T., Höström, G., Löwe, W., Automatic design pattern detection (2003) Proc. of the 11 th International Workshop on Program Comprehension (IWPC'03), p. 94. , Portland, Oregon, USA, May co-located with ICSE'03; Lanza, M., Ducasse, S., A categorization of classes based on the visualization of their internal structure: The class blueprint (2001) Proc. of the 16 th Annual Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'01), pp. 300-311. , Tampa Bay, Florida, Oct. 14-18 ACM SIGPLAN Notices; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proc. of the 12 th European Conference on Object-oriented Programming (ECOOP'98), , Brussels, Belgium, July 20-24 Springer; Lorenz, M., Kidd, J., (1994) Object-oriented Software Metrics: A Practical Guide, , Prentice-Hall; Mak, J.K.H., Choy, C.S.T., Lun, D.P.K., Precise modeling of design patterns in UML (2004) Proc. of the 26 th International Conference on Software Engineering (ICSE'04), pp. 252-261. , Edinburgh, Scotland, United Kingdom, May 23-28 IEEE Computer Society; Meyer, B., (1988) Object-oriented Software Construction, , International Series in Computer Science. Prentice-Hall; Mikkonen, T., Formalizing design patterns (1998) Proc. of the 20 th International Conference on Software Engineering (ICSE'98), pp. 115-124. , Kyoto, Japan, Apr. 19-25 IEEE Comp; Minsky, N.H., Law-governed Linda communication model (1994) Technical Report, LCSR-TR-221. , Dept. of Comp. Sc.Lab. for Comp. Sc. ResearchThe State Univ. of New Jersey RUTGERS, Mar; Minsky, N.H., Towards alias-free pointers (1996) Proc. of the 10 th European Conference on Object-oriented Programming (ECOOP'96), pp. 189-209. , Linz. Austria, July 8-12 Springer; Noble, J., Biddle, R., Patterns as signs (2002) Proc. of the 16 th European Conference on Object-oriented Programming (ECOOP'02), , Malaga, Spain, June 10-14 Springer; Odersky, M., Altherr, P., Cremet, V., Emir, B., Maneth, S., Micheloud, S., Mihaylov, N., Zenger, M., An overview of the Scala programming language (2004) Technical Report, IC-2004-64. , EPFL Lausanne, Switzerland; Prechelt, L., Krämer, C., Functionality versus practicality: Employing existing tools for recovering structural design patterns (1998) J.UCS: Journal of Universal Computer Science, 4 (12), pp. 866-882; Reiser, M., Wirth, N., (1992) Programming in Oberon: Steps beyond Pascal and Modula, , Addison-Wesley, June; Schärli, N., Ducasse, S., Nierstrasz, O., Black, A., Traits: Composable units of behavior (2003) Proc. of the 17 th European Conference on Object-oriented Programming (ECOOP'03), , Darmstadt, Germany, July 21-25 Springer; Smith, J.M., Stotts, D., Elemental design patterns: A formal semantics for composition of OO software architecture (2002) Proc. of the 27 th Annual NASA Goddard Software Engineering Workshop (SEW'02), pp. 183-190. , Greenbelt, Maryland, Digital Equipment Corporation 5-6 IEEE Comp. Soc. Press; Soloway, E., Bonar, J., Ehrlich, K., Cognitive strategies and looping constructs: An empirical study (1983) Commun. ACM, 26 (11), pp. 853-860; Stasko, J.T., Tango: A framework and system for algorithm animation (1990) Computer, 23 (9), pp. 27-39; Storey, M.D., Müller, H.A., Manipulating and documenting software structures using SHriMP views (1995) Proc. of the 11 th International Conference on Software Maintenance (ICSM'95), p. 275. , Opio (Nice), France, Oct. IEEE Comp. Soc. Press; Stroustrup, B., (1997) The C+ + Programming Language, , Addison-Wesley, 3 rd edition; Taft, S.T., Duff, R.A., (1997) LNCS, 1246. , Ada 95 Reference Manual, Language and Standard Libraries, International Standard ISOIIEC 8652: 1995(E), Springer; Van Emde Boas, P.E., Resistance is futile: Formal linguistic observations on design patterns (1997) Technical Report, ILLC-CT-1997-03. , The Institute For Logic, Language, and Computation (ILLC), University of Amsterdam, Feb; Wirth, N., The programming language Pascal (1971) Acta Informatica, 1, pp. 35-63; Witten, I.H., Frank, E., (2000) Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations, , Morgan Kaufmann","Gil, J.; Department of Computer Science, Technion-Israel Institute of Technology, Technion City, Israel; email: yogi@cs.technion.ac.il",,ACM SIGPLAN,,"OOPSLA'05 - 20th Annual ACM Conference on Object-Oriented Programming, Systems, Languages, and Applications",16 October 2005 through 20 October 2005,"San Diego, CA",66468,,,,,English,Proc Cinf Object Orient Program Syst Lang Appl OOPSLA,Conference Paper,Scopus,2-s2.0-31744451766,,
,,4,"Golden, E., John, B.E., Bass, L.",The value of a usability-supporting architectural pattern in software architecture design: A controlled experiment,2005,"Proceedings - 27th International Conference on Software Engineering, ICSE05",,,,460,469,,11,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33244454738&partnerID=40&md5=a364fcd951f601ed5b8f13cbc929922c,"Carnegie Mellon University, Human-Computer Interaction Institute, Pittsburgh, PA 15213, United States; Carnegie Mellon University, Software Engineering Institute, Pittsburgh, PA 15213, United States","Golden, E., Carnegie Mellon University, Human-Computer Interaction Institute, Pittsburgh, PA 15213, United States; John, B.E., Carnegie Mellon University, Human-Computer Interaction Institute, Pittsburgh, PA 15213, United States; Bass, L., Carnegie Mellon University, Software Engineering Institute, Pittsburgh, PA 15213, United States","Design patterns have been claimed to facilitate modification and improve understanding in software design. A controlled experiment was performed to assess the usefulness of portions of a Usability-Supporting Architectural Pattern (USAP) in modifying the design of software architectures to support a specific usability concern. Software engineering and information technology graduate students received different subsets of a USAP supporting cancellation functionality. They then studied a software architecture design and made modifications to add the ability to cancel commands. Results showed that participants who received a usability scenario, a list of general responsibilities, and a sample solution thought of significantly more key issues than participants who saw only the scenario. Implications for software development are that usability concerns can be included at architecture design time, and that USAPs can significantly help software architects to consider responsibilities inherent from usability concerns. Copyright 2005 ACM.",Controlled experiment; Design pattern; Modification; Software architecture; Usability,Controlled experiment; Design pattern; Software architecture; Usability; Design patterns; Software design; Usability Supporting Architectural Pattern (USAP); Education; Information technology; Modification; Students; Computer software; Computer software reusability; Pattern recognition; Software engineering; Usability engineering; Software engineering; Computer architecture,,,,,,"Adams, R.J., Bass, L., John, B.E., Applying general usability scenarios to the design of the software architecture of a collaborative workspace Human-Centered Software Engineering: Frameworks for HCI/HCD and Software Engineering Integration, , in press A. Seffah, J. Gulliksen and M. Desmarais (Eds.) Kluwer Academic Publishers; Anderson, J.R., Fincham, J.M., Acquisition of procedural skills from examples Journal of Experimental Psychology: Learning, Memory and Cognition, 20, pp. 1322-1340; Bass, L., Golden, E., John, B.E., Juristo, N., Moreno, A., Sanchez-Segura, M.-I., Unraveling the myths of developing usable software (2005) 27th International Conference on Software Engineering, , submitted to the ICSE 2005, St. Louis, MO, May 15-21; Bass, L., John, B.E., Supporting usability through software architecture IEEE Computer, 34 (10), pp. 113-115; Bass, L., John, B.E., Kates, J., Achieving usability through software architecture (2001) Technical Report No. CMU/SEI-TR-2001-005, , Carnegie Mellon University/Software Engineering Institute; Bass, L., John, B.E., Juristo, N., Sanchez-Segura, M.-I., Usability and software architecture (2004) 26th International Conference on Software Engineering, , tutorial materials presented at the ICSE 2004, Edinburgh, Scotland, May 23-38; Clements, P., Bachmann, F., Bass, L., Garlan, D., Ivers, J., Little, R., Nord, R., Stafford, J., (2003) Documenting Software Architectures: Views and beyond, , Addison-Wesley; Eguiluz, H., Govi, V., Kim, Y.J., Sia, A., PAMD: Developing a plug-in architecture for palm OS-powered devices using software engineering (2002) Technical Note, CMU-SEI-2002-TN-020. , Carnegie Mellon University, Pittsburgh, PA; John, B.E., Bass, L., Avoiding 'we can't change THAT!': Software architecture and usability (2003) CHI 2003, , tutorial materials presented Ft. Lauderdale, FL, April 5-10; John, B.E., Bass, L., Juristo, N., Sanchez-Segura, M.-I., Avoiding 'we can't change THAT!': Software architecture and usability (2004) CHI 2004, , tutorial materials presented Vienna, Austria, April 24-29; John, B.E., Bass, L., Sanchez-Segura, M.-I., Adams, R.J., Bringing usability concerns to the design of software architecture (2004) Proceedings of the 9 th IFIP Working Conference on Engineering for Human-Computer Interaction and the 11 th International Workshop on Design, Specification and Verification of Interactive Systems, , Hamburg, German, July 11-13; Fernando, N.J., Teaching architectural design in an undergraduate software curriculum (1999) ASEE/IEEE Frontiers in Education Conference Proceedings, , 12b1-4; Nielsen, J., Heuristic evaluation (1994) Usability Inspection Methods, , Nielsen, J., and Mack, R.L. (Eds.), John Wiley & Sons, New York, NY; Prechelt, L., Unger, B., Philippsen, M., Tichy, W., Two controlled experiments assessing the usefulness of design pattern documentation in program maintenance (2002) IEEE Transactions on Software Engineering, 28 (6), pp. 595-606. , June; Van Der Veer, G., Van Vliet, H., A plea for a poor man's HCI component in software engineering curricula (2001) Proceedings of the 14 th Conference on Software Engineering Education and Training, , Charlotte, NC, February 19-21; Vinter, O., Experience-based approaches to process improvement (2000) Proceedings of the Thirteenth International Software Quality Week, , Software Research, San Francisco, CA","Golden, E.; Carnegie Mellon University, Human-Computer Interaction Institute, Pittsburgh, PA 15213, United States; email: egolden@cs.cmu.edu",,ACM SIGSOFT;IEEE Computer Society,,"27th International Conference on Software Engineering, ICSE05",15 May 2005 through 21 May 2005,"St. Louis, MO",66729,,,,,English,Proc. Int. Conf. Softw. Eng.,Conference Paper,Scopus,2-s2.0-33244454738,,
,,v,"Flores, N., Aguiar, A.",Reverse engineering of framework design using a meta-patterns-based approach,2005,"3rd ACS/IEEE International Conference on Computer Systems and Applications, 2005",2005,,1387158,981,986,,,10.1109/AICCSA.2005.1387158,http://www.scopus.com/inward/record.url?eid=2-s2.0-33746572735&partnerID=40&md5=3a6d91e1703292a269f14381e9a4f935,"Faculdade de Engenharia, Universidade do Porto, Porto, Portugal","Flores, N., Faculdade de Engenharia, Universidade do Porto, Porto, Portugal; Aguiar, A., Faculdade de Engenharia, Universidade do Porto, Porto, Portugal","Object-oriented frameworks are a powerful reuse technique but they are also very complex and difficult to design. Framework's design aims at separating the invariant aspects across several applications in a domain - frozen spots - from the aspects that vary among applications and thus must be kept flexible and customizable - hot spots. The flexibility and extensibility provided at hot spots is usually achieved by following common design patterns, which are often hard and tiresome to identify without proper documentation. This paper proposes a reverse engineering approach to identify the design patterns used in a framework, using a high-level hot spot representation. The goals of this work include: researching a design approach that produces usable intermediate reuse information; defining a representation for design patterns based on meta-patterns; and developing a supporting tool to automate the reverse engineering process.",,Computer software reusability; Finite automata; Information theory; Metadata; Object oriented programming; Program documentation; Design patterns; Engineering process; Frozen spots; Hot spot representation; Software engineering,,,,,,"Albio-Amiot, H., Guéhéneuc, Y.-G., Metamodeling design patterns: Application to pattern detection and code synthesis (2001) Workshop on Adaptative Object-models and Metamodeling Techniques, , ECOOP; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language, , Oxford University Press; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Master's thesis, North Carolina State University; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern Oriented Software Architecture - A System of Patterns, , John Wiley & Sons; Butler, G., (1997) A Reuse Case Perspective on Documenting Frameworks, , hltp://www.cs.concordia.ca/faculty/gregb; Campbell, R., Islam, N., Johnson, R., Kougiouris, P., Madany, P., (1991) Choices: Framework and Refinement; Fayad, M.E., Schmidt, D.C., Object-oriented application frameworks (1997) Communications of the ACM, 40 (10), pp. 32-38. , 1997; Fayad, M.E., Schmidt, D.C., Johnson, R.E., (1999) Building Application Frameworks - Object-oriented Foundations of Framework Design, , John Wiley & Sons; Gamma, E., Helm, R., Johnson, R., Vlissides, J.O., Design patterns: Abstraction and reuse of object-oriented design Proceedings of the ECOOP'93 Conference, , Springer-Verlag; Gamma, E., Helm, R., Johnson, R., Vlissides, J.O., (1995) Design Patterns - Elements of Reusable Object-oriented Software, , Addison-Wesley; Heuzeroth, D., Holl, T., Hogstrom, G., Lowe, W., Automatic design pattern detection (2003) 11th IEEE International Workshop on Program Comprehension, pp. 94-103; Javadoc Home Page, , http://java.sun.com/j2se/javadoc; Johnson, R.E., Foote, B., Designing reusable classes (1988) Journal of Object-oriented Programming, 1 (2), pp. 22-35; Johnson, R., Documenting frameworks using patterns OOPSLA'92 Conference Proceedings, pp. 63-76. , Paepcke, A., editor, ACM Press; Keller, R., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse engineering of design components (1999) Proceedings of 21st Conference on Software Engineering, pp. 226-235. , Los Angeles, USA, IEEE; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Working Conference on Reverse Engineering, pp. 208-215; Lewis, T., Andert, G., Calder, P., Gamma, E., Pree, W., Rosenstein, L., Schmucker, K., Vlissides, J.M., (1995) Object-oriented Application Frameworks, , Manning Publications Co. / Prentice-Hall; Mci, H., Xie, T., Yang, F., JBOORET: An automated tool to recover OO design and source models (2001) 25th Annual International Computer Software and Applications Conference, pp. 61-76; Pree, W., (1991) Object-oriented Versus Conventional Construction of User Interface Prototyping Tools, , PhD thesis, University of Linz; Pree, W., (1995) Design Patterns for Object-oriented Software Development, , Addison-Wesley / ACM Press; Pree, W., Hot-spot-driven development (1999) Building Application Frameworks - Object-oriented Foundations of Framework Design, pp. 379-394. , John Wiley & Sons; Seemann, J., Von Gudenberg, J.W., Pattern-based design recovery of java software ACM (1998) SIGSOFT Software Engineering Notes, , ACM Press; Smith, J.McC., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) Technical Report, , Department of Computer Science, University of North Carolina, Chapel Hill, USA; EMF-based UML 2.0 Metamodel Implementation, , http://www.eclipse.org/uml2/; Wang, W., Tzerpos, V., (2004) DPVK - An Eclipse Plugin to Detect Design Patterns in Eiffel Systems, , Department of Computer Science, York University, Toronto, Canada; Wirfs-Brock, R., Wilkerson, B., Wiener, L., (1990) Designing Object-oriented Software, , PH; Aguiar, A., David, G., Padilha, M., XSDoc: An extensible wiki-based infrastructure for framework documentation (2003) VIII Jornadas de Ingeniería del Software y Bases de Datos, , Alicante, Spain, November; IBM Open Source Development Environment, , http://www.eclipse.org","Flores, N.; Faculdade de Engenharia, Universidade do Porto, Porto, Portugal; email: nuno.flores@fe.up.pt",,,,"3rd ACS/IEEE International Conference on Computer Systems and Applications, 2005",3 January 2005 through 6 January 2005,Cairo,67352,,078038735X,9780780387355,,,English,ACS/IEEE Int. Conf. Comput. Syst. Applic.,Conference Paper,Scopus,2-s2.0-33746572735,
,,3,"Kharrat, D., Qadri, S.S.",Self-registering plug-ins: An architecture for extensible software,2005,Canadian Conference on Electrical and Computer Engineering,2005,,1557221,1324,1327,,3,10.1109/CCECE.2005.1557221,http://www.scopus.com/inward/record.url?eid=2-s2.0-33751322997&partnerID=40&md5=a261b00bd0882412877bb8842f482a25,"University of Western Ontario, Canada","Kharrat, D., University of Western Ontario, Canada; Qadri, S.S., University of Western Ontario, Canada","Extensibility and flexibility are essential characteristics of today's software. A common technique that offers these vital features is the concept of plug-ins, in which additional components are able to easily ""plug"" into the application on-demand to provide extra features or functionality. Plug-ins are indispensable in software as they offer tremendous advantages in terms of giving the application simplified means to keep pace with today's rapidly changing technology. This paper describes a powerful and flexible plug-in architecture, which builds upon an improved version of the Pluggable Factories design pattern. The framework for the plug-in architecture in this paper consists of a registry implemented via a map that would contain a reference to each plug-in, which is used to create instances of it upon request. The plug-in is automatically self-registered at start-up before any code is executed by using static instantiation. Thus, new plug-ins are dynamically recognized without any interference from the user. © 2005 IEEE.",Design patterns; Plug-ins; Pluggable factories,Plug-ins; Pluggable factories Design patterns; Static instantiation; Codes (symbols); Computer aided design; Computer architecture; Computer science; Computer software,,,,,,"Culp, T., Industrial strength pluggable factories (1999) C++ Report, 11 (9). , Oct; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Vlissides, J., Pluggable factory part I (1998) C++ Report, , Dec; Vlissides, J., Pluggable factory part II (1999) C++ Report, , Feb; Mayer, J., Melzer, I., Schweiggert, F., Lightweight plug-in-based application development (2002) NetObjectDays, pp. 87-102; Chatley, R., Eisenbach, S., Magee, J., Modelling a framework for plugins (2003) SAVCBS'03 Workshop Proceedings at ESEC/FSE","Kharrat, D.; University of Western OntarioCanada; email: dkharrat@uwo.ca",,,,Canadian Conference on Electrical and Computer Engineering 2005,1 May 2005 through 4 May 2005,"Saskatoon, SK",68639,8407789,,CCCEF,,English,Can Conf Electr Comput Eng,Conference Paper,Scopus,2-s2.0-33751322997,,
,,1,"Niculescu, V., Moldovan, G.S.",Building an object oriented computational algebra system based on design,2005,"Proceedings - Seventh International Symposium on Symbolic and Numeric Algorithms for Scientific Computing, SYNASC 2005",2005,,1595835,101,108,,,10.1109/SYNASC.2005.22,http://www.scopus.com/inward/record.url?eid=2-s2.0-33847224506&partnerID=40&md5=bcddd8d11d128e8bbef539c6de64e631,"Babeş-Bolyai University, Department of Computer Science, M. Kogǎlniceanu Nr. 1, Cluj-Napoca, Romania","Niculescu, V., Babeş-Bolyai University, Department of Computer Science, M. Kogǎlniceanu Nr. 1, Cluj-Napoca, Romania; Moldovan, G.S., Babeş-Bolyai University, Department of Computer Science, M. Kogǎlniceanu Nr. 1, Cluj-Napoca, Romania","Object oriented programming and design patterns introduce a high level of abstraction that allows us to implement and work with mathematical abstractions. Classic algebraic libraries, based on imperative programming, contain subalgorithms for working with polynomials, matrices, vectors, etc. Their main inconvenience is the dependency on types. In this paper we analyze and design the kernel for an object oriented computational algebra system based on design patterns. This approach allows us to work not only with concrete algebraic structures, but also with abstract algebraic structures. The advantages of this approach are given mainly by the creational design patterns, by reflection and dynamic loading, and by representation independence. These introduce significant flexibility and abstraction. Using this representation we may work with abstract algebraic structures, such as: groups, rings, fields, etc., define new algebraic structures, and operate with them in abstract and concrete ways. © 2005 IEEE.",,Algorithms; Computational methods; Computer aided design; Data structures; Dynamic programming; Pattern recognition; Algebraic structures; Classic algebraic libraries; Computational algebra; Design patterns; Object oriented programming,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley; Gilbert, J., (1992) Elements of Modern Algebra, , PWS-Kent, Boston; Lujn, M., Freeman, T.L., Gurd, J.R., OoLaLa: An Object Oriented Analysis and Design of Numerical Linear Algebra (2000) Proceedings OOPSLA, pp. 229-252. , In the, Minneapolis, pp; G.S. Moldovan, Aspect Oriented Programming: A Case Study, Proceedings of the Symposium Colocviul Academic Clujean de Informatica, Cluj-Napoca, June 2004, pp. 3-8Moldovan, G.S., Niculescu, V., Integrating Conversions into a Object-Oriented Computational Algebra System, , given for publication; Niculescu, V., Moldovan, G.S., OOLACA: An Object Oriented Library for Abstract and Computational Algebra Companion to the ACM conference OOPSLA 2004, pp. 160-162. , CANADA, ACM Press, NY, USA, pp; V. Niculescu, A Design Proposal for an Object Oriented Algebraic Library, Studia Universitatis Babes-Bolyai, Informatica, XLVIII, No. 1, 2003, pp.89-100V. Niculescu, On Choosing Between Templates and Polymorphic Types. Case-study: Representation of Algebraic Structures, Proceedings of Zilele Academice Clujene, Cluj-Napoca, June 2003, pp.71-78Niculescu, V., Teaching about Creational Design Patterns (2003) Workshop on Pedagogies and Tools for Learning Object-Oriented Concepts, ECOOP, , Germany, July 21-25; Stroustrup, B., Ellis, M., (1994) The Annotated Reference C++ Manual, , Addison-Wesley; BLAS Technical Forum, Document for the BAsic Linear Algebra Subprograms, , http://www.netlib.org/blas/blast-forum; Bracha, G., (2004) Generics in the Java Programming Language, , http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf; Axiom, , http://www.nongnu.org/axiom; GAP http, , www-gap.dcs.st-and.ac.uk/~gap; Magma, , http://magma.maths.usyd.edu.au/magma","Niculescu, V.; Babeş-Bolyai University, Department of Computer Science, M. Kogǎlniceanu Nr. 1, Cluj-Napoca, Romania; email: vniculescu@cs.ubbcluj.ro",,,,"7th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing, SYNASC 2005",25 September 2005 through 29 September 2005,Timisoara,69236,,769524532,9780769524535,,,English,Proc. 7th Int. Symp. Symbol. Numer. Algor. Scientif. Comput. SYNASC 2005,Conference Paper,Scopus,2-s2.0-33847224506,
,,v,"Smith, J.M., Stotts, D.",Extending SPQR to architectural analysis by semi-automated training,2005,"Proceedings - 5th Working IEEE/IFIP Conference on Software Architecture, WICSA 2005",2005,,1620127,239,242,,,10.1109/WICSA.2005.32,http://www.scopus.com/inward/record.url?eid=2-s2.0-33947114975&partnerID=40&md5=52a0cd23e979b0a93c45e759a29cce95,"University of North Carolina at Chapel Hill, Chapel Hill, NC 27599-3175, United States","Smith, J.M., University of North Carolina at Chapel Hill, Chapel Hill, NC 27599-3175, United States; Stotts, D., University of North Carolina at Chapel Hill, Chapel Hill, NC 27599-3175, United States","We present an overview of SPQR, the System for Pattern Query and Recognition, a toolkit that detects instances of known design patterns directly from object-oriented source code in an automated and flexible manner. Based on our previous work in ρ-calculus and Pattern/Object Markup Language (POML), SPQR is retargetable to most OO languages, and system design notations. We discuss how this approach may he applied to architectural concerns by leveraging SPQR's training mode. The System for Pattern Query and Recognition, or SPQR, is an automated framework to analyze software systems in the small or the large, and detect instances of known programming concepts in a flexible yet formal manner. These concepts, combined in well-defined ways to form abstractions, as found in the design patterns literature, then lead to the possible automated detection of design patterns directly from source code and other design artifacts. Our previous publications [7, 8] have described SPQR in detail, as well as its successful application to a number of software systems. Here we describe SPQR briefly, and how these principles can be extended to architectural analysis. © 2005 IEEE.",,Design patterns; Pattern Query; Software analysis; Software systems; Abstracting; Automation; Markup languages; Pattern recognition; Quality management; Query languages; Software architecture,,,,,,"Abadi, M., Cardelli, L., (1996) A Theory of Objects, , Springer-Verlag New York, Inc; F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal. Pattern-Oriented System Architecture: A System of Patterns, 1 of Wiley Series in Software Design Patterns. John Wiley & Sons, 1996Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison Wesley; McCune, W., Otter 2.0 (theorem prover) (1990) Proc. of the 10th Intl Conf. on Automated Deduction, pp. 663-664. , M. E. Stickel, editor, Jul; Schmidt, D., Stal, M., Rohnert, H., Buschmann, F., Pattern-Oriented System Architecture: Patterns for Concurrent and Networked Objects (2000) Wiley Series in Software Design Patterns, 2. , of, John Wiley & Sons; Smith, J.M., Pattern/object markup language (POML): A simple XML schema for object oriented code descripton (2004), Technical Report TR04-010, University of North Carolina at Chapel HillSmith, J.M., Stotts, D., Elemental Design Patterns: A formal semantics for composition of OO software architecture (2002) Proc. of 27th Annual IEEE/NASA Soft. Engineering Workshop, pp. 183-190. , Dec; Smith, J.M., Stotts, D., SPQR: Flexible automated design pattern extraction from source code (2003) 18th IEEE Intl Conf on Automated Software Engineering, pp. 215-224. , Oct","Smith, J.M.; University of North Carolina at Chapel Hill, Chapel Hill, NC 27599-3175, United States; email: smithja@cs.unc.edu",,IEEE-CS Technical Council on Software Engineering;IFIP WG 2.10 Software Architecture;IEEE Computer Society;Reengineering Forum (REF),,"5th Working IEEE/IFIP Conference on Software Architecture, WICSA 2005",6 November 2005 through 10 November 2005,"Pittsburgh, PA",69320,,769525482,9780769525488,,,English,Proc. Working IEEE/IFIP Conf. Softw. Arch.,Conference Paper,Scopus,2-s2.0-33947114975,
,,4,"Lovatt, H.C., Sloane, A.M., Verity, D.R.",A Pattern Enforcing Compiler (PEC) for Java: Using the compiler,2005,Conferences in Research and Practice in Information Technology Series,43,,,69,78,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84863636594&partnerID=40&md5=63486ddf14c98b43b5f79d9f28faf838,"Department of Computing, Macquarie University, Sydney NSW 2109, Australia","Lovatt, H.C., Department of Computing, Macquarie University, Sydney NSW 2109, Australia; Sloane, A.M., Department of Computing, Macquarie University, Sydney NSW 2109, Australia; Verity, D.R., Department of Computing, Macquarie University, Sydney NSW 2109, Australia","A PEC is a Pattern Enforcing Compiler, which is like a conventional compiler only extended to include the extra checks needed to enforce design patterns. PECs are currently a research project and the PEC written is targeted at the Java programming language. This paper: Describes the PEC Describes how to use the PEC Demonstrates how the PEC combines static testing, dynamic testing (unit testing), and code generation synergistically into one utility Shows that the user of the PEC can write their own design patterns and have the compiler enforce them The PEC is believed to be unique in statically testing, dynamically testing, generating code and being user extendable. The PEC is stable enough for production code and is available for free download under the Lesser GNU General Public License (Lovatt 2004). The PEC makes extensive use of reflection (runtime type identification); both when testing that a class conforms to pattern and also to allow the compiler to be user extendable. Copyright © 2005, Australian Computer Society, Inc.",Compilers; Design patterns; Dynamic checking; Extendable compiler; Pattern Enforcing Compiler; PEC; Static checking; Unit testing,Design Patterns; Dynamic checking; Extendable compiler; Pattern Enforcing Compiler; PEC; Static checking; Unit testing; Java programming language; Program compilers,,,,,,"Bloch, J., (2001) Effective Java™: Programming Language Guide, , Addison-Wesley Publishing Co., Inc., Boston, MA. ISBN 0201310058; Bokowski, B., Coffeestrainer: Statically-checked constraints on the definition and use of types in java (1999) Proceedings of the 7th European Software Engineering Conference Held Jointly with the 7th ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE'99), pp. 355-374. , ftp://ftp.inf.fu-berlin.de/pub/barat/esec-final.ps, Toulouse, France. Pages: Accessed 15 Aug. 2004; Bonniot, D., (2004), http://nice.sourceforge.net/, Accessed 15 Aug. 2004Budinsky, F., Finnie, M., Patsy, Y., Vlissides, J., Automatic code generation from design patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171. , http://www.research.ibm.com/designpatterns/pubs/codegen.pdf, Accessed 15 Aug. 2004; Chambers, C., Harrison, W., Vlissides, J., A debate on language and tool support for design patterns (2000) Proceedings of the 27th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 277-289. , http://doi.acm.org/10.1145/325694.325731, Boston, MA, USA. Accessed 15 Aug. 2004; Chiba, S., (2004), http://www.csg.is.titech.ac.jp/~chiba/javassist/, Accessed 15 Aug. 2004Coplien, J.O., Software design patterns: Common questions and answers (1998) The Patterns Handbook: Techniques, Strategies, and Applications, pp. 311-320. , Linda Rising, editor, Cambridge University Press, New York, January 1998; Cornils, A., Hedin, G., Statically checked documentation with design patterns (2000) Proceedings of the Technology of Object-Oriented Languages and Systems (TOOLS 33, p. 419. , http://www.cs.lth.se/Research/ProgEnv/Papers/TOOLS00.GH.pdf, Accessed 15 Aug. 2004; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Longman Publishing Co., Inc., Boston, MA. ISBN 0-201-63361-2; Hammouda, I., Koskimies, K., Generating a pattern-based application development environment for enterprise javabeans (2002) Proceedings of the 26th International Computer Software and Applications Conference on Prolonging Software Life: Development and Redevelopment (COMPSAC), pp. 856-866. , http://practise.cs.tut.fi/pub/papers/NWPER02_Imed.pdf, Accessed 15 Aug. 2004; Hannemann, J., Kiczales, G., Design pattern implementation in java and AspectJ (2002) Proceedings of the 17th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, pp. 161-173. , http://www.cs.ubc.ca/~jan/papers/oopsla2002/oopsla02-patterns.pdf, Seattle, Washington, USA. Nov. Accessed 9 Nov. 2004; Hedin, G., Enforcing programming conventions by attribute extension in an open compiler (1996) Proceedings of the Nordic Workshop on Programming Environment Research (NWPER'96), , http://www.cs.lth.se/Research/ProgEnv/Papers/LU-CS-TR:96-171.pdf, Aalborg, Denmark, Accessed 15 Aug. 2004; Lovatt, H.C., (2001), http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4617197, Accessed 15 Aug. 2004Lovatt, H.C., (2004), http://pec.dev.java.net/, Accessed 15 Aug. 2004Mapelsden, D., Hosking, J., Grundy, J., Design pattern modeling and instantiation using DPML (2002) Proceedings of Tools Pacific 2002, , https://www.se.auckland.ac.nz/courses/SOFTENG462/resources/jg/tools2002. pdf, Sydney, 18-21 Feb., CRPIT Press. Accessed 9 Nov. 2004; Meijer, E., Schulte, W., (2003) Unifying Tables Objects and Documents, , http://research.microsoft.com/~emeijer/Papers/XS.pdf, Accessed 15 Aug. 2004; Murphy, G.C., Notkin, D., Sullivan, K., Software reflexion models: Bridging the gap between source and high-level models (1995) Proceedings of the 3rd ACM SIGSOFT Symposium on Foundations of Software Engineering, pp. 18-28. , http://www.cs.ubc.ca/spider/murphy/papers/rm/fse95.html, Washington, D.C., United States. Accessed 15 Aug. 2004; Noble, J., Biddle, R., Patterns as Signs (2002) Proceedings of the 16th European Conference on Object-Oriented Programming (ECOOP2002, pp. 368-391. , http://www.mcs.vuw.ac.nz/comp/Publications/archive/CS-TR-01/CS-TR-01-16. pdf, Similar to. Accessed 2 Nov. 2004; (2004) The MultiJava Project, , http://multijava.sourceforge.net/, Accessed 15 Aug. 2004; Rutar, N., Almazan, C.B., Foster, J.S., A comparison of bug finding tools for Java (2004) The 15th IEEE International Symposium on Software Reliability Engineering (ISSRE'04), , http://www.cs.umd.edu/~jfoster/papers/issre04.pdf, To be published in the proceedings of. Saint-Malo, Bretagne, France., Nov., Accessed 9 Nov. 2004; Sefika, M., Sane, A., Campbell, R.H., Monitoring compliance of a software system with its high-level design models (1996) Proceedings of the 18th International Conference on Software Engineering, pp. 387-396. , http://choices.cs.uiuc.edu/Papers/SoftwareEngineering/icse-96.pdf, Berlin, Germany. Accessed 15 Aug. 2004; Sloane, A.M., (2004) Programming Languages Reading Group Home Page, , http://www.comp.mq.edu.au/~asloane/plrg/reading/index.html, Accessed 15 Aug. 2004; Steele, G.L., Growing a language (1998) Object-Addendum to the 1998 Proceedings of the Conference on Object-oriented Programming, Systems, Languages, and Applications (Addendum to OOPSLA'98), , http://research.sun.com/research/jtech/pubs/98-oopsla-growing.ps, Vancouver, BC, Canada. Accessed 15 Aug. 2004; (2003) Java™ 2 Platform, Standard Edition, v 1.4.2 API Specification, , http://java.sun.com/j2se/1.4.2/docs/api/index.html, Accessed 15 Aug. 2004; Wallace, B., (2003), http://www.polyglotinc.com/DesignMarkers/, Accessed 15 Aug. 2004","Lovatt, H.C.; Department of Computing, Macquarie University, Sydney NSW 2109, Australia; email: howard.lovatt@iee.org",,,,"2nd Asia-Pacific Conference on Conceptual Modelling, APCCM 2005",30 January 2005 through 4 February 2005,"Newcastle, NSW",90894,14451336,1920682252,9781920682255,,,English,Conf. Res. Pract. Inf. Technol. Ser.,Conference Paper,Scopus,2-s2.0-84863636594,
,,4,"Wang, Y., Huang, J.",Formal models of object-oriented patterns using RTPA,2005,Canadian Conference on Electrical and Computer Engineering,2005,,1557339,1835,1838,,,10.1109/CCECE.2005.1557339,http://www.scopus.com/inward/record.url?eid=2-s2.0-33751346100&partnerID=40&md5=ca6a3e7c3cda2e15de1459de878d4a0b,"Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, Alta. T2N 1N4, Canada","Wang, Y., Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, Alta. T2N 1N4, Canada; Huang, J., Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, Alta. T2N 1N4, Canada","The development of generically reusable object-oriented components is a task with a higher degree of cognitive complexity. Design patterns are an important means to deal with this difficulty for capturing design notions and recurrent architectures in software engineering. Since patterns are inherently complicated, the conventional diagram-based techniques cannot rigorously and explicitly denote the architectures and behaviors of patterns. Real-Time Process Algebra (RTPA) is used to describe software patterns formally and explicitly in order to enhance the understandability of their architectures, semantics, and behaviors. This paper presents a formal model of generic patterns, which focuses on architectural and associational descriptions of a pattern's interfaces, implementation, and instantiations. A typical creational pattern, the builder pattern, is provided as a case study on the applications of the generic pattern model. This paper demonstrates that software patterns can be rigorously, efficiently, and effectively designed and implemented based on the formal pattern model. © 2005 IEEE.",Abstraction model of patterns; Design pattern; Generic patterns; Real-time process algebra; Software engineering,Abstracting; Architectural design; Cognitive systems; Interfaces (computer); Real time systems; Semantics; Software engineering; Abstraction model; Cognitive complexity; Design patterns; Real time process algebra (RTPA); Object recognition,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, Reading, MA; Taibi, T., Ngo, D.C.L., Formal specification of design patterns - A balanced approach (2003) Journal of Object Technology, 2 (4), pp. 127-140; (1995) Pattern Languages of Program Design, 2. , Vlissides, J.M., J.O. Coplien and N.L. Kerth eds., Addison-Wesley; Nguyen-Cong, V., Wang, Y., Specification of design patterns using Real-Time Process Algebra (RTFA) (2004) Proc. of 2004 Canadian Conference on Electrical and Computer Engineering (CCECE'04), pp. 1545-1548. , IEEE CS Press, Niagara Falls, ON, Canada, May; Wang, Y., The Real-Time Process Algebra (RTPA) (2002) Annals of Software Engineering, 14, pp. 235-274; Wang, Y., (2005) Software Engineering Foundations: A Transdisciplinary and Rigorous Perspective, , CRC Press, USA","Wang, Y.; Theoretical and Empirical Software Engineering Research Centre, Dept. of Electrical and Computer Engineering, University of Calgary, 2500 University Drive, NW, Calgary, Alta. T2N 1N4, Canada; email: Yingxu@ucalgary.ca",,,,Canadian Conference on Electrical and Computer Engineering 2005,1 May 2005 through 4 May 2005,"Saskatoon, SK",68639,8407789,,CCCEF,,English,Can Conf Electr Comput Eng,Conference Paper,Scopus,2-s2.0-33751346100,,
,,3,"Konstandinidis, V., Karageorgos, A.",A pattern language for FIPA agent interface design,2005,EUROCON 2005 - The International Conference on Computer as a Tool,II,,1630187,1267,1270,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33947309100&partnerID=40&md5=2b5856b8ff67bf8d774e78f1cd286c47,"IEEE, Greece; Byte S.A, Athens 117 41, Greece; Department of Communications and Computer Engineering, University of Thessaly, Volos 38 221, Greece","Konstandinidis, V., IEEE, Greece, Byte S.A, Athens 117 41, Greece; Karageorgos, A., IEEE, Greece, Department of Communications and Computer Engineering, University of Thessaly, Volos 38 221, Greece","This paper presents a pattern language supporting the design of web/mobile interfaces to static agents built by FIPA-compliant agent toolkits. The approach followed was to collaboratively gather the requirements the language should satisfy, and derive, select and combine appropriate patterns fulfilling them. The use of the language has been validated in four case studies and its suitability for meeting the agent interface development requirements has been evaluated using Force Resolution Maps (FRMs). It is has been found that the proposed language fully satisfies the identified requirements. © 2005 IEEE.",Agent interfaces; Design patterns; FIPA; Pattern languages,Agent interfaces; Design patterns; Force Resolution Maps (FRM); Pattern languages; Static agents; Computer programming languages; Computer supported cooperative work; Requirements engineering; Software engineering; User interfaces,,,,,,"Souza, J., Matwin, S., Japkowicz, N., Evaluating Data Mining Models. A Pattern Language (2002) Proceedings of the 9th Conference on Pattern Language of Programs (PLOP'2002); http://sharon.cselt.it/projects/jade, Accessed: 15 June 2005http://leap.crm-paris.com/index.html, Accessed: 15 June 2005http://www.emorphia.com/research/about.htm, Accessed: 15 June 2005http://sf.us.agentcities.net/aap, Accessed: 10 March 2005http://sourceforge.net/projects/zeusagent, Accessed: 10 March 2005http://www.fipa.org, Accessed: 15 June 2005Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Coplien, J.O., (1996) Software Patterns, , SIGS Books; Wood, J., Silver, D., (1995) Joint Application Development, , 2nd ed, New York: Wiley; F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad, M. Stal, A System of Patterns: Pattern-Oriented Software Architecture, Wiley, 1996http://hillside.net/patterns/definition.html, Accessed: 15 June 2005http://www.agentcities.net, Accessed: 15 June 2005http://www.agentcities.co.umist.ac.uk, Accessed: 15 June 2005http:Hsourceforge.net/projects/networkagent, Accessed: 10 March 2004","Konstandinidis, V.; Byte S.A, Athens 117 41, Greece; email: V.Konstandinidis@computer.org",,,,EUROCON 2005 - The International Conference on Computer as a Tool,21 November 2005 through 24 November 2005,Belgrade,68560,,142440049X,9781424400492,,,English,EUROCON 2005 Int. Conf. on Comp. Tool,Conference Paper,Scopus,2-s2.0-33947309100,
,,3,"Nill, C., Sikka, V.",Modeling software applications and user interfaces using metaphorical entities,2005,CEUR Workshop Proceedings,159,,,,,4,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84877326037&partnerID=40&md5=ef9c329230e8f20983e4846a68afa366,"SAP Advanced Technology Center, SAP Labs LLC, 3421 Hillview Avenue, Palo Alto, CA 94304, United States","Nill, C., SAP Advanced Technology Center, SAP Labs LLC, 3421 Hillview Avenue, Palo Alto, CA 94304, United States; Sikka, V., SAP Advanced Technology Center, SAP Labs LLC, 3421 Hillview Avenue, Palo Alto, CA 94304, United States","The power of metaphor has long been recognized in user interface design and more broadly in human interaction circles. More recently metaphor also found its way into the software development process. This paper aims to combine occurrences of metaphor in the two fields with ideas from the field of model driven architecture. We suggest that it is possible to create conceptual patterns based on metaphor that allow a high level description of interaction models and user interfaces, and can at the same time serve as structural units for modeling software applications.",Design patterns; Interaction design; MDA; Metaphor; Software application development; Tools and materials approach; User-interface design,Design Patterns; Interaction design; MDA; Metaphor; Software applications; User interface designs; Application programs; Software architecture; Software design; User interfaces,,,,,,"Arlow, J., Neustadt, I., (2003) Enterprise Patterns and MDA-Building Better Software with Archetype Patterns and UML, , Object Technology Series. Addison-Wesley, Boston, MA; Ashley, J., Desmond, K., Oracle (2002) Interactions, 9 (2), pp. 81-86; Barr, P., Biddle, R., Noble, J., A semiotic model of user interface metaphor (2003) The 6th International Workshops on Organisational Semiotics, , Reading, UK; Beck, K., (1999) Extreme Programming Explained: Embrace Change, , Addison-Wesley, Boston, MA, first edition; Frankel, D.S., (2003) Model Driven Architecture: Applying MDA to Enterprise Computing, , OMG Press. Wiley Publishing, Inc., Indianapolis, IN; Gryczan, G., Wulf, M., Züllighoven, H., Prozeßmuster für die situierte Koordination kooperativer Arbeit (1996) Herausforderung Telekooperation (D-CSCW '96), pp. 89-103. , Springer, Berlin, Germany; Khoury, G.R., Simoff, S.J., Enterprise architecture modelling using elastic metaphors (2004) Proceedings of the First Asian-Pacific Conference on Conceptual Modelling, pp. 65-69. , Darlinghurst, Australia; Lakoff, G., Johnson, M., (1980) Metaphors We Live By, , The University of Chicago Press, Chicago, IL; Madsen, K.H., A guide to metaphorical design (1994) Communications of the ACM, 37 (12), pp. 57-62; Marcus, A., Metaphors and user interfaces in the 21st century (2002) Interactions, 9 (2), pp. 7-10; Peirce, C.S., (1958) Collected Writings, , Harvard University Press, Cambridge, MA; Rose, H., (1996) Objektorientierte Produktionsarbeit, pp. 23-54. , Campus Verlag, Frankfurt, Germany; Tristram, C., The next computer interface (2001) Technology Review, 104 (10), pp. 52-61. , December; Züllighoven, H., (2004) Object-oriented Construction Handbook: Developing Application-oriented Software with the Tools and Materials Approach, , Morgan Kaufmann, San Francisco, CA","SAP Advanced Technology Center, SAP Labs LLC, 3421 Hillview Avenue, Palo Alto, CA 94304, United States",,,,"MoDELS 2005 Workshop on Model Driven Development of Advanced User Interfaces, MDDAUI 2005",2 October 2005 through 2 October 2005,Montego Bay,96843,16130073,,,,English,CEUR Workshop Proc.,Conference Paper,Scopus,2-s2.0-84877326037,,
,,1,"Juric, R., Williams, S., Milligan, P.",Experiences of generating cots components when automating medicinal product evaluations,2005,"17th International Conference on Software Engineering and Knowledge Engineering, SEKE 2005",,,,653,656,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84886881055&partnerID=40&md5=294e0facb87f5cf6ca03af4f0e0a5f36,"Cavendish School of Computer Science, University of Westminster, 115 New Cavendish Street, London W1W 6UW, United Kingdom; Enterprise Architecture, DCSIT, GlaxoSmithKline, Greenford UB6 0NN, United Kingdom","Juric, R., Cavendish School of Computer Science, University of Westminster, 115 New Cavendish Street, London W1W 6UW, United Kingdom; Williams, S., Cavendish School of Computer Science, University of Westminster, 115 New Cavendish Street, London W1W 6UW, United Kingdom; Milligan, P., Enterprise Architecture, DCSIT, GlaxoSmithKline, Greenford UB6 0NN, United Kingdom",This paper reports on experiences of generating COTS components when designing and deploying component based software architecture for automation and interoperation of medicinal product evaluations across different countries in the world. Our generic architectural model renders two sets of software components that are candidates for COTS components. We identify which role such COTS components may play and outline our approach of generating them. We advocate that such COTS components are developed with a specific component platform in mind and must adhere to constraints of our software architecture.,COTS components; Design patterns; EJB; Healthcare,Architectural modeling; Component-based software architecture; COTS component; Design Patterns; EJB; Medicinal products; Software component; Specific component; Health care; Knowledge engineering; Product design; Software architecture; Software packages,,,,,,"Alur, D., Crupi, J., Malks, D., (2003) Core J2EE Patterns, , 2nd edition, Prentice Hall; Bandini, S., De Paoli, F., Manzoni, S., Mereghetti, P., A support system to cots-based software development for business services (2002) Proc. of the SEKE '02, pp. 307-314. , Ischia, Italy; Bass, L., Clements, P., Kazman, R., (1998) Software Architecture in Practice, , Addison Wesley, ISBN 0-201-199300; Bhuta, J., Boehm, B., A method for compatible components selection (2005) Proceedings of the 4th International Conference COTS-Based Software Systems ICCBSS, pp. 132-143. , Bilbao, Spain, LNCS 3412, Springer-Verlag; Blobel, B., Application of the component paradigm for analysis and design of advanced health systems architectures (2000) International Journal of Medical Informatics, 60, pp. 281-301; Chiang, C.C., Development of reusable components through the use of adaptors (2002) Proceedings of the 36th Hawaii Int. Conf. on System Sciences (HICSS), , IEEE; Chung, L., Cooper, K., A knowledge-based cots-aware requirements engineering approach (2002) Proceedings of the SEKE '02, pp. 175-182. , Ischia, Italy; Davis, L., Gamble, R.F., Payton, J., The impact of component architectures on interoperability (2002) The Journal of Systems and Software, 61, pp. 31-45; Ferrara, F.M., The standard 'healthcare information systems architecture and dhe middleware (1998) International Journal of Medical Informatics, 52, pp. 39-51; Gamma, E., Helm, R., Johnson, R., Vissides, J., (1995) Design Patterns, , Addison-Wesley Professional; 1st edition (January 15; Goebel, S., Nestler, M., Composite component support for EJB (2004) Proc. of the Winter Int. Symp. on Information and Communication Technologies, , Cancun, Mexico; Jagannathan, W., The careflow architecture, a case study in medical transcription (2001) IEEE Internet Computing, pp. 59-63. , May/June, Volume; Juric, R., Juric, J., Applying component based modelling in the process of evaluation of medicinal products (2000) Proceedings of the IDPT-2002 Conference, , June, Pasadena, CA, US, Society for Design and Process Science Press, ISSN 1090 - 9389; Juric, R., Kuljis, J., Paul, R., A software architecture to support interoperability in multiple database systems (2004) Proc. 22nd IASTED Int. Conf. on Software Engineering, , Insbruck, Austria, Feb; Juric, R., Kuljis, J., Paul, R., Contextualising components when addressing the db interoperability (2004) Proc. of the IASTED - Int. Conf. on Software Engineering Applications, , Boston, MA, Nov; Juric, R.R., Beus-Dukic, L.J., COTS components and DB Interoperability (2005) Proceedings of the 4th International Conference COTS-Based Software Systems ICCBSS, pp. 77-89. , Bilbao, Spain, LNCS 3412, Springer-Verlag; Juric, R., Williams, S., Slevin, L., Courtenage, R., Shojanori, S., Milligan, P., Component based automation of regulatory affairs in the pharmaceutical industry (2005) Journal of Healthcare Informatics, , submitted to the; Morisio, M., Seaman, C.B., Basili, V.R., Parra, A.T., Kraft, S.E., Condon, S.E., COTS-based software development: Processes and open issues (2002) The Journal of Systems and Software, 61, pp. 189-199; Northcott, M., Vigder, M., Managing dependencies between software products (2005) Proceedings of the 4th International Conference COTS-Based Software Systems ICCBSS, pp. 201-211. , Bilbao, Spain, LNCS 3412, Springer-Verlag; Torchiano, M., Jaccheri, L., Sorensen, C.F.W.A.I., COTS product characterization Proceedings of the SEKE '02 Conference, pp. 335-338. , Ischia, Italy; Ulkuniemi, P., Seppanen, V., COTS component acquisition in an emerging market (2004) IEEE Software, pp. 76-82. , Nov/Dec; Vigder, M., Dean, J., An architectural approach to building systems from cots software components (1997) 22nd SE Workshop, NASA/Goddard Space Flight Center SEL, pp. 99-131. , Greenbelt, MD, December, NRC Report Number 40221; Szypersky, C., (2002) Component Software-Beyond Object Oriented Programming, , Addison Wesley; Williams, S., Juric, R., Milligan, P., Design patterns for marketing authorisation in pharamceutical industry (2005) 26th Int. Conf. on Information Technology Interfaces (ITI '05), , to appear in the, University of Zagreb, June, Croatia","Cavendish School of Computer Science, University of Westminster, 115 New Cavendish Street, London W1W 6UW, United Kingdom",,,,"17th International Conference on Software Engineering and Knowledge Engineering, SEKE 2005",14 July 2005 through 16 July 2005,Taipei,100110,,9781627486590,,,English,"Int. Conf. Softw. Eng. Knowl. Eng., SEKE",Conference Paper,Scopus,2-s2.0-84886881055,,
,,3,"Calås, G., Mankefors-Christiernin, S., Boklund, A.",A case study evaluation of 11 hypothetical software system evolution laws,2005,"Proceedings of the IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",,,,26,31,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-34047171646&partnerID=40&md5=bed898b4050d0077a4be286c374a9556,"University of Trollhättan/Uddevalla, P.O. Box 957, SE- 461 29 Trollhättan, Sweden","Calås, G., University of Trollhättan/Uddevalla, P.O. Box 957, SE- 461 29 Trollhättan, Sweden; Mankefors-Christiernin, S., University of Trollhättan/Uddevalla, P.O. Box 957, SE- 461 29 Trollhättan, Sweden; Boklund, A., University of Trollhättan/Uddevalla, P.O. Box 957, SE- 461 29 Trollhättan, Sweden","This paper outlines and evaluates eleven new hypothetical laws on software system evolution. The evolution laws originate from the Theory of Inventive Problem Solving (TRIZ) and are migrated from a physical context to a software context. In order to verify the suggested laws a qualitative retrospective case study is performed, evaluating the validity of the evolution laws through observation of typical evolution characteristics and possible falsifying observations. Influence from the eleven software system evolution laws was recognized in the large-scale platform architecture, and product line, studied. This report concludes that the eleven hypothetical software system evolutions laws are valid and applicable for the studied software engineering domain i.e. development of telecom management systems and most likely for any other system of similar complexity. Only minor remarks were found for some of the laws.",Architecture; Design patterns; Prediction; Software evolution,Design Patterns; Evolution characteristics; Platform architecture; Software engineering domain; Software Evolution; Software system evolutions; Telecom management systems; Theory of inventive problem solving; Architecture; Forecasting; Information science; Problem solving; Computer software,,,,,,"Svetinovic, D., Godfrey, M., Attribute-based software evolution: Patterns and product line forecasting (2001) 23rd International Conference on Software Engineering; Lehman, M.M., Ramil, J.F., An approach to a theory of software evolution (2001) International Workshop on Principles of Software Evolution; Lehman, M.M., Rules and tools for software evolution planning and management (2002) Annals of Software Engineering, 11. , 2001; Bennett, K.H., Rajlich, V.T., Software maintenance and evolution: A roadmap (2000) 22nd International Conference on Software Engineering; Terninko, J., (1998) Systematic Innovation; An Introduction to TRIZ, , (Theory of Inventive Problem Solving) (St, Lucy Press, Boca Roton, 1998); Fey, R.V., (2000) TRIZ Methodology for Inventive Engineering, , The TRIZ Group LLC, West Bloomfield, MI, USA; Petrov, V., The laws of system evolution TRIZ Journal, , http://www.triz-journal.com/archives/2002/03/b/; Scacchi, W., Understanding open source software evolution: Applying, breaking, and rethinking the laws of software evolution (2003) Technical Report, Institute for Software Research, , University of California, Irvine, USA","Mankefors-Christiernin, S.; University of Trollhättan/Uddevalla, P.O. Box 957, SE- 461 29 Trollhättan, Sweden; email: stefan.christiernin@htu.se",,,,"IASTED International Conference on Software Engineering: part of the 23rd IASTED International Multi-Conference on Applied Informatics, SE 2005",15 February 2005 through 17 February 2005,Innsbruck,98636,,889864640,9780889864641,,,English,"Proc. IASTED Int. Conf. Softw. Eng.: part 23rd IASTED Int. Multi-Conf. Appl. Informatics, SE",Conference Paper,Scopus,2-s2.0-34047171646,
,,v,"Heričko, M., Beloglavec, S.",A composite design-pattern identification technique,2005,Informatica (Ljubljana),29,4,,469,476,,5,,http://www.scopus.com/inward/record.url?eid=2-s2.0-29844450240&partnerID=40&md5=9cf31e1346d73f2547049a4b488b197d,"University of Maribor, Institute of Informatics, Smetanova ulica 17, 2000 Maribor, Slovenia","Heričko, M., University of Maribor, Institute of Informatics, Smetanova ulica 17, 2000 Maribor, Slovenia; Beloglavec, S., University of Maribor, Institute of Informatics, Smetanova ulica 17, 2000 Maribor, Slovenia","This paper introduces a new technique for identifying composite design patterns from existing patternbased designs. We propose two pattern metrics: pattern coverage and overlapping that can help detect a composite pattern. The effective composite patterns reflect quality properties that are considered desirable in the solution for a given problem domain and selected programming paradigm. To identify appropriate candidates, we propose an assessment with a set of design metrics in addition to pattern metrics. The calibration of value intervals for metric scores is proposed with the intention of offering the designer the possibility of adjusting the technique for each individual type of software. In this paper, we present the steps required for detecting and identifying the suitable composite pattern candidates through pattern and design metric assessment.",Composite design patterns; Design metrics; Design patterns; Design patterns identification,Composite materials; Computer software; Metric system; Product design; Design matrices; Design pattern identification; Design patterns; Pattern recognition,,,,,,"Bazan, J., Peters, J.F., Skowron, A., Hung Son, N., Szczuka, M., Rough set approach to pattern extraction from classifiers (2003) Electronic Notes in Theoretical Computer Science, 82 (4), pp. 1-10. , March; Chidamber, S., Kemerer, C., A metric suite for object-oriented design (1994) IEEE Transactions on Software Engineering, 20 (6), pp. 476-493; Dong, J., Adding pattern related information in structural and behavioral diagrams (2004) Information and Software Technology, 46 (5), pp. 293-300. , 15 April; Eden, A.H., Yehudai, A., Gil, J.Y., Precise specification and automatic application of design patterns (1997) Proceedings of the 1997 International Conference on Automated Software Engineering ASE'97; Fabry, J., Mens, T., Language-independent detection of object-oriented design patterns (2004) Computer Languages, Systems & Structures, 30 (1-2), pp. 21-33. , April-July; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Objectoriented Software, , Addison-Wesley, Reading, MA; Henderson-Sellers, B., (1996) Object-oriented Metrics: Measures of Complexity, , Prentice-Hall; Huang, H., Zhang, S., Cao, J., Duan, Y., A practical pattern recovery approach based on both structural and behavioral analysis (2005) Journal of Systems and Software, 75 (1-2), pp. 69-87. , 15 February; Huston, B., The effects of design pattern application on metric scores (2001) Journal of Systems and Software, 58 (3), pp. 261-269. , 15 September; Kim, D.K., France, R., Ghosh, S., A UML-based language for specifying domain-specific patterns (2004) Journal of Visual Languages & Computing, 15 (3-4), pp. 265-289. , June-August; Kim, H., Boldyre, C., A method to recover design patterns using software product metrics (2000) Lecture Notes in Computer Science, 1844, pp. 318-335. , 6th International Conference, ICSR-6, Austria; Kontogiannis, K.A., Demori, R., Merlo, E., Galler, M., Bernstein, M., Pattern matching for clone and concept detection (1996) Automated Software Engineering, 3 (1-2), pp. 77-108. , July; Kramer, G.E., Pope, S.T., A cookbook for using the model-view-controller user interface paradigm in Smalltalk-80 (1988) Journal of Object-oriented Programming, 1, pp. 26-49. , August/September; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of Working Conference on Reverse Engineering, , Monterey, USA, IEEE CSPress; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Lecture Notes in Computer Science, 1445, pp. 114-134. , ECOOP'98; Mayrand, J., Leblanc, C., Merlo, E.M., Experiment on the automatic detection of function clones in a software system using metrics (1996) Proceedings of the 1996 International Conference on Software Maintenance, p. 244; McNatt, W.B., Bieman, J.M., Coupling of design patterns: Common practices and their benefits (2001) Proceedings of the 25th Annual International Computer Software and Applications Conference (COMPSAC'01); Ram, D.J., Sreekanth, M., Reusable integrated components of inter-related patterns for software development Proceedings of the Seventh Asia-pacific Software Engineering Conference (APSEC'00), pp. 364-371; Riehle, D., Composite design patterns (1997) Proceedings of OOPSLA'97, pp. 218-228. , ACM; Shull, F., Melo, W.L., Basili, V.R., An inductive method for discovering design patterns from objectoriented software systems (1996) Technical Report, , University of Maryland, Computer Science Department, College Park, MD, 20742 USA; Tahvildari, L., Kontogiannis, K., Mylopoulos, J., Quality-driven software re-engineering (2003) Journal of Systems and Software, 66 (3), pp. 225-239. , 15 June; Tahvildari, L., Kontogiannis, K., On the role of design patterns in quality-driven re-engineering Proceedings of the Sixth European Conference on Software Maintenance and Reengineering (CSMR'02); Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proceedings of the Fifth European Conference on Software Maintenance and Reengineering (CSMR'01)","Heričko, M.; University of Maribor, Institute of Informatics, Smetanova ulica 17, 2000 Maribor, Slovenia; email: marjan.hericko@uni-mb.si",,,,,,,,3505596,,INFOF,,English,Inf,Article,Scopus,2-s2.0-29844450240,,
,,v,"Costagliola, G., De Lucia, A., Deufemia, V., Gravino, C., Risi, M.",Design pattern recovery by visual language parsing,2005,"Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR",,,,102,111,,24,10.1109/CSMR.2005.23,http://www.scopus.com/inward/record.url?eid=2-s2.0-26844449506&partnerID=40&md5=36f162606806f26bcb9efbd08c4a928f,"Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy","Costagliola, G., Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy; De Lucia, A., Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy; Deufemia, V., Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy; Gravino, C., Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy; Risi, M., Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy","We propose an Object Oriented (OO) design pattern recovery approach which makes use of a design pattern library, expressed in terms of visual grammars, and based on a visual language parsing technique. We also present a visual environment which supports the pattern recognition process by automatically retrieving design patterns from imported UML class diagrams. The visual environment has been automatically generated through the VLDesk system, starting from a description of the design pattern grammar. © 2005 IEEE.",,Design patterns; Object-oriented design; Pattern recovery approach; Visual grammars; Automation; Computational grammars; Pattern recognition; Visualization; Object oriented programming,,,,,,"Antoniol, G., Casazza, G., Di Penta, M., Fiutem, R., Object-oriented design pattern recovery (2001) The Journal of Systems and Software, 59, pp. 181-196; Antoniol, G., Tonella, P., Inference of object-oriented design patterns (2001) Journal of Software Maintanance and Evolution: Research and Practice, 13, pp. 309-330; Baxter, I.D., Yahin, A., Moura, L., Sant'Anna, M., Bier, L., Clone detection using abstract syntax trees (1998) Proceedings of International Conference on Software Maintenance, pp. 368-377. , IEEE Computer Society Press; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Master Thesis, North Carolina State University, Raleigh NC; Costagliola, G., Polese, G., Extended positional grammars Proceedings of 2000 IEEE Symposium on Visual Languages, pp. 103-110. , Seattle, WA, USA; Costagliola, G., De Lucia, A., Francese, R., Risi, M., Scannello, G., A component-based visual environment development process (2002) Proceedings of International Conference on Software Engineering and Knowledge Engineering (SEKE'02), pp. 327-334. , Ischia, Italy, ACM Press; Costagliola, G., De Lucia, A., Orefice, S., Tortora, G., A parsing methodology for the implementation of visual systems (1997) IEEE Transactions on Software Engineering, 23 (12), pp. 777-799; Dean, T.R., Cordy, J.R., A syntactic theory of software architecture (1995) IEEE Transactions on Software Engineering, 21 (4), pp. 302-313; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Menlo Park, CA; Graph Exchange Language (GXL) Tools, , http://www.gupro.de/GXL/tools/tools.htm#conv; Harris, D.R., Reubenstein, H.B., Yeh, A.S., Recognizers for extracting architectural features from source code (1995) Proceedings of Working Conference on Reverse Engineering, pp. 252-261. , IEEE Computer Society Press; Holt, R.C., Winter, A., Schürr, A., GXL: Toward a standard exchange format (2000) Proceedings of 7th Working Conference on Reverse Engineering, pp. 162-171. , IEEE Computer Soc; Johnson, S.C., (1978) YACC: Yet Another Compiler Compiler, , Bell Laboratories, Murray Hills, NJ; Keller, R., Schauer, R., Pattern visualization for software comprehension (1998) Proceedings of International Workshop on Program Comprehension, pp. 4-12. , IEEE Computer Society Press; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of International Conference on Software Engineering, pp. 226-235. , Los Angeles; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object oriented software (1996) Proceedings of Working Conference on Reverse Engineering, pp. 208-215. , IEEE Computer Society Press; Kozaczynsk, V., Ning, J.Q., Engberts, A., Program concept recognition and transformation (1992) IEEE Transactions on Software Engineering, 18 (12), pp. 1065-1075; Mayrand, J., Leblanc, C., Merlo, E., Experiment on the automatic detection of function clones in a software system using metrics (1996) Proceedings of International Conference on Software Maintenance, pp. 244-253. , IEEE Computer Society Press; Musto, A., Polese, G., Costagliola, G., Tortora, G., Syntactic modeling of UML diagrams and their automatic transformation into RDBMS based models (2001) Proceedings of WTUML: Workshop on Transformations in UML, , Geneva, Italy; Niere, J., Shafer, W., Wadsack, J.P., Wendehals, L., Walsh, J., Towards pattern design recovery (2002) Proceedings of International Conference on Software Engineering, pp. 338-348. , Orlando Florida, USA; Niere, J., Wendehals, L., Zündorf, A., An interactive and scalable approach to design pattern recovery (2003) Technical Report, TR-RI-03-236. , University of Paderborn, Paderborn, Germany; Rich, C., Wills, L., Recognizing a program's design: A graph-parsing approach (1990) IEEE Software, 7 (1), pp. 82-89; Shull, F., Melo, W.L., Basili, V.R., And inductive method for discovering design patterns from object-oriented software systems (1996) Technical Report, , University of Maryland, Computer Science Department, College Park MD; Wills, L., (1992) Automated Program Recognition by Graph Parsing, , Ph.D Dissertation, MIT; Winter, A., Exchanging graphs with GXL (2001) Graph Drawing - 9th International Symposium, , GD 2001, Vienna, September 23-26, Mathematics and Visualization; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of TOOLS'98, pp. 112-124. , IEEE Computer Society Press","Costagliola, G.; Dipartimento di Matematica e Informatica, Università di Salerno, 84084 Fisciano(SA), Italy; email: gcostagliola@unisa.it",,"Reengineering Forum, REF;IEEE CS Technical Council on Software Engineering, TCSE;University of Manchester, School of Informatics",,"Ninth European Conference on Software Maintenance and Reengineering, CSMR 2005",21 March 2005 through 23 March 2005,Manchester,65793,15345351,769523048,,,English,Proc. Eur. Conf. Software Maint. Reeng.,Conference Paper,Scopus,2-s2.0-26844449506,,
,,4,"Akanda, M.A.K., German, D.M.",A system of patterns for Web navigation,2005,Lecture Notes in Computer Science,3579,,,136,141,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-26444553265&partnerID=40&md5=1611c1cb8b26f955b50b0fd51321aa00,"Department of Computer Science, University of Victoria, Canada","Akanda, M.A.K., Department of Computer Science, University of Victoria, Canada; German, D.M., Department of Computer Science, University of Victoria, Canada","In this paper we propose a system of design patterns for Web navigation. We have collected patterns already published in the literature, selected ten of them, refined them and identified the relationships among them. The selected patterns are rewritten in the Gang of Four (GoF) notation. They are implemented and integrated together leading to a framework intended to be used as the central part in developing data intensive Web applications. © Springer-Verlag Berlin Heidelberg 2005.",,Computer science; Navigation; Design patterns; Gang of four (GoF) notation; Web navigation; Websites,,,,,,"(2003) Hypermedia Design Pattern Repository, , http://www.designpattern.lu.unisi.ch/HypermediaHomePage.html, January; Akanda, M.A.K., German, D.M., A component oriented framework for the implementation of navigational design patterns (2003) International Conference on Web Engineering (ICWE'03), pp. 449-450; Akanda, M.A.K., (2003) A System of Patterns for Web Navigation, , Master's thesis, University of Victoria, Canada, December; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture- A System of Patterns, , John Wiley Sons Ltd., New York; Rossi, G., Schwabe, D., Lyardet, F., Improving Web information systems with navigational patterns (1999) Proceedings of the 8th International World Wide Web Conference, , www-di.inf.puc-rio.br/schwabe/papers/www8.pdf, May. W3C, Elsevier; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1996) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley, Reading; Gamma, E., Helm, R., Johnson, R.E., Vlissides, J.M., Design patterns: Abstraction and reuse of object-oriented design (1993) ECOOP1993, pp. 406-431; Garrido, A., Rossi, G., Schwabe, D., Pattern systems for hypermedia (1997) Proceedings of the 4th Pattern Languages of Programming Conference, , http://st-www.cs.uiuc.edu/users/hanmer/PLoP-97/Workshops.html, University of Washington; German, D.M., Cowan, D.D., Towards a unified catalog of hypermedia design patterns (2000) Proceedings of the 33th Hawaii International Conference on System Sciences, , http://www.turingmachine.org/dmg/research/papers/dmg_hicss2000.pdf, Jan; Hennicker, R., Koch, N., Systematic design of Web applications with UML (2001) Unified Modeling Language: Systems Analysis, Design and Development Issues,2001, K. Siau and T. Halpin, Idea Group Publishing, , http://www.pst.informatik.uni-muenchen.de/personen/kochn/publications. html; Lyardet, F., Rossi, G., Schwabe, D., Patterns for dynamic websites (1998) Proceedings of the 4th Pattern Languages of Programming Conference, , http://jerry.cs.uiuc.edu/plop/plop98/final_submissions/P56.pdf; Lyardet, F., Rossi, G., Schwabe, D., Using design patterns in educational multimedia applications (1998) Proceedings of EDMedia'98, , http://www.oohdm.telemidia.pucrio.br/site_oohdm/oohdm.html; Paolini, P., Garzotto, F., Design patters for the WWW hypermedia: Problems and proposals (1999) Hypermedia Development: Design Patterns in Hypermedia; Rossi, G., Schwabe, D., Garrido, A., Design reuse in hypermedia applications development (1997) Proceedings of the Eighth ACM Conference on Hypertext, pp. 57-66. , Hypertext Design; Rossi, G., Schwabe, D., Lyardet, F., Improving Web information systems with navigational patterns (1999) Proceedings of the Eighth International World-wide Web Conference, , www-di.inf.puc-rio.br/schwabe/papers/www8.pdf; Szyperski, C., (1999) Component Software, , Pearson Education Ltd., Great Britain","Akanda, M.A.K.; Department of Computer Science, University of Victoria, Victoria, BC, Canada; email: naka@alumni.uvic.ca",Lowe D.Gaedke M.,"University of Technology, Sydney;University of Western Sydney;Southern Cross University",,"5th International Conference on Web Engineering, ICWE 2005",27 July 2005 through 29 July 2005,Sydney,65747,3029743,,,,English,Lect. Notes Comput. Sci.,Conference Paper,Scopus,2-s2.0-26444553265,,
,,4,"Montero, S., Díaz, P., Aedo, I.",A semantic representation for domain-specific patterns,2005,Lecture Notes in Computer Science,3511,,,129,140,,5,,http://www.scopus.com/inward/record.url?eid=2-s2.0-25144504281&partnerID=40&md5=a4f536aea8eb2c2b8122362b50bb3623,"Laboratorio DEI, Dpto. de Informática, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Spain","Montero, S., Laboratorio DEI, Dpto. de Informática, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Spain; Díaz, P., Laboratorio DEI, Dpto. de Informática, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Spain; Aedo, I., Laboratorio DEI, Dpto. de Informática, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Spain","Design patterns are a valuable mechanism to capture and disseminate best practice in software design. The oft-cited definition of an Alexandrian pattern, ""a solution to a problem in a context"", stimulates the definition of patterns from knowledge and expertise in any domain. Indeed, their application has spread from the object-oriented community, who first adopted them, through different software areas including human-computer interaction, virtual environments, ubiquitous computing, hypermedia and web engineering. This kind of patterns that describe successful solutions to recurring design problems in terms of a specific domain of application are known as domain-specific patterns. The increasing number of available design patterns is making difficult to find the most appropriate one given a specific problem since this task requires mastery on existing design patterns. Hence, there is a need to introduce a formalism to describe them accurately and to allow a rigorous reasoning process to assist users to retrieve those patterns that solve their problems. With this purpose, we propose a semantic representation for domain-specific patterns based on the domain knowledge for which they were written and for which an ontology-based approach is applied. This representation is used as an underlying armature for complementing the informal textual pattern description by means of semantic annotations. The combination of the literary pattern representation with its formal representation counterpart could assist an intelligent search engine that supports users not just for retrieval purposes but also for the discovery useful design solutions improving, therefore, their ability to develop quality software. © Springer-Verlag Berlin Heidelberg 2005.",,Human computer interaction; Hypermedia systems; Object oriented programming; Pattern recognition; Problem solving; Search engines; Software engineering; Virtual reality; World Wide Web; Design patterns; Semantic representation; Ubiquitous computing; Web engineering; Semantics,,,,,,"(2003) Security Engineering with Patterns: Origins, Theoretical Models, and New Applications, , Springer-Verlag; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahl-King, I., Angel, S., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press, New York; Appleton, B., (2003) Patterns and Software: Essential Concepts and Terminology; Berners-Lee, T., Semantic Web Road Map, , w3c design issues; Borchers, J.O., (2001) A Pattern Approach to Interaction Design, , John Wiley & Sons; Cornils, A., Hedin, G., Tool support for design patterns based on reference attribute grammars (2000) Proc. of WAGA'00, , Ponte de Lima, Portugal; Eden, A.H., Yehudai, A., Gil, J., Precise specification and automatic application of design patterns (1997) Proc. of International Conference on Automated Software Engineering (ASE '97), pp. 143-152. , Lake Tahoe, CA, USA; Engelbart, D.C., Augmenting human intellect: A conceptual framework (1962) Technical Report, , Air Force Office of Scientific Research; Euzenat, J., Eight questions about semantic web annotations (2002) IEEE Intelligent Systems, 17 (2), pp. 55-62; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns, Elements of Reusable Object-Oriented Software, , Addison-Wesley; Garzotto, F., Paolini, P., Bolchini, D., Valenti, S., Modeling-by-Patterns of web applications (1999) Advances in Conceptual Modeling: ER '99 Workshops on Evolution and Change in Data Management, Reverse Engineering in Information Systems, and the World Wide Web and Conceptual Modeling, pp. 293-306; German, D., Cowan, D., Towards a unified catalog of hypermedia design patterns (2000) Proceedings of 33rd Hawaii International Conference on System Sciences, , Maui, Hawaii; Gómez-Pérez, A., Corcho, O., Ontology specification languages for the semantic web (2002) IEEE Intelligent Systems, 17 (1), pp. 54-60; Gruber, T.R., A translation approach to portable ontologies (1993) Knowledge Acquisition, 5 (2), pp. 199-220; Hicks, D.L., In search of a user base: Where are the b's (2003) LNCS, 2461, pp. 112-117. , Metainformatics 2002; Konrad, S., Cheng, B.H.C., Campbell, L.A., Wassermann, R., Using security patterns to model and analyze security requirements (2003) Proc. of the Requirements for High Assurance Systems Workshop (RHAS03) as Part of the IEEE Joint International Conference on Requirements Engineering (RE03), , Monterey Bay, CA, USA, September; Rising, L., Pattern forms (2003) Proceedings of Viking PLOP 2003; Rossi, G., Garrido, A., Carvalho, S., (1996) Design Patterns for Object-Oriented Hypermedia Applications. Pattern Languages of Programs II, , Addison-Wesley; Smith, J., Stotts, D., Elemental design patterns: A link between architecture and object semantics (2002) Technical Report Technical Report, TR02-011. , Univ. of North Carolina at Chapel Hill, March; Taibi, T., Ling Ngo, D.C., Formal specification of design patterns - A balanced approach (2003) Journal of Object Technology; Van Welie, M., (2004) Amsterdan Collection of Patterns, , http://www.welie.com, Visited January","Montero, S.; Laboratorio DEI, Dpto. de Informática, Universidad Carlos III de Madrid, Avda. de la Universidad 30, 28911 Leganés, Spain; email: smontero@inf.uc3m.es",Wiil U.K.,"Salzburg Research, Austria;Aalborg University Esbjerg, Denmark;University of Southern Denmark",,"Metainformatics: International Symposium, MIS 2004",15 September 2004 through 18 September 2004,Salzburg,65641,3029743,,,,English,Lect. Notes Comput. Sci.,Conference Paper,Scopus,2-s2.0-25144504281,,
,,4,"Dong, J., Yang, S., Zhang, K.",VisDP: A web service for visualizing design patterns on demand,2005,"International Conference on Information Technology: Coding and Computing, ITCC",2,,,385,391,,3,,http://www.scopus.com/inward/record.url?eid=2-s2.0-24744436400&partnerID=40&md5=4e9ee3e27710cd00e26a1d65ac96b772,"Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Dong, J., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; Yang, S., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; Zhang, K., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Design patterns document good design solutions to a re-curring problem in a particular context. They are typically modeled using UML. In practice, however, pattern-related information is lost when a design pattern is applied or composed because UML does not keep track of this information. Consequently, the designer cannot identify design patterns used in software system design diagrams. The benefits of design patterns are compromised because the designers cannot communicate with each other in terms of the design patterns they use and their design decisions and tradeoffs. In this paper, we present a web service (VisDP) for explicitly visualizing design patterns in UML diagrams. This web service is developed based on a UML profile containing new stereotypes, tagged values and constraints for visualizing design patterns in UML diagrams. With this service, the user is able to identify design patterns by moving the mouse and viewing color changes in UML diagrams. Additional pattern-related information can be dynamically displayed based on the mouse location. © 2005 IEEE.",Design pattern; Software visualization; UML; Visual tool; Web service,Color computer graphics; Computer software; Decision theory; Information analysis; Information technology; Mathematical models; Mice (computer peripherals); Pattern recognition; Visual communication; Visualization; Design patterns; Software visualization; UML; Visual tools; Web services; Websites,,,,,,"Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison-Wesley; Cerami, E., Web services essentials (2002) O'Reilly & Associates, Inc; Florijn, G., Meijers, M., Van Winsen, P., Tool support for object-oriented patterns (1997) Proceedings of European Conference on Object-oriented Programming; France, R.B., Kim, D., Ghosh, S., Song, E., A UML-based pattern specification technique (2004) IEEE Transactions on Software Engineering, 30 (3). , March; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-oriented Software, , Addison-Wesley Publishing Company; Keller, R., Schauer, R., Robitalille, S., Page, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , May; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of European Conference on Object-oriented Programming, pp. 114-134; LeGuennec, A., Sunye, G., Jezequel, J., Precise modeling of design patterns (2000) Proceeding of International Conference on the Unified Modeling Language, , October; Reiss, S.P., Working with patterns and codes (2000) Proceedings of the 33rd Hawaii International Conference on System Sciences; Sunye, G., LeGuennec, A., Jezequel, J., Design patterns application in UML (2000) Proceedings of European Conference on Object-oriented Programming, pp. 44-62; Vlissides, J., (1998) Notation, Notation, Notation. C+ + Report, , April; Wanner, J.B., Kleppe, A.G., (1998) The Object Constraint Language: Precise Modeling with UML, , Addison-Wesley; Yacoub, S.M., Ammar, H.H., UML support for designing software systems as a composition of design patterns (2001) Proceedings of the International Conference, on Unified Modeling Language, , Springer-Verlag; ArgoUML Website, , http://argouinl.tigris.org/; Rational Rose Website, , http://www.rational.com/; http://www.utdallas.edu/~jdong/VisDPWeb services architecture requirements (2002) W3C Working Draft, 14. , http://www.w3.org, November; Web Services Description Language (WSDL) (2001) 1.1. W3C Note, , http://www.w3.org/TR/wsdl, 15 March","Dong, J.; Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; email: jdong@utdallas.edu",Selvaraj H.Srimani P.K.,IEEE Computer Society,,ITCC 2005 - International Conference on Information Technology: Coding and Computing,4 April 2005 through 6 April 2005,"Las Vegas, NV",65600,,769523153,,,English,Int. Conf. Inf. Technol. Coding Comput.,Conference Paper,Scopus,2-s2.0-24744436400,,
,,4,"Ziegler, J., Specker, M.",Navigation patterns - Pattern systems based on structural mappings,2005,Lecture Notes in Computer Science,3425,,,224,227,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-24344491558&partnerID=40&md5=5ef1548c9a0e6a5becb3aaa7f5f2e698,"University Duisburg, Essen, Germany","Ziegler, J., University Duisburg, Essen, Germany; Specker, M., University Duisburg, Essen, Germany",A stronger conceptual integration of the notions of design pattern and design space based on structural mappings was proposed. The design space with associated patterns was aimed at describing user navigation in interactive system. The pattern categories presented were elementary and can be combined in a variety of ways for designing navigation in real user interfaces. It is observed that the proposed approach allows a more grounded and systematic exploration and evaluation of navigational patterns.,,Mapping; Navigation; User interfaces; Design patterns; Interactive systems; Real user interface; Pattern recognition,,,,,,"Borchers, J., (2001) A Pattern Approach to Interaction Design, , [Borchers, 2001] Chichester, USA, John Wiley & Sons; Lyardet, F., Rossi, G., Schwabe, D., Discovering patterns in the WWW Multimedia Tools and Applications, 8, pp. 293-308. , [Lyardet et al., 1999]; Tidwell, J., Common Ground: A Pattern Language for Human Computer Interface Design, , http://www.mit.edu/~jtidwell/common_ground.html, [Tidwell, 1999]; Van Duyne, B., Landay, J.A., Hong, J.I., (2002) The Design of Sites: Patterns, Principles, and Processes for Crafting a Customer-centered Web Experience, , [van Duyne et al., 2002] Boston USA: Addison-Wesley","Ziegler, J.; University Duisburg, Essen, Germany; email: ziegler@informatik.uni-duisburg.de",Bastide R.Palanque P.Roth J.,,,Joint Working Conferences EHCI-DSVIS 2004,11 July 2004 through 13 July 2004,Hamburg,65560,3029743,,,,English,Lect. Notes Comput. Sci.,Conference Paper,Scopus,2-s2.0-24344491558,,
,,4,"Karsai, G., Lang, A., Neema, S.",Design patterns for open tool integration,2005,Software and Systems Modeling,4,2,,157,170,,28,10.1007/s10270-004-0073-y,http://www.scopus.com/inward/record.url?eid=2-s2.0-19644393677&partnerID=40&md5=6d8a4f4f6df1167304f526f88b2a4981,"Institute for Software-Integrated Systems, Vanderbilt University, P.O. Box 1829B, Nashville, TN 37235, United States","Karsai, G., Institute for Software-Integrated Systems, Vanderbilt University, P.O. Box 1829B, Nashville, TN 37235, United States; Lang, A., Institute for Software-Integrated Systems, Vanderbilt University, P.O. Box 1829B, Nashville, TN 37235, United States; Neema, S., Institute for Software-Integrated Systems, Vanderbilt University, P.O. Box 1829B, Nashville, TN 37235, United States","Design tool integration is a highly relevant area of software engineering that can greatly improve the efficiency of development processes. Design patterns have been widely recognized as important contributors to the success of software systems. This paper describes and compares two large-grain, architectural design patterns that solve specific design tool integration problems. Both patterns have been implemented and used in real-life engineering processes. © Springer-Verlag 2004.",Design patterns; Generative programming; Metamodels; Software architecture; Tool integration framework,Computer architecture; Computer simulation languages; Mathematical models; Semantics; Syntactics; Systems engineering; Design patterns; Design tool integration; Metamodels; Software architecture; Computer aided software engineering,,,,,,"Personal communication with engineers from a world-leader telecommunication companyAltheide, F., Dörfel, S., Doerr, H., Kanzleiter, J., An Architecture for a Sustainable Tool Integration Framework (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 29-32. , http://www.es.tu-darmstadt.de/english/events/tis/documentation/ Proceedings.pdf, Helsinki, Finland Available from; Bergstra, J., Klint, P., The discrete time ToolBus: A software coordination architecture (1998) Science of Computer Programming, 31 (2-3), pp. 205-229. , July; Boekhudt, C., The Big Bang Theory of IDE-s (2003) ACM Queue, 1 (7), pp. 74-83; Braun, P., Metamodel-Based Integration of Tools (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 30-45. , Helsinki, Finland See [2]; Broy, M., Dederichs, F., Dendorfer, C., Fuchs, M., Gritzner, T.F., Weber, R., The design of distributed systems - An introduction to FOCUS (1993), Technical Report TUM-19202-2, Institut für Informatik, Technische Universität, München, JanuaryBurmester, S., Giese, H., Niere, J., Tichy, M., Wadsack, J.P., Wagner, R., Wendehals, L., Tool Integration at the Meta-Model Level within the Fujaba Tool Suite (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 51-56. , Helsinki, Finland See [2]; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-oriented Software Architecture: A System of Patterns, , John Wiley & Sons; Clark, T., Evans, A., Kent, S., Sammut, P., The MMF Approach to Engineering Object-Oriented Design Languages (2001) Workshop on Language Descriptions, Tools and Applications (LDTA2001), , April; Czarnecki, K., Eisenecker, U., (2000) Generative Programming - Methods, Tools, and Applications, , Addison-Wesley; (2004), Eclipse Framework www.eclipse.org(1993) Reference Model for Software Engineering Environments, , ECMA TR/55 NIST Spec. Pub 500-211; (1994) Portable Common Tool Environment (PCTE) - Abstract Specification, , ECMA European Computer Manufacturers Association, 3rd edition, Standard ECMA-149; (1995), http://members.tripod.com/~encapsulate/thesis.html, EDABraun, V., Margaria, T., Steffen, B., The Electronic Tool Integration Platform (ETI) and the Petri Net Technology (2003) Petri Net Technology for Communication-Based Systems, 2003, pp. 363-382; Gabriel, R.P., Patterns of Software: Tales from the software community (1996), Oxford University PressGamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison-Wesley; Haase, T., Semi-Automatic Wrapper Generation for a-posteriori Integration (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 84-88. , Helsinki, Finland See [2]; Hansen, K.M., Activity-Centred Tool Integration. Using Type-Based Publish/Subscribe for Peer-to-Peer Tool Integration (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 11-16. , Helsinki, Finland See [2]; Karlsen, E., The UniForM WorkBench - A higher order tool integration framework (1998) International Workshop on Current Trends in Applied Formal Methods, , October; Karsai, G., Structured Specification of Model Interpreters (1999) Proc. of International Conference on Engineering of Computer-Based Systems, , Nashville, TN; Karsai, G., Gray, J., Design Tool Integration: An Exercise in Semantic Interoperability (2000) Proceedings of the IEEE Engineering of Computer Based Systems, , Edinburgh, UK, March; Karsai, G., Neema, S., Abbott, B., Sharp, D., (2002) A Modeling Language and Its Supporting Tools for Avionics Systems, , 21st Digital Avionics Systems Conference, August; Karsai, G., Sztipanovits, J., Ledeczi, A., Bapty, T., Model-Integrated Development of Embedded Software (2003) Proceedings of the IEEE, 91 (1), pp. 145-164. , January; Karsai, G., Agrawal, A., Graph Transformations in OMG's Model-Driven (2004) Applications of Graph Transformations With Industrial Relevance, 3062, pp. 243-259. , Charlottesville, Virginia, September. Lecture Notes of Computer Science Springer; Karsai, G., Agarwal, A., Shi, F., Sprinkle, J., On the Use of Graph Transformation in the Formal Specification of Model Interpreters (2003) Journal of Universal Computer Science, 9 (11), pp. 1296-1321; Margaria, T., Wübben, M., Tool Integration in the ETI Platform - Review and Perspectives (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 39-44. , Helsinki, Finland See [2]; (2004), http://www.isis.vanderbilt.edu/Projects/mobies/default.html, MOBIES Project(2004), http://www.omg.org/mda, OMG MDA(2004), http://www.omg.org/mof, OMG MOF(2004), http://www.omg.org/techprocess/meetings/schedule/MOF_2.0_XMI_FTF.html, OMG XMI FTF(1998), PCTE Standard ISO/IEC 13719(2004), http://www.rational.com, Rational CorporationSchettler, O., Encapsulating design tools in the EDA (1995), http://members.tripod.com/~encapsulate/thesis.htmlSchopfer, G., Yang, A., Marquardt, W., Tool-Integration in Chemical Process Modeling (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 79-83. , Helsinki, Finland See [2]; Wilcox, P., Weiss, D., Russell, C., Smith, M.J., Smith, A.D., Pooley, R.J., MacKinnon, L.M., Dewar, R.G., A CORBA-Oriented Approach To Heterogeneous Tool Integration; OPHELIA (2003) ESEC/FSE Workshop on Tool-Integration in System Development, pp. 1-5. , Helsinki, Finland See [2]","Karsai, G.; Institute for Software-Integrated Systems, Vanderbilt University, P.O. Box 1829B, Nashville, TN 37235, United States; email: gabor.karsai@vanderbilt.edu",,,,,,,,16191366,,,,English,Softw. Syst. Model.,Article,Scopus,2-s2.0-19644393677,,
,,1,"Trad, A., Trad, C.","Audit, Control and Monitoring Design Patterns (ACMDP) for Autonomous Robust Systems (ARS)",2005,International Journal of Advanced Robotic Systems,2,1,,25,38,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-15944399780&partnerID=40&md5=ee34d4676bf2a7b1173b08900a62ef97,"TradSoft, 1007 Lausanne, Switzerland","Trad, A., TradSoft, 1007 Lausanne, Switzerland; Trad, C., TradSoft, 1007 Lausanne, Switzerland","This paper proposes the Audit, Control and Monitoring Design Patterns (ACMDP) for building Autonomous and Robust Systems (ARS) such as Mobile Robot Systems (MRS). These patterns are also applicable to other Mission Critical and Complex Systems (MCCS). This paper presents a proposal which will help ARS project managers and engineers design, build and estimate the probability that an ARS will succeed or fail. Furthermore, this proposal offers the possibility to ARS problems with the help of audit, monitoring and controlling components, adjust the project management pathways, and define the problem sources as well as their possible solutions, in order to deliver an ARS or an MRS.",ARS; ARS or an MRS; Audit; Components; Control and monitor; Design patterns; Maintenance; Packages,ARS; ARS or an MRS; Audit; Control and monitor; Design patterns; Packages; Design aids; Information technology; Mobile robots; Pattern recognition; Problem solving; Project management; Robustness (control systems),,,,,,"Adelson, B., Soloway, E., The role of domain experience in software design (1985) IEEE Trans. on Software Engineering, SE-11 (11), pp. 1351-1360; Albrecht, K., (2000) Submission and Award, for Object Management Group Applications Awards 2000, , Winterthur e-Business department, Winterthur, Switzerland; Ambler, S., (2000) Mapping Objects to Relational Databases, , Ronin International-IBM DeveloperWorks, USA; Booch, G., Christerson, M., Fuchs, M., Koistinen, J., (1999) UML for XML Schema Mapping Specification, , Rational Rose, USA; Bourret, R., (2001) Mapping DTDs to Databases; Brown, L., (1997) The New Shorter Oxford - English Dictionary, 1. , Clarendon Press, Oxford, Oxford University Press, UK; Burkhardt, R., (1997) UML Unified Modelling Language, , USA: Addison Wesley; Chang, B., Scardina, M., Karun, K., Kiritzov, S., Macky, I., Novoselsky, A., Ramakrishnan, N., (2001) Generating XSQL Server Pages, , Oracle Magazine-Oracle Press, USA; Derrien, Y., (1992) Les Techniques de l'Audit Informatique, , France: DUNOD; Dessimoz, J.-D., Knowledge management and cognitics; some fundamental aspects (2003) Proceedings « Workshop IPLnet 2002; from Research to Application », , IPLnet Swiss National Network of Excellence in Intlligent Manufacturing and Logistics, p. a. École d'Ingénieurs du canton de Vaud , HESSO, Yverdon-les-Bains, Febr. 2003; Dessimoz, J.-D., Gauthey, P.-F., Roulin, P., (2003) Is A Robot That Can Autonomously Play Soccer Intelligent?, , Hesso/Eivd - West Switzerland University of Applied Sciences, 1400 Yverdon-les-Bains, Switzerland; Dessimoz, J.-D., (2004) Project Recommendation - MRS Swiss Robotics Cup, , Hesso/Eivd - West Switzerland University of Applied Sciences, 1400 Yverdon-les-Bains, Switzerland; Dayton, D., (1999) Information Technology Audit Handbook, , USA: Daytonassociates; Drake, C., Brown, K., (1995) PANIC! UNIX System Crash Dump Analysis Handbook, , NJ USA: Prentice Hall Inc; El Masri, R., Navathe, S., Fundamentals of database systems (1994) World Student Series, , CA, USA; Eriksson, H.E., Magnus, P., (1998) UML Toolkit, , USA: John Wiley & Sons, Inc; Fowler, M., Rice, D., (2003) Patterns of Enterprise Application Architecture, , Addison-Wesley, USA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , 395 pages, Addison-Wesley Professional; 1st edition; ISBN: 0201633612; Hasemann, J.-M., (1996) A Control Architecture for Intelligent Robots Based on Graph Manipulation for Planning, Monitoring, Execution, Intention Switching, and Fault Recovery, , Technical Research Center of Finland, 1996, VTT Publications; Hollingworth, J., Gustavson, P., Swart, B., Cashman, M., (2002) Borland C++ Builder 6 Developer's Guide, , SAMS, USA; Hoque, R., (2000) XML for Real Programmers, , Academic Press, San Diego, CA, USA; (2000) INNOVATOR CASE - Strategic Software Development Tool, , MID Corporation, Germany; (2004) The IPmonitor Web Monitor Website, , http://www.ipmonitor.com/; (1998) Standards for Information Systems Auditing, , USA: ISACA; Lewis, R., Modeling control systems using IEC 61499 (2004) The Institution IEEE International Conference of Electrical Engineers on Mechatronics, , ISTANBUL TURKEY, 2004; Linn, M., Clancy, M., The case for case studies of programming problems (1992) Communications of the ACM, 35 (3), pp. 121-132. , March 1992; Magnus, H.E., Penker, M., (1998) UML Toolkit, , Wiley computer publishing, USA; Meier, R., Team power (1997) Die Deutsche Bibliothek - CIP Einheitsaufnahme, , Germany; (2004), www.robot-ch.orgNance, R., Arthur, J., The methodology roles in the realization of a model development environment (1988) Proceedings of the 20th Conference on Winter Simulation, pp. 220-225. , San Diego, California, United States, ISBN:0-911801-42-1; Jones, (1996) Applied Software Measurement: Assuring Productivity and Quality, , USA: McGraw-Hill; Kolachina, S., (2000) C++ Builder 6 Developer's Guide, , Wordware Publishing, Inc, USA; Krishnamurthy, B., Rexford, J., Web protocols and practice: HTTP/1.1 (2001) Networking Protocols, Caching, and Traffic Measurement, , USA: Addison-Wesley Pub Co; Land, R., Crnkovic, I., Software systems integration and architectural analysis - A case study (1999) Proceedings of International Conference on Software Maintenance (ICSM), , Amsterdam, Netherlands, 2003; (1998) OO to RDBMS Mapping Framework, , LPC Consulting Services Inc. USA; Orfali, R., Harkey, D., Edwards, J., (1996) The Essential Distributed Objects-survival Guide, , John Wiley & Sons Inc., Canada; Pardi, W., (1999) XML in Action, , Microsoft Press, Redmond, Washington, USA; Papurt, D., (1995) Inside the Object Model - the Sensible Use of C++, , USA: Sigs Books; (2004), http://robotik.com/cup/cup.htmlSelic, B., Rumbaugh, J., Using UML for modeling complex realtions of the ACM (1999) Time Systems, 42 (10). , October 1999, Rational Software, 1998; Simoneau, P., (1999) SNMP Network Management, , USA: McGraw-Hill Computer Communications Series; Soloway, E., Ehrlich, K., Empirical studies of programming knowledge (1984) IEEE Transactions on Software Engineering, SE-10 (5); Stapleton, J., Dynamic systems development method (1997) DSDM Consortium 1997, , The Method in Practice (DSDM), Addison Wesley Longman Limited, UK; Telles, M., (2002) C# Black Book, , The Coriolos Group, LLC., USA; Templeman, J., Olsen, A., (2002) Microsoft Visual C++ .NET, , Microsoft Corporation, USA; Thramboulidis, K., (2004) Using UML in Control and Automation: A Model Driven Approach, , Paper, INDIN 2004, Berlin, Germany; (2004) The TIVOLI Monitoring System, , http://www-306.ibm.com/software/tivoli/; Trad, A., (1995) Intelligent Rescheduling System (IRS) for Operations Control, , SairGroup, CH; Trad, A., An optimal client/server architecture using Java, C++ and XML (2001) TradSoft. Java Days 2002, , Zurich, Switzerland; Trad, A., (2004) Workshop Presentation ""Swiss Robotics Cup"", , Hesso/Eivd - West Switzerland University of Applied Sciences, 1400 Yverdon-les-Bains, Switzerland; Trad, A., (1997) The Absolute Monitoring Method - AMM, , Kloten, Switzerland: Swissair, SairGroup; Trad, A., Dessimoz, J.-D., An architectural design pattern proposal for mobile robot systems (2004) INDIN 2004, , Berlin, Germany; Trad, A., Dessimoz, J.-D., Proactive monitoring and maintenance of intelligent control systems - Application for mobile robot systems and collaborative project management environment (2004) MS-NoE International Conference, , Cernobbio, Italy; Trad, A., Gauthey, P.-F., Loersch, M., Dessimoz, J.-D., PC based distributed systems control for production, automation - Ethernet and TCP/IP based solutions (2004) IPLnet 2004, , Morat, Switzerland; Trad, A., Gauthey, P.-F., Lüthi, C., Dessimoz, J.-D., Cognitive processing of multimodal images in large databases environments with fast access a multi-modal object management design patten (MOMDP) PART I - ""the overview"" (2004) IPLnet 2004, , Morat, Switzerland; Trad, A., Gauthey, P.-F., Lüthi, C., Dessimoz, J.-D., Cognitive processing of multimodal images in large databases environments with fast access; a multi-modal object management design patten (MOMDP) - PART II - ""the XML based framework (2004) IPLnet 2004, , Morat, Switzerland; Trad, A., Kalpic, D., The team design quality check coefficient (TDQCC) (1998) Proceedings of the International Conference on Information Technology Interfaces, pp. 359-364. , 1998 Jun 1998; Pula, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; 1998; Trad, A., Kalpic, D., Reengineering quality and risk check (RQRC) - Theoretical basis (1999) Proceedings of the 24th International Conference on Information Technology Interfaces, pp. 497-502. , 1999 Jun 15-18; Pula, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; 1999; Trad, A., Kalpic, D., (2001) BUILDING A XML BASED OBJECT MAPPING SYSTEM (OMS) - Proceedings of the International Conference on Information Technology Interfaces, , 1998 Jun 2001; Pula, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; 2001; Trad, A., Kalpic, D., Trad, C., Applying the ISRQCC method in a web reengineering process - The SwissInsurances (SWI) web engineering audit (2002) Proceedings of the 26th International Conference on Information Technology Interfaces, , 2002 Jun 24-27; Dubrovnik, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; 2002; Trad, A., Kalpic, D., Proactive monitoring and maintenance of intelligent control systems: A design pattern for autonomous systems (2004) ITI 2004, , Dubrovnik, Croatia; Trad, A., Perrenoud, A., Gauthey, P.-F., Dessimoz, J.-D., Marcuard, J.-D., Riedi, M., Improving automated manufacturing using robots, AMEM - A proposed methodology (2004) IPLnet 2004, , Morat, Switzerland; Trad, A., (1996) The Message Management System - MMS, , Kloten, Switzerland: Swissair, SairGroup; Trad, A., (1997) Monitoring Method - AMM, , Kloten, Switzerland: Swissair, SairGroup; Von Zimmermann, P., (1992) Das MVC-Modell, , Germany: SAP AG; Vogel, A., Vasudevan, B., Benjamin, M., Villalba, T., (1999) C++ Programming with CORBA, , Canada: John Wiley & Sons Inc; Watters, P., Veeraraghawa, (2000) Solaris-The Complete Reference, , USA: McGraw-Hill; (2004), www.rational.com","Trad, A.; TradSoft, 1007 Lausanne, Switzerland; email: antoine.tradsoft@bluewin.ch",,,,,,,,17298806,,,,English,Int. J. Adv. Rob. Syst.,Article,Scopus,2-s2.0-15944399780,,
,,4,"Philippow, I., Streitferdt, D., Riebisch, M., Naumann, S.",An approach for reverse engineering of design patterns,2005,Software and Systems Modeling,4,1,,55,70,,23,10.1007/s10270-004-0059-9,http://www.scopus.com/inward/record.url?eid=2-s2.0-23844499113&partnerID=40&md5=686c98f054c8760532e291cbc5bafe1f,"Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany","Philippow, I., Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany; Streitferdt, D., Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany; Riebisch, M., Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany; Naumann, S., Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany","For the maintenance of software systems, developers have to completely understand the existing system. The usage of design patterns leads to benefits for new and young developers by enabling them to reuse the knowledge of their experienced colleagues. Design patterns can support a faster and better understanding of software systems. There are different approaches for supporting pattern recognition in existing systems by tools. They are evaluated by the Information Retrieval criteria precision and recall. An automated search based on structures has a highly positive influence on the manual validation of the results by developers. This validation of graphical structures is the most intuitive technique. In this paper a new approach for automated pattern search based on minimal key structures is presented. It is able to detect all patterns described by the GOF [15]. This approach is based on positive and negative search criteria for structures and is prototypically implemented using Rational Rose and Together. © Springer-Verlag 2004.",Design patterns; Pattern recognition; Reverse engineering,,,,,,,"Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) 6th International Workshop on Program Comprehension, pp. 153-160. , June; Bansiya, J., Automatic Design-Pattern Identification (1998) Dr. Dobb's Journal, , http://www.ddj.com, Available online at; Bergenti, F., Poggi, A., Improving UML design using automatic design pattern detection (2000) Proc. 12th. International Conference on Software Engineering and Knowledge Engineering (SEKE 2000), pp. 336-343; Brown, K., Design reverse-engineering and automated design pattern detection in Smalltalk (1996), http://www.ncsu.edu/, Master's thesis. Department of Computer Engineering, North Carolina State University. Available online atKeller, R.K., Schauer, R., Robitaille, S., Page, P., Pattern-based reverse engineering of design components (1999) Proc. Of the 21st International Conference On Software Engineering, pp. 226-235. , IEEE Computer Society Press; Kim, H., Boldyreff, C., A method to recover design patterns using software product metrics (2000), http://www.soi.city.ac.uk/~hkim69/publications/icsr6.pdf, Proc. of the 6th International Conference on Software Reuse (ICSR6) Available online atKraemer, C., Prechelt, L., Design recovery by auto-mated search for structural design patterns in object-oriented software (1996) Proc. of the Working Conference on Reverse Engineering, pp. 208-215; Salton, G., McGill, M., (1983) Introduction to Modern Information Retrieval, , McGraw-Hill, New York; Naumann, S., (2001) Reverse Engineering of Design Patterns, , Diploma Thesis. Technical University of Ilmenau (in German); Niere, J., Wadsack, J.P., Wendehals, L., Design pattern recovery based on source code analysis with fuzzy logic (2001), Technical Report tr-ri-01-222, University of Paderborn. Available onlinePrechelt, L., Unger, B., Philippsen, M., Documenting Design Patterns in Code Eases Program Maintenance (1997) Proc. Of the ICSE Workshop on Process Modeling and Empirical Studies of Software Evolution, pp. 72-76; (2000) Using the Rose Extensibility Interface Rational Rose 2001, , Rational Rational Rose Software Corporation; Tatsubori, M., Chiba, S., Programming Support of Design Patterns with compile-time Reflection (1998), OOPSLA 98 Workshop Reflective Programming in C++ and Java, Vancouver, CanadaWest, R., (1993) Reverse Engineering - An Overview, , HMSO, London; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison Wesley; Shull, F., Melo, W.L., Basili, V.R., An inductive method for discovering design patterns from object-oriented software systems (1996), Technical Report UMIACS-TR-96-10, University of Maryland","Philippow, I.; Technische Universität Ilmenau, Helmholtzplatz 1, 98693 Ilmenau, Germany; email: ilka.philippow@tu-ilmenau.de",,,,,,,,16191366,,,,English,Softw. Syst. Model.,Article,Scopus,2-s2.0-23844499113,,
,,1,"Warren, I.",Teaching Patterns and Software Design,2005,Conferences in Research and Practice in Information Technology Series,42,,,39,49,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84873486665&partnerID=40&md5=c3671ede395331dd3a38c172b3ed0054,"Department of Computer Science, University of Auckland, Auckland, New Zealand","Warren, I., Department of Computer Science, University of Auckland, Auckland, New Zealand","In this paper we describe our experiences with reengineering an undergraduate course in software design. The course's learning outcomes require that students can model, design and implement software. These are inherently practical skills and rely on functioning knowledge. To facilitate a learning environment in which students can acquire the necessary deep level of understanding, we have designed the course by applying the educational theory of constructive alignment and a number of proven techniques for teaching, learning, and assessment. Fundamentally, we have embraced the active learning paradigm that recognises that student activity is critical to the learning process. In this paper, we describe several active learning techniques that we have used including role play, problem solving and peer learning. We also describe two novel assessment techniques we have developed, holistic assessment and formative examination. In addition we describe how students work with JUnit, a popular unit testing tool, not as users but as developers by applying design patterns to extend it with new functionality. Finally, we report on student assessment results and relay student feedback. © 2005, Australian Computer Society, Inc.",Active and peer learning; Constructive alignment; Design patterns; Formative and holistic assessment; JUnit; UML,Design Patterns; Formative and holistic assessment; JUnit; Peer learning; UML; Alignment; Computer aided instruction; Curricula; Education computing; Learning systems; Software design; Students,,,,,,"Beck, K., Cunningham, W., International Conference on Object Oriented Programming, Systems, Languages and Applications (1989) A Laboratory for Object-Oriented Thinking, pp. 1-6. , New Orleans, Louisiana, USA; Beck, K., Extreme Programming Explained: Embrace Change (2001), Addison-WesleyBiggs, J., Teaching for Quality Learning at University (1999) SRHE, , (Society for Research into Higher Education) & Open University press; Blair, L., Learning, Assessment and Student Diversity: An Eternal Golden Braid? (2000) CiLTHE Stage 2 Document, , Lancaster University; Bligh, D.A., (1971), What's the Use of Lectures, Penguin BooksBloom, B.S., Krathwohl, D.R., (1956), Taxonomy of Educational Objectives, LongmansBoud, D., (1995) Enhancing Learning Through Self Assessment, , Kogan Page; Braude, E., (2003) Software Design: From Programming to Architecture, , Wiley; Feather, N., (1982) Expectations and Actions, , Erlbaum; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable software, , Addison-Wesley; Gamma, E., Beck, K., (2001) JUnit: A Regression Testing Framework, , http://www.junit.org; Geary, D., Amaze your Developer Friends with Design Patterns (2001) Java World, , http://www.javaworld.com, October; Honey, P., Mumford, A., (1995) Using Your Learning Styles, , Peter Honey Publications; Kolawa, A., Coding Standards in Java: Do We Need Them? Six common Java pitfalls and how to prevent them (2000) The Java Report, , http://www.adtmag.com, March; McKeachie, W., Pintrich, P., Lin, Y., Smith, D., (1986) Teaching and Learning in the College Classroom, , University of Michigan; Race, P., Never Mind the Teaching, Feel the Learning (1993), (20). , http://www.seda.ac.ukWarren, I., Migrating to a Teaching Style that Facilitates Active Learning (2002) CiLTHE Stage 1 Dissertation, , Lancaster University","Warren, I.; Department of Computer Science, University of Auckland, Auckland, New Zealand; email: ian-w@cs.auckland.ac.nz",,,,"7th Australasian Computing Education Conference, ACE 2005",,"Newcastle, NSW",93115,14451336,1920682244,9781920682248,,,English,Conf. Res. Pract. Inf. Technol. Ser.,Conference Paper,Scopus,2-s2.0-84873486665,
,,1,"Duggan, B., McAtamney, H., Mtenzi, F.J.",Learning games programming with dalek world,2005,"Proceedings of CGAMES 2005 - 7th International Conference on Computer Games: Artificial Intelligence, Animation, Mobile, Educational and Serious Games",,,,267,270,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-84906977374&partnerID=40&md5=b0e99d9b2f34e61f9fd5aac9c78de048,"Dublin Institute of Technology, School of Computing, Kevin St., Dublin 8, Ireland","Duggan, B., Dublin Institute of Technology, School of Computing, Kevin St., Dublin 8, Ireland; McAtamney, H., Dublin Institute of Technology, School of Computing, Kevin St., Dublin 8, Ireland; Mtenzi, F.J., Dublin Institute of Technology, School of Computing, Kevin St., Dublin 8, Ireland","From September 2005 the School of Computing in the DIT will offer an elective in computer games programming to final year computer science students. This paper demonstrates how students will learn games programming by developing a 3D FPS (First Person Shooter) called Dalek World. Dalek World is developed using Microsoft Visual Studio in C++ and was originally developed by the authors to learn games programming techniques themselves. In developing Dalek World, students will learn Euclidian geometry, 3D graphics programming, object orientated game design, level loading, physics, collision detection, the A* algorithm, perception and enemy AI using finite state machines. © The University of Wolverhampton, UK.",Computer games; Course curriculum; Design patterns; Education; Frameworks; Object orientation; Tools,Animation; Artificial intelligence; C++ (programming language); Computer games; Computer programming; Curricula; Education; Java programming language; Students; Tools; Collision detection; Computer science students; Design Patterns; First person shooter; Frameworks; Object orientation; Programming technique; Visual studios; Loading,,,,,,"Buckland, M., (2004) Programming Game AI by Example, , Buckland, 2004, Word ware Publishing, Inc. November; Carbone, A., Sheard, J., (2002) Developing a Model of Student Learning in a Studio-Based Teaching Environment, Informing Science & IT Education Conference, , Carbone & Sheard, 2002, Cork, Ireland, June; (2005) Havok, , http://havok.com, Accessed September 2005; Kolb, D.A., (1984) Experiential Learning: Experience as the Source of Learning and Development, , Kolb, 1984, Englewood Cliffs, N.J. : Prentice-Hall; Lester, P., (2005) A* Pathfinding for Beginners, , http://www.policyalmanac.org/games/aStarTutorial.htm, Lester, Accessed October, 2005; Livingston, D., McMonies, A., Is DarkBasic to be considered harmful? (2004) 5th Game-On International Conference, , Livingston & McMonnies, 2004, Reading, UK, November; Luna, F.D., (2003) Introduction to 3D Game Programming with DirectX 9.0, , Luna, 2003, Wordware Publishing, Inc. 1st edition, June 2; Mahar, E., Lahart, O., (2004) Student Centered Learning in a Studio Classroom Environment, , Mahar & Lahart 2004, EdTech, Tralee, Ireland, June; Reynolds, C.W., Steering behaviors for autonomous characters The Proceedings of Game Developers Conference 1999 Held in San Jose, , Reynolds, 1999, California. Miller Freeman Game Group, San Francisco, California; (2005) Dalek, , http://en.wikipedia.org/wiki/Dalek, Accessed September 2005",,,,University of Wolverhampton,"7th International Conference on Computer Games: Artificial Intelligence, Animation, Mobile, Educational and Serious Games, CGAMES 2005",28 November 2005 through 30 November 2005,Angouleme,107437,,,,,English,"Proc. CGAMES - Int. Conf. Comput. Games: Artif. Intell., Anim., Mob., Educ. Serious Games",Conference Paper,Scopus,2-s2.0-84906977374,,
,,1,"Sugita, K., Ishida, T., Miyakawa, A., Shibata, Y.",Kansei retrieval method based on design pattern of traditional japanese crafting object,2004,International Conference on Database and Expert Systems Applications - DEXA,15,,,308,312,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-10044258773&partnerID=40&md5=8a1a3bf169dd7135fe1ab0115b8deb03,"Fukuoka Institute of Technology, Japan; Iwate Prefectural University, Japan; Planning Section, Tatsuruhama, Ishikawa Prefecture, Japan","Sugita, K., Fukuoka Institute of Technology, Japan; Ishida, T., Iwate Prefectural University, Japan; Miyakawa, A., Iwate Prefectural University, Japan, Planning Section, Tatsuruhama, Ishikawa Prefecture, Japan; Shibata, Y., Iwate Prefectural University, Japan","In this paper, we propose a Kansei Retrieval method based on the design pattern of traditional Japanese crafting object to provide a user with the desired presentation space in digital traditional Japanese crafting system. The visual quantitative feature values are extracted by using Visual Pattern Image Coding (VPIC). These values include the total number, the frequency, the dispersion rate and the deviation rate for different edges. The quantitative feature values for traditional Japanese crafting objects are registered in the multimedia database and the relation between Kansei words and the visual feature of traditional Japanese Crafting objects are analyzed by using the questionnaire. Then, the visual features are compared with the quantitative feature values. Through the above process, we want to find the relation between the design pattern components and edge types using VPIC. By finding this relation, the Kansei retrieval method can be realized.",,Design patterns; Geometric patterns; Kansei Retrieval method; Visual pattern image coding (VPIC); Database systems; Image coding; Multimedia systems; Pattern recognition; Three dimensional computer graphics; Virtual reality; World Wide Web; Information retrieval,,,,,,"Traditional Japanese Crafting in Japan, , http://www.wnn.or.jp/wnn-craft/w_index.html; Sugita, K., Miyakawa, A., Shibata, Y., VR digital traditional japanese crafting system on japan gigabit network (2002) IPSJ, 43 (2), pp. 633-646. , in Japanese; Miyakawa, A., Sugita, K., Hosokawa, M., Shibata, Y., Statistical analysis of the relation between digital traditional japanese crafting presentation and kansei words (2001) IPSJ DPSWS'2001, p. 4348. , in Japanese; Sugita, K., Miyakawa, A., Shibata, Y., Relation between kansei words and the room space in digital traditional japanese crafting system (2003) The International Conference on Advanced Information Networking and Applications (AINA), pp. 159-162; Chen, D., Bovic, A.C., Visual pattern image coding (1990) IEEE Transactions on Communications, 38 (12), pp. 2137-2145; Chen, D., Bovic, A.C., Hierachical visual pattern image coding (1992) IEEE Transactions on Communications, 40 (4), pp. 671-675; Fukuda, M., Katsumoto, M., Shibata, Y., Kansei retrieve method based on user model (1995) IPSJ DPS, DPS-68, 95 (13), pp. 43-48. , in Japanese; Fukuda, M., Shibata, Y., Kansei retrieval method reflecting shape pattern of design images (1996) IPSJ DPSWS'1996, 96 (1), pp. 267-274. , in Japanese; Harada, S., Itoh, Y., Nakatani, H., On constructing shape feature space for interpreting subjective expressions (1999) IPSJ, 40 (5). , in Japanese; Kurita, T., Kato, T., Fukuda, I., Sakakura, A., Sense retrieve on a image database of full color paintings (1992) IPSJ, 33 (11), pp. 1373-1383. , in Japanese","Sugita, K.; Fukuoka Institute of Technology, Fukuoka, Japan",,,,Proceedings - 15th International Workshop on Database and Expert Systems Applications,30 August 2004 through 3 September 2004,Zaragoza,64018,,769521959,9780769521954,,,English,Int. Conf. Database Expert Syst. Appl. Dexa,Conference Paper,Scopus,2-s2.0-10044258773,
,,4,"Yuan, J., Miao, H., Cai, L.",A design pattern verifier in Two-tier programming environment,2004,Proceedings - The Fourth International Conference on Computer and Information Technology (CIT 2004),,,,1081,1086,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-9744227272&partnerID=40&md5=23a97dd7e2ab5d64d3cbad42bde09fdf,"Sch. of Comp. Eng. and Science, Shanghai University, China","Yuan, J., Sch. of Comp. Eng. and Science, Shanghai University, China; Miao, H., Sch. of Comp. Eng. and Science, Shanghai University, China; Cai, L., Sch. of Comp. Eng. and Science, Shanghai University, China","The automatic verification of the design patterns implemented in codes is one of the most important and feasible tasks on automatic verification of program, and will provide useful experience to fully automatic verifications of program codes in the future. In this paper, based on the design pattern formalization and Two-tier Programming paradigm, the framework of a design pattern verification tool is proposed, the object-oriented design of both program design model and design pattern specification is explained, the implementation of a prototype for the tool is introduced, and the verification of a real design pattern is illustrated.",Automatic verification of program; Design pattern; Formalization; Two-tier programming,Abstracting; Java programming language; Mapping; Object oriented programming; Pattern recognition; Problem solving; Computer software; Graphical user interfaces; Mathematical models; XML; Automatic verification of program; Design pattern; Formalization; Two-tier programming; Design patterns; Two-tier programming (TTP); Automation; Computer programming,,,,,,"Gamma, (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley Longman; Perry, D.E., Wolf, A.L., Foundations for the study of software architecture (1992) Software Engineering Notes, ACM SIGSOFT, 17 (4), pp. 40-52. , October; Florijin, G., Tool support for object-oriented patterns (1997) ECOOP'97, , Springer-Verlag; Cornils, A., Tool support for design patterns based on reference attribute grammars (2000) Proceedings of WAGA'00, , Third Workshop on Attribute Grammars and their Applications; Blewitt, A., Bundy, A., Stark, I., Automatic verification of java design patterns (2001) 16th IEEE International Conference on Automated Software Engineering (ASE 2001), , November 2001, Coronado Island, San Diego, CA, USA. IEEE Computer Society; Eden, A.H., (2000) Precise Specification of Design Pattern and Tool Support in Their Application, , PhD thesis, Department of Computer Science, Tel Aviv University; Eden, A.H., Kazman, R., Fox, C.J., Two-tier programming (2003) Technical Report, CSM-387. , Department of Computer Science, University of Essex; Eden, A.H., The integrated architecture environment: A two-tier programming tool (2003) Technical Report, CSM-382. , Department of Computer Science, University of Essex, United Kingdom, Feb","Sch. of Comp. Eng. and Science, Shanghai UniversityChina; email: jyuan@mail.shu.edu.cn",Wei D.Wang H.Peng Z.Kara A.He Y.,"Wuhan University, China;University of Aizu, Japan;National Natural Science Foundation China;IEEE Engineering in Medicine and Biology Society",,Proceedings - The Fourth International Conference on Computer and Information Technology (CIT 2004),14 September 2004 through 16 September 2004,Wuhan,63998,,769522165,,,English,Proc. Fourth Int. Conf. Comput. Inf. Technol. CIT,Conference Paper,Scopus,2-s2.0-9744227272,,
,,v,"Guéhéneuc, Y.-G., Sahraoui, H., Zaidi, F.",Fingerprinting design patterns,2004,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,,172,181,,60,10.1109/WCRE.2004.21,http://www.scopus.com/inward/record.url?eid=2-s2.0-18144379902&partnerID=40&md5=081ca8260e6397ae523086b4d8325517,"Dept. Info./Rech. Operationnelle, Université de Montréal, Centre Ville, Montréal, Que. H3C 3J7, Canada","Guéhéneuc, Y.-G., Dept. Info./Rech. Operationnelle, Université de Montréal, Centre Ville, Montréal, Que. H3C 3J7, Canada; Sahraoui, H., Dept. Info./Rech. Operationnelle, Université de Montréal, Centre Ville, Montréal, Que. H3C 3J7, Canada; Zaidi, F., Dept. Info./Rech. Operationnelle, Université de Montréal, Centre Ville, Montréal, Que. H3C 3J7, Canada","Design patterns describe good solutions to common and recurring problems in program design. The solutions are design motifs which software engineers imitate and introduce in the architecture of their program. It is important to identify the design motifs used in a program architecture to understand solved design problems and to make informed changes to the program. The identification of micro-architectures similar to design motifs is difficult because of the large search space, i.e., the many possible combinations of classes. We propose an experimental study of classes playing roles in design motifs using metrics and a machine learning algorithm to fingerprint design motifs roles. Fingerprints are sets of metric values characterising classes playing a given role. We devise fingerprints experimentally using a repository of micro-architectures similar to design motifs. We show that fingerprints help in reducing the search space of micro-architectures similar to design motifs efficiently using the Composite design motif and the JHoxDRAW framework. © 2004 IEEE.",,Design motifs; Design patterns; Fingerprinting; Micro-architectures; Data acquisition; Knowledge engineering; Metric system; Object oriented programming; Problem solving; Reverse engineering; Software engineering; Pattern recognition,,,,,,"Albin-Amiot, H., Cointe, P., Guéhéneuc, Y.-G., Jussien, N., Instantiating and detecting design patterns: Putting bits and pieces together (2001) Proceedings of the 16th Conference on Automated Software Engineering, pp. 166-173. , IEEE Computer Society Press, November; Antoniol, G., Fiutem, R., Cristoforetti, L., Design pattern recovery in object-oriented software (1998) Proceedings of the 6th International Workshop on Program Comprehension, pp. 153-160. , IEEE Computer Society Press, June; Bieman, J., Straw, G., Wang, H., Willard, P., Alexander, R.T., Design patterns and change proneness: An examination of five evolving systems (2003) Proceedings of the 9 International Software Metrics Symposium, pp. 40-49. , IEEE Computer Society Press, September; Briand, L., Devanbu, P., Melo, W., An investigation into coupling measures for C++ (1997) Proceedings of the 19 International Conference on Software Engineering, pp. 412-421. , ACM Press, May; Briand, L.C., Daly, J.W., Wüst, J.K., A unified framework for cohesion measurement (1997) Proceedings of the 4th International Software Metrics Symposium, pp. 43-53. , IEEE Computer Society Press, November; Chidamber, S.R., Kemerer, C.F., A metrics suite for object-oriented design (1993) Technical Report, E53-315. , MIT Sloan School of Management, December; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceeding of 30th Conference on Technology of Object-Oriented Languages and Systems, pp. 18-32. , IEEE Computer Society Press, August; Eppstein, D., Subgraph isomorphism in planar graphs and related problems (1995) Proceedings of the 6th Annual Symposium on Discrete Algorithms, pp. 632-640. , ACM Press, January; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Software, , Addison-Wesley, 1st edition; Guéhéneuc, Y.-G., Albin-Amiot, H., Using design patterns and constraints to automate the detection and correction of inter-class design defects (2001) Proceedings of the 39th Conference on the Technology of Object-Oriented Languages and Systems, pp. 296-305. , IEEE Computer Society Press, July; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design-patterns identification (2001) Proceedings of the 1st IJCAI Workshop on Modeling and Solving Problems with Constraints, pp. 57-64. , AAAI Press, August; Hahsler, M., A quantitative study of the application of design patterns in Java (2003) Technical Report, 1 (2003). , University of Wien, January; Hitz, M., Montazeri, B., Measuring coupling and cohesion in object-oriented systems (1995) Proceedings of the 3rd International Symposium on Applied Corporate Computing, pp. 25-27. , Texas A & M University, October; Jahnke, J.H., Schäfer, W., Zündorf, A., Generic fuzzy reasoning nets as a basis for reverse engineering relational database applications (1997) Proceedings of the 6 European Software Engineering Conference, pp. 193-210. , ACM Press, September; Jussien, N., Barichard, V., The PaLM system: Explanation-based constraint programming (2000) Proceedings of TRICS: Techniques for Implementing Constraint Programming Systems, pp. 118-133. , School of Computing, National University of Singapore, Singapore, September. TRA9/00; Keller, R.K., Schauer, R., Robitaille, S., Pagé, P., Pattern-based reverse-engineering of design components (1999) Proceedings of the 21st International Conference on Software Engineering, pp. 226-235. , ACM Press, May; Kelly, M., (2004) Biometrics - The Basics, , August; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering, pp. 208-215. , IEEE Computer Society Press, November; (2001) Sir Edward Henry - Fingerprint Pioneer and Founder of the Fingerprint Bureau at Scotland Yard, , www.met.police.uk/so/100years/henry.htm, July; Lorenz, M., Kidd, J., (1994) Object-Oriented Software Metrics: A Practical Approach, , Prentice-Hall, 1st edition, July; Masuda, G., Sakamoto, N., Ushijima, K., Evaluation and analysis of applying design patterns (1999) Proceedings of the 2nd International Workshop on the Principles of Software Evolution, , ACM Press, July; Quilici, A., Yang, Q., Woods, S., Applying plan recognition algorithms to program understanding (1997) Journal of Automated Software Engineering, 5 (3), pp. 347-372. , July; Stone, M., Cross-validatory choice and assessment of statistical predictions (1974) Journal of the Royal Statistical Society, 36, pp. 111-147. , Series B: Statistical Methodology; Tegarden, D.P., Sheetz, S.D., Monarchi, D.E., A software complexity model of object-oriented systems (1995) Decision Support Systems, 13 (3-4), pp. 241-262. , March; Wendorff, P., Assessment of design patterns during software reengineering: Lessons learned from a large commercial project (2001) Proceedings of 5th Conference on Software Maintenance and Reengineering, pp. 77-84. , IEEE Computer Society Press, March; Witten, I.H., Frank, E., (1999) Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations, , Morgan Kaufmann, 1st edition, October; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of the 26th Conference on the Technology of Object-Oriented Languages and Systems, pp. 112-124. , IEEE Computer Society Press, August","Guéhéneuc, Y.-G.; Dept. Info./Rech. Operationnelle, Université de Montréal, Centre Ville, Montréal, Que. H3C 3J7, Canada; email: guehene@iro.umontreal.ca",,"IEEE Computer Society, Technical Council on Software Engineering;Reengineering Forum",,"Proceedings - 11th Working Conference on Reverse Engineering, WCRE 2004",8 November 2004 through 12 November 2004,Delft,64668,10951350,769522432,,,English,Proc. Working Conf. Rev. Eng. WCRE,Conference Paper,Scopus,2-s2.0-18144379902,,
,,3,"Yu, H., Wang, L., Zhang, J., Barksdale, J.",Developing visualization modules using design pattern technology,2004,Proceedings of the IASTED International Conference on Applied Simulation and Modelling,,, 443-044,329,334,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-11144347120&partnerID=40&md5=578e220f4efc6ff9b0df53da8115602e,"Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States","Yu, H., Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States; Wang, L., Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States; Zhang, J., Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States; Barksdale, J., Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States","This paper presents a Geospatial 3D Visualization and Collaboration System that was developed using object-oriented system design methodology. This system integrates software engineering, visualization technology with World Wide Web technology to enable production, dissemination and use of 3D imagery and geospatial information on a hierarchical level through the WWW. Several visualization modules were developed using the Model-View-Controller design pattern technology. These modules are plug-in and reusable components for other similar applications. The application results demonstrate that using object-oriented system design and Model-View-Controller design pattern provides a great chance for software reuse and increase the system flexibility.",Design patterns; Object-oriented system design; Visualization,Computer supported cooperative work; Information analysis; Internet; Object oriented programming; Software engineering; Three dimensional; Visualization; World Wide Web; 3D imagery; Data protection; Data retrieval; Design patterns; Pattern recognition,,,,,,"Goddard, T., Sunderam, V.S., ToolSpace: Web based 3D collaboration (1999) Proc. of the Fourth Symposium on the Virtual Reality Modeling Language; Jern, M., Collaborative visual data navigation on the web (2000) Proc. of IEEE Int. Conf. on Information Visualization; Loffer, J., Content-based retrieval of 3D models in distributed web databases by visual shape information (2000) Proc. of IEEE Int. Conf. on Information Visualization; Wood, J., Brodlie, K., Visualization over the world wide web and its application to environmental data (1996) Proc. of IEEE Int. Conf. on Information Visualization; Michels, B., Peter, S., Smart interface-to-device architecture for HMI (1999) Proc. of IEEE Int. Conf. on Systems, Man, and Cybernetics; Wydaeghe, B., Verschaeve, K., Building an OMT-editor using design patterns: An experience report (1998) Proc. of Technology of Object-oriented Languages; SSEC VisAD Application, , http://www.ssec.wisc.edu/~billh/visad.html; The Source for Java Technology, , http://java.sun.com/; http://www.nima.mil/","Yu, H.; Department of Computer Science, N. Carolina A and T State University, Greensboro, NC 27411, United States; email: cshmyu@ncat.edu",Hamza M.H.,"Int. Association of Sci. and Technol. for Development, IASTED;World Modelling and Simulation Forum, WMSF",,Proceedings of the IASTED International Conference on Applied Simulation and Modelling,28 June 2004 through 30 June 2004,Rhodes,64117,,889864012,9780889864016,,,English,Proc. IASTED Int. Conf. Appl. Simul. Model.,Conference Paper,Scopus,2-s2.0-11144347120,
,,1,"Trad, A., Dessimoz, J.-D.",An architectural design pattern proposal for mobile robot systems,2004,"2nd IEEE International Conference on Industrial Informatics, INDIN'04",,,,346,351,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-28444458552&partnerID=40&md5=ae1cb69121b22bbd38399d5de1f7c3ef,"Hesso/Eivd, West Switzerland University of Applied Sciences, 1400 Yverdon, Switzerland","Trad, A., Hesso/Eivd, West Switzerland University of Applied Sciences, 1400 Yverdon, Switzerland; Dessimoz, J.-D., Hesso/Eivd, West Switzerland University of Applied Sciences, 1400 Yverdon, Switzerland","This paper proposes an Architectural Design Pattern (ADP) for building autonomous Mobile Robot Systems (MRS). This pattern is also applicable to other Autonomous Complex Systems (ACS). This paper results in a proposal which will help MRS project managers and engineers estimate the probability that an MRS will succeed or fail. Furthermore, this proposal offers the possibility to detect in advance potential MRS problems with the help of monitoring and controlling components, adjust the project management pathways, and define the problem sources as well as their possible solutions, in order to deliver a robust autonomous system. © 2004 IEEE.",Components; Design Patterns; Maintenance; Monitor; Packages,Estimation; Probability; Project management; Robotics; Mobile robot systems (MRS); MRS problems; Mobile robots,,,,,,"Burkhardt, R., (1997) UML Unified Modelling Language, , USA Addison Wesley; Papurt, D.M., (1995) Inside the Object Model - The Sensible Use of C++, , USA: Sigs Books; Dayton, D., (1999) Information Technology Audit Handbook, , USA. Daytonassociates; Drake, C., Brown, K., (1995) PANIC! UNIX System Crash Dump Analysis Handbook NJ USA, , Prentice Hall Inc; Derrien, Y., (1992) Les Techniques de l'Audit Informatique, , France: DUNOD; Dessimoz, J.-D., Gauthey, P.-F., Rouhn, P., (2003) Is a Robot That Can Autonomously Play Soccer Intelligent?, , Hesso/Eivd -West Switzerland University of Applied Sciences, 1400 Yverdon-les-Bains, Switzerland; Eriksson, H.E., Magnus, P., (1998) UML Toolkit, , USA John Wiley & Sons, Inc; Hasemann, J.-M., (1996) A Control Architecture for Intelligent Robots Based on Graph Manipulation for Planning, Monitoring, Execution, Intention Switching, and Fault Recovery, , Technical Research Center of Finland , VTT Publications; Hollingworth, J., Gustavson, P., Swart, B., Cashman, M., (2002) Borland C++ Builder 6 Developer's Guide, , SAMS, USA; Hoque, R., (2000) XML for Real Programmers, , Academic Press, San Diego. CA, USA; http//robotik.com/cup/cup.html(1998) ISACA-S Standards for Information Systems Auditing, , USA. ISACA; LOMU 2004, , www.robot-ch.org; Jones, (1996) Applied Software Measurement: Assuring Productivity and Quality, , USA: McGraw-Hill; Kolachina, S.S., (2000) C++ Builder 6 Developer's Guide, , Wordware Publishing, Inc, USA; Krishnamurthy, B., Rexford, J., (2001) Web Protocols and Practice: HTTP/1.1, Networking Protocols, Caching, and Traffic Measurement, , USA Addison-Wesley Pub Co; Land, R., Crnkovic, I., Software systems integration and architectural analysis - A case study (1999) Proceedings of International Conference on Software Maintenance (ICSM), , Amsterdam, Netherlands [WW]; Kawamura, K., (1999) Human-robot Interaction for a Human-friendly Robot a Working Paper(*), , Center for Intelligent Systems, Vanderbilt University Nashville, TN USA; Stapleton, J., Dynamic Systems Development Method the method in practice (DSDM) (1997) DSDM Consortium 1997, , Addison Wesley Longman Limited, UK [26]; Templeman, J., Olsen, A., (2002) Microsoft Visual C++ NET, , Microsoft Corporation, USA; Telles, M., (2002) C# Black Book, , The Conolos Group, LLC., USA; Trad, A., (1996) Swissair the Message Management System - MMS, , Kloten, Switzerland: Swissair, SairGroup; Trad, A., Swissair (1997) The Absolute Monitoring Method -AMM, , Kloten, Switzerland: Swissair, SairGroup; Trad, A., Kalpic, D., The team design and quality coefficient check-TDQCC (1998) Proceedings of the 23rd International Conference on Information Technology Interfaces, pp. 359-364. , 1998 Jun 16-19: Pula, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; Trad, A., Kalpic, D., Reengineering Quality and Risk Check (RQRC) - Theoretical basis (1999) Proceedings of the 24th International Conference on Information Technology Interfaces, pp. 497-502. , 1999 Jun 15-18; Pula, Croatia. Zagreb: SRCE University Computing Center, University of Zagreb; Trad, A., Kalpic, D., Reengineering Quality and Risk Check (RQRC) - A practical implementation (1999) Proceedings of the 24th International Conference on Information Technology Interfaces, pp. 491-496. , 1999 Jun 15-18; Pula, Croatia. Zagreb SRCE University Computing Center, University of Zagreb; Trad, A., Kalpic, D., Fertalj, K., Proactive monitoring of the information system risk and quality (2002) Proceedings of the 26th International Conference on Information Technology Interfaces, pp. 497-502. , 2002 Jun 24-27; Dubrovnik, Croatia Zagreb: SRCE University Computing Center, University of Zagreb; Simoneau, P., SNMP network management (1999) Computer Communications Series, , USA McGraw-Hill; Vogel, A., Vasudevan, B., Benjamin, M., Villalba, T., (1999) C++ Programming with CORBA, , Canada: John Wiley & Sons Inc; Von Zimmermann, P., (1992) Das MVC-modell, , Germany: SAP AG; Watters, P., Veeraraghawa, (2000) Solaris-the Complete Reference, , USA: McGraw-Hill; http//www.ipmonitor.comThe TIVOLI Monitoring System, , http//www-306.ibm.com/software/tivoli/","Trad, A.; Hesso/Eivd, West Switzerland University of Applied Sciences, 1400 Yverdon, Switzerland; email: antoine.trad@eivd.ch",Schoop R.Colombo A.Bernhardt R.Schreck G.,,,"2nd IEEE International Conference on Industrial Informatics: Collaborative Automation - One Key for Intelligent Industrial Environments, INDIN'04",24 June 2004 through 26 June 2004,Berlin,66115,,780385136,9780780385139,,,English,Int. Conf. Indust. Inform.,Conference Paper,Scopus,2-s2.0-28444458552,
,,4,"DeHon, A., Adams, J., DeLorimier, M., Kapre, N., Matsuda, Y., Naeimi, H., Vanier, M., Wrighton, M.",Design patterns for reconfigurable computing,2004,"Proceedings - 12th Annual IEEE Symposium on Field-Programmable Custom Computing Machines, FCCM 2004",,,,13,23,,29,,http://www.scopus.com/inward/record.url?eid=2-s2.0-18644376855&partnerID=40&md5=f038c7ffaec3ffd4338b5707bc8d7d43,"Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States","DeHon, A., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Adams, J., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; DeLorimier, M., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Kapre, N., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Matsuda, Y., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Naeimi, H., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Vanier, M., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; Wrighton, M., Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States","It is valuable to identify and catalog design patterns for reconfigurable computing. These design patterns are canonical solutions to common and recurring design challenges which arise in reconfigurable systems and applications. The catalog can form the basis for creating designs, for educating new designers, for understanding the needs of tools and languages, and for discussing reconfigurable design. Tying application and implementation lessons to the expansion and refinement of this catalog will make those lessons more relevant to the design community. In this paper, we articulate this role for design patterns in reconfigurable computing, provide a few example patterns, offer a starting point for the contents of the catalog, and discuss the potential benefits of this effort. © 2004 IEEE.",,Design patterns; Reconfigurable systems; Shared memory; Streaming data; Bandwidth; Computational complexity; Computer aided software engineering; Data structures; Object oriented programming; Pattern recognition; Problem solving; Software engineering; Synchronization; Field programmable gate arrays,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design patterns: Abstraction and reuse of object-oriented design (1993) Proceedings of the European Conference on Object-oriented Programming (ECOOP), pp. 406-431. , July; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, , Addison Wesley; Floyd, R.W., The paradigms of progamming (1979) Communications of the ACM, 22 (8), pp. 455-460; Villasenor, J., Jones, C., Schoner, B., Video communications using rapidly reconfigurable hardware (1995) IEEE Transactions on Circuits and Systems for Video Technology, 5, pp. 565-567. , December; Villasenor, J., Schoner, B., Chia, K.-N., Zapata, C., Configurable computer solutions for automatic target recognition (1996) FCCM., pp. 70-79. , IEEE, April; Eldredge, J.G., Hutchings, B.L., Density enhancement of a neural network using FPGAs and run-time reconfiguration (1994) FCCM, pp. 180-188. , April; Caspi, E., Chu, M., Huang, R., Weaver, N., Yeh, J., Wawrzynek, J., Dehon, A., Stream Computations Organized for Reconfigurable Execution (SCORE): Introduction and tutorial (2000) FPL'2000 (LNCS), 1896. , http://www.cs.berkeley.edu/projects/brass/documents/score_tutorial.html, short version appears in; Markovskiy, Y., Caspi, E., Huang, R., Yeh, J., Chu, M., Wawrzynek, J., Dehon, A., Analysis of quasiStatic scheduling techniques in a virtualized reconfigurable machine (2002) FPGA, pp. 196-205. , February; Perissakis, S., Joo, Y., Ahn, J., Dehon, A., Wawrzynek, J., Embedded DRAM for a reconfigurable array (1999) Proceedings of the 1999 Symposium on VLSI Circuits, , June; Hadley, J.D., Hutchings, B., Design methodologies for partially reconfigured systems (1995) FCCM, pp. 78-84. , April; Li, Z., Hauck, S., Configuration compression for virtex FPGAs (2001) FCCM; Chapman, K.D., Fast integer multipliers fit in FPGAs (1993) EDN, 39 (10), p. 80. , May 12; (1993) The Programmable Logic Data Book, , Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124; (2001) Xilinx Virtex 2.5V Field Programmable Gate Arrays, , http://direct.xilinx.com/bvdocs/publications/ds003.pdf, Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, April dS003; Lemoine, E., Merceron, D., Run time reconfiguration of FPGA for scanning genomic databases (1995) FCCM, pp. 90-98. , April; (1999) Designing Flexible, Fast CAMs with Virtex Family FPGAs, , http://www.xilinx.com/bvdocs/appnotes/xapp203.pdf, Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, September xAPP 203; (1996) XC6200 FPGA Advanced Product Specification, Version 1.0 Ed., , Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, June; (2003) Xilinx Virtex-II Platform FPGAs Data Sheet, , http://direct.xilinx.com/bvdocs/publications/ds031.pdf, Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, October 200 dS031; Callahan, T., Hauser, J., Wawrzynek, J., The carp architecture and C compiler (2000) IEEE Computer, 33 (4), pp. 62-69. , April; Iseli, C., Sanchez, E., Spyder: A reconfigurante VLIW Processor using FPGAs (1993) FCCM, pp. 17-24. , April; DeHon, A., DPGA utilization and application (1996) FPGA, pp. 115-121. , February; Cadambi, S., Weener, J., Goldstein, S., Schmit, H., Thomas, D., Managing pipeline-reconfigurable FPGAs (1998) FPGA, pp. 55-64; Kobori, T., Maruyama, T., Hoshino, T., A cellular automata system with FPGA (2001) FCCM; Denneau, M., The yorktown simulation engine (1982) 19th Design Automation Conference, pp. 55-59. , IEEE; Cong, J., Ding, Y., On area/depth trade-off in LUT-based FPGA technology mapping (1994) IEEE Transactions on VLSI Design, 2 (2), pp. 137-148. , June; Gajski, D., Dutt, N., Wu, A., Lin, S., (1992) High-level Synthesis: Introduction to Chip and System Design, , Kluwer Academic Publishers; Denyser, P., Renshaw, D., (1985) VLSI Signal Processing: A Bit-serial Approach, pp. 1-28. , Addison-Wesley Publishing Company; Isshiki, T., Dai, W.W.-M., High-level bit-serial datapath synthesis for multi-FPGA systems (1995) FPGA, pp. 167-173. , ACM, February; Tenca, A.F., Ercegovac, M.D., A variable long-precision arithmetic unit designed for reconifgurable coprocessor architectures (1998) FCCM, pp. 216-225; Rinker, R., Carter, M., Patel, A., Chawathe, M., Ross, C., Hammes, J., Najjar, W.A., Böhm, W., An automated process for compiling dataflow graphs into reconfigurable hardware (2001) IEEE Transactions on VLSI Systems, 9 (1), pp. 130-139; Lee, E.A., Messerschmitt, D.G., Synchronous data flow (1987) Proceedings of the IEEE, 75 (9), pp. 1235-1245. , September; Hillis, W.D., Steele, G.L., Data parallel algorithms (1986) Communications of the ACM, 29 (12), pp. 1170-1183. , December; Gokhale, M., Minnich, R., FPGA computing in a data parallel C (1993) FCCM, pp. 94-101. , April; Guccione, S., Gonzalez, M., A data-parallel programming model for reconfigurable architectures (1993) FCCM, pp. 79-87. , April; Hennessy, J., Patterson, D., (1996) Computer Architecture a Quantitative Approach, 2nd Ed., , Morgan Kaufmann Publishers, Inc; Hoare, C.A.R., (1985) Communicating Sequential Processes, Ser., , International Series in Computer Science. Prentice-Hall; Halstead Jr., R.H., Multilisp: A language for concurrent symbolic computation (1985) ACM Transaction on Programming Languages and Systems, 7 (4), pp. 501-538; Buell, D., Arnold, J., Kleinfelder, W., (1996) Splash 2: FPGAs in a Custom Computing Machine, , 10662 Los Vasqueros Circle, PO Box 3014, Los Alamitos, CA 90720-1264: IEEE Computer Society Press; Jacob, J.A., Chow, P., Memory interfacing and instruction specification for reconfigurable processors (1999) FPGA, pp. 145-154. , February; Weinhardt, M., Luk, W., Pipeline vectorization for reconfigurable systems (1999) FCCM, pp. 52-62; Leighton, F.T., (1992) Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes, , Morgan Kaufmann Publishers, Inc; Zhong, P., Martonosi, M., Ashar, P., Malik, S., Accelerating boolean satisfiability with configurable hardware (1998) FCCM, pp. 186-195. , April; Babb, J., Frank, M., Agarwal, A., Solving graph problems with dynamic computational structures (1996) Proceedings of SPIE: High-speed Computing, Digital Signal Processing, and Filtering Using Reconfigurable Logic, 2914, pp. 225-236. , November; Abramovici, M., Menon, P., Fault simulation on reconfigurable hardware (1997) FCCM, pp. 182-190. , April; Shand, M., Flexible image acquisition using reconfigurable hardware (1995) FCCM, pp. 125-134; Rupp, C., Landguth, M., Garverick, T., Gomersall, E., Holt, H., Arnold, J., Gokhale, M., The NAPA adaptive processing architecture (1998) FCCM, pp. 28-37. , April; Hauser, J.R., Wawrzynek, J., Garp: A MIPS processor with a reconfigurable coprocessor (1997) FCCM, pp. 12-21. , IEEE, April; Athanas, P., Silverman, H.F., Processor reconfiguration through instruction-set metamorphosis (1993) IEEE Computer, 26 (3), pp. 11-18. , March; Razdan, R., Smith, M.D., A high-performance microarchitecture with hardware-programmable functional units (1994) Proceedings of the 27th Annual International Symposium on Microarchitecture, pp. 172-180. , IEEE Computer Society, November; Wirthlin, M.J., Hutchings, B.L., A dynamic instruction set computer (1995) FCCM, , April; Luk, W., Shirazi, N., Cheung, P.Y.K., Compilation tools for run-time reconfigurable designs (1997) FCCM, pp. 56-65. , April; Hauck, S., Fry, T., Hosler, M., Kao, J., The chimaera reconfigurable functional unit (1997) FCCM, pp. 87-96. , April; Austin, T.M., DIVA: A reliable substrate for deep submicron microarchitecture design (1999) MICRO, pp. 196-207; Boemo, E., López-Buedo, S., Meneses, J.M., The wave pipeline effect on LUT-based FPGA architectures (1996) FPGA, pp. 45-50. , February; Leiserson, C., Rose, F., Saxe, J., Optimizing synchronous circuitry by retiming (1983) Third Caltech Conference on VLSI, , March; Tsu, W., Macy, K., Joshi, A., Huang, R., Walker, N., Tung, T., Rowhani, O., DeHon, A., HSRA: High-speed, hierarchical synchronous reconfigurable array (1999) FPGA, pp. 125-134. , February; Singh, D.P., Brown, S.D., The case for registered routing switches in field-programmable gate arrays (2001) FPGA, pp. 161-169. , February; Weaver, N., Markovskiy, Y., Patel, Y., Wawrzynek, J., Post-placement C-slow retiming for the xilinx virtex FPGA (2003) FPGA, pp. 185-194; Allan, V.H., Jones, R.B., Lee, R.M., Allan, S.J., Software pipelining (1995) ACM Computing Surveys, 27 (3), pp. 367-432. , September; Callahan, T.J., Wawrzynek, J., Adapting software pipelining for reconfigurable computing (2000) Proceedings of the International Conference on Compilers, Architecture, and Synthesis for Embedded Systems; Snider, G., Performance-constrained pipelining of software loops onto reconfigurable hardware (2003) FPGA, pp. 177-186; DeHon, A., The density advantage of configurable computing (2000) IEEE Computer, 33 (4), pp. 41-49. , April; Gokhale, M., Gomersall, E., High level compilation for fine grained FPGAs (1997) FCCM, pp. 165-173. , April; Chu, M., Weaver, N., Sulimma, K., Dehon, A., Wawrzynek, J., Object oriented circuit-generators in java (1998) FCCM, pp. 158-166. , April; Singh, S., Hogg, J., McAuley, D., Expressing dynamic reconfiguration by partial evaluation (1996) FCCM, pp. 188-194. , April; Wang, Q., Lewis, D.M., Automated field-programmable compute accelerator design using partial evaluation (1997) FCCM, pp. 145-154. , April; Pontus Äström, P.N., Johansson, S., Design patterns for hardware datapath library design (2001) Proceedings of the Swedish System on a Chip Conference; Brebner, G., The swapable logic unit: A paradigm for virtual hardware (1997) FCCM, pp. 77-86. , April; Lim, D., Peattie, M., (2002) Two Flows for Partial Reconfiguration: Module Based or Small Bit Manipulations, , http://www.xilinx.com/bvdocs/appnotes/xapp290.pdf, Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, May xAPP 290; Bove Jr., V.M., Watlington, J.A., Cheops: A reconfigurable data-flow system for video processing (1995) IEEE Transactions on Circuits and Systems for Video Technology, 5 (2), pp. 140-149. , April; Seitz, C.L., The cosmic cube (1985) CACM, pp. 22-33. , January; Eicken, T.V., Active messages: A mechanism for integrated communication and computation (1992) Proceedings of the 19th Annual Symposium on Computer Architecture, , Queensland, Australia, May; Snir, M., Gropp, W., (1998) MPI: The Complete Reference, 2nd Ed., , MIT Press; Jones, M., Scharf, L., Scott, J., Twaddle, C., Yaconis, M., Yao, K., Athanas, P., Schott, B., Implementing an API for distributed adaptive computing systems (2001) FCCM; Nelson, B.J., (1981) Remote Procedure Call, , Xerox Palo Alto Research Center, CSL 81-9; Budiu, M., Mishra, M., Bharambe, A., Goldstein, S.C., Peer-to-peer hardware-software interfaces for reconfigurable fabrics (2002) FCCM; Culler, D.E., Singh, J.P., (1999) Parallel Computer Architecture: A Hardware/Software Approach, , Morgan Kaughmann; Seitz, C., (1980) Introduction to VLSI Systems., , Addison-Wesley, ch. 7: System Timing; Budiu, M., Goldstein, S.C., Compiling application-specific hardware (2002) FPL, pp. 853-863; Smith, B., Architecture and applications of the HEP multiprocessor computer system (1981) Proceedings Fo the Symposium on Real-time Signal Processing, pp. 241-248; Arvind, Nikhil, R.S., Pingali, K.K., I-structures: Data structures for parallel computing (1986) Proceedings of the Workshop on Graph Reduction (Springer-Verlag Lecture Notes in Computer Science), 279. , Sept; Postel, E.J., Transmission control protocol - DARPA internet program protocol specification (1981) RFC, 793. , USC/ISI, Information Sciences Institute, University of Southern California, 4676 Admiralty Way, Marina del Rey, California, 90291, September; Von Neumann, J., Theory of Self-reproducing Automata, , University of Illinois Press, 1966, compiled by Arthur W. Burks; Gardner, M., The fantastic combinations of John conway's new solitaire game ""life"" (1970) Scientific American, 223, pp. 120-123. , October; Milne, G., Cockshott, P., McCaskill, G., Barrie, P., Realising massively concurrent systems on the SPACE machine (1993) FCCM, pp. 26-32. , April; Rung, H.T., Why systolic architectures? (1982) IEEE Computer, 15 (1), pp. 37-46. , January; Herzen, B.V., Signal processing at 250 MHz using high-performance FPGA's (1997) FPGA, pp. 62-68. , February; Dally, W.J., Sietz, C.L., (1986) The Torus Routing Chip, 1, pp. 187-196. , ser. Distributed Computing. Springer-Verlag; Bhatt, S., Leighton, F.T., A framework for solving VLSI graph layout problems (1984) Journal of Computer System Sciences, 28, pp. 300-343; Greenberg, R.I., Leiserson, C.E., A compact layout for the three-dimensional tree of meshes (1988) Applied Math Letters, 1 (2), pp. 171-176; (2002) RocketIO X Transceiver User Guide, , http://www.xilinx.com/bvdocs/userguides/ug035.pdf, Xilinx, Inc., 2100 Logic Drive, San Jose, CA 95124, December uG035; Babb, J., Tessier, R., Agarwal, A., Virtual wires: Overcoming pin limitations in FPGA-based logic emulators (1993) FCCM, pp. 142-151. , April; Dehon, A., Chong, F., Becker, M., Egozy, E., Minsky, H., Peretz, S., Knight Jr., T.F., METRO: A router architecture for high-performance, short-haul routing networks (1994) ISCA, pp. 266-277. , May; Dally, W.J., Towles, B., Route packets, not wires: On-chip interconnection networks (2001) Design Automation Conference, pp. 684-689; Bove Jr., V.M., Lee, M., McEniry, C., Nwodoh, T., Watlington, J., Media processing with field-programmable gate arrays on a microprocessor's local bus (1999) Proceedings of SPIE Media Processors, 3655; Guccione, S.A., Levi, D., Downs, D., A reconfigurable content addressable memory (2000) Proceedings of the International Parallel and Distributed Processing Symposium, pp. 882-889; Deering, M.F., Schlapp, S.A., Lavelle, M.G., FBRAM: A new form of memory optimized for 3D graphics (1994) Proceedings of SIGGRAPH, pp. 167-174; Moon, D.A., Architecture of the symbolics 3600 (1985) ISCA, pp. 76-83; Diniz, P., Park, J., Data search and reorganization using FPGAs: Application to spatial pointer-based data structures (2003) FCCM, pp. 207-217; Oskin, M., Chong, F.T., Sherwood, T., Active Pages: A model of computation for intelligent memory (1998) ISCA, , June; Douglis, F., The compression cache: Using on-line compression to extend physical memory (1993) Proceedings of the Winter USENIX Conference, pp. 519-529; Wilson, P.R., Kaplan, S.F., Smaragdakis, Y., The case for compressed caching in virtual memory systems (1999) Proceedings of the Summer USENIX Conference, pp. 101-116; Leiserson, C., (1979) Systolic Priority Queues, , Carnegie-Mellon University, Pittsbugh, Pennsylvania 15213, CMU-CS-TR 115, April; Mencer, O., Huang, Z., Huelsbergen, L., HAGAR: Efficient multicontext graph processors (2002) FPL, pp. 915-924; Liang, J., Tessier, R., Mencer, O., Floating point unit generation and evaluation for FPGAs (2003) FCCM, pp. 185-194; Matoušek, R., Tichý, M., Pohl, Z., Kadlec, J., Softley, C., Coleman, N., Logarithmic number system and floating point arithmetics on FPGA (2002) FPL, pp. 627-636; Coric, S., Lesser, M., Miller, E., Trepanier, M., Parallel-beam backprojection: An FPGA implemenation optimzied for medical imaging (2003) FPGA, pp. 217-226; Omondi, A.R., (1994) Computer Arithmetic Systems: Algorithms, Architecture and Implementations, , Prentice-Hall; Li, Y., Chu, W., Implementation of single precision floating point square root on FPGAs (1997) FCCM, pp. 226-232; Mintzer, L., FIR filters with field-programmable gate arrays (1993) Journal of VLSI Signal Processing, 6, pp. 119-127; Van Daalen, M., Jeavons, P., Shawe-Taylor, J., A stochastic neural architecture that exploits dynamically reconfigurable FPGAs (1993) FCCM, pp. 202-211. , April; Koch, A., Structure design and implemenation - A strategy for implementing regular datapaths on FPGAs (1996) FPGA, pp. 151-157. , February","DeHon, A.; Department of Computer Science, 256-80, California Institute of Technology, Pasadena, CA 91125, United States; email: andre@cs.caltech.edu",Arnold J.Pocek K.L.,IEEE Computer Society Technical Committee on Computer Archit.,,"Proceedings - 12th Annual IEEE Symposium on Field-Programmable Custom Computing Machines, FCCM 2004",20 April 2004 through 23 April 2004,"Napa, CA",64687,,769522300,9780769522302,,,English,Proc. Annu. IEEE Symp. Field Program. Custom Compt. Mach. FCCM,Conference Paper,Scopus,2-s2.0-18644376855,
,,4,"Hallstrom, J.O., Soundarajan, N.",Formal specification of design patterns: A case study,2004,Proceedings of the Eigtht IASTED International Conference on Software Engineering and Applications,,, 436-219,362,367,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-11144228948&partnerID=40&md5=5ecea82f5d89a3a2925c2480948839e4,"Computer Science, Clemson University, Clemson, SC 29634, United States; Computer Science and Eng., Ohio State University, Columbus, OH 43210, United States","Hallstrom, J.O., Computer Science, Clemson University, Clemson, SC 29634, United States; Soundarajan, N., Computer Science and Eng., Ohio State University, Columbus, OH 43210, United States","Design patterns are valuable both for designing and for documenting software systems. Patterns are usually described informally. While informal descriptions are certainly useful, in order to be sure that designers have a precise understanding of the requirements that must be met when applying a given pattern, and to be able to reliably predict the behaviors that systems built using specific patterns will exhibit, we also need precise specifications of the patterns. In this paper, we apply an approach to formally specifying patterns to the Memento pattern as a case study. One important aspect of patterns is their flexibility. Our case study shows that this flexibility is not compromised by our formalization. Indeed, the case study shows that for some patterns, the formalization reveals increased opportunities for variation.",Design patterns; Formal methods; Software specifications,Design patterns; Formal methods; Software specifications; Software systems; Computer program listings; Computer programming languages; Computer software; Constraint theory; Software engineering; Systems analysis; Pattern recognition,,,,,,"Soundarajan, N., Hallstrom, J., Responsibilities and rewards: Specifying design patterns (2004) Proc. of Int. Conf. on Software Engineering (ICSE), , IEEE; Beck, K., Johnson, R., Patterns generate architectures (1994) Proceedings of the Eighth ECOOP, pp. 139-149; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) A System of Patterns, , Wiley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable 00 Software, , Addison-Wesley; Johnson, R., Components, frameworks, patterns (1997) ACM SIGSOFT Symposium on Software Reusability, pp. 10-17; Riehle, D., Zullighoven, H., Understanding and using patterns in software development (1996) Theory and Practice of Object Systems, 2 (1), pp. 3-13; Owicki, S., Gries, D., An axiomatic proof technique for parallel programs (1976) Acta Informatica, 6 (1), pp. 319-340; Warmer, J., Kleppe, A., (1999) The Object Constraint Langauge, , Addison-Wesley; Vlissides, J., Notation, notation, notation (1998) C++ Report, , April; Dong, J., UML extensions for design pattern compositions (2002) Proc. of TOOLS, in Special Issue of Journal of Object Technology, 1 (3), pp. 149-161. , C. Mingins, editor; Reenskaug, T., (1996) Working with Objects, , Prentice-Hall; Eden, A., Gil, J., Hirshfeld, Y., Yehudai, A., Toward a mathematical foundation for design patterns (1999) Technical Report, 4. , Tel Aviv University; Eden, A., Yehudai, A., Gil, J., Precise specification and automatic application of design patterns (1997) Automated Software Engineering, pp. 143-152; Yau, S., Dong, N., Integration in component-based software development using design patterns (2000) The Twenty-fourth Annual International Computer Software Applications Conference, p. 369. , Taipei, Taiwan, October; Mikkonen, T., Formalizing design patterns (1998) Proceedings of 20th ICSE, pp. 115-124. , IEEE Computer Society Press","Hallstrom, J.O.; Computer Science, Clemson University, Clemson, SC 29634, United States; email: jasonoh@cs.clemson.edu",Hamza M.H.,"Int. Association of Sci. and Technol. for Development, IASTED",,Proceedings of the Eighth IASTED International Conference on Software Engineering and Applications,9 November 2004 through 11 November 2004,"Cambridge, MA",64136,,889864276,9780889864276,,,English,Proc. Eighth IASTED Int. Conf. Softw. Eng. Appl.,Conference Paper,Scopus,2-s2.0-11144228948,
,,1,"Burge, M.",Developing smart card applications using the OpenCard framework,2004,Proceedings of the Annual Southeast Conference,,,,19,24,,,10.1145/986537.986543,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953083780&partnerID=40&md5=f6ac18104d1fba21f367467621aa3a52,"School of Computing, Armstrong Atlantic State University, Savannah, GA, United States","Burge, M., School of Computing, Armstrong Atlantic State University, Savannah, GA, United States","Smart cards provide a compact, secure, and widely used method for identifying ourselves and authenticating our transactions. With their increasing incorporation into credit cards and the cellular industries move toward smart card based GSM networks, they are positioned to become truly pervasive. Unfortunately, until now, teaching smart card development required expensive, specialized hardware and software as well as detailed, and usually proprietary, knowledge of the hardware and operating system of a given brand of smart card. The introduction of Java programmable smart cards along with recent advances in smart card simulators enables educators to leverage their students existing Java skills and begin teaching smart card development today. We present a tutorial on using the Java based OpenCard Framework to communicate with smart cards. Copyright 2004 ACM.",Design patterns; Java card; JCOP; Mobile computing; OpenCard framework; Pervasive computing; Smart cards,Cellular industry; Credit cards; Design Patterns; GSM networks; JAVA card; Operating systems; Pervasive computing; Smart-card application; Specialized hardware; Computer operating systems; Java programming language; Mobile computing; Service oriented architecture (SOA); Smart cards,,,,,,"Burge, M., Liang, D., Java Micro Edition Programming, , Prentice Hall, to appear; Chen, Z., (2000) Java Card for Smart Cards: Architecture and Programmer's Guide, , Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements Od Reusable Object-Oriented Software, , Addison-Wesley Professional Computing Series. Addison-Wesley Publishing Company, New York, NY; Hansmann, U., Schack, T., Seliger, F., Nicklous, M., (1999) Smart Card Application Development Using Java, , Spinger Verlag; Rankl, W., Effing, W., (2002) Handbuch der Chipkarten, , Carl Hanser Verlag München, fourth edition","Burge, M.; School of Computing, Armstrong Atlantic State University, Savannah, GA, United States; email: mburge@acm.org",,Association for Computing Machinery (ACM),,"42nd Annual Southeast Regional Conference, ACM-SE 42",2 April 2004 through 3 April 2004,"Huntsville, AL",80485,,1581138709,9781581138702,,,English,Proc Annu Southeast Conf,Conference Paper,Scopus,2-s2.0-77953083780,
,,1,"Billard, E.A.",Pattern of agent interaction scenarios as use case maps,2004,"IEEE Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics",34,4,,1933,1939,,11,10.1109/TSMCB.2004.828192,http://www.scopus.com/inward/record.url?eid=2-s2.0-3442885388&partnerID=40&md5=f772ba34eb2f4119e75d43ad8b0a155f,"Dept. of Math and Computer Science, California State University, Hayward, CA 94542, United States","Billard, E.A., Dept. of Math and Computer Science, California State University, Hayward, CA 94542, United States","A use case map (UCM) presents, in general, an abstract description of a complex system and, as such, is a good candidate for representing scenarios of autonomous agents interacting with other autonomous agents. The ""gang of four"" design patterns are intended for object-oriented software development but at least eight of the patterns illustrate structure, or architecture, that is appropriate for interacting agents, independent of software development. This study presents these particular patterns in the form of UCMs to describe abstract scenarios of agent interaction. Seven of the patterns attempt to balance the decentralized nature of interacting agents with an organized structure that makes for better, cleaner interactions. An example performance analysis is provided for one of the patterns, illustrating the benefit of an early abstraction of complex agent behavior. The original contribution here is a UCM presentation of the causal paths in agent behavior as suggested by software design patterns. © 2004 IEEE.",,"Autonomous agents; Computer aided software engineering; Data flow analysis; High level languages; Large scale systems; Object oriented programming; Query languages; Software prototyping; Cooperative systems; Design patterns; Object oriented software development; Use case maps; Multi agent systems; algorithm; article; artificial intelligence; automated pattern recognition; equipment design; evaluation; mathematical computing; methodology; theoretical model; Algorithms; Artificial Intelligence; Equipment Design; Models, Theoretical; Numerical Analysis, Computer-Assisted; Pattern Recognition, Automated",,,,,,"Buhr, R.J.A., Casselman, R.S., (1996) Use Case Maps for Object-Oriented Systems, , Englewood Cliffs, NJ: Prentice-Hall; Buhr, R.J.A., Use case maps as architectural entities for complex systems (1998) IEEE Trans. Software Eng., 24, pp. 1115-1131. , Dec; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Reading, MA: Addison-Wesley; Durfee, E., Montgomery, T., Coordination as distributed search in a hierarchical behavior space (1991) IEEE Trans. Syst., Man, Cybern., 21, pp. 1363-1378. , Nov; Szczerbicki, E., Acquisition of knowledge for autonomous cooperating agents (1993) IEEE Trans. Syst., Man, Cybern., 23, pp. 1302-1315. , Sept./Oct; Barber, K.S., Liu, T.H., Ramaswamy, S., Conflict detection during plan integration for multi-agent systems (2001) IEEE Trans. Syst., Man, Cybern. B, 31, pp. 616-628. , Aug; Billard, E., Lakshmivarahan, S., Learning in multi-level games with incomplete information - Part I (1999) IEEE Trans. Syst., Man, Cybern. B, 29, pp. 329-339. , June; Billard, E., Pasquale, J., Effects of delayed communication in dynamic group formation (1993) IEEE Trans. Syst., Man, Cybern., 23, pp. 1265-1275; Berbeek, K., Nowe, A., Colonies of learning automata (2002) IEEE Trans. Syst., Man, Cybern. B, 27, pp. 376-394. , June; Grades, A.R., Czarnecki, C., Design patterns for behavior-based robotics (2000) IEEE Trans. Syst., Man, Cybern. A, 30, pp. 36-41. , Jan; http://www.Use-CaseMaps.org, Use Case Maps Web Site [Online]. AvailableBuhr, R.J.A., Elammari, M., Gray, T., Mankovski, S., Applying use case maps to multi-agent systems: A feature interaction example (1998) Proc. 31st Annu. Hawaii Int. Conf. System Sciences, pp. 171-179; Buhr, R.J.A., Amyot, D., Elammari, M., Quesnel, D., Gray, T., Mankovski, S., High level, multi-agent prototypes from a scenario-path notation: A feature-interaction example (1998) Proc. 3rd Conf. Practical Application of Intelligent Agents and Multi-Agent Technology, pp. 277-295. , London, U.K; Mussbacher, G., Amyot, D., A collection of patterns for use case maps (2001) Proc. 1st Latin American Conf. Pattern Languages of Programming, pp. 57-87. , Rio de Janeiro, Brazil; Bordeleau, F., Corriveau, J., Selic, B., A scenario-based approach to hierarchical state machine design (2000) Proc. 3rd IEEE Int. Symp. Object-Oriented Real-Time Distributed Computing, pp. 78-85. , Newport Beach, CA; Petriu, D., Shousha, C., Jalnapurkar, A., Architecture-based performance analysis applied to a telecommunication system (2000) IEEE Trans. Software Eng., 26, pp. 1049-1065. , Nov; Siddiqui, K.H., Woodside, M., Performance-aware software development (PASD) using resource demand budgets (2002) Proc. 3rd Int. Workshop Software and Performance, pp. 275-287; Petriu, D., Woodside, M., Analysing software requirements specifications for performance (2002) Proc. 3rd Int. Workshop Software and Performance, pp. 1-9; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) A System of Patterns, , New York: Wiley; Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Reading, MA: Addison-Wesley; Larman, C., (2002) Applying UML and Patterns, , Englewood Cliffs, NJ: Prentice-Hall; Grand, M., (1998) Patterns in Java: A Catalog of Reusable Design Patterns Illustrated Using UML, , Reading, MA: Wiley; http://www.sce.carleton.ca/rads/, Layered Queueing Network Web Site [Online]. AvailableBillard, E., Riedmiller, A., Q-sim: A GUI for a queueing simulator using Tcl/Tk (1994) ACM Software Eng. Notes, 19 (4), pp. 82-85; Roth, J., Patterns of mobile interaction (2002) Personal and Ubiquitous Comput., 6, pp. 282-289. , Sept; Keller, R., Tessier, J., von Bochmann, G., A pattern system for network management interfaces (1998) Commun. ACM, 41, pp. 86-93. , Sept; Maturana, F., Norrie, D., Multi-agent mediator architecture for distributed manufacturing (1996) J. Intell. Manufact., 7, pp. 257-270; Beder, D.M., Romanovsky, A., Randell, B., Snow, C.R., Stroud, R.J., An application of fault tolerance patterns and coordinated atomic actions to a problem in railway scheduling (2000) ACM Operating Syst. Rev., 34, pp. 21-31. , Oct; Li, Y., Lu, J., SEIS++: A pattern language for seismic tools construction and integration (1999) AMC SIGPLAN Notices, 34, pp. 57-66. , Dec; Choy, M.C., Srinivasan, D., Cheu, R.L., Cooperative, hybrid agent architecture for real-time traffic signal control (2003) IEEE Trans. Syst., Man, Cybern. A, 33, pp. 597-607. , Sept; Chen, J., Resource allocation for cellular data services using multiagent schemes (2001) IEEE Trans. Syst., Man, Cybern. B, 31, pp. 864-869. , Dec; El-Osery, A.I., Burge, J., Jamshidi, M., Saba, A., Fathi, M., Akbarzadeh-T, M., V-lab - A virtual laboratory for autonomous agents - SLA-based learning controllers (2002) IEEE Trans. Syst., Man, Cybern. B, 32, pp. 791-803. , Dec; Matijasevic, M., Gracanin, D., Valavanis, K.P., Lovrek, I., A framework for multiuser distributed virtual environments (2002) IEEE Trans. Syst., Man, Cybern. B, 32, pp. 416-429. , Aug; Penner, R.R., Steinmetz, E.S., Model-based automation of the design of user interfaces to digital control systems (2002) IEEE Trans. Syst., Man, Cybern. A, 32, pp. 41-49. , Jan","Billard, E.A.; Dept. of Math and Computer Science, California State University, Hayward, CA 94542, United States; email: billard@csuhayward.edu",,,,,,,,10834419,,ITSCF,15462458,English,IEEE Trans Syst Man Cybern Part B Cybern,Article,Scopus,2-s2.0-3442885388,,
,,1,"Lewis, T.L., Rosson, M.B., Pérez-Quiñones, M.",What do the experts say? Teaching introductory design from an expert's perspective,2004,Proceedings of the SIGCSE Technical Symposium on Computer Science Education,,,,296,300,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-2642520582&partnerID=40&md5=c090680220955582dc0d829ead674eeb,"Virginia Polytech. Inst./Stt. Univ., Department of Computer Science, Blacksburg, VA, United States; Pennsylvania State University, Dept. of Info. Sci. and Technology, University Park, PA, United States","Lewis, T.L., Virginia Polytech. Inst./Stt. Univ., Department of Computer Science, Blacksburg, VA, United States; Rosson, M.B., Pennsylvania State University, Dept. of Info. Sci. and Technology, University Park, PA, United States; Pérez-Quiñones, M., Virginia Polytech. Inst./Stt. Univ., Department of Computer Science, Blacksburg, VA, United States","This study examined ways to improve students' chances of success learning design concepts through the use of Object-Oriented Programming and Design (OOP&D) patterns by examining potentially effective ways to teach such patterns to novice programmers. Using hierarchical tree, complete-linkage analysis to survey a group of design experts, the study developed an order in which those experts believed thirty fundamental OOP&D patterns should be taught to optimize effective student learning. Once that basic order was identified, it became possible to divide the patterns into six sequential phases of patterns instruction to allow both maximal teaching and learning. Although the study did not present a conclusively effective approach for OOP&D teaching, it did provide information essential for future sequential phase patterns research.",CS1; Design Patterns; Object-Oriented Programming; Pedagogy,Design patterns; Pedagogy; Student learning; Learning systems; Object oriented programming; Statistical methods; Students; Teaching; Computer science,,,,,,"ACM computing curricula (2001) Computing Curricula 2001 Final Report, , Joint Task Force on Computing Curricula - IEEE and ACM; Astrachan, O., OO overkill: When simple is better than not (2001) SIGCSE 2001, , Charlotte, NC; Alexander, C., (1979) The Timeless Way of Building, , Oxford University Press, New York, NY; Bagert, D., Teaching the object-oriented paradigm, providing a complete picture is essential (1996) Position Paper for OOPSLA '96 Workshop ""Teaching and Learning Design in the First Academic Year"", , San Jose, CA; Beck, K., (1997) Smalltalk Best Practice Patterns, , Prentice Hall, New York; Bergin, J., (1999), http://csis.pcice.edu/~bergin/patterns/Booch, G., (1994) Object-oriented Analysis and Design with Applications Second Edition, , Benjamin/Cummings, Redwood City, CA; Buck, D., Stucki, D., Design early considered harmful: Graduated exposure to complexity and structure based on levels of cognitive development (1990) SIGCSE 2000, pp. 75-79. , Austin, TX; Coplien, J., A patterns definition (1998) The Patterns Home Page, , http://hillside.net/pattems/definition.html, Bell - Laboratories; Fowler, M., UML distilled (1997) Applying the Standard Object Modeling Language, , Upper Saddle, NJ: Addison-Wesley; Gabriel, R., (2000) Simply Understood Code, , http://c2.com/cgi/wiki7SimplyUnderstood; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison Wesley, Reading, MA; Kafura, D., (1998) Object-oriented Software Design and Construction with C++, , Upper Saddle River, NJ: Prentice Hall; Larman, G., (1997) Applying UML and Patterns, , Upper Saddle River, NJ: Prentice Hall; Lee, R., Tepfenhart, W., (1997) UML and C++: A Practical Guide to Object-oriented Development, , Upper Saddle River, NJ: Prentice Hall; Martin, S., Cluster analysis for web site organization Internetworking, , ITG Publication, Dec 1993:2.3; Wallingford, E., Toward a first course on object-oriented patterns (1996) SIGCSE, , Philadelphia, PA; http://zing.ncsl.nist.gov/WebTools/WebCAT/overview.htmlStatistics, Electronic TextBook, , http://www.statsoftinc.com/textbook/stcluan.html; http://survey.vt.eduWallingford, E., Using a pattern language to evaluate design (1998) OOPSLA '98 Workshop on Evaluting Object-oriented Design; Wallingford, E., (1998) Using Patterns in the Classroom, , http://www.cs.uni.edu/~wallingf/patterns/elementary; http://zing.ncsl.nist.gov/WebTools/WebCAT/overview.html","Lewis, T.L.; Virginia Polytech. Inst./Stt. Univ., Department of Computer Science, Blacksburg, VA, United States; email: tracyl@vt.edu",,ACM;ACM SIGCSE,,Proceedings of the Thirty-Fifth SIGCSE Technical Symposium on Computer Science Education,3 March 2004 through 7 March 2004,"Norfolk, VA",63065,,1581137982,9781581137989,,,English,Proc. SIGSCE Techn. Symp. Comput. Sci. Educ.,Conference Paper,Scopus,2-s2.0-2642520582,
,,4,"Dong, J.",Adding pattern related information in structural and behavioral diagrams,2004,Information and Software Technology,46,5 SPEC. ISS.,,293,300,,6,10.1016/j.infsof.2003.09.003,http://www.scopus.com/inward/record.url?eid=2-s2.0-1142263494&partnerID=40&md5=504360c49d7292815e38fca0024ed7e6,"Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Dong, J., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Design patterns capture the distilled experience of expert designers. The compositions of design patterns may reuse design experience and solve a set of problems. Design patterns and their compositions are usually modeled using unified modeling language (UML). When a design pattern is applied or composed with other patterns, the pattern-related information may be lost because UML does not track this information. Thus, it is hard for a designer to identify a design pattern when it is applied or composed. The benefits of design patterns are compromised because the designers cannot communicate with each other in terms of the design patterns they use when the design patterns are applied or composed. In this paper, we present notations to explicitly represent the structural and behavioral aspects of each pattern in the applications and compositions of design patterns. The notations allow us to maintain pattern-related information in class and collaboration diagrams. Thus, a design pattern is identifiable and traceable from its application and composition with others in these diagrams. A case study is used to illustrate our approach. © 2003 Elsevier B.V. All rights reserved.",Design patterns; Extensions; Notations; Unified modeling language,Decision making; Problem solving; Semantics; Software engineering; Design patterns; Extensions; Notations; Unified modeling language (UML); Computer programming languages,,,,,,"Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison-Wesley; Dong, J., Alencar, P., Cowan, D., Ensuring structure and behavior correctness in design composition (2000) Proceedings of the 7th Annual IEEE International Conference and Workshop on Engineering of Computer Based Systems (ECBS), pp. 279-287. , Edinburgh UK April; D'Souza, D., Sane, A., Birchenough, A., First class extensibility for UML-packaging of profiles, stereotypes, patterns (1999) LNCS, 1723, pp. 265-277. , Proceedings of the Second International Conference on the Unified Modeling Language (UML), Springer; Fontoura, M., Pree, W., Rumpe, B., UML-F: A modeling language for object-oriented frameworks (2000) Proceedingsof the 14th European Conference on Object-oriented Programming (ECOOP), pp. 63-82. , July; Gamma, E., Helm, R., Johnson, R., (1995) Design Patterns, Elements of Reusable Object-oriented Software, , Addison-Wesley; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of the 12th European Conference on Object-oriented Programming (ECOOP), pp. 114-134. , July; Rossi, G., Schwabe, D., Garrido, A., Design reuse in hypermedia applications development (1997) Proceedings of the ACM International Conference on Hypertext, pp. 57-66. , April; Vlissides, J., Composite Design Pattern (They Aren't What You Think) (1998) C++ Report, , June; Vlissides, J., Notation, Notation, Notation (1998) C++ Report, , April","Dong, J.; Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; email: jdong@utdallas.edu",,,,,,,,9505849,,ISOTE,,English,Inf Software Technol,Conference Paper,Scopus,2-s2.0-1142263494,,
,,v,"Fabry, J., Mens, T.",Language-independent detection of object-oriented design patterns,2004,"Computer Languages, Systems and Structures",30,1-2,,21,33,,28,10.1016/j.cl.2003.09.002,http://www.scopus.com/inward/record.url?eid=2-s2.0-1542363370&partnerID=40&md5=ac6b84cf76f3e186c629871e6a416969,"Programming Technology Laboratory, Vrije Universiteit Brussel, Pleinlaan 2, Brussel 1050, Belgium; Service de Génie Logiciel, Université de Mons-Hainaut, 6, Avenue du Champs de Mars, Mons 7000, Belgium","Fabry, J., Programming Technology Laboratory, Vrije Universiteit Brussel, Pleinlaan 2, Brussel 1050, Belgium; Mens, T., Service de Génie Logiciel, Université de Mons-Hainaut, 6, Avenue du Champs de Mars, Mons 7000, Belgium","This paper shows that one can reason at a meta level about the structure of object-oriented source code in a language-independent way. To achieve this, we propose a language-independent meta-level interface to extract complex information about the structure of the source code. This approach is validated by defining a set of logic queries to detect object-oriented best practice patterns and design patterns in two different languages: Smalltalk and Java. The queries were applied to two similar medium-sized applications available for each language, and the results were confirmed by manually investigating the source code and available documentation. © 2003 Elsevier Ltd. All rights reserved.",Best practice patterns; Design patterns; Java; Logic meta-programming; Object-oriented programming; Smalltalk,Codes (symbols); Information analysis; Java programming language; Program documentation; Syntactics; Trees (mathematics); Design patterns; Logic meta-programming; Smalltalk; Object oriented programming,,,,,,"Mens, K., Michiels, I., Wuyts, R., Supporting software development through declaratively codified programming patterns (2002) Journal on Expert Systems with Applications, (23), pp. 405-431; Tichelaar, S., Ducasse, S., Demeyer, S., Nierstrasz, O., A meta-model for language-independent refactoring (2000) Proceedings of the International Symposium on Principles of Software Evolution, pp. 157-169. , Silver Spring, MD; IEEE Computer Society Press; Van Emden, E., Moonen, L., Java quality assurance by detecting code smells (2002) Proceedings of the 9th Working Conference on Reverse Engineering, pp. 97-107. , Silver Spring, MD: IEEE Computer Society Press; October; Tourwé, T., Mens, T., Identifying refactoring opportunities using logic meta programming (2003) Proceedings of the 7th European Conference on Software Maintenance and Re-engineering (CSMR 2003), pp. 91-100. , Silver Spring, MD: IEEE Computer Society Press; March; Ducasse, S., Rieger, M., Demeyer, S., A language independent approach for detecting duplicated code (1999) Proceedings of the International Conference on Software Maintenance, pp. 109-118. , Hongji Yang, Lee White, editors, Oxford, UK: IEEE Computer Society; September; De Volder, K., (1998) Type-oriented Logic Meta Programming, , PhD thesis, Department of Computer Science, Vrije Universiteit Brussel, Belgium; Wuyts, R., (2001) A Logic Meta-programming Approach to Support the Co-evolution of Object-oriented Design and Implementation, , PhD thesis, Department of Computer Science, Vrije Universiteit Brussel, January; Beck, K., (1997) Smalltalk Best Practice Patterns, , Englewood Cliffs, NJ: Prentice-Hall; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns: Elements of Reusable Object-oriented Languages and Systems, , Reading, MA: Addisson-Wesley; Brown, K., (1996) Design Reverse-engineering and Automated Design Pattern Detection in Smalltalk, , Master's thesis, North Carolina State University, TR-96-07; Cristoforetti, L., Antoniol, G., Fiutem, R., Using metrics to identify design patterns in object-oriented software (1998) Proceedings of Metrics, pp. 23-34. , November 1998. Bethesda, USA; Prechelt, L., Kramer, C., Functionality versus practicality: Employing existing tools for recovering structural design patterns (1998) Universal Computer Science, 4 (12), pp. 866-883; Niere, J., Schäfer, W., Wadsack, J.P., Wendehals, L., Welsh, J., Towards pattern-based design recovery (2002) Proceedings of the International Conference on Software Engineering (ICSE), pp. 338-348. , Silver Spring, MD: IEEE Computer Society Press; May; Roberts, D., Brant, J., Johnson, R.E., A refactoring tool for Smalltalk (1997) Theory and Practice of Object Systems, 3 (4), pp. 253-263; Johnson, R.E., Documenting frameworks using patterns (1992) ACM SIGPLAN Notices, 27 (10), pp. 63-76; Paul, S., Prakash, A., A framework for source code search using program patterns (1994) Transactions on Software Engineering, 20 (6), pp. 463-475; Kontogiannis, K., Evaluation experiments on the detection of programming patterns using software metrics (1997) Proceedings of the Working Conference Reverse Engineering, pp. 44-54. , Silver Spring, MD: IEEE Computer Society Press; Kramer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the Working Conference Reverse Engineering, pp. 208-215. , Monterey, CA, November; Rapicault, P., Blay-Fornarino, M., Pinna-Dery, A.-M., Ducasse, S., Dynamic type inference to support object-oriented reengineering in Smalltalk (1998) Lecture Notes in Computer Science, 1543, pp. 76-77. , S. Demeyer, & J. Bosch. ECOOP 1998 Workshop Reader, Berlin: Springer","Fabry, J.; Programming Technology Laboratory, Vrije Universiteit Brussel, Pleinlaan 2, Brussel 1050, Belgium; email: johan.fabry@vub.ac.be",,,,,,,,14778424,,,,English,Comput. Lang. Syst. Struct.,Article,Scopus,2-s2.0-1542363370,,
,,3,"Xu, X.-L., Wang, L.-Y., Zhou, H.",UML profile for framework modeling,2004,Journal of Zhejiang University: Science,5,1,,92,98,,1,10.1631/jzus.2004.0092,http://www.scopus.com/inward/record.url?eid=2-s2.0-2342429108&partnerID=40&md5=4d742b11f499a0abff27beb9782fd730,"Dept. of Instrum. Sci. and Eng., Coll. of Biomed. Eng., Zhejiang Univ., Hangzhou 310027, China","Xu, X.-L., Dept. of Instrum. Sci. and Eng., Coll. of Biomed. Eng., Zhejiang Univ., Hangzhou 310027, China; Wang, L.-Y., Dept. of Instrum. Sci. and Eng., Coll. of Biomed. Eng., Zhejiang Univ., Hangzhou 310027, China; Zhou, H., Dept. of Instrum. Sci. and Eng., Coll. of Biomed. Eng., Zhejiang Univ., Hangzhou 310027, China","The current standard Unified Modeling Language (UML) could not model framework flexibility and extendibility adequately due to lack of appropriate constructs to distinguish framework hot-spots from kernel elements. A new UML profile that may customize UML for framework modeling was presented using the extension mechanisms of UML, providing a group of UML extensions to meet the needs of framework modeling. In this profile, the extended class diagrams and sequence diagrams were defined to straightforwardly identify the hot-spots and describe their instantiation restrictions. A transformation model based on design patterns was also put forward, such that the profile based framework design diagrams could be automatically mapped to the corresponding implementation diagrams. It was proved that the presented profile makes framework modeling more straightforwardly and therefore easier to understand and instantiate.",Design patterns; Hot-spots; Object-oriented frameworks; UML profile; Unified Modeling Language (UML),"Computer programming languages; Computer simulation; Mathematical models; Object oriented programming; Design patterns; Framework modeling; Hot spots; Object oriented frameworks; UML profiles; Unified modeling languages; Computer aided software engineering; algorithm; article; computer language; computer program; computer simulation; data base; evaluation; factual database; information retrieval; methodology; theoretical model; Algorithms; Computer Simulation; Database Management Systems; Databases, Factual; Information Storage and Retrieval; Models, Theoretical; Programming Languages; Software; Software Design; Software Validation",,,,,,"Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison Wesley, Boston, USA; Coplien, J., (1999) Multi-Paradigm Design for C++, , Addison-Wesley; Deutsch, L.P., Design reuse and frameworks in the smalltalk-80 system (1989) Software Reusability, 2. , Biggerstaff T.J. and Perlis A.J.(ed.), ACM Press; D'Souza, D., Sane, A., Birchenough, A., First class extensibility for UML-packaging of pro les, stereotypes, patterns (1999) Proceedings of the Second International Conference on the Unified Modeling Language (UML), LNCS1723, pp. 265-277. , Springer-Verlag; Fayad, M., Schmidt, D.C., Object-oriented application frameworks (1997) Communications of the ACM, 40 (10), pp. 32-38; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns-Elements of Reusable Object Oriented Software, , Addison Wesley, Boston, USA; Hakala, M., Hautamaki, J., Koskimies, K., Paakki, J., Viljamaa, A., Viljamma, J., Annotating reusable software architectures with specialization patterns (2001) IEEE/IFIP Conference on Software Architecture (WICSA'01), pp. 171-180. , Amsterdam, Netherlands; Johnson, R.E., Foote, B., Designing reusable classes (1988) Journal of Object-Oriented Programming, 1 (2); Markiewicz, M.E., Lucena, C.J.P., Object oriented framework development (2001) ACM Crossroads Student Magazine, 7 (4), pp. 22-35; OMG unified modeling language specification (action semantics) V1.4 http://www.omg.org, OMGPree, W., Meta patterns - A means for capturing the essential of reusable object-oriented design (1994) Proceedings ECOOP'94; Pree, W., (1995) Design Patterns for Object-Oriented SoftWare Development, , Wokingham: Addison-Wesley/ACM Press","Xu, X.-L.; Dept. of Instrum. Sci. and Eng., Coll. of Biomed. Eng., Zhejiang Univ., Hangzhou 310027, China; email: zjuxxl@sohu.com",,,,,,,,10093095,,JZUSF,14663859,English,J Zhejiang Univ: Sci,Article,Scopus,2-s2.0-2342429108,,
,,3,"Braga, R.T.V., Masiero, P.C.",Finding frameworks hot spots in pattern languages,2004,Journal of Object Technology,3,1,,123,142,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-2942744539&partnerID=40&md5=25e82f448f7636a074b636d0cd65bea8,"Inst. de Cie. Matemat./de Comp., Universidade de São Paulo, Brazil","Braga, R.T.V., Inst. de Cie. Matemat./de Comp., Universidade de São Paulo, Brazil; Masiero, P.C., Inst. de Cie. Matemat./de Comp., Universidade de São Paulo, Brazil","An important issue that contributes to the complexity of object-oriented framework development is the identification of its hot spots, i.e., the framework parts that must be kept flexible, as they are specific of individual systems. A process for identification of hot spots in an analysis pattern language is proposed. Several types of hot spots are identifiable from information presented in the elements of each pattern of the pattern language, making possible to define a process to sistematize this task. An example illustrates the hot spots identification based on a pattern language for business resource management.",,Abstracting; Computer aided software engineering; Computer architecture; Computer programming languages; Computer software reusability; Information management; Information science; Structured programming; Design patterns; Frameworks; Iteration cycles; Pattern languages; Object oriented programming,,,,,,"Aarsten, A., Brugali, D., Menga, G., (2000) A CIM Framework and Pattern Language, pp. 21-42. , [Aarsten et al., 2000]. Domain-Specific Application Frameworks: Frameworks Experience by Industry, M. Fayad, R. Johnson, -John Willey and Sons; Boyd, L., (1998) Business Patterns of Association Objects, pp. 395-408. , [Boyd, 1998]. Addison-Wesley; Braga, R.T.V., Germano, F.S.R., Masiero, P.C., A pattern language for business resource management (1999) 6th Pattern Languages of Programs Conference (PLoP'99), , [Braga et al., 1999], Monticello - IL, USA; Braga, R.T.V., Masiero, P.C., GREN-Wizard: A tool to instantiate the GREN framework (2002) Proceedings of the Tools Session of the 16th Simposio Brasileiro de Engenharia de Software (SBES 2002), pp. 408-413. , [Braga and Masiero, 2002a], Gramado-RS; Braga, R.T.V., Masiero, P.C., A process for framework construction based on a pattern language (2002) Proceedings of the 26th Annual International Computer Software and Applications Conference (COMPSAC), pp. 615-620. , [Braga and Masiero, 2002b], IEEE Computer Society, Oxford-England; Braga, R.T.V., Masiero, P.C., The role of pattern languages in the instantiation of object-oriented frameworks (2002) Lecture Notes on Computer Science, pp. 122-131. , [Braga and Masiero, 2002c], 2426-Advances in Object-Oriented Information Systems; Braga, R.T.V., Masiero, P.C., Building a wizard for framework instantiation based on a pattern language (2003) Lecture Notes on Computer Science, pp. 95-106. , [Braga and Masiero, 2003], 2817-Object-Oriented Information Systems, 2003; Brown, K., Whitenack, B.G., (1996) Crossing Chasms: A Pattern Language for Object-RDBMS Integration, The Static Patterns, pp. 227-238. , [Brown and Whitenack, 1996]. Addison-Wesley. in J. Vlissides and J. Coplien and N. Kerth (eds.)- Pattern Languages of Program Design 2; Brugali, D., Menga, G., Frameworks and pattern languages: An intriguing relationship (1999) ACM Computing Surveys, 32 (1), pp. 2-7. , [Brugali and Menga, 1999]; Brugali, D., Menga, G., Aarsten, A., (2000) A Case Study for Flexible Manufacuring Systems, pp. 85-99. , [Brugali et al., 2000]. Domain-Specific Application Frameworks: Frameworks Experience by Industry, M. Fayad, R. Johnson, -John Willey and Sons; Coad, P., North, D., Mayfield, M., (1997) Object Models: Strategies, Patterns and Applications, , [Coad et al., 1997]. Yourdon Press, 2 edition; Coplien, J.O., (1998) Software Design Patterns: Common Questions and Answers, pp. 311-320. , [Coplien, 1998]. Cambridge University Press. in L. Rising - The Patterns Handbook: Techniques, Strategies, and Applications; Fayad, M., Schmidt, D.C., Object-oriented application frameworks (1997) Communications of the ACM, 40 (10). , [Fayad and Schmidt, 1997]; Fontoura, M., Pree, W., Rumpe, B., (2001) The UML Profile for Framework Architectures, , [Fontoura et al., 2001]. Addison-Wesley; Fowler, M., (1997) Analysis Patterns, , [Fowler, 1997]. Addison-Wesley; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , [Gamma et al., 1995]. Addison Wesley; Griss, M.L., Favaro, J., D'Alessandro, M., Integrating feature modeling with the RSEB (1998) Fifth International Conference on Software Reuse, pp. 78-85. , [Griss et al., 1998], IEEE Computer Society, Los Alamitos, CA, USA; Bosch, J., Molin, P., Mattsson, M., Bengtsson, P., Fayad, M., (1999) Framework Problem and Experiences, pp. 55-82. , [J. Bosch and Fayad, 1999]. Building Application Frameworks: Object-Oriented Foundations of Framework Design, M. Fayad, R. Johnson, D. Schmidt, - John Willey and Sons; Johnson, R., Foote, B., Designing reusable classes (1988) Journal of Object Oriented Programming, 1 (2), pp. 22-35. , [Johnson and Foote, 1988]; Johnson, R.E., Documenting frameworks using patterns (1992) OOPSLA '92, pp. 63-76. , [Johnson, 1992]; Johnson, R.E., (1996) Transactions and Accounts, pp. 239-249. , [Johnson, 1996]. Addison-Wesley. in VLISSIDES, J.; COPLIEN, J.; KERTH, N. (eds.) Pattern Languages of Program Design 2; Johnson, R.E., Woolf, B., (1998) Type Object, pp. 47-65. , [Johnson and Woolf, 1998]. Addison-Wesley. in Martin, R.C.; Riehle, D.; Buschmann, F. Pattern Languages of Program Design 3; Meszaros, G., (1995) A Pattern Language for Improving the Capacity of Reactive Systems, pp. 575-591. , [Meszaros, 1995]. Addison-Wesley. in J. Coplien and D. Schmidt (eds.) - Pattern Languages of Program Design; Pree, W., (1995) Design Patterns for Object-oriented Software Development, , [Pree, 1995]. Addison-Wesley; Pree, W., (1999) Hot-spot-driven Development, pp. 379-393. , [Pree, 1999]. Building Application Frameworks: Object-Oriented Foundations of Framework Design, M. Fayad, R. Johnson, D. Schmidt, -John Willey and Sons; Roberts, D., Johnson, R., (1998) Evolving Frameworks: A Pattern Language for Developing Object-oriented Frameworks, pp. 471-486. , [Roberts and Johnson, 1998]. Pattern Languages of Program Design 3, Martin, R.C., Riehle, D., Buschmann, F. - Addison-Wesley; Schmid, H.A., Systematic framework design by generalization (1997) Communications of the ACM, 40 (10), pp. 48-51. , [Schmid, 1997]; Schmid, H.A., (1999) Framework Design by Systematic Generalization, pp. 353-378. , [Schmid, 1999]. Building Application Frameworks: Object-Oriented Foundations of Framework Design, M. Fayad, R. Johnson, D. Schmidt, -John Willey and Sons; Svahnberg, M., Gurp, J.V., Bosch, J., On the notion of variability in software product lines (2001) Proceedings of the Working IEEE/IFIP Conference on Software Architecture (WICSA '01), pp. 45-54. , [Svahnberg et al., 2001]. Amsterdam, The Netherlands","Braga, R.T.V.; Inst. de Cie. Matemat./de Comp., Universidade de São Paulo, Sao Paulo, Brazil; email: rtvb@icmc.usp.br",,,,,,,,16601769,,,,English,J. Object Technol.,Article,Scopus,2-s2.0-2942744539,,
,,v,"Mak, J.K.H., Choy, C.S.T., Lun, D.P.K.",Precise Specification to Compound Patterns with ExLePUS,2003,Proceedings - IEEE Computer Society's International Computer Software and Applications Conference,,,,440,445,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0345097571&partnerID=40&md5=c3829a93f30997ab3c8c17aabbf9a47b,"Hong Kong Polytechnic University, Department of Electronic Engineering, Hong Kong","Mak, J.K.H., Hong Kong Polytechnic University, Department of Electronic Engineering, Hong Kong; Choy, C.S.T., Hong Kong Polytechnic University, Department of Electronic Engineering, Hong Kong; Lun, D.P.K., Hong Kong Polytechnic University, Department of Electronic Engineering, Hong Kong","Prior research suggested modeling languages for precise specification of design pattern structures and behaviors. However, seldom has put effort on their integrations as well as their specifications. To provide a first class CASE support to the recognition, verification and application of design patterns as well as their compounds, a precise specification to their leitmotifs is critical. In this paper, we present the essentials of pattern integration and propose an extended version, we name it exLePUS, to a pattern specification language (LePUS) in order to support the specification of these essentials and thus compound patterns. A case study has illustrated how it is used a well-known compound pattern.",Compound Patterns; Design Patterns; ExLePUS; Formal Specification; LePUS,Compound patterns; Design patterns; Formal specifications; Computer simulation; Computer software; Formal languages; Object oriented programming; Software engineering,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns: Elements of Reusable Object-oriented Software (1995) Professional Computing Series, , Addison-Wesley, Reading, MA; Vlissides, J., Composite Design Patterns (They Aren't What You Think) (1998) C++ Report, , June; Vlissides, J., The Compound Without a Name (2000) Java Report, , November; Riehle, D., Composite Design Patterns (1997) Proceedings of 1997 Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'97), pp. 218-228. , ACM Press; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press, New York; Eden, A.H., (1999) Precise Specification of Design Patterns and Tool Support in Their Application, , PhD thesis, University of Tel Aviv; Florijn, G., Meijers, M., Winsen, P.V., Tool support for object-oriented patterns (1997) ECOOP'97 Proceedings, 1241, pp. 472-495. , Lecture Notes in Computer Science, Springer, June; Riehle, D., Gross, T., Role Model Based Framework Design and Integration (1998) Proceedings of 1998 Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'98), pp. 117-133. , ACM Press; Reenskaug, T., (1996) Working with Objects: The OOram Software Engineering Method, , Greenwich, Conn. Manning; Moore, R., Aranda, G., Formally Modelling Compound Design Patterns (2000) UNU/IIST Report No. 225, 225. , December; (1992) The Raise Specification Language, , Prentice Hall; Riehle, D., Describing and Compositing Patterns Using Role Diagrams (1996) Proceedings of the Ubilab Conference 1996, pp. 137-159; Barwise, J., (1976) Handbook of Mathematical Logic, pp. 4-56; Lauder, A., Kent, S., Precise Visual Specification of Design Patterns (1998) LNCS, 1445, pp. 114-134. , Proceeding ECOOP' 98, Springer Verlag; (1999) OMG Unified Modeling Language Specification, Version 1.3, UML RTF Proposed Final Revision, , UML RTF. OMG, June; Mapelsden, D., Hosking, J., Grundy, J., Design Pattern Modelling and Instantiation using DPML (2002) Proceeding TOOLS Pacific 2002, pp. 3-11; Sunyé, G., Guennec, A.L., Jézéquel, J.-M., Design Patterns Application in UML (2000) ECOOP' 2000, pp. 44-62. , June; Yacoub, S.M., Ammar, H.H., Pattern-Oriented Analysis and Design (POAD): A Structural Composition Approach to Clue Design Patterns (2000) Proceedings of the 34 th International Conference on Technology of Object-oriented Languages and Systems, pp. 273-282; Lea, D., Alexander, C., An Introduction for Object-Oriented Designers (1998) The Patterns Handbook: Techniques, Strategies, and Applications, pp. 407-422. , Cambridge University Press; Vlissides, J., Pluggable Factory, Part I (1998) C++ Report, , Nov-Dec","Hong Kong Polytechnic University, Department of Electronic EngineeringHong Kong; email: jeffreym@eie.polyu.edu.hk",,IEEE Computer Society,,"Proceedings: 27th Annual International Computer Software and Applications Conference, COMPSAC 2003",3 November 2003 through 6 November 2003,"Dallas, TX",61998,7303157,,PSICD,,English,Proc IEEE Comput Soc Int Comput Software Appl Conf,Conference Paper,Scopus,2-s2.0-0345097571,,
,,4,"Dong, J., Yang, S.",Visualizing design patterns with a UML profile,2003,"Proceedings - 2003 IEEE Symposium on Human Centric Computing Languages and Environments, HCC 2003",,,1260215,123,125,,12,10.1109/HCC.2003.1260215,http://www.scopus.com/inward/record.url?eid=2-s2.0-84878356004&partnerID=40&md5=fc45c07c3e2f9a511805e682ec370d1d,"Department of Computer Science, Universiry of Texas at Dallas, Richardson, TX 75083, United States","Dong, J., Department of Computer Science, Universiry of Texas at Dallas, Richardson, TX 75083, United States; Yang, S., Department of Computer Science, Universiry of Texas at Dallas, Richardson, TX 75083, United States","In this paper, we present a UML profile which defines new stereotypes, tagged values and constraints for visualizing design patterns in UML diagrams. These new stereotypes and tagged values are attached to a modeling element to explicitly represent the role the modeling element plays in a design pattern so that the user can identify the pattern in a UML diagram. © 2003 IEEE.",,Design Patterns; Modeling elements; UML diagrams; Uml profiles,,,,,,"Booch, G., Rumhaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison-Wesley; Dong, J., Yang, S., (2003) Visualizing Design Patterns with a UML Profile, , Technical Report UTDCS-11-03, Computer Science Department, University of Texas at Dallas; Dong, J., Zhang, K., Design Pattern Compositions in UML (2003) Software Visualization - From Theory to Practice, pp. 287-308. , Kluwer Academic Publishers; Fontoura, M., Pree, W., Rumpe, B., UML-F: A Modeling Language for Object-Oriented Frameworks (2000) Proceedings of the ECOOP, pp. 63-82. , July; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Pattern, Elements of Reusable Object-Oriented Software, , Addison-Wesley Publishing Company; Kande, M.M., Strohmeier, A., Towards a UML Profile for Software Architecture Descriptions (2000) LNCS, 1939, pp. 513-527. , Proceedings of the UML, Springer-Verlag; Keller, R., Schauer, R., Robitalille, S., Page, P., Pattern-Based Reverse-Engineering of Design Components (1999) Proceedings of the 21st ICSE, pp. 226-235. , May; Mapdlsden, D., Hosking, J., Grundy, J., Design Pattern Modelling and Instantiation Using DPML Proceedings of the 40th International Conference of Object-Oriented Languages and Systems (TOOLS Pacific), 2002; Medvidovic, N., Rosenblum, D.S., Redmiles, D.F., Robbins, J.E., Modeling Software Architectures in the Unified Modeling Language (2002) ACM Trans. on Software Engineering and Methodology, 11 (1), pp. 2-57. , January; Vlissides, J., Notation, Notation, Notation (1998) C++ Report, , April; Wagner, G., A UML Profile for Agent-Oriented Modeling Proceedings of the 3rd International Workshop on Agent-Oriented Software Engineering, Bologna, Italy, July 2002; Warmer, J.B., Kleppe, A.G., (1998) The Object Constraint Language: Precise Modeling with UML, , Addison-Wesley","Department of Computer Science, Universiry of Texas at Dallas, Richardson, TX 75083, United States",,IEEE Computer Society;US National Science Foundation;Microsoft Research;Microsoft New Zealand;University of Auckland,,"2003 IEEE Symposium on Human Centric Computing Languages and Environments, HCC 2003",28 October 2003 through 31 October 2003,Auckland,97211,,780382250,9780780382251,,,English,"Proc. - IEEE Symp. Hum. Cent. Comput. Lang. Environ., HCC",Conference Paper,Scopus,2-s2.0-84878356004,
,,4,"Mak, J.K.-H., Choy, C.S.-T., Lun, D.P.K.",Specification support to the synergy of compound design patterns,2003,IASTED International Multi-Conference on Applied Informatics,21,,,973,979,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-1442277760&partnerID=40&md5=36ab80a0c3cfc8a5b29c2cea0b7d974c,"Department of Electronic Engineering, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong; Multimedia Innovation Centre, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong","Mak, J.K.-H., Department of Electronic Engineering, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong; Choy, C.S.-T., Multimedia Innovation Centre, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong; Lun, D.P.K., Department of Electronic Engineering, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong","A combination of patterns is worth to be documented as a compound pattern if the way they combine is found recurrent for a general design problem. Such recurrent way of combination forms a synergy among those combining patterns. They are best described in terms of their constituent patterns. However, few of the previously suggested pattern specification languages allow the specification to such synergy. Those who claimed support are also limited to a particular kind of them. Specifying the synergy of compound patterns in terms of constituent patterns not only retains the benefits recognized by the pattern community, it also provides a formal basis for the research in quality analysis of pattern combination and the development of recognition mechanism for compound patterns. In this paper, we identify the types of combinations that appeared in compound patterns and the criteria to specify them. A specification language, exLePUS, which extended from LePUS, is also proposed based on these criteria. ExLePUS allows precise specification to the synergy of compound patterns without losing the genericity offered by the constituent patterns.",Design patterns; LePUS; Precise specification,Automation; Communication; Computer aided software engineering; Computer programming languages; Computer simulation; Pattern recognition; Synchronization; Design patterns; LePUS; Precise specification; Object oriented programming,,,,,,"Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Professional Computing Series. Addison-Wesley, Reading, MA; Saeki, M., Behavioral Specification of GoF Design Patterns with LOTOS (2000) Proc. 7th Asia-Pacific Software Engineering Conference, pp. 408-415; Martin, R., Riehle, D., Buschmann, F., (1998) Pattern Languages of Program Design. Vol3, 3. , Addison-Wesley; Vlissides, J., Composite Design Patterns (They Aren't What You Think) (1998) C++ Report, , June; Eden, A.H., (1999) Precise Specification of Design Patterns and Tool Support in Their Application, , PhD thesis (University of Tel Aviv); Aranda, G., Moore, R., Formally Modelling Compound Design Patterns (2000) UNU/IIST Report No. 225, 225. , December; Riehle, D., Composite Design Patterns (1997) Proc. 1997 Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'97), pp. 218-228. , ACM Press; Hoydalsvik, G.M., Holm, J.H., Dynamic Modeling in OORAM (1993) Proc. OOPSLA'93 in Workshop at 8th Annual Conf. on Object-oriented Programming Systems, Languages, and Applications, , September; Riehle, D., Gross, T., Role Model Based Framework Design and Integration (1998) Proc. 1998 Conference on Object-oriented Programming Systems, Languages, and Applications (OOPSLA'98), pp. 117-133. , ACM Press; Barwise, J., (1976) Handbook of Mathematical Logic, pp. 4-56; Lea, D., Christopher Alexander: An Introduction for Object-Oriented Designers (1998) The Patterns Handbook: Techniques, Strategies, and Applications, , Cambridge University Press; McNatt, W.B., Bieman, J.M., Coupling of Design Patterns: Common Practices and Their Benefits (2001) Proc. 25th Annual International Conference on Computer Software and Applications, pp. 574-579; Yacoub, S.M., Ammar, H.H., Pattern-Oriented Analysis and Design (POAD): A Structural Composition Approach to Clue Design Patterns (2000) Proc. 34th International Conference on Technology of Object-oriented Languages and Systems, pp. 273-282; Alexander, C., Ishikawa, S., Silverstein, M., (1977) A Pattern Language: Towns, Buildings, Construction, , Oxford University Press, N.Y; Ram, D.J., Sreekanth, M., Reuable Integrated Components of Inter-related Patterns for Software Development (2000) Proc. 7th Asia Pacific Software Engineering Conference, pp. 364-371; Vlissides, J., The Compound Without a Name (2000) Java Report, , November; Järvinen, H.-M., Kurki-Suonio, R., Sakkinen, M., Systä, K., Object-oriented specification of reactive systems (1990) Proc. of the 12th International Conference on Software Engineering, pp. 63-71. , IEEE CS Press","Mak, J.K.-H.; Department of Electronic Engineering, Hong Kong Polytechnic University, Hung Horn, Kowloon, Hong Kong",,International Assoc. of Sc. and Technol. for Developm. (IASTED),,21st IASTED International Multi-Conference on Applied Informatics,10 February 2003 through 13 February 2003,Innsbruck,62395,,889863415,,,English,IASTED Internat. Multi-Conf. Appl. Inform.,Conference Paper,Scopus,2-s2.0-1442277760,,
,,3,"Rosen, J.-P.",Experiences in developing a typical Web/database application,2003,Proceedings of the ACM SIGAda Annual International Conference; SIGAda,,,,38,48,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-9244222105&partnerID=40&md5=747c40184bd05f8c6a9582ea23f5abfa,"Adalog, 19-21 rue du 8 mai 1945, 94110 Arcueil, France","Rosen, J.-P., Adalog, 19-21 rue du 8 mai 1945, 94110 Arcueil, France","This paper describes Gesem, an application developed internally by Adalog for managing the registration to its training sessions. The application features a Web interface that uses AWS, an interface to the MySQL DBMS (over ODBC), and a local interface that uses GTK. The project explored various solutions, and identified a number of design patterns that made the development of new functionalities very straightforward. The experience gained in this project can be reused for any development in a similar environment. Copyright 2003 ACM.",Ada; AWS; Data-base; Design patterns; GTK; Web server,AWS; Design patterns; GTK; Web servers; Ada (programming language); Computer software reusability; Constraint theory; Database systems; General purpose computers; HTTP; Interfaces (computer); Logic design; Object oriented programming; Pascal (programming language); Servers; World Wide Web,,,,,,"http://libre.act-europe.fr/aws/http://www.gtk.orghttp://gnade.sourceforge.net/SQL. ISO/IEC 9075:1999http://www.adapower.com/reuse/iodbc.htmlManuel du Concepteur ESCADRE V5.0, , http://escadre.cad.etca.fr/ESCADRE/v5.0/documentation/s_design50/ s_design50.pdf, in French; http://escadre.cad.etca.fr, in FrenchSTART, Submission Tracking and Review Toolset, , http://www.softconf.com/START","Rosen, J.-P.; Adalog, 19-21 rue du 8 mai 1945, 94110 Arcueil, France; email: rosen@adalog.fr",,ACM SIGAda,,Proceedings of the ACM SIGAda Annual International Conference; SIGAda 2003: The Engineering of Correct and Reliable Software for Real-Time and Distributed Systems using Ada and Related Technologies,7 December 2004 through 11 December 2004,"San Diego, CA",64785,,,,,English,Proc. ACM SIGAda Annu. Int. Conf.,Conference Paper,Scopus,2-s2.0-9244222105,,
,,v,"Balanyi, Z., Ferenc, R.",Mining Design Patterns from C++ Source Code,2003,"IEEE International Conference on Software Maintenance, ICSM",,,,305,314,,58,10.1109/ICSM.2003.1235436,http://www.scopus.com/inward/record.url?eid=2-s2.0-77956611824&partnerID=40&md5=386ef54e75157a23d68d202dbf5bbfa5,,"Balanyi, Z.; Ferenc, R.","Design patterns are micro architectures that have proved to be reliable, easy-to implement and robust. There is a need in science and industry for recognizing these patterns. We present a new method for discovering design patterns in the source code. This method provides a precise specification of how the patterns work by describing basic structural information like inheritance, composition, aggregation and association, and as an indispensable part, by defining call delegation, object creation and operation overriding. We introduce a new XML-based language, the Design Pattern Markup Language (DPML), which provides an easy way for the users to modify pattern descriptions to suit their needs, or even to define their own patterns or just classes in certain relations they wish to find. We tested our method on four open-source systems, and found it effective in discovering design pattern instances.",ASG; C++; Columbus; Design Patterns; DPML; Schema; UML,Design patterns; Algorithms; Codes (symbols); Computer architecture; Java programming language; Open systems; Robustness (control systems); Object oriented programming,,,,,,"AllFusion Component Modeler (formerly Paradigm Plus) Homepage, , http://www3.ca.com/Solutions/Product.asp?ID=1003; Bansiya, J., DP++ is a tool for C++ programs (1998) Dr. Dobb's Journal, , June; Brown, K., (1996) Design Reverse-Engineering and Automated Design Pattern Detection in Smalltalk, , In Master's thesis. Department of Computer Engineering, North Carolina State University; Ferenc, R., Beszedes, Á., Data Exchange with the Columbus Schema for C++ (2002) Proceedings of the 6th European Conference on Software Maintenance and Reengineering (CSMR 2002), pp. 59-66. , IEEE Computer Society, Mar; Ferenc, R., Beszédes, Á., Tarkiainen, M., Gyimóthy, T., Columbus - Reverse Engineering Tool and Schema for C++ (2002) Proceedings of the 6th International Conference on Software Maintenance (ICSM 2002), pp. 172-181. , IEEE Computer Society, Oct; Ferenc, R., Gustafsson, J., Müller, L., Paakki, J., Recognizing Design Patterns in C++ programs with the integration of Columbus and Maisa (2002) Acta Cybernetica Journal Vol. 15, 15, pp. 669-682. , University of Szeged; http://www.frontendart.comAntoniol, R.F.G., Cristoforetti, L., Using Metrics to Identify Design Patterns in Object-Oriented Software (1998) Proceedings of the Fifth International Symposium on Software Metrics (METRICS98), pp. 23-34. , Nov; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley Pub Co; Guéhéneuc, Y.-G., Jussien, N., Using explanations for design patterns identification (2001) Proceedings of IJCAI Workshop on Modelling and Solving Problems with Constraints, pp. 57-64. , Aug; (1998) Programming Languages - C++, , ISO/IEC 14882:1998(E) edition; http://osa.software.ibm.com/developerworks/opensource/jikesKraemer, C., Prechelt, L., Design Recovery by Automated Search for Structural Design Patterns in Object-Oriented Software (1996) Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE'96), pp. 208-215. , Nov; http://www.mpi-sb.mpg.de/LEDA/leda.htmlMehlhorn, K., Naeher, S., (1997) Leda: A Platform for Combinatorial and Geometric Computing, , In Cambridge University Press; (1999) OMG Unified Modeling Language Specification, Version 1.3 Edition; Paakki, J., Karhinen, A., Gustafsson, J., Nenonen, L., Verkamo, A., Software metrics by architectural pattern mining (2000) Proceedings of the International Conference on Software: Theory and Practice (16th IFIP World Computer Congress), pp. 325-332; http://www.sun.com/software/star/staroffice(2000) Document Object Model (DOM); (2000) Extensible Markup Language (XML), Version 1.0 Edition",,,IEEE Computer Society Technical Counc. of Softw. Eng. (TCSE),,International Conference on Software Maintenance,22 September 2003 through 26 September 2003,"Amsterdam,",61705,,,CSFME,,English,IEEE Int. Conf. Softw. Maint. ICSM,Conference Paper,Scopus,2-s2.0-77956611824,,
,,3,"Hanenberg, S., Unland, R.",Parametric Introductions,2003,2nd International Conference on Aspect-Oriented Software Development,,,,80,89,,19,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0141427878&partnerID=40&md5=87756e809f4146d5be8bfdb78a11aafd,"Institute for Computer Science, University of Essen, 45117 Essen, Germany","Hanenberg, S., Institute for Computer Science, University of Essen, 45117 Essen, Germany; Unland, R., Institute for Computer Science, University of Essen, 45117 Essen, Germany","Aspect-oriented software development allows the programmer to identify and treat separately concerns that, subsequently, can be woven to different target applications. For this, aspect-oriented languages like AspectJ and Hyper/J provide mechanisms for defining and composing such crosscutting concerns. An introduction is a mechanism for defining certain static crosscutting concerns, i.e., concerns that affect the type of the application they are woven to. This paper discusses the implementations of introductions in AspectJ and Hyper/J and reveals their limitations by presenting typical examples of static crosscutting code that cannot be handled adequately by them. To solve these deficiencies we will present the concept of parametric introduction, which are introductions that rely on parameters that are evaluated during weave-time.",Aspect-Oriented Programming; Crosscutting; Design Patterns; Weaving,Static weaving; Computer applications; Computer programming languages; Computer software; Problem solving; Signal encoding; Software engineering,,,,,,"AspectJ Team: The AspectJ Programming Guide, , http://aspectj.org/doc/dist/progguide; Bracha, G., Odersky, M., Stoutamire, D., Wadler, P., Making the future safe for the past: Adding Genericity to the Java Programming Language (1998) OOPSLA 98, , Vancouver, October; Cannon, H., (1982) Flavors: A Non-hierarchical Approach to Object-oriented Programming, , Symbolics Inc; Clifton, C., Leavens, G., Chambers, C., Millstein, T., Multi-Java, Modular open classes and symmetric multiple dispatch for Java (2000) Proc. of OOPSLA, pp. 130-146; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Gottlob, G., Schrefl, M., Röck, B., Extending Object-Oriented Systems with Roles (1996) ACM Transactions on Information Systems, 14 (3). , July; Grand, M., (1998) Patterns in Java, 1. , John Wiley & Sons; Gybels, K., Using a logic language to express cross-cutting through dynamic joinpoints (2002) Second Workshop on Aspect-oriented Software Development of the GI, , Bonn, February 21-22; Hanenberg, S., Costanza, P., Connecting Aspects in AspectJ: Strategies vs. Patterns (2002) First Workshop on Aspects, Components, and Patterns for Infrastructure Software at AOSD, , Enschede, April; Hanenberg, S., Unland, R., Using and Reusing Aspects in AspectJ (2001) Workshop on Advanced Separation of Concerns in Object-oriented Systems at OOPSLA; Hanenberg, S., Unland, R., A Proposal For Classifying Tangled Code (2002) Second Workshop on Aspect-oriented Software Development of the GI, , Bonn, February 21-22; Hanenberg, S., Unland, R., Roles and Aspects: Similarities, Differences, and Synergetic Potential (2002) LNCS, 2425, pp. 507-521. , 8th International Conference on Object-Oriented Information Systems (OOIS), Springer-Verlag; Hannemann, J., Kiczales, G., Design Pattern Implementations in Java and AspectJ (2002) Proc. of OOPSLA, pp. 161-173; Harrison, W., Ossher, H., Subject-Oriented Programming (A Critique of Pure Objects) (1993) Proc. of OOPSLA, pp. 411-428; Hyper/J Homepage, , http://www.alphaworks.ibm.com/tech/Hyper/J, last access February 2001; Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C., Loingtier, J.-M., Irwing, J., Aspect-Oriented Programming (1997) LNCS, 1241, pp. 220-242. , Proceedings of ECOOP '97, Springer-Verlag; Kniesel, G., Objects Don't Migrate - Perspectives on Objects with Roles (1996) Technical Report, IAI-TR-96-11. , University of Bonn, April; Mikhajlov, L., Sekerinski, E., A Study of the Fragile Base Class Problem LNCS, 1445, pp. 355-382. , ECOOP '98, Springer-Verlag; Myers, A., Bank, J., Liskov, B., Parameterized types for Java (1997) Symposium on Principles of Programming Languages, pp. 132-145. , ACM; Neumann, G., Zdun, U., Enhancing object-based system composition through per-object mixins (1999) Proceedings of Asia-pacific Software Engineering Conference (APSEC), , Takamatsu, Japan, December; Ossher, H., Kaplan, M., Katz, A., Harrison, W., Kruskal, V., Specifying Subject-Oriented Composition (1996) TAPOS - Theory and Practice of Object Systems, 2 (3), pp. 179-202. , Wiley & Sons; Ossher, H., Tarr, P., Using multidimensional separation of concerns to (re)shape evolving software (2001) Communication of the ACM, 44 (10), pp. 43-50; Pernici, B., Objects with Roles (1990) SIGOIS Bulletin, 11 (2-3), pp. 205-215. , F.H. Lochovsky, R.B. Allen (Eds.), Proceedings of the Conference on Office Information Systems, ACM Press, New York; Steele, G., (1990) Common Lisp: The Language, 2nd Edition, , Digital Press; De Volder, K., D'Hondt, T., Aspect-Oriented Logic Meta Programming (1999) LNCS, 1616, pp. 250-272. , Proceedings of Meta-Level Architectures and Reflection, Second International Conference, Reflection'99, Springer-Verlag","Hanenberg, S.; Institute for Computer Science, University of Essen, 45117 Essen, Germany; email: shanenbe@cs.uni-essen.de",,,,2nd International Conference on Aspect-Oriented Software Development,17 March 2003 through 21 March 2003,"Boston, MA",61294,,1581136609,9781581136609,,,English,2nd Internat. Conf. on Aspect-Oriented Softw. Develop.,Conference Paper,Scopus,2-s2.0-0141427878,
,,4,"Dong, J.",Representing the applications and compositions of design patterns in UML,2003,Proceedings of the ACM Symposium on Applied Computing,,,,1092,1098,,2,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0037973002&partnerID=40&md5=0d1b7a484949168eb2dc02cf53d39ca7,"Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Dong, J., Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States","Design patterns capture the distilled experience of expert designers. The compositions of design patterns may reuse design experience and solve a set of problems. Design patterns and their compositions are usually modeled using UML. When a design pattern is applied or composed with other patterns, the pattern-related information may be lost because UML does not track this information. Thus, it is hard for a designer to identify a design pattern when it is applied or composed. The benefits of design patterns are compromised because the designers cannot communicate with each other in terms of the design patterns they use when the design patterns are applied or composed. In this paper, we present notations to explicitly represent each pattern in the applications and compositions of design patterns. The notations allow us to maintain pattern-related information. Thus, a design pattern is identifiable and traceable from its application and composition with others.",Design patterns; Extensions; Notations; UML,Algorithms; Object oriented programming; Problem solving; Software engineering; Design patterns; Computer science,,,,,,"Dong, J., Alencar, P., Cowan, D., Ensuring structure and behavior correctness in design composition (2000) Proceedings of the 7th Annual IEEE International Conference on Engineering of Computer Based Systems, pp. 279-287. , UK, April; D'Souza, D., Sane, A., Birchenough, A., First class extensibility for UML - Packaging of profiles, stereotypes, patterns (1999) Proceedings of the 2nd International Conference on UML, pp. 265-277. , Springer-Verlag, October; Fontoura, M., Free, W., Rumpe, B., UML-F: A modeling language for object-oriented frameworks (2000) Proceedings of the 14th European Conference on Object-Oriented Programming (ECOOP), pp. 63-82. , July; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-Oriented Software, , Addison-Wesley Publishing Company; (2001) Unified Modeling Language Specification, Version 1.4, , http://www.omg.org; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of European Conference on Object-Oriented Programming, pp. 114-134. , July; Rossi, G., Schwabe, D., Garrido, A., Design reuse in hypermedia applications development (1997) Proceedings of ACM International Conference on Hypertext, pp. 57-66; Vlissides, J., Composite design pattern (they aren't what you think) (1998) C++ Report, , June; Vlissides, J., Notation, notation, notation (1998) C++ Report, , April","Dong, J.; Department of Computer Science, University of Texas at Dallas, Richardson, TX 75083, United States; email: jdong@utdallas.edu",Lamont G.,ACM / SIGAPP,,Proceedings of the 2003 ACM Symposium on Applied Computing,9 March 2003 through 12 March 2003,"Melbourne, FL",61151,,,,,English,Proc ACM Symp Appl Computing,Conference Paper,Scopus,2-s2.0-0037973002,,
,,4,"Njovu, C., Ibrahim, M.T.",A design pattern approach to bitemporal data modeling,2003,"Proceedings - International Workshop on Database and Expert Systems Applications, DEXA",2003-January,,1232112,758,761,,,10.1109/DEXA.2003.1232112,http://www.scopus.com/inward/record.url?eid=2-s2.0-84942758820&partnerID=40&md5=101c0bcb462253a67ea7f054c7fd6b9b,"University of Greenwich, School of Computing and Mathematical Sciences, London, United Kingdom","Njovu, C., University of Greenwich, School of Computing and Mathematical Sciences, London, United Kingdom; Ibrahim, M.T., University of Greenwich, School of Computing and Mathematical Sciences, London, United Kingdom","The importance of patterns in constructing complex systems has long been recognised in other disciplines. In software engineering, for example, well-crafted object-oriented architectures contain several design patterns. Focusing on mechanisms of constructing software during system development can yield an architecture that is simpler, clearer and more understandable than if design patterns were ignored or not properly applied. In this paper, we propose a model that uses object-oriented design patterns to develop a core bitemporal conceptual model. We define three core design patterns that form a core bitemporal conceptual model of a typical bitemporal object. Our framework is known as the Bitemporal Object, State and Event Modelling Approach (BOSEMA) and the resulting core model is known as a Bitemporal Object, State and Event (BOSE) model. Using this approach, we demonstrate that we can enrich data modelling by using well known design patterns which can help designers to build complex models of bitemporal databases. © 2003 IEEE.",Computer architecture; Database systems; DC generators; Decision support systems; History; Object oriented modeling; Pattern recognition; Software engineering; Software systems; Transaction databases,Artificial intelligence; Computer architecture; Database systems; DC generators; Decision support systems; Design; Expert systems; History; Information analysis; Object-oriented databases; Pattern recognition; Pattern recognition systems; Software engineering; Conceptual model; Design Patterns; Object oriented design; Object oriented model; Object-oriented architectures; Software systems; System development; Transaction database; Object oriented programming,,,,,,"Croker, A., Clifford, J., (1993) The Historical Relational Data Model (HRDM) Revisited, pp. 6-27. , Chapter 1, Tansel et.al [3]; Clifford, J., Isokawitz, T., On the semantics of transaction and valid time in bitemporal databases Proceedings of the International Workshop on An Infrastructure for Temporal Databases, June 1993; Tansel, A.U., (1993) Temporal Databases : Theory, Design and Implementation; Jensen, C., Snodgrass, R., Semantics of time varying information (1996) Dept of Computer Science Technical Report TR, , University of Arizona; Snodgrass, R., (1995) Temporal Object-oriented Databases: A Critical Comparison, , Addison Wesley; Soo, M.D., Snodgrass, R., Jensen, C., Efficient evaluation of the valid time natural joing (1994) ICDE, pp. 282-292; Snodgrass, R., (1994) The TSQL2 Language Specification, , TSQL2 Committee; Tansel, A.U., SQLT: A temporal extension to SQL (1993) International Workshop on An Infrastructure for Temporal Databases, pp. 111-114. , June; Jensen, C., Snodgrasss, R., Soo, M.D., A consensus glossary of temporal database concepts (1994) ACM SIGMOD RECORD, pp. 52-63; Soukeras, S., King, P.J.H., Temporal databases: An event-oriented approach BNCOD 1994, pp. 38-54; Rob, P., Coronnel, C., (1993) Database Systems: Design, Implementation and Management, , Wadsworth publishing Company; Njovu, C., (2000), PhD Thesis,Cardiff University, SeptemberNjovu, C., Gray, A., A pragmatic Approach to bitemporal databases: Design, Implementation and visualisation (1999) South Africa Computer Journal, , November; Njovu, C., Lawson, E., Modelling temporal behaviour at the conceptual Entity Relationship Workshop on Dynamic Modelling and Design Transaformations, Los Angeles 1997; Jensen, C., Snodgrass, R., The Timecenter Publications, , University of Aalborg, Denmark; Gamma, E., Helm, R., Johnson, R., Vlissides, Design Patterns: Elements of reusable object-oriented software (1994) Addison Wesley Professional Computing Series",,,,Institute of Electrical and Electronics Engineers Inc.,"14th International Workshop on Database and Expert Systems Applications, DEXA 2003",1 September 2003 through 5 September 2003,,114051,15294188,769519938,,,English,Proc. Int. Workshop Database Expert Syst. Appl. DEXA,Conference Paper,Scopus,2-s2.0-84942758820,,
,,4,"Baudry, B., Le Traon, Y., Sunyé, G., Jézéquel, J.-M.",Measuring and improving design patterns testability,2003,Proceedings - International Software Metrics Symposium,2003-January,,1232455,50,59,,11,10.1109/METRIC.2003.1232455,http://www.scopus.com/inward/record.url?eid=2-s2.0-84943179710&partnerID=40&md5=2feedfeb8c4824393eac1595f900905b,"IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France; IRIN, Faculté des Sciences et Techniques de Nantes, Nantes Cedex 03, France","Baudry, B., IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France; Le Traon, Y., IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France; Sunyé, G., IRIN, Faculté des Sciences et Techniques de Nantes, Nantes Cedex 03, France; Jézéquel, J.-M., IRISA, Campus Universitaire de Beaulieu, Rennes Cedex, France","We address not only the question of testability measurement of OO designs but also focuses on its practicability. While detecting testability weaknesses (called testability anti-patterns) of an OO design is a crucial task, one cannot expect from a non-specialist to make the right improvements, without guidance or automation. To overcome this limitation, we investigate solutions integrated to the OO process. We focus on the design patterns as coherent subsets in the architecture, and we explain how their use can provide a way for limiting the severity of testability weaknesses, and of confining their effects to the classes involved in the pattern. Indeed, design patterns appear both as a usual refinement instrument, and a cause of complex interactions into a class diagram-and more specifically of testability anti-patterns. To reach our objective of integrating the testability improvement to the design process, we propose first a testability grid to make the relation between each pattern and the severity of the testability anti-patterns, and we present our solution, based on a definition of patterns at metalevel, to automate the instantiation of patterns constrained by testability criteria. © 2003 IEEE.",Automatic control; Automatic testing; Computer architecture; Design automation; Guidelines; Instruments; Life testing; Process design; Q factor; Unified modeling language,Automatic testing; Automation; Computer aided design; Computer architecture; Computer testing; Control; Design for testability; Instrument testing; Instruments; Modeling languages; Process design; Q factor measurement; Unified Modeling Language; Class diagrams; Design automations; Design Patterns; Guidelines; Improving designs; Life-testing; Q-factors; Testability anti-patterns; Design,,,,,,"Binder, R.V., Design for testability in object-oriented systems (1994) Communications of the ACM, 37 (9), pp. 87-101. , September; Voas, J.M., Miller, K., Software Testability: The New Verification (1995) IEEE Software, 12 (3), pp. 17-28. , May; Baudry, B., Le Traon, Y., Sunyé, G., Testability Analysis of UML Class Diagram (2002) Proceedings of Software Metrics Symposium, Ottawa, Canada, pp. 54-63. , June; D'Souza, D.F., Wills, A.C., (1998) Object, Components and Frameworks with UML, The Catalysis Approach, , Object Technology, Addison-Wesley; France, R., Bieman, J.M., Multi-view software evolution: A UML-based framework for evolving object-oriented software (2001) Proceedings of ICSM'01, Florence, Italy, pp. 386-395. , November; Gamma, E., Helm, R., Johnson, R., Vlissides, J., Design Patterns: Elements of Reusable Object-Oriented Software (1995) Professional Computing, , Addison-Wesley; Rapps, S., Weyuker, E.J., Selecting Software Test Data Using Data Flow Information (1985) IEEE Transactions on Software Enginnering, 11 (4), pp. 367-375. , April; Sunyé, G., Le Guennec, A., Jézéquel, J.-M., Design Pattern Application in UML (2000) Proceedings of ECOOP'00, pp. 44-62. , June; Freedman, R.S., Testability of Software Components (1991) IEEE Transactions on Software Enginnering, 17 (6), pp. 553-564. , June; Le Traon, Y., Ouabdessalam, F., Robach, C., Analyzing testability on data flow designs (2000) Proceedings of ISSRE'00, San Jose, CA, USA, pp. 162-173. , October; Correa, A., Werner, C.M.L., Zaverucha, G., Object Oriented Design Expertise Reuse: An Approach Based on Heuristics, Design Patterns and Anti-patterns (2000) Proceedings of International Conference on Software Reuse, pp. 336-352. , June; Object Constraint Language Specification, , http://www.omg.org/docs/ad/97-08-08.pdf; Sawant, V., Design Patterns Using Java, , http://www.cs.unc.edu/~vivek/home/academic.html; Agerbo, E., Cornils, A., How to preserve the benefits of design patterns (1998) Proceedings of OOPSLA'98, Vancouver, BC, Canada, pp. 134-143. , October; McGregor, J.D., Test Patterns: Please Stand By (1999) Journal of Object Oriented Programming, 12 (3), pp. 14-19. , June; Le Guennec, A., Sunyé, G., Jézéquel, J.-M., Precise Modeling of Design Patterns (2000) Proceedings of UML'00, pp. 482-496. , October; Eden, A.H., (1999) Precise Specification of Design Patterns and Tool Support in Their Application, , University of Tel Aviv; Shepperd, M., Object-Oriented Metrics: An Annotated Bibliography, , http://dec.bournemouth.ac.uk/ESERG/bibliography.html; Briand, L., Morasca, S., Basili, V.S., Property-based Software Engineering Measurement (1996) IEEE Transaction on Software Engineering, 22 (1), pp. 68-86. , January; Alexander, R.T., Offutt, J., Criteria for Testing Polymorphic Relationships (2000) Proceedings of ISSRE'00 (Int. Symposium on Software Reliability Engineering), San Jose, US, pp. 15-23. , October; Bieman, J.M., Jain, D., Yang, H., OO design patterns, design structure, and program changes: An industrial case study (2001) Proceedings of ICSM, Florence, Italy, pp. 580-589. , November; Prechelt, L., Unger, B., Tichy, W.F., Brössler, P., Votta, L.G., A Controlled Experiment in Maintenance Comparing Design Patterns to Simpler Solutions (2001) IEEE Transactions on Software Enginnering, 27 (12), pp. 1134-1144. , December",,,IEEE Computer Society Technical Council on Software Engineering,IEEE Computer Society,9th International Software Metrics Symposium,3 September 2003 through 5 September 2003,,114087,15301435,769519873,,,English,Proc. Int. Softw. Metrics Symp.,Conference Paper,Scopus,2-s2.0-84943179710,,
,,4,"Peters, J.F.",Design Patterns in Intelligent Systems,2003,LECTURE NOTES IN COMPUTER SCIENCE,,2871,,262,269,,8,,http://www.scopus.com/inward/record.url?eid=2-s2.0-2942753010&partnerID=40&md5=c03c0218388af6a56030ae946d8af69b,,"Peters, J.F.",[No abstract available],,Approximation theory; Feature extraction; Living systems studies; Pattern recognition; Reverse engineering; Robotics; Systems engineering; Design patterns; Intelligent systems; Robotic devices; Artificial intelligence,,,,,,,,Zhong N.Ras Z.W.Tsumoto S.Suzuki E.,,Springer-Verlag; 1999,,,,,3029743,,,,English,,Article,Scopus,2-s2.0-2942753010,,
,,3,"Berzal, F., Cubero, J.-C., Marín, N., Serrano, J.-M., Blanco, I.",Usability issues in data mining systems,2003,ICEIS 2003 - Proceedings of the 5th International Conference on Enterprise Information Systems,2,,,418,421,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-60249093410&partnerID=40&md5=9c29b37e89b21fe19f67309d7f1345e6,"Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, s/n. 18071 Granada, Spain; Dept. Languages and Computation, University of Almería, Ctra. Sacramento s/n, La-Cañada-Almerĩa, Spain","Berzal, F., Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, s/n. 18071 Granada, Spain; Cubero, J.-C., Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, s/n. 18071 Granada, Spain; Marín, N., Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, s/n. 18071 Granada, Spain; Serrano, J.-M., Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, s/n. 18071 Granada, Spain; Blanco, I., Dept. Languages and Computation, University of Almería, Ctra. Sacramento s/n, La-Cañada-Almerĩa, Spain","When we build data mining systems, we should reflect upon some design issues which are often overlooked in our quest for better data mining techniques. In particular, we usually focus on algorithmic details whose influence is minor when it comes to users' acceptance of the systems we build. This paper tries to highlight some of the issues which are usually neglected and might have a major impact on our systems usability. Solving some of the usability problems we have identified would certainly add to the odds of successful data mining stories, improve user acceptance and use of data mining systems, and spur renewed interest in the development of new data mining techniques. Our proposal focuses on integrating diverse tools into a framework which should be kept coherent and simple from the user's point of view. Our experience suggests that such a framework should include bottom-up dataset-building blocks to describe input datasets, expert systems to propose suitable algorithms and adjust their parameters, as well as visualization tools to explore data, and communication and reporting services to share the knowledge discovered from the massive amounts of data available in actual databases.",Component-based systems; Data mining; Design patterns; Usability,Data visualization; Expert systems; Information systems; Mining machinery; Software engineering; Usability engineering; Component based systems; Data mining system; Design Patterns; Reporting service; Usability; Usability problems; Users' acceptance; Visualization tools; Data mining,,,,,,"Berzal, F., Cubero, J.C., Sánchez, D., Serrano, J.M., ART: A Hybrid classification model (2003) Machine Learning Journal, , to be published; Constantine, L.L., (2001) The Peopleware Papers: Notes on the Human Side of Software, , Prentice Hall PTR; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Objectoriented Software, , Addison Wesley; Han, J., Kamber, M., (2001) Data Mining: Concepts and Techniques, , Morgan Kaufmann Publishers; Juristo, N., Windl, H., Constantine, L., Special section on usability engineering (2001) IEEE Software, 18 (1). , eds., January/February 2001; Norman, D.A., The design of everyday things (1990) Doubleday/Currency; Schneiderman, B., Designing the user interface: Strategies for effective human-computer interaction (1998) Addison Wesley; Weinberg, G.M., (1989) Exploring Requirements: Quality before Design, , Dorset House Publishing","Berzal, F.; Dept. Computer Science and Artificial Intelligence, E.T.S. Ingeniería Informática, University of Granada, C/ Periodista Daniel Saucedo Aranda, Spain",Hammoudi S.Filipe J.Camp O.Piattini M.,Accenture;et al.;Grupo Portucel Soporcel;IBM;XEROX;Xetcopi,Escola Superior de Tecnologia do Instituto Politecnico de Setubal,"5th International Conference on Enterprise Information Systems, ICEIS 2003",23 April 2003 through 26 April 2003,,108132,,9729881618,,,English,ICEIS - Proc. Int. Conf. Enterp. Inf. Syst.,Conference Paper,Scopus,2-s2.0-60249093410,,
,,4,"Ouyang, Y.",Explaining design patterns through one application,2002,Proceedings - Frontiers in Education Conference,3,,,S1G/6,S1G/11,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0036954227&partnerID=40&md5=28a4f05b40b860c929b6ae22a173806c,"California State University, Department of Computer Science, San Marcos, CA 92096, United States","Ouyang, Y., California State University, Department of Computer Science, San Marcos, CA 92096, United States","The benefits of using design patterns have been widely acknowledged by experienced software professionals. However, it's not intuitive for novice programmers to recognize appropriate patterns and apply them properly. This paper reports an experience of teaching design patterns to seniors. In that class, the requirements of an interactive quiz environment were described as if the clients requested them in multiple stages. Each stage requested additional features that were not included in the previous stage. As the requirements were presented to the students, design patterns were introduced to the students accordingly. In particular, the emphasis was to demonstrate how various design patterns could be used to minimize the impact of requirement changes. This practice helped students see the process of recognizing appropriate design patterns. For each pattern selected, this paper presents both the original class diagram as given by the Gang of Four and the matching class diagram that illustrates the application of the pattern.",Class diagram; Design patterns; Interactive quiz environmental; Use case diagram,C (programming language); Internet; Object oriented programming; Software engineering; Students; Systems analysis; Teaching; Textbooks; Class diagram; Design patterns; Interactive quiz environment; Use case diagram; Engineering education,,,,,,"Beck, K., Coplien, J., Crocker, R., Dominick, L., Industrial experience with design patterns Proceedings of the 18th International Conference on Software Engineering, March 1996, pp. 103-114; Clancy, M., Linn, M., Patterns and pedagogy Proceeding of the 30th ACM Technical Symposium on Computer Science Education, March 1999, pp. 37-42; Cline, M., The pros and cons of adopting and applying design patterns in the real world (1996) Communication of the ACM, 99 (10), pp. 47-49. , October; Della, L., Clark, D., Teaching object-oriented development with emphasis on pattern application Proceedings of the 2000 Australian Computing Education, December 2000, pp. 56-63; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Shalloway, A., Trott, J., (2001) Design Patterns Explained: A New Perspective on Object-Oriented Design, , Addison-Wesley; Vlissides, J., (1998) Pattern Hatching: Design Patterns Applied, , Addison-Wesley; http://www.codeguru.com/cppmfc/index.shtml, C++ & MFC, maintained by CodeGuru, Developer.comhttp://home.earthlink.net/-huston2/dp/patterns.html, Design Patterns maintained by Vince Huston, Viewlocity","Ouyang, Y.; California State University, Department of Computer Science, San Marcos, CA 92096, United States; email: ouyang@csusm.edu",,IEEE Education Society;IEEE Computer Society;Amesican Society for Engineering Education,,32nd Annual Frontiers in Education; Leading a Revolution in Engineering and Computer Science Education,6 November 2002 through 9 November 2002,"Boston, MA",60629,1905848,,PFECD,,English,Proc Front Educ Conf,Conference Paper,Scopus,2-s2.0-0036954227,,
,,4,"Admodisastro, N.I., Palaniappan, S.",A code generator tool for the gamma design patterns,2002,Malaysian Journal of Computer Science,15,2,,94,101,,,,http://www.scopus.com/inward/record.url?eid=2-s2.0-79952740509&partnerID=40&md5=3fdaccf9f75945821d4bccdfb6557229,"Faculty of Science Computer and Information Technology, Universiti Putra Malaysia, Malaysia; Department of Information Technology, Malaysia University of Science and Technology, Malaysia","Admodisastro, N.I., Faculty of Science Computer and Information Technology, Universiti Putra Malaysia, Malaysia; Palaniappan, S., Department of Information Technology, Malaysia University of Science and Technology, Malaysia","Software reuse has been recognised as an attractive idea with an obvious payoff to achieve software that is faster, better and cheaper. One important component to be highlighted in designing reusable object-oriented software is design patterns. Design patterns describe a commonly recurring structure of communicating components that solve a general design problem in a particular context. An important property of design patterns is that they are independent of a particular application domain and programming paradigm. As a result, design patterns facilitate reuse of software architecture, even when other forms of reuse are infeasible. Despite the fact that design patterns have tangible benefits, they have been found difficult to use. Since a design pattern only describes a solution to particular design problem, it does not lead to direct code reuse. Some developers have found it difficult to make the leap from pattern description to a particular implementation. The step in relaxing this complexity can be achieved using a code generator tool that aids developers to transform design patterns into code automatically. There are several pattern code generator tools currently available, but they have several shortcomings. This paper describes an attempt to automate design patterns implementation into a concrete form that takes advantage of WWW as a communication infrastructure. It includes the main features implemented by the existing tools and tackles some of their shortcomings. The tool has been evaluated and results were reported to be comparable and even better than other pattern code generator tools.",Design patterns; Pattern code generator tool; Software reuse,,,,,,,"Jacobson, I., Griss, M., Jonsson, P., (1997) Software Reuse: Architecture Process and Organization for Business Success, , Addison-Wesley; Budinsky, F.J., Finnie, M.A., Vlissides, J.M., Yu, P.S., Automatic Code Generation from Design Patterns (1996) IBM Systems Journal, 35 (2), pp. 151-171; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Schmidt, D.C., Using Design Patterns to Develop Reusable Object-Oriented Communication Software (1995) Communications of the ACM, 38 (10), pp. 65-74. , October; Hedin, G., Ive, A., Mughal, K., Normark, K., Ron, H., Osterbye, K., (1998) Tools for Design Patterns, , NWPER'98 Subworkshop on Tools for Software Architecture; Mendoza, D., Hall, M., (1998) S.C.U.P.E. (Santa Clara University Pattern Editor), , Master's Thesis, Santa Clara University, California; Wild, F., Instantiating Code Patterns: Patterns Applied to Software Development (1996) Dr. Dobb's Journal: Patterns & Software Design, , June; Buschmann, F., Meunier, R., Rohnert, H., Sommerland, P., Stal, M., (1996) Pattern-Oriented Software Architecture - A System of Pattern, , Wiley; Huang, J.Q., (1996) A Designer's Assistant Tool, , Ph.D. Thesis, Department of Computer Science, University of Waterloo; Cheng, B., Advanced Software Engineering available from Michigan State University Homepage, , http://www.cse.msu.edu/~cse870/, URL; Goldfedder, B., Rising, L., A Training Experience with Patterns (1996) Communications of the ACM, 39 (10), pp. 60-64. , October; (2000) Master's Thesis, Department of Software Engineering, , Novia Indriaty Admodisastro, University of Malaya","Admodisastro, N.I.; Faculty of Science Computer and Information Technology, Universiti Putra MalaysiaMalaysia; email: novia@fsktm.upm.edu.my",,,,,,,,1279084,,,,English,Malays. J. Comput. Sci.,Article,Scopus,2-s2.0-79952740509,,
,,4,"Aranda, G., Moore, R.",A formal model for verifying compound design patterns,2002,ACM International Conference Proceeding Series,27,,,213,214,,,10.1145/568760.568797,http://www.scopus.com/inward/record.url?eid=2-s2.0-77953746659&partnerID=40&md5=69fbb795d0080836e905cf663f77533a,"Informatics and Statistics Department, Comahue University, Buenos Aires 1400 (8300) Neuquen, Argentina; International Institute for Software Technology, United Nations University, P.O. Box 3058, Macau","Aranda, G., Informatics and Statistics Department, Comahue University, Buenos Aires 1400 (8300) Neuquen, Argentina; Moore, R., International Institute for Software Technology, United Nations University, P.O. Box 3058, Macau","Object-oriented design patterns commonly ""work together"", and many such combinations of patterns are identified as related patterns for each given pattern in the standard GoF pattern catalogue [?] while other combinations, such as the Template Method-Factory Method Compound Pattern, are described in [?]. When designers apply these compound patterns, they need to be sure they are doing so correctly, particularly where one component of the design plays different roles in different patterns. This can be achieved by using a formal language to express the set of rules the design must satisfy in order to represent a correct use of the patterns. A similar approach but for individual patterns has been used in [?], [?], [?], which use a formal model of a generic object-oriented design [?] as the basis for formal specifications of the properties of the majority of the design patterns in the GoF catalogue [?]. These specifications, written in RSL (the RAISE specification language [?]), then give a means of checking whether a given subset of a design matches one instance of one particular pattern. However, the model presented in [?] assumes that only a single instance of a single pattern is being checked at any time, whereas in practice a design may involve many different patterns and also many different occurrences of the same pattern. In addition, the patterns may be overlapping, that is they may share roles, so that, for example, a single class or method in a design may play one role in one pattern and another role in another pattern. We therefore extend this model so that it can describe the matching of a single design against an arbitrary combination of patterns all together, including multiple occurrences of the same pattern and also patterns with overlapping roles as in the compound patterns. Then we express the essential properties of the compound patterns in terms of this extended model, thus giving us a means of checking formally that a design matches a particular compound pattern. Copyright 2002 ACM.",,Design Patterns; Extended model; Formal model; Formal Specification; Object-oriented design; Set of rules; Template methods; Computer software; Formal languages; Knowledge engineering; Libraries; Linguistics; Model checking; Specification languages; Specifications; Design,,,,,,"Aranda, G., Moore, R., (2000) Formally Modelling Compound Design Patterns, , Technical Report 225, UNU/IIST, P.O. Box 3058, Macau, December; Aranda, G., Moore, R., (2000) Gof Creational Patterns: A Formal Specification, , Technical Report 224, UNU/IIST, P.O. Box 3058, Macau, December; Flores, A., Moore, R., Analysis and Specification of GoF Structural Patterns (2001) Proceedings of the IASTED International Symposia: Applied Informatics, pp. 625-630. , Innsbruck, Austria, February; Flores, A., Moore, R., Reynoso, L., A Formal Model of Object-Oriented Design and GoF Design Patterns (2001) Lecture Notes in Computer Science, 2021, pp. 223-241. , J. N. Oliveira and P. Zave, editors FME2001: Formal Methods for Increasing Software Productivity, Springer Verlag; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison Wesley; Group, T.R.L., (1992) The RAISE Specification Language, , BCS Practicioner Series, Prentice Hall; Moore, R., Reynoso, L., A Precise Specification of GoF Behavioural Patterns (2001) Proceedings of the a CIS 2nd International Conference on Software Engineering, Artificial Intelligence, Networking & Parallel/Distributed Computing: SNPD'01, pp. 262-270. , Nagoya, Japan, August; Vlissides, J., (1998) Pattern Hatching: Design Patterns Applied, , Software Patterns Series. Addison-Wesley; Vlissides, J., Composite Design Patterns(They Aren't What You Think) (1998) C++ Report, , http://research.ibm.eom/people/v/vlis/pubs.html, June","Aranda, G.; Informatics and Statistics Department, Comahue University, Buenos Aires 1400 (8300) Neuquen, Argentina; email: garanda@uncoma.edu.ar",,,,"14th International Conference on Software Engineering and Knowledge Engineering, SEKE '02",15 July 2002 through 19 July 2002,Ischia,80716,,1581135564,9781581135565,,,English,ACM Int. Conf. Proc. Ser.,Conference Paper,Scopus,2-s2.0-77953746659,
,,4,"Dong, J.",UML extensions for design pattern compositions,2002,Journal of Object Technology,1,5,,149,161,,22,,http://www.scopus.com/inward/record.url?eid=2-s2.0-1542385568&partnerID=40&md5=c1f253c32442864b1b67dde2b6d2e871,"Department of Computer Science, University of Texas, Dallas, TX, United States","Dong, J., Department of Computer Science, University of Texas, Dallas, TX, United States","Design patterns document good solutions to recurring problems in a particular context. Composing design patterns may achieve higher level of reuse by solving a set of problems. Design patterns and their compositions are usually modeled by UML diagrams. When a design pattern is applied or composed with other patterns, the pattern-related information may be lost because traditional UML diagrams do not track this information. Thus, it is hard for a designer to identify a design pattern when it is applied or composed. In this paper, we present notations to explicitly represent each pattern in the applications and compositions of design patterns. The notations allow us to maintain pattern-related information. Thus, a design pattern is identifiable and traceable from its application and composition with others.",,Computer programming languages; Information analysis; Natural language processing systems; Problem solving; Project management; Societies and institutions; Software engineering; Design patterns; Graphical notations; Process-based notations; Unified modeling language (UML); Object oriented programming,,,,,,"Alencar, P., Cowan, D., Dong, J., Lucena, C., A pattern-based approach to structural design composition (1999) Proceedings of the IEEE 23rd Annual International Computer Software & Applications Conference (COMP-SAC), pp. 160-165. , Phoenix USA, October; Berner, S., Glinz, M., Joos, S., A classification of stereotypes for object-oriented modeling languages (1999) Proceedings of the Second International Conference on the Unified Modeling Language (UML), LNCS1728, Springer-Verlag, pp. 249-264. , October; Booch, G., Rumbaugh, J., Jacobson, I., (1999) The Unified Modeling Language User Guide, , Addison Wesley; Dong, J., (2002) Design Component Contracts: Model and Analysis of Pattern-based Composition, , Ph.D. Thesis, Computer Science Department, University of Waterloo, June; Dong, J., Alencar, P., Cowan, D., Ensuring structure and behavior correctness in design composition (2000) Proceedings of the 7th Annual IEEE International Conference and Workshop on Engineering of Computer Based Systems(ECBS), Edinburgh UK, pp. 279-287. , April; D'Souza, D., Sane, A., Birchenough, A., First class extensibility for UML - Packaging of profiles, stereotypes, patterns (1999) Proceedings of the Second International Conference on the Unified Modeling Language (UML), LNCS1723, Springer-Verlag, pp. 265-277. , October; Fontoura, M., Lucena, C., Extending UML to improve the representation of design patterns (2001) Journal of Object Oriented Programming, 13 (11), pp. 12-19. , March; Fontoura, M., Pree, W., Rumpe, B., UML-F: A modeling language for object-oriented frameworks (2000) Proceedings of the 14th European Conference on Object-oriented Programming (ECOOP), pp. 63-82. , July; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns, Elements of Reusable Object-oriented Software, , Addison Wesley Publishing Company; Keller, R.K., Schauer, R., Design components: Towards software composition at the design level (1998) Proceedings of the 20th International Conference on Software Engineering, pp. 302-311; Lauder, A., Kent, S., Precise visual specification of design patterns (1998) Proceedings of the 12th European Conference on Object-oriented Programming (ECOOP), pp. 114-134. , July; Riehle, D., Composite design patterns (1997) Proceedings of the ACM Conference on Object-oriented Programming Systems, Languages & Applications (OOPSLA), USA, pp. 218-228. , October; Rossi, G., Schwabe, D., Garrido, A., Design reuse in hypermedia applications development (1997) Proceedings of the ACM International Conference on Hypertext, pp. 57-66. , April; Rumbaugh, J., Jacobson, I., Booch, G., (1999) The Unified Modeling Language Reference Manual, , Addison Wesley; Vlissides, J., Composite design pattern (they aren't what you think) (1998) C++ Report, , June; Vlissides, J., Notation, Notation, Notation (1998) C++ Report, , April","Dong, J.; Department of Computer Science, University of Texas, Dallas, TX, United States; email: jdong@utdallas.edu",,,,,,,,16601769,,,,English,J. Object Technol.,Article,Scopus,2-s2.0-1542385568,,
,,3,"Yang, S.J.H., Tsai, J.J.P., Chen, I.",Development of wireless embedded systems using component based software,2002,International Journal of Software Engineering and Knowledge Engineering,12,2,,135,153,,4,10.1142/S0218194002000871,http://www.scopus.com/inward/record.url?eid=2-s2.0-0036528954&partnerID=40&md5=573f1b2ed5675a435052e99e742a8e43,"Department of Computer and Communication Engineering, National Kaohsiung First, University of Science and Technology, Taiwan; Department of Computer Science, University of Illinois, Chicago, IL, United States; Graduate Institute of Management, National Kaohsiung First University of Science and Technology, Taiwan","Yang, S.J.H., Department of Computer and Communication Engineering, National Kaohsiung First, University of Science and Technology, Taiwan; Tsai, J.J.P., Department of Computer Science, University of Illinois, Chicago, IL, United States; Chen, I., Graduate Institute of Management, National Kaohsiung First University of Science and Technology, Taiwan","Many mobile and wireless devices are connecting to the Internet nowadays, among them, mobile phones and PDAs are the most popular ones. Thus, in this paper, we will focus on how to develop embedded software running on the two devices by using design patterns and Java based software components. Notably, some components may be used directly in an embedded software system, whereas most components must be specialized prior to reuse. Developers have to identify the variation points on these components. In order to develop a reusable embedded software system, we will identify several variation points with some variants, and introduce some useful design patterns for implementing variation points. Consequently, we can customize an embedded software system just through attaching variants on corresponding variation point in our system. The design patterns we are using are property container, strategy, decorator, and model-view-controller. The component technology we are using is J2ME. J2ME is a specification focused on the development of mobile applications. It provides a similar environment as standard Java environment. J2ME's components programming includes the Spotlet programming for PDA, and the MIDlet programming for Java phone. In addition, along with the XML, J2ME can also provide the XMIDlet programming for dynamic downloading and execution of XML-based applications for PDA and Java phones.",Component software; Design patterns; Embedded mobile devices; J2ME,Computer software; Embedded systems; Internet; Java programming language; Personal digital assistants; XML; Component softwares; Software engineering,,,,,,"http://www.wapforum.org/Yasiri, A.A., Ramachandran, M., Developing software systems with domain oriented reuse (1994) IEEE Computer; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture: A System of Patterns, , John Wiley & Sons, New York; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley; Tsai, W.T., Tu, Y., Shao, W., Ebner, E., Testing extensible design patterns in object-oriented frameworks through scenario template (1999) IEEE Computer; Carey, J., Carlson, B., Graser, T., (2000) SanFrancisco Design Patterns, , Addison-Wesley; SanFrancisco Concepts and Facilities, , http://www.software.ibm.com/ad/sanfrancisco/1999; Monday, P., Dangler, M., Carey, J., (2000) SanFrancisco Component Framework: An Introduction, , Addison-Wesley; (1997) WebObjects Online Documentation, , http://www.apple.com/webobjects/; Appleton, B., (2000) Patterns and Software: Essential Concepts and Terminology, , http://www.enteract.com/bradapp/; Jacobson, I., Griss, M., Jonsson, P., (1997) Software Reuse: Architecture Process and Organization for Business Success, , Addison-Wesley; Giguère, E., (2000) Java 2 Micro Edition PDG, , Addison-Wesley; Day, B., (2000) J2ME Archive, , http://www.billday.com/j2me/index.html; (2000) Mobile Information Device Profile White Paper; (2000) Over the Air User Initiated Provisioning Recommend Practice; (2000) KVM White Paper, , http://java.sun.com/cldc/wp/KVMwp.pdf; De Scheemaecker, M., (2000) NanoXML, , http://nanoxml.sourceforge.net/index.html; Pardi, W.J., (1999) XML in Action, , Microsoft Press; Maruyama, H., Tamura, K., Uramoto, N., (1999) XML and Java Developing Web Applications, , Addison-Wesley; Waldo, J., (2001) The Jini Specifications Second Edition, , Addison-Wesley; Arnold, K., (2000) The Jini Specifications Second Edition, , Sun Microsystems; Chitrarasu, M., (1999) Jini by Example, , http://www.cswl.com/whiteppr/tutorials/jini.html; Rbodes, N., McKeeban, J., (1999) Palm Programming, , O'Reilly; Feng, Y., Zhu, J., (2001) Wireless Java Programming with Java 2 Micro Edition, , Chapter 10 and Chapter 12, Sam's Publishing; Avedal, K., (2000) Professional JSP, , Wrox Press; Tremblett, P., (2000) Instant Java Server Pages, , McGraw-Hill; Ayers, D., Bergsten, H., (1999) Professional Java Server Programming, , Wrox; Hunter, J., (1999) Java Servlet Programming, , O'Reilly","Yang, S.J.H.; Dept. of Computer and Commun. Eng., National Kaohsiung First Univ. of ST, Kaohsiung, Taiwan",,,,,,,,2181940,,ISEKE,,English,Int. J. Software Engineer. Knowledge Engineer.,Article,Scopus,2-s2.0-0036528954,,
,,4,"Wesson, J.L.",The role of HCI design patterns in software development,2001,Journal of Research and Practice in Information Technology,33,1,,42,53,,1,,http://www.scopus.com/inward/record.url?eid=2-s2.0-33747317638&partnerID=40&md5=bf8783a78ca18f13a573a7386fd97a23,"Department of Computer Science and Information Systems, University of Port Elizabeth, PO Box 1600, Port Elizabeth 6000, South Africa","Wesson, J.L., Department of Computer Science and Information Systems, University of Port Elizabeth, PO Box 1600, Port Elizabeth 6000, South Africa","This paper discusses the role of HCI design patterns in software development. The concept of a design pattern, whilst popular in several other fields including architecture and software engineering, is relatively new to human-computer interaction (HCI). The potential of pattern languages as a vehicle for the dissemination of HCI design knowledge is becoming widely recognized within the HCI community. This potential is based on the ideas of the architect Christopher Alexander. Patterns are developed to record the invariant properties that exist in a design solution in order to resolve conflicting social, cognitive and technological forces. Patterns are interlinked into a network (termed a pattern language) to support different levels of user interface design. Copyright© 2001, Australian Computer Society Inc.",Design patterns; Human-computer interaction; Software development; Usability; User interface design,,,,,,,"Alexander, C., (1979) A Timeless Way of Building, , New York, Oxford University Press; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., (1977) A Pattern Language, , New York, Oxford University Press; Bahrami, A., (1999) Object Oriented Systems Development, , McGraw-Hill; Bayle, E., Bellamy, R., Casady, G., Erickson, T., Fincher, S., Thomas, J., Putting it all together: Towards a pattern Language for interaction design (1997) Proc. CHI'97 Workshop, 30, pp. 17-23. , http://www.pliant.org/personal/Tom_Erickson/Patterns.WrkShpRep.html; Dearden, A., Patterns and Participation: The relevance of Christopher Alexander's ideas for HCI (2000) Proc. BCS HCI Group/IFIP WG13.2 Workshop on HCI Patterns, , London; Erickson, T., (1998) The Interactions Design Patterns, , http://www.pliant.org/personal/Tom_Erickson/InteractionPatterns.html, Page; Faulkner, X., (2000) Usability Engineering, , Macmillan Press; Fincher, S., Capture of practice: Is it obvious? (2000) Proc. BCS HCI Group/IFIP WG13.2 Workshop on HCI Patterns, , http://www.cs.ukc.ac.uk/people/staff/saf/patterns/bcs.pdf, London; Fowler, S., Stanwick, V.R., (1995) The GUI Style Guide, , AP Professional. Cambridge Press; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Reading, MA, Addison-Wesley; Griffiths, R.N., Patterns in human-computer interaction (2000) Proc. BCS HCI Group/IFIP WG13.2 Workshop on HCI Patterns, , http://www.it.bton.ac.uk/cil/usability/patterns/, London; (1997) ISO 9241-1: Ergonomic Requirements for Office Work with Visual Display Terminals; Johnson, J., (2000) GUI Bloopers, , Morgan Kaufmann; Mahemoff, M.J., Johnston, L.J., Pattern languages for usability: An investigation of alternative approaches (1998) Proc. Asia-Pacific Conference on Human-Computer Interaction (APCHI) 98, pp. 25-31. , Shonan Village, Japan, TANAKA, J. (ed) Los Alamitos, CA, IEEE Computer Society; Mahemoff, M.J., Johnston, L.J., Principles for a usability-oriented pattern language (1998) Proc. OZCHI'98, pp. 132-139. , Adelaide, Australia, CALDER, P. and THOMAS, B. (eds). Los Alamitos, CA; Newman, W.M., Lamming, M.G., (1995) Interactive Systems Design, , Addison-Wesley; Tidwell, J., (1998) Common Ground: A Pattern Language for Human-computer Interface Design, , http://www.mit.edu/~jtidwell/common_ground.html; Van Welie, M., Traetteberg, H., Interaction patterns in user interfaces (2000) Proc. KoalaPLoP 2000, , Melbourne, Australia; Van Welie, M., Traetteberg, H., (2001) The Amsterdam Collection of Patterns in User Interface Design, , http://www.cs.vu.nl/~martijn/patterns/index.html; Vanderdonckt, J., Zucchinetti, G., Key activities for a development methodology for interactive applications (1995) Critical Issues in User Interface Systems Engineering, , BENYON, D. and PALANQUE, P. (eds). Springer-Verlag; Warren, P., Viljoen, M., Design patterns for user interfaces (1998) Proc. SAICSIT'98, , http://saturn.cs.unp.ac.za/~peterw/papers/patterns.htm, Cape Town; Wesson, J.L., (1997) An Investigation into Design Methodologies for Usability: A Case Study Approach, , PhD thesis. Computer Science and Information Systems, University of Port Elizabeth; Wesson, J.L., Integrating HCI with the software development process (1999) Proc. BitWorld'99, , Cape Town; Wesson, J.L., Cowley, N.L.O., Selecting interaction objects: A patterns approach (2000) Proc. CHI'2000 Workshop on Pattern Languages for Interaction Design, , The Hague, The Netherlands; Windsor, P., A project pattern language for user interface design (2000) Proc. BCS HCI Group/IFIP WG13.2 Workshop on HCI Patterns, , London; Yourdon, E., (1994) Object-Oriented Systems Development: An Integrated Approach, , Prentice-Hall","Wesson, J.L.; Department of Computer Science and Information Systems, University of Port Elizabeth, PO Box 1600, Port Elizabeth 6000, South Africa; email: csajlw@upe.ac.za",,,,,,,,1443458X,,,,English,J. Res. Pract. Inf. Technol.,Article,Scopus,2-s2.0-33747317638,,
,,4,"Ihme, T.",An architecture line structure for command and control software,2001,Conference Proceedings of the EUROMICRO,,,952442,90,96,,1,10.1109/EURMIC.2001.952442,http://www.scopus.com/inward/record.url?eid=2-s2.0-29844444401&partnerID=40&md5=44f00951d5300b7cc1b4fc7b2c9fde2a,"VTT Electronics, P. 0. Box 1100, Fin-90571 Oulu, Finland","Ihme, T., VTT Electronics, P. 0. Box 1100, Fin-90571 Oulu, Finland","Product line software engineering should include an up-front and ongoing investment in a reusable architecture. Identification, selection, documentation and validation of general architectural patterns and their product line, organisation or domain specific variants allow designers to adopt approved patterns as a starting point. This paper discusses how to apply design patterns to the problems of product lines, including various and evolutionary design techniques of embedded software. The patterns are a precondition for the development of frameworks for designing and reusing architectures of the sub-domains that promise the highest benefits. The classification of core architectural assets helps to achieve a balance between discipline product line architecture and creativity forced by future needs that are not fully predictable. © 2001 IEEE.",,Architectural pattern; Command-and-control software; Design Patterns; Evolutionary design; Line structures; Product line architecture; Product line software engineering; Reusable architectures; Product design; Software engineering; Systems analysis; Command and control systems,,,,,,"Bosch, J., (2000) Design and Use of Software Architectures.Adopting and Evolving A Product Line Approach, p. 354. , GB: Addison-Wesley; Schmid, K., Scoping software product line.An analysis of an emerging technology (2000) Software Product Lines.Experience and Research Directions, pp. 513-532. , In: Donohoe, P.(ed.).Kluwer Academic Publishers: Massachusetts; Dager, J., Cummins's experience in developing a software product line architecture for real-time embedded diesel engine controls (2000) Software Product Lines, Experience and Research Directions, pp. 23-45. , In: Donohoe, P.(ed.).Kluwer Academic Publishers: Massachusetts; (2000) IEEE Recommended Practice for Architectural Description of Software-Intensive Systems, p. 23. , IEEE Std 1471-2000.New York: The Institute of Electrical and Electronics Engineers; Bachmann, F., Bass, L., Chastek, G., Donohoe, P., Peruzzi, F., (2000) The Architecture Based Design Method, p. 50. , Carnegie Mellon University, Software Engineering Institute CMU/SEI-2000-TR-0001; Lee, E., What's ahead for embedded software? (2000) IEEE Computer, 33 (9), pp. 18-26; Dikel, D., Kane, D., Ornburn, S., Loftus, W., Wilson, J., Applying software product-line architecture (1997) IEEE Computer, 30 (8), pp. 49-55; Ward, P., Mellor, S., (1986) Structured Development for Real-Time Systems, Volumes I-III., , New York: Yourdon Press; Selic, B., Gullekson, G., Ward, P., (1994) Real-Time Object-Oriented Modeling, p. 525. , New York: John Wiley &Sons; Selic, B., Turning clockwise: Using UML in the real-time domain (1999) Communication of the ACM, 42 (10), pp. 46-54; Bass, L., Clements, P., Kazman, R., (1998) Software Architecture in Practice.Reading, p. 452. , Massachusetts: Addison-Wesley; Fayad, M., Schmidt, D., Johnson, R., (1999) Implementing Application Frameworks: Object-Oriented Frameworks at, p. 729. , Work.New York: John Wiley &Sons; Garlan, D., Software architecture: A roadmap (2000) The Future of Software Engineering, 22nd International Conference on Software Engineering, pp. 91-101. , In: Finkelstein, A.(ed.).New York: ACM; Ihme, T., An sdl framework for x-ray spectrometer software (1998) Proceedings of the 1st Workshop of the SDL Forum Society on SDL and MSC, 1, pp. 125-134. , Berlin, Germany, June 29-July 1.Berlin: Humboldt University Berlin; Ihme, T., Niemela, E., Salmela, M., Seppanen, V., Object-oriented re-engineering of embedded software (1995) Mechatronics, 5 (1), pp. 76-86; Buschman, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., (1996) Pattern-Oriented Software Architecture, A System of Patterns.Chichester, p. 457. , England: John Wiley &Sons; Ihme, T., A room framework for the spectrometer controller product line (1999) Proceeding of Workshop on Object Technology for Product Line Architecture, pp. 119-128. , (ESI-199-TR-034.); Karlsson, E.-A., (1996) Software Reuse, A Holistic Approach.Chichester, p. 510. , England: John Wiley &Sons Ltd; Jazayeri, M., Ran, A., Van Der Linden, F., (2000) Software Architecture for Product Families, p. 257. , Principles and Practice.USA: Addison-Wesley","Ihme, T.; VTT Electronics, P. 0. Box 1100, Fin-90571 Oulu, Finland; email: Tuomas.Ihme@vtt.fi",,Euromicro,,"27th EUROMICRO Conference 2001: A Net Odyssey, EUROMICRO 2001",4 September 2001 through 6 September 2001,Warsaw,101045,10896503,769512364,9780769512365,EROMF,,English,Conf. Proc. EUROMICRO,Conference Paper,Scopus,2-s2.0-29844444401,
,,4,"Spinellis, D.",Notable design patterns for domain-specific languages,2001,Journal of Systems and Software,56,1,,91,99,,102,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0346026383&partnerID=40&md5=751284c209f1a36a8b1f62279f679915,"Dept. of Info. and Commun. Systems, University of the Aegean, GR-83 200 Karlovasi, Greece","Spinellis, D., Dept. of Info. and Commun. Systems, University of the Aegean, GR-83 200 Karlovasi, Greece","The realisation of domain-specific languages (DSLS) differs in fundamental ways from that of traditional programming languages. We describe eight recurring patterns that we have identified as being used for DSL design and implementation. Existing languages can be extended, restricted, partially used, or become hosts for DSLS. Simple DSLS can be implemented by lexical processing. In addition, DSLS can be used to create front-ends to existing systems or to express complicated data structures. Finally, DSLS can be combined using process pipelines. The patterns described form a pattern language that can be used as a building block for a systematic view of the software development process involving DSLS. © 2001 Elsevier Science Inc. All rights reserved.",Design patterns; Domain-specific languages,,,,,,,"Abelson, H., Sussman, G.J., Sussman, J., (1990) Structure and Interpretation of Computer Programs, , MIT Press, Cambridge, MA; Aho, A.V., Kernighan, B.W., Weinberger, P.J., Awk - A pattern scanning and processing language (1979) Software-Pract. Exper., 9 (4), pp. 267-280; Aho, A.V., Sethi, R., Ullman, J.D., (1985) Compilers, Principles, Techniques, and Tools, , Addison-Wesley, Reading, MA; Aho, A.V., Kernighan, B.W., Weinberger, P.J., (1988) The AWK Programming Language, , Addison-Wesley, Reading, MA; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Fiksdahlking, I., Angel, S., (1977) A Pattern Language, , Oxford University Press, Oxford; Bell, J., Bellegarde, F., Hook, J., Kieburtz, R.B., Kotov, A., Lewis, J., McKinney, L., Zhou, T., Software design for reliability and reuse: A proof-of-concept demonstration (1994) Proceedings of the Conference on TRI-Ada '94, pp. 396-404. , ACM, ACM Press, New York; Bentley, J.L., Programming pearls: Little languages (1986) Commun. ACM, 29 (8), pp. 711-721; Bentley, J.L., Kernighan, B.W., GRAP - A language for typesetting graphs (1986) Commun. ACM, 29 (8), pp. 782-792; Bentley, J.L., Kernighan, B.W., A system for algorithm animation (1991) Comput. Syst., 4 (1), pp. 5-30; Bentley, J.L., Jelinski, L.W., Kernighan, B.W., CHEM - A program for phototypesetting chemical structure diagrams (1987) Comput. Chem., 11 (4), pp. 281-297; Berners-Lee, T., Connolly, D., RFC 1866: Hypertext Markup Language - 2.0 (1995) Status: Proposed Standard, , November; Boctor, D., (1999) Microsoft Office 2000 Visual Basic Fundamentals, , Microsoft Press; Bracha, G., Odersky, M., Stoutamire, D., Wadler, P., Making the future safe for the past: Adding genericity to the Java programming language (1998) ACM SIGPLAN Not., 33 (10), pp. 183-200. , Proceedings of the 1998 ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages and Applications (OOPSLA '98); Coplien, J.O., Schmidt, D.C., (1995) Pattern Languages of Program Design, , Addison-Wesley, Reading, MA; Cordy, J.R., Halpern-Hamu, C.D., Promislow, E., TXL: A rapid prototyping system for programming language dialects (1991) Comput. Languages, 16 (1), pp. 97-107; Crew, R.F., (1997) ASTLOG: a Language for Examining Abstract Syntax Trees, , Ramming (1997); Edwards, P.D., Rivett, R.S., Towards an Automative 'Safer Subset' of C. Proceedings of the 16th International Conference on Computer Safety, Reliability and Security: SAFECOMP '97 (1997) European Workshop on Industrial Computer Systems: TC-7, pp. 185-195. , Daniel, P. (Ed.). Springer, New York; Faith, R.E., Nyland, L.S., Prins, J.F., KHEPERA: A System for Rapid Implementation of Domain Specific Languages (1997) Ramming, , 1997; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading, MA; Gansner, E.R., North, S.C., Vo, K.P., DAG - A program that draws directed graphs (1988) Software-Pract. Exper., 18 (11), pp. 1047-1062; (1986) Information Processing - Text and Office Systems - Standard Generalized Markup Language (SGML), , International Organization for Standardization, Geneva, Switzerland, ISO 8879; Jackson, M., Specializing in software engineering (1999) IEEE Software, 16 (6), pp. 119-121; Johnson, S.C., Yacc - Yet another compiler-compiler (1975) Computer Science Technical Report 32, , Bell Laboratories, Murray Hill, NJ, USA, July; Johnson, S.C., Lesk, M.E., Language development tools (1987) Bell Syst. Tech. J., 56 (6), pp. 2155-2176; Kamin, S.N., Hyatt, D., (1997) A Special-Purpose Language for Picture-Drawing, , Ramming (1997); Kernighan, B.W., Ratfor - A preprocessor for a rational Fortran (1975) Software-Pract. Exper., 5 (4), pp. 395-406; Kernighan, B.W., PIC - A language for typesetting graphics (1982) Software-Pract. Exper., 12, pp. 1-21; Kernighan, B.W., Cherry, L.L., A system for typesetting mathematics (1974) Computer Science Technical Report, 17. , Bell Laboratories, Murray Hill, NJ, USA, May; Kernighan, B.W., Plauger, P.J., (1978) The Elements of Programming Style, Second Ed., , McGraw-Hill, New York; Kernighan, B.W., Ritchie, D.M., The M4 Macro Processor (1979) Unix Programmer's Manual, , 1979; Klarlund, N., Schwarzbach, M.I., (1997) A Domain-Specific Language for Regular Sets of Strings and Trees, , Ramming (1997); Landin, P.J., The next 700 programming languages (1966) Commun. ACM, 9 (3), pp. 157-166; Lesk, M.E., Lex - A lexical analyzer generator (1975) Computer Science Technical Report, 39. , Bell Laboratories, Murray Hill, NJ, USA, October; Lesk, M., Some Applications of Inverted Indexes on the Unix System (1979) Unix Programmer's Manual, , 1979; Lesk, M.E., TBL - A Program to Format Tables (1979) Unix Programmer's Manual, , 1979; Lutz, M., (1996) Programming Python, , O'Reilly and Associates; McMahon, L.E., SED - A Non-interactive Text Editor (1979) Unix Programmer's Manual, , 1979; (1994) Development Guidelines for Vehicle Based Software, , November; Nipkow, T., Von Oheimb, D., Javalight is type-safe-definitely (1998) Proceedings of the Conference Record of POPL '98: The 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, pp. 161-170; Ossanna, J.F., NROFF/TROFF User's Manual (1979) Unix Programmer's Manual, , 1979; Ousterhout, J.K., (1994) Tcl and the Tk Toolkit, , Addison-Wesley, Reading, MA; Paryavi, M.N., Hankley, W.J., OOSPEC: An executable object-oriented specification language (1995) Proceedings of the of ACM 23rd Annual Computer Science Conference CSC '95, pp. 169-177. , ACM, ACM Press, New York; Poskanzer, J., (1993) NETPBM: Extended Portable Bitmap Toolkit, , ftp://ftp.x.org/contrib/utilities/, Available online December, Release 7; Potter, B., Sinclair, J., Till, D., (1991) An Introduction to Formal Specification and Z, , Prentice-Hall, Englewood Cliffs, NJ; Ramming, J.C., (1997) Proceedings of the USENIX Conference on Domain-Specific Languages, , USENIX, Santa Monica, CA, USA, October; Rawls, R.R., Hagen, M.A., (1998) Autolisp Programming: Principles and Techniques, , Goodheart-Willcox; Rumbaugh, J., Jacobson, I., Booch, G., (1999) The Unified Modeling Language Reference Manual, , Addison-Wesley, Reading, MA; Savitch, W., (1995) Pascal - An Introduction to the Art and Science of Programming, Fourth Ed., , Benjamin/Cummings, Menlo Park, CA; Schmidt, D.C., Gperf: A perfect Hash function generator (1990) Proceedings of the USENIX C++ Conference, pp. 87-100. , Usenix Association, San Francisco, CA, USA; Simonyi, C., The Death of Computer Languages and the Birth of Intentional Programming (1995) Technical Report MSR-TR-95-52, , ftp://ftp.research.microsoft.com/pub/tr/tr-95-52.ps, Microsoft Corporation, Redmond, WA, USA, September. Available online; Sommerville, I., (1989) Software Engineering, Third Ed., , Addison-Wesley, Reading, MA; Spinellis, D., Guruprasad, V., (1997) Lightweight Languages as Software Engineering Tools, , Ramming (1997); Spinellis, D., Drossopoulou, S., Eisenbach, S., Object-oriented technology in multiparadigm language implementation (1995) J. Object-Oriented Programming, 8 (1), pp. 33-38; Stallman, R.M., EMACS: The extensible, customizable, self-documenting display editor (1984) Interactive Programming Environments, pp. 300-325. , Barstow, D. R., Shrobe, H. E., Sandwell, E. (Eds.), McGraw-Hill, New York; Sterling, L., Shapiro, E., (1986) The Art of Prolog, , MIT Press, Cambridge, MA; Stichnoth, J.M., Gross, T., (1997) Code Composition as an Implementation Language for Compilers, , Ramming (1997); Stroustrup, B., Data abstraction in C (1984) Bell Syst. Tech. J., 63 (8), pp. 1701-1732; Turski, W.M., Maibaum, T.S.E., (1987) The Specification of Computer Programs, , Addison-Wesley, Reading, MA; Tyszberowicz, S., Yehudai, A., OBSERV - A prototyping language and environment (1992) ACM Trans. Software Eng. Methodol., 1 (3), pp. 269-309; Unix Programmer's Manual (1979) UNIX Programmer's Manual. Volume 2 - Supplementary Documents, Seventh Ed., 2. , http://plan9.bell-labs.com/7thEdMan/, Bell Telephone Laboratories, Murray Hill, NJ, USA also available online; Wall, L., Schwartz, R.L., (1990) Programming Perl, , O'Reilly and Associates, Sebastopol, CA, USA; Wirth, N., On the design of programming languages (1974) Information Processing 74: Proceedings of IFIP Congress, 74, pp. 386-393. , Rosenfeld, J.L. (Ed.), International Federation for Information Processing. North-Holland, Stockholm","Spinellis, D.; Dept. of Info. and Commun. Systems, University of the Aegean, GR-83 200 Karlovasi, Greece; email: dspin@aegean.gr",,,,,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-0346026383,,
,,4,"Guéhéneuc, Y.-G., Albin-Amiot, H.",Using design patterns and constraints to automate the detection and correction of inter-class design defects,2001,"""Technology of Object-Oriented Languages and Systems",,TOOL,,296,306,,26,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0034865079&partnerID=40&md5=d744ab29df1d208602d54d5b6aa3281d,"École des Mines de Nantes, 4, rue Alfred Nastier, 44307 Nantes Cedex 3, France","Guéhéneuc, Y.-G., École des Mines de Nantes, 4, rue Alfred Nastier, 44307 Nantes Cedex 3, France; Albin-Amiot, H., École des Mines de Nantes, 4, rue Alfred Nastier, 44307 Nantes Cedex 3, France","Developing code free of defects is a major concern for the obsect-oriented software community. In this paper, We classify design defects as those Within classes (intra-class), those among classes (inter-classes), and those of semantic nature (behavioral). Then, we introduce guidelines to automate the detection and correction of inter-class design defects: We assume that design patterns embody good architectural solutions and that a group of entities with organization similar, but not equal, to a design pattern represents an inter-class design defect. Thus, the transformation of such a group of entities. such that its organization complies exactly with a design pattern, corresponds to the correction of an inter-class design defect. We use a meta-model to describe design patterns and we exploit the descriptions to infer sets of detection and transformation rules. A constraints solver with explanations uses the descriptions and rules to recognize groups of entities with organizations similar to the describe d design patterns. A transformation engine modifies the source code to comply with the recognized distorted design patterns. We apply these guidelines on the Composite pattern using PTIDEJ. our prototype tool that integrates the complete guidelines.",Constraints; Design defects; Design patterns; OO design; Source code transformation,Codes (symbols); Computer aided software engineering; Computer software selection and evaluation; Correlation methods; Error detection; Mathematical models; Semantics; Software prototyping; Source code transformations; Object oriented programming,,,,,,"Albin-Amiot, H., (1998) Java code conventions - Complément de la version officielle de sun microsystems, inc. Technical report, , Soft-Maint; Albin-Amiot, H., (2001) JavaXL, a Java source code transformation engine, , Technical Report 2001-info, Ecole des Mines de Nantes; Beck, K., (1999) Extreme Programming Explained: Embraced Change, , Addison-wesley; Bosch, J., Design patterns as language constructs (1998) Journal of Object-Oriented Programming, 11 (2), pp. 18-32; Brown, K., (1996) Design reverse-engineering and automated design pattern detection in Smalltalk, , Technical Report Tr-96-07, University of Illinois at Urbana-champaign; Budinsky, F.J., Finnie, M.A., Vlissides, J.M., Yu, P.S., Automatic code generation from design patterns (1996) IBM Systems Journal, 35 (2); Card, D.N., Glass, R.L., (1990) Measuring Software Design Quality, , Prentice Hall, Englewood Cliffs, New Jersey 07632, Usa; Caseau, Y., Laburthe, F., CLAIRE: Combining objects and rules for problem solving (1996) Proceedings of Jicslp. workshop on multi-paradigm logic programming; Ciupke, O., Automatic detection of design problems in object-oriented reengineering (1999) Proceeding of TOOLS, 30, pp. 18-32; Demeyer, S., Ducasse, S., Nierstrasz, O., Object-oriented reengineering OOPSLA'00 tutorial (2000) OOPSLA Tutorial Notes; Florijn, G., Meijers, M., Winsen, P.V., Tool support for object-oriented patterns (1997) Proceedings of ECOOP; Foote, B., Opdyke, W.F., Life cycle and refactoring patterns that support evolution and reuse (1994) Proceeding of PLoP, 1; Fowler, M., (1999) Refactoring - Improving the Design of Existing Code, , Addison-wesley; Gamma, E., (1998), http://members.pingnet.ch/gamma/Jhd-5.1.zip, JhotdrawGamma, E., Helm, R., Johnson, R., Vlissides, J., (1994) Design Patterns - Elements of Reusable Object-Oriented Software., , Addison-wesley; Géraud, T., Duret-Lutz, A., Generic programming redesign of patterns (2000) Proceedings of EuroPLoP; Guéhéneuc, Y.-G., (2001) Design defects: A taxonomy, , Technical Report Info-2001, Ecole des Mines de Nantes; Guéhéneuc, Y.-G., Jussien, N., Quelques explications pour les patrons - Une utilisation de la PPC avec explications pour l'identification de patrons de conception (2001) Proceedings of the 7th JNPC, pp. 953-964; Hommel, S., (2000) Java code conventions, , Technical report, Sun Microsystems Inc; Jahnke, J., Zündorf, A., Rewriting poor design patterns by good design patterns (1997) Proceedings the Workshop on Object-Oriented Reengineering at ESEC/FSE, , September; Johnson, R., Classic Smalltalk bugs, p. 1997; Johnson, R.E., Opdyke, W.P., (1993) Refactoring and aggregation, , Technical report, Department of Computer Science, University of Illinois; Jussien, N., Barichard, V., The PaLM system: Explanation-based constraint programming (2000) Proceedings of TRICS: Techniques for Implementing Constraint programming Systems, pp. 118-133; Knuth, D.E., Literate programming (1984) The Computer Journal, 27 (2), pp. 97-111; Krämer, C., Prechelt, L., Design recovery by automated search for structural design patterns in object-oriented software (1996) Proceedings of the Working Conference on Reverse Engineering, pp. 208-215; Mancoridis, S., Mitchell, B.S., Chen, Y., Gansner, E.R., Bunch: A clustering tool for the recovery and maintenance of software system structures (1998) Proceedings of ICSM; Moore, I., Automatic inheritance hierarchy restructuring and method refactoring (1996) Proceeding of OOPSLA; O'Cinnéide, M., Nixon, P., A methodology for the automated introduction of design patterns (1998) Proceedings of ICSM; Opdyke, W.F., (1997) Refactoring Object-Oriented Frameworks, , PhD thesis, University of Illinois at Urbana-champaign; Pagel, B.-U., Winter, M., Towards pattern-based tools (1996) Proceedings of EuropLop; Railsback, L.B., Chamberlin's, T.C., (2001) ""Method of multiple working hypotheses"": An encapsulation for modern students; Rich, C., Waters, R.C., The programmer's apprentice: A research overview (1988) IEEE Computer, 21 (11), pp. 10-25. , November; Richner, T., Ducasse, S., Recovering high-level views of object-oriented applications from static and dynamic information (1999) Proceedings of ICSM; Riel, A.J., (1996) Object-Oriented Design Heuristics, , Addison-wesley; Roberts, D., Brant, J., Johnson, R., (1999) A refactoring tool for Smalltalk; Sunyé, G., (1999) Mise En Oeuvre de Patterns de Conception: Un Outil, , PhD thesis, Université de Paris 6 - Lip6, July; Teitelbaum, T., Reps, T., The corneli program synthesizer: A syntax-directed programming environment (1981) Proceedings of CACM, 24 (9), pp. 563-573. , September; Tip, F., Laffra, C., Sweeney, P.F., Practical experience with an application extractor for Java (1999) Proceedings of OOPSLA, pp. 292-305. , November; Wake, W.C., (2000) Xplorations - From 0 to composite (and back again), , Technical report, ACM; Wake, W.C., (2000) Xplorations - Refactoring: An example ; An example, extended, , Technical report, ACM; Webster, B.P., (1995) Pitfalls of Object Oriented Development, , M & T Books, 115 West 18th Street, New York, New York 10011, USA; Woods, S.G., Quilici, A.E., Yang, Q., (1998) Constraint-Based Design Recovery for Software Reengineering - Theory and Experiments, , Kluwer Academic Publishers, Kluwer Academic Publishers Group, Distribution Center Post Office Box 322, 3300 AH Dordrecht, The Netherlands; Wuyts, R., Declarative reasoning about the structure of object-oriented systems (1998) Proceedings of TOOLS USA, pp. 112-124","Guéhéneuc, Y.-G.; École des Mines de Nantes, 4, rue Alfred Nastier, 44307 Nantes Cedex 3, France; email: guehene@emn.fr",,,IEEE Computer Society,39th International Conference of Object-Oriented Languages and Systems (TOOLS 39),29 July 2001 through 3 August 2001,"Santa Barbara, CA",58483,,,,,English,Proc Conf Technol Obj Oriented Lang Syst TOOLS,Conference Paper,Scopus,2-s2.0-0034865079,,
,,1,"Digiano, C., Roschelle, J.",Rapid-assembly componentware for education,2000,"Proceedings - International Workshop on Advanced Learning Technologies: Advanced Learning Technology: Design and Development Issues, IWALT 2000",,,890561,37,40,,4,10.1109/IWALT.2000.890561,http://www.scopus.com/inward/record.url?eid=2-s2.0-22544432508&partnerID=40&md5=c439bb69817a6065c52b0cb0eecf7333,"SRI International, United States","Digiano, C., SRI International, United States; Roschelle, J., SRI International, United States","We provide an overview of our work in mining design patterns from the Educational Software Components of Tomorrow project. By identifying, crystallizing and organizing design patterns, we aim to address problems of reusability and interoperability that currently present critical bottlenecks for the rapid assembly of educational technology. We describe four categories of patterns: instantiation, interoperability, control cooperation, and screen cooperation and outline three illustrative patterns: parcelled publication, observer, and replicated model. © 2000 IEEE. © 2000 IEEE.",,Componentware; Design Patterns; Educational software; Design; Interoperability; Reusability; Technology; Engineering education,,,,,"REC-9804930, NSF, National Science Foundation","Roschelle, J., Digiano, C., Koutlis, M., Repenning, A., Jackiw, N., Suthers, D., Developing educational software components (1999) IEEE Computer, 32, pp. 5-58; Roschelle, J., Kaput, J., Educational software architecture and systemic impact: The promise of component software (1996) Journal of Educational Computing Research, 14, pp. 217-228; Poulin, J.S., Reuse: Been there, done that (1999) Comm. of the ACM, 42, pp. 98-100; Coplien, J.O., Schmidt, D.C., Pattern languages of programming design (1995) Reading, , MA: Addison-Wesley; Kaput, J., Technology and mathematics education (1992) A Handbook of Research on Mathematics Teaching and Learning, pp. 515-556. , D. Grouws, Ed. New York, NY: Macmillan; Repenning, A., Ioannidou, A., Phillips, J., Collaborative use and design of interactive simulations (1999) Presented at Computer Support for Collaborative Learning, , Stanford, CA; Buschmann, F., Meunier, R., Rohnert, H., Sommerlad, P., Stal, M., Pattern-oriented software architecture: A system of patterns (1999) Chichester, , John Wiley &Sons; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns. Reading, , MA: Addison-Wesley",SRI InternationalUnited States,,IEEE Learning Technology Task Force;IEEE Computer Society,,"2000 International Workshop on Advanced Learning Technologies - Advanced Learning Technology: Design and Development Issues, IWALT 2000",4 December 2000 through 6 December 2000,Palmerston North,102492,,769506534,9780769506531,,,English,"Proc. - Int. Workshop Adv. Learn. Technol.: Adv. Learn. Technol.: Des. Dev. Issues, IWALT",Conference Paper,Scopus,2-s2.0-22544432508,
,,4,"Gzara, L., Rieu, D., Tollenaere, M.",Patterns approach to product information systems engineering,2000,Requirements Engineering,5,3,,157,179,,5,,http://www.scopus.com/inward/record.url?eid=2-s2.0-19844381244&partnerID=40&md5=65404b542ea819b3a4158e524e59b812,"GILCO Laboratory, Grenoble, France; LSR Laboratory, Saint Martin d'Heres, France; GILCO Laboratory, INPG, 46 avenue Félix Viallet, Grenoble, France","Gzara, L., GILCO Laboratory, Grenoble, France, GILCO Laboratory, INPG, 46 avenue Félix Viallet, Grenoble, France; Rieu, D., LSR Laboratory, Saint Martin d'Heres, France; Tollenaere, M., GILCO Laboratory, Grenoble, France","This paper deals with the application of the pattern approach to product information systems (PIS) engineering. Two kind of patterns are distinguished: business patterns used for specification and providing solutions for application field problems, and software patterns used for implementation and providing solutions for technical problems (software). Particular attention is given to identifying and specifying different business patterns. The main focus is on the activity of design for reuse, i.e. discovery of business patterns and their integration in a pattern catalogue. The first step consisted of a field analysis providing a common terminology and a semantic of the principal concepts managed in PIS and proposing various models to fix these concepts. It forms a basis for exploring the problems frequently occurring during PIS specification. A pattern catalogue is then proposed to solve the identified problems. © 2000 Springer-Verlag London Limited.",Business patterns; Design patterns; Modelling; Product information systems; Requirements engineering; Reuse,,,,,,,"(1997) Product Data Management: The Definition. An Introduction to Concepts, Benefits, and Terminology, , http://www.cimdata.com/; Waite, E.J., AIT: Advanced information technology for design and manufacture (1997) Proceedings of ICEIMT'97, International Conference on Enterprise Integration and Modeling Technology, , Kosanke K, Nell JG (eds); (1996) Enterprise Wide Standard Access to Step Distributed Databases, , Esprit 4 Project; (1997) Integrated Information and Process Management in Manufacturing Engineering, , Esprit 4 Project; Poulin, J.S., Populating software repositories: Incentives and domain specific software (1995) J Syst Software, 30, pp. 187-199; Wilson, D.A., Rosenstein, L.S., Shafer, D., (1990) Programming with MacApp, , Addison-Wesley, Reading, MA; Fukanaga, A., Pree, W., Kimura, T., Functions as data objects in a data flow based visual language (1993) ACM Computer Science Conference, , Indianapolis; Alexander, C., Ishikawa, S., Silverstein, M., Jacobson, M., Friksdhl-King, I., Angel, S., (1977) A Pattern Language, , Oxford University Press, New York; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object Oriented Software, , Addison-Wesley, Reading, MA; Beck, K., Cunningham, W., Using pattern languages for object-oriented programs (1987) OOPSLA'87, , Meyrowitz N (ed); Coad, P., Object-oriented patterns (1992) Commun ACM, 35 (9); Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison-Wesley, Reading, MA; Xue, D., Yadav, S., Norrie, D.H., Knowledge base and database representation for intelligent concurrent design (1999) CAD J, 31 (2); Kimura, F., Suzuki, H., Representing background information for product description to support product development process (1995) Ann CIRP, 44 (1), pp. 113-116; Ranta, M., Mäntylä, M., Umeda, Y., Tomiyama, T., Integration of functional and feature-based product modeling: The IMS/GNOSIS experience (1996) Computer-Aided Design, 28 (5), pp. 371-381; Rosenman, M.A., Gero, J.S., Modelling multiple views of design objects in a collaborative CAD environment (1996) Computer-Aided Design, 28 (3), pp. 193-205; Fox, M.S., Chionglo, J.F., Fadel, F.G., A common-sense model of the enterprise (1993) Proceedings of the Industrial Engineering Research Conference; Vernadat, F., (1996) Enterprise Modelling and Integration: Principles and Applications, , Chapman & Hall, London; Jacobson, I., Ericsson, M., Jacobson, A., (1995) The Object Advantage: Business Process Reengineering with Object Technology, , Addison Wesley, Reading, MA; Rolland, C., Modeling the requirements engineering process (1993) Proceedings of the 3rd European-Japanese Seminar on Information Modelling and Knowledge Bases, , Budapest, Hungary; Rumbaugh, J., Jacobson, I., Booch, G., (1997) Unified Modeling Language Reference Manual, , Addison-Wesley, Reading, MA; Rieu, D., Giraudin, J.P., Saint-Marcel, C., Front-Conte, A., Des operations et des relations pour les patrons de conception (1999) Proceedings of Inforsid 1999, , 1-4 June La Garde, France (in French); Coad, D., North, P., Mayfield, M., (1996) Object Models: Strategies, Patterns and Applications, , Yourdon Press Computing Series; Ambler, S.W., Process patterns: Building large scale systems using object technology (1998) SIGS Books, , Cambridge University Press, Cambridge; Van Veen, E.A., (1991) Modelling Product Structures by Generic Bills-of-material, , PhD thesis, Eindhoven University of Technology; Peltonen, H., Männistö, T., Alho, K., Sulonen, R., Product configurations: An application for prototype object approach (1994) Lecture Notes in Computer Science, 821, pp. 513-534. , Proceedings of the 8th ECOOP conference. Springer, Berlin; (1995) IMS GNOSIS: Knowledge Systematisation for Configuration Management: Process Configuration for Multiple-variants Products, , http://www.rereth.etha.ch/; Kang, K.C., Cohen, S.G., Hess, J.A., (1990) Feature-oriented Domain Analysis (FODA) Feasibility Study, , Technical Report AD-A235 785, Carnegie-Mellon University, Software Engineering Institute; (1994) ISO 10303-1. 1994 Industrial Automation Systems and Integration: Product Data Representation and Exchange. Part 1: Overview and Fundamental Principles, , International Organization for Standardization, Geneva; (1997) Product Data Management Enablers: Request for Proposal, , http://www.arrg.arg, Object Management Group document; Rumbaugh, J., Blaha, M., Premerlani, W., (1991) Object-oriented Modeling and Design, , Prentice-Hall, Englewood Cliffs, NJ; (1996) NF EN 1325: Vocabulaire du Management de la Valeur, de l'Analyse de la Valeur et de l'Analyse Fonctionnelle: Partie 1. Analyse de la Valeur et Analyse Fonctionnelle, , AFNOR 1996. Afnor, November in French; Dahchour, M., Formalizing Materialization Using a Metaclass Approach (1998) LNCS, 1413, pp. 401-421. , B Pernici and C Thanos, editors, Proc. of the 10th Int. Conf. on Advanced Information Systems Engineering, CAiSE'98, Pisa, Italy, June Springer-Verlag; Dahchour, M., Pirotte, A., Zimanyi, E., Materialization and its Metaclass Implementation (1999) IEEE Transactions on Knowledge and Data Engineering, , Technical Report YEROS TR-99-01, IAG-QANT, Universite Catholique de Louvain, Belgium, February To be published; Grosz, G., Rolland, C., Schwer, S., Modelling and Engineering the Requirements Engineering Process: An overview of the NATURE Approach (1997) Requirement Engineering, 2, pp. 115-131. , Springer-Verlag, 1997; Meszaros, G., Doble, J., A Pattern Language for Pattern Writing, , http://hillside.net/patterns/Writing/pattern_index.html","Gzara, L.; GILCO Laboratory, INPG, 46 avenue Félix Viallet, Grenoble, France; email: lilia.gzara@gilco.inpg.fr",,,,,,,,9473602,,,,English,Requir. Eng.,Article,Scopus,2-s2.0-19844381244,,
,,4,"Cornils, Aino, Hedin, Gorel",Statically checked documentation with design patterns,2000,"Proceedings of the Conference on Technology of Object-Oriented Languages and Systems, TOOLS",,,,419,430,,5,,http://www.scopus.com/inward/record.url?eid=2-s2.0-0033713508&partnerID=40&md5=9e2e909d7a89ac820c3e602ada4c8680,"Univ of Aarhus, Denmark","Cornils, Aino, Univ of Aarhus, Denmark; Hedin, Gorel, Univ of Aarhus, Denmark","Over the past years, along with the increase in popularity of design patterns, some problems with the use of design patterns have been identified. The so-called tracing problem describes the difficulty in documenting software systems using design patterns. Initial approaches to solving the tracing problem have focused on guidelines for documenting design pattern roles and rules within a system, but experience has shown that both in the initial design, and especially in later code revisions, it is all too easy for code and documentation to diverge, rendering the documentation misleading. In this paper we present a flexible and extensible tool which enables designers to use design patterns in a safe and efficient way, which checks the design pattern rules, and which semi-automatically documents, and maintains the documentation of, a software system.",,C (programming language); Computational grammars; Computer aided software engineering; Java programming language; PROLOG (programming language); System program documentation; User interfaces; Design patterns; Statically checked documentation; Object oriented programming,,,,,,,"Cornils, Aino; Univ of AarhusDenmark",,DGA;France Telecom;Inferdata Corporation;Ratio Group,"IEEE Comp Soc, Los Alamitos, CA, United States",TOOLS 33: 33rd International Conference on Technology of Object-Oriented Languages,5 June 2000 through 8 June 2000,"Mont-Saint-Michel, France",57195,15302067,,,,English,Proc Conf Technol Obj Oriented Lang Syst TOOLS,Conference Paper,Scopus,2-s2.0-0033713508,,
,,4,"Tan, H.B.K., Ling, T.W.",Integrated design patterns for database applications,1999,Journal of Systems and Software,47,2,,159,172,,2,10.1016/S0164-1212(99)00036-9,http://www.scopus.com/inward/record.url?eid=2-s2.0-0032686970&partnerID=40&md5=fb4da718aac59929521cf37cd268e860,"Sch. of Elec. and Electron. Eng., Block S2, Nanyang Technol. Univ., N., Singapore, Singapore; School of Computing, Natl. Univ. Singapore, Lower Kent R., Singapore, Singapore","Tan, H.B.K., Sch. of Elec. and Electron. Eng., Block S2, Nanyang Technol. Univ., N., Singapore, Singapore; Ling, T.W., School of Computing, Natl. Univ. Singapore, Lower Kent R., Singapore, Singapore","Design patterns describe solutions for design problems that occur repeatedly in the development of software systems. Software system builders increasingly recognize the importance of exploiting design knowledge and successful experiences in the engineering of new systems. As a result, design patterns have started to gain popularity in capturing software design knowledge and software designs themselves. Currently, design patterns have addressed some of the object-oriented design limitations such as the difficulty in specifying reusable designs. Database applications have both structural and dynamic properties. However, design patterns for structural and dynamic properties are usually discussed separately without much integration. In this paper, we propose design patterns to provide solutions for some important common requirements in database applications. Most of these patterns address the structural and dynamic properties of database applications on an integrated basis. These patterns can be used in the design process as well as the design verification process.",,Computer systems; Database systems; Problem solving; Software engineering; Systems analysis; Usability engineering; Design patterns; Software systems; Computer software,,,,,,"Aarsten, A., Brugali, D., Menga, G., Designing concurrent and distributed control systems (1996) Communications of the ACM, 39 (10), pp. 51-58; Berlage, T., A selective undo mechanism for graphical user interfaces based on command objects (1994) ACM Transactions on Computer-Human Interaction, 1 (3), pp. 269-294; Bernstein, P.A., Synthesizing third normal relations from functional dependencies (1976) ACM Transactions on Database Systems, 1 (4), pp. 277-298; Budgen, D., (1994) Software Design, , Addison-Wesley, Reading, MA; Chen, P.P., The entity-relationship model: Towards a unified view of data (1976) ACM Transactions on Database Systems, 1 (1), pp. 9-36; Coplien, J.O., Schmidt, D.C., (1995) Pattern Languages of Program Design, , Addison-Wesley, Reading, MA; Fowler, M., (1997) Analysis Patterns: Reusable Object Models, , Addison-Wesley, Reading, MA; Gamma, E., Helm, R., Johnson, R., Vlissides, J., (1995) Design Patterns: Elements of Reusable Object-Oriented Software, , Addison-Wesley, Reading, MA; Gillette, R., Muench, D., Tabaka, J., (1995) Physical Database Design for Sybase SQL Server, , Prentice-Hall, Englewood Cliffs, NJ; Hay, D., (1996) Data Model Patterns: Conventions of Thought, , Dorest House, New York; Islam, N., Devarakonda, M., An essential design pattern for fault-tolerant distributed state sharing (1996) Communications of the ACM, 39 (10), pp. 65-69; Jackson, M., (1975) Principle of Program Design, , Academic Press, New York; Ling, T.W., A normal form for entity-relationship diagrams (1985) In: Proceedings of the Fourth International Conference on Entity-Relationship Approach; Ling, T.W., Goh, C.H., Logical database design with inclusion dependencies (1992) In: Proceedings of the Eighth International Conference on Data Engineering, pp. 642-649; Ling, T.W., Tompa, F.W., Kameda, T., An improved third normal form for relational databases (1981) ACM Transactions on Database Systems, 6 (2), pp. 329-346; Ling, T.W., Yan, L.L., NF-NR: A practical norm form for nested relations (1994) Journal of Systems Integration, 4, pp. 309-340; Maier, D., (1982) The Theory of Relational Databases, , Computer Science Press, Rockville, MD; Martin, R.C., Riehle, D., Buschmenn, F., (1998) Pattern Languages of Program Design, 3. , Addison-Wesley, Reading, MA; Mellor, S.J., Johson, R., Why explore object methods, patterns and architecture (1997) IEEE Software, pp. 27-30; Monroe, R.T., Kompanek, A., Melton, R., Garlan, D., Architectural styles, design patterns, and objects (1997) IEEE Software, pp. 43-52; Shaw, C.J., Application and database design - putting off (1988) Sigmod Record, 17 (2), pp. 14-22","Tan, Hee Beng Kuan; Nanyang Technological Univ, Singapore, Singapore",,,"Elsevier Science Inc, New York, NY, United States",,,,,1641212,,JSSOD,,English,J Syst Software,Article,Scopus,2-s2.0-0032686970,,
,,4,"Meszaros, G.",Design patterns in telecommunications system architecture,1999,IEEE Communications Magazine,37,4,,40,45,,4,10.1109/35.755448,http://www.scopus.com/inward/record.url?eid=2-s2.0-0032672854&partnerID=40&md5=ebe09e0a3041089f0473ad75e268c9c9,,"Meszaros, G.",The telephone network could be called the world's first distributed computing network. People in telecommunications treat as second nature many of the issues just surfacing in other problem domains. This article describes some of the techniques used in the telecommunications industry to deal with highly distributed high-reliability systems. A number of recurring patterns are identified and used to describe the design of the telecommunications network and its components.,,Computer hardware description languages; Database systems; Distributed computer systems; Fault tolerant computer systems; Redundancy; Telephone systems; Design patterns; Telecommunications industry; Telephone network; Telecommunication networks,,,,,,"Gamma, E., (1995) Design Patterns: Elements of Reusable Object-oriented Software, , Addison-Wesley; Meszaros, G., Half object plus protocol (1995) Pattern Languages of Program Design, , Addison-Wesley; Meszaros, G., Improving the capacity of reactive systems (1996) Pattern Languages of Program Design 2, , Addison-Wesley; Buschmann, F., (1996) Pattern-oriented Software Architecture, , Wiley","Meszaros, Gerard; Clearstream Consulting, Inc",,,"IEEE, Piscataway, NJ, United States",,,,,1636804,,ICOMD,,English,IEEE Commun Mag,Article,Scopus,2-s2.0-0032672854,,
